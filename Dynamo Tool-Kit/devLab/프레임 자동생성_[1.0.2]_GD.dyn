{
  "Uuid": "1c69d4d2-6084-4ea2-b512-4749b194c9de",
  "IsCustomNode": false,
  "Description": "",
  "Name": "프레임 자동생성_[1.0.2]_GD",
  "ElementResolver": {
    "ResolutionMap": {
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "fcc1b37f6b2d4d8db6198a831a64449c",
      "Name": "5. 경간 내 빔 개수",
      "Type": "string",
      "Type2": "string",
      "Value": "2",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "b6fb9211eef84af5b9e834edb6d062f7",
      "Name": "4. 루프 구배 Gap Height(m)",
      "Type": "number",
      "Type2": "number",
      "Value": "0.6",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "eba2b8f509704a7d9d9d04e7072f9fca",
      "Name": "01. 건물 가로 너비",
      "Type": "number",
      "Type2": "number",
      "Value": "22",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "a06e4013555147b18b7a8eadf94085f9",
      "Name": "02. 건물 세로 너비",
      "Type": "number",
      "Type2": "number",
      "Value": "13",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "378fadc0748c41448acf120c8da97c3a",
      "Name": "G1. 가로 경간 수 (var)",
      "Type": "number",
      "Type2": "number",
      "Value": "7",
      "MaximumValue": 8.0,
      "MinimumValue": 3.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "A slider that produces integer values.",
      "SelectedIndex": 0
    },
    {
      "Id": "b0d1f20572cc41e6bd4518fa2ea70dbe",
      "Name": "G2. 세로 경간 수 (var)",
      "Type": "number",
      "Type2": "number",
      "Value": "6",
      "MaximumValue": 6.0,
      "MinimumValue": 2.0,
      "StepValue": 1.0,
      "NumberType": "Integer",
      "Description": "A slider that produces integer values.",
      "SelectedIndex": 0
    },
    {
      "Id": "415d24f648eb4c2ca7cf7ac961a32742",
      "Name": "03. 층고 입력(m)",
      "Type": "string",
      "Type2": "string",
      "Value": "4\r\n3.5",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "dc48f327765f437099f73a00d1fce289",
      "Name": "Total Pseudo Cost",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Grid.ByLine@Autodesk.DesignScript.Geometry.Line",
      "Id": "8432515513fe458bae81e9a95281eebf",
      "Inputs": [
        {
          "Id": "904e0ffd6f554af99fcf7d4dfcd32f23",
          "Name": "line",
          "Description": "Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d089b4554bed46e195b71ad9d7c800e4",
          "Name": "Grid",
          "Description": "Grid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Grid Element in a Project along a Line.\n\nGrid.ByLine (line: Line): Grid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"5 6 5\";",
      "Id": "c13e7252656046ea8287cead3a935b02",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "295ade0abf7740178b26386b907f94a1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"4 5\";",
      "Id": "e040263dcee24c72a0422f28b5d0c407",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3f52eb81c0044de9b6790c1e6e4c9e9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "91169be54e5c476ba16d72e8beb09b2b",
      "Inputs": [
        {
          "Id": "045e9e2835564daeb6b685b28004e0ca",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae81c4544cc0478b8e9f26c0f9526ac7",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6e6450ac64940f1b340690d845882f7",
          "Name": "separator1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62bea1d55dcc40b48da2f4c477cfab4c",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";\n\"\\n\";",
      "Id": "133882275d2a4d4e8880a4ae6a33dbfa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5c081a0f3bc841559940ba58113317a9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70ef0345dda945818431101a8235f21e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "c18a46285e424b85a39e72a91ff27258",
      "Inputs": [
        {
          "Id": "3483afb33be54ee4b837b2f0b98421e9",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "487cf4dd30684d10af6b7509e63d97f3",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b48da0a607449049401768c6f4feb31",
          "Name": "separator1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "461f67bf7b7346b3b10e6e4c4129870d",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";\n\"\\n\";",
      "Id": "0411693261894b20aee8fb298d6fe829",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ae19b848830546a9816b12ede012b453",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04098db9282942f69e411cf1565136b3",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce; from itertools import chain\r\nfrom itertools import groupby; import operator\r\nfrom copy import deepcopy\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n\r\ndef dictUpdate(dic1,dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n    \r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n    \r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a: \r\n            yield from flat(i)\r\n    else: yield a\r\n\r\ndef grpBy(iter, key):\r\n    f,keys,grps = key,[],[]\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_,key=f):\r\n        keys.append(key); grps.append(list(grp_data))\r\n    return grps,keys\r\n#########################################################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputSpan = IN[0]\r\n# Place your code below this line\r\ndef create_inputSpanInfo(inputSpan):\r\n    xSpans, ySpans, stories  = inputSpan\r\n    return {\"xSpans\": xSpans, \"ySpans\": ySpans, \"stories\": stories}\r\n\r\n\r\ndef findAllGridPts(spanInfo, sttPt=[0,0,0]):\r\n    xSpans = spanInfo[\"xSpans\"]\r\n    ySpans = spanInfo[\"ySpans\"]\r\n    stories = spanInfo[\"stories\"]\r\n    # 첫줄 만들기\r\n    firstRowPts = [sttPt]\r\n    newPt = deepcopy(sttPt)\r\n    for x in xSpans:\r\n        newPt[0] = newPt[0] + x\r\n        firstRowPts.append(deepcopy(newPt))\r\n    # 그 다음 줄 들 만들기\r\n    firstFl = [firstRowPts]\r\n    nextRowPts = deepcopy(firstRowPts)\r\n    for y in ySpans:\r\n        for pt in nextRowPts:\r\n            pt[1] = pt[1] + y\r\n        firstFl.append(deepcopy(nextRowPts))\r\n    \r\n    allFls = [firstFl]\r\n    nextFl = deepcopy(firstFl)\r\n    for z in stories:\r\n        for row in nextFl:\r\n            for pt in row:\r\n                pass\r\n                pt[2] = pt[2] + z\r\n        allFls.append(deepcopy(nextFl))\r\n    \r\n    return allFls\r\n\r\nspanInfo = create_inputSpanInfo(inputSpan)\r\n\r\nres = findAllGridPts(spanInfo)\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "2303066801614f48a1537c76d50d2cb3",
      "Inputs": [
        {
          "Id": "be452dd429964414bead2a875d781e41",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "20ba374016b84bc581f5437a5b827274",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"4 4 4\";",
      "Id": "2b9f71b549064558b15d1758c8a8209e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fa719a329d9d4f6aa5ecab9eb56ac487",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "6c85f7595a3148b5a3edfcd1273dfb21",
      "Inputs": [
        {
          "Id": "3a89bed2beba4522b73a005ceffb1d18",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f927eca8b1a04061a14391f7a7f2a3b5",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a7816c026694180b5791e9f84b3724d",
          "Name": "separator1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f388b08474024a379d5e61858523468b",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";\n\"\\n\";",
      "Id": "18977869390344c78ce23dfa460f08a6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8de4fef2195b4175a119f98d3b52aff2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b54284ef16c2436d83283dab3d328c10",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "4a7968ac4b3b442cb9d1d76815703033",
      "Inputs": [
        {
          "Id": "80251a62f9f74f1ca54cf6bf2827d5fc",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25ebe0f822f54c3398699ba5cbcd2d8b",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "84a1cf3f226f46e2aec1bc6e99fe9bdd",
      "Inputs": [
        {
          "Id": "3ee008bbac534cb380f737841e2ec190",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "febbfcfa3c0346a5b96007b0ba5697a0",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "8ecc4094f2b147099f1d8b55dfd9a558",
      "Inputs": [
        {
          "Id": "c7d79892e841442f9d682b35a2aabebf",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69780ac0158b4598899d0d87006eb688",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "04017c7249504fe8a59dd56001fc4cf3",
      "Inputs": [
        {
          "Id": "6e9fef6b508f48a4ad3bc9f41b321edd",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22ec0b1144734523ba7da4899495ec69",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b59e7a60a43d4be59c0d9a4d1b66b6f0",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee948f76cac94fcbbc127cead7869170",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "34f17450f37d481597f86af190c2e7fd",
      "Inputs": [
        {
          "Id": "e35ce2ba78d0444486f3ff4a51ac67d9",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d796599682943409227522f3ee04b28",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13f3d72e64bc436baebc7ed8d87df893",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "988986469e3c4329a6943fdc86be6418",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "92116ae1a3ed4252afb95bda36b2094d",
      "Inputs": [
        {
          "Id": "7f42d112d81f4635b5930e95958eb784",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "f67d971409f94bb4abb837bddb993138",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f71c6770d7314b4caa17a97a24c47c5a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;\n2;",
      "Id": "273823373bab4502ab35f47588598a27",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a8884a93d49944d8a05e7bcfd301218c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d688cdf378b463fa57036ad9c014896",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52915e0618954d8ba76059418c6316a7",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d7b7c69626e445fbbd466468986c3769",
      "Inputs": [
        {
          "Id": "da484d9b1d764bceb2bbddd2096528f0",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "ee65da597925413f9ab9781840d976e3",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f412a3f42cc42d2af8cce3710d54432",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b75fad276c204a3db0a655db4f5be0c3",
      "Inputs": [
        {
          "Id": "89eef02a46cd491a9b5272bd86afd3b6",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "c4a25e62d37943f2a13409cac595dd22",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "519c1a1c9bd04c9e8b59c91bafce3d78",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "b40c6aecad0f46a4876a27a82a1ec3cb",
      "Inputs": [
        {
          "Id": "4ba9bf2ac0194d2a9b3578865155e6da",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e671292d65df49bcbe3511f340521677",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "977da98b1e4a4cfa8370dbf6320d87b0",
      "Inputs": [
        {
          "Id": "3acd299832644d40bf9214a019b83b92",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b0b653c69c34522b7b365013d4938db",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "32fbd2724d8d4b6cb7df5fbfa61c8ed2",
      "Inputs": [
        {
          "Id": "7ec17acda1014395ac97c7ee93031d83",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74bf5ab48cc94e5483c1157764f44624",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "c0c682458ef94af69899d7a8e523c076",
      "Inputs": [
        {
          "Id": "5259d409c11c4e22b6ae49252c49795e",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "743e7e2acb364517b2d932da5d770eeb",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a36ca303a49042ee859c58bdde05b81a",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "35d3f9cdbcc54a6eb4635d9dca8116e1",
      "Inputs": [
        {
          "Id": "caa5781572a649d782db33e9c73fdb38",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c04c06895eb2469eb985e492687c77ae",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "6cf3e7e12c2e47828d836d815c0e5fd5",
      "Inputs": [
        {
          "Id": "5b7d8da95ffd44bd9821b2083c00635b",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d6059783f1a431da30ac4176d77901a",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "591d52df92364e24979ff4fceb04bc5f",
      "Inputs": [
        {
          "Id": "5d38e1f07f514f8a8c8328efcdc2c726",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1104ca3e11664e7c801c6d920e78ddc7",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "a86741e10e5d4e3687072ef82640570c",
      "Inputs": [
        {
          "Id": "0b9f9d10dac045eb8e9cfad04a2fd567",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dedf64f2816a4454a9eca05e59efb242",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72afd5da537242038c5bbdd6ddf94829",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "19341c72fb224c0ca3894ec852b37587",
      "Inputs": [
        {
          "Id": "792bf95cedce4efba69c8a8d6cab61b3",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be66d3582f6544f68cb57cc60bfc21c0",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7d1750ab85c4be5a434bd7a8ea220af",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "0f1f1c3a5f3c4e698c5a4fe6bf355c7e",
      "Inputs": [
        {
          "Id": "2ffc18f3e3d94ee38135864700874d4c",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75f810e8d45842b68507a84dd1595313",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "acf96cc510674c6a87325e5c3a7f9cd7",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000;",
      "Id": "54de7175176b48939d6ed60bce40d200",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6698603018c844ffbaea791fd3a81e92",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Id": "04e65f8de9104f05876cdb3ad34b30f0",
      "Inputs": [
        {
          "Id": "477dbffe6e7d49fc988c40cce09cde8a",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37114c122a6845c0abc18f1a7ed02ce4",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b348946f31c41ad9c6c7f9e81071c03",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3000;",
      "Id": "e5cb8ab0c0fb4f11a45da024183c3230",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d12151d2ee094657852fedb2b689e421",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendStart@double",
      "Id": "5ff89a4a0720496b994149f6b6e886f4",
      "Inputs": [
        {
          "Id": "ee5d633ac22c48c6881f39eb97f5ecd6",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "689d348d40a14607b415991b5de9c6e7",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bc3c1444acf4317954d79c233cf532f",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its start side. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendStart (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.ByElevation@double",
      "Id": "4a4d64c1b050486780000d5c30f5c215",
      "Inputs": [
        {
          "Id": "a7cfca0f32314533b4b598765253ee00",
          "Name": "elevation",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3afa38bd87e74ccdaf7a6a9adbf9b180",
          "Name": "Level",
          "Description": "Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Level given it's elevation. The name will be whatever Revit gives it.\n\nLevel.ByElevation (elevation: double): Level"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "4a0d52e14d7d43b28675c76750e5d7f3",
      "Inputs": [
        {
          "Id": "33fb28695f134cad89077ad261bbcd7a",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69c17b1ac61a4d158b1b17079349aa97",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61731da151d044b5bd781a9c669d76cb",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000;",
      "Id": "0d79c7579d324a739d7357f009710799",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25f3613953ec4ed69889a98895f3a974",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "cf439b7d7e4f4da28ba21eebcafe32b5",
      "Inputs": [
        {
          "Id": "4d962f8681414aff96d852594f3b6ca2",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d826b3cccf5040fc83336a97792ccbbc",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f14e77865ac44eeacf052a84e547952",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ScanList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "6d525cb5b29d4effae35ef5a89935ef3",
      "Inputs": [
        {
          "Id": "30648daa460641a693054fbdb7156a31",
          "Name": "reduceFunction",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed4f3ac1886e480da1c21c1ae6ff4ae8",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "744e670f05ab40ff8b9ff7962f50195c",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83bdc39714b64422aebcf9c9b123d42f",
          "Name": "list",
          "Description": "Scanned lists (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result, produces a list of successive reduced values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "de645f66d88447e09ad2ff20156a3994",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "61a4a22b30204ebf83c7ae491bed9aec",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "d5c9e48062c6412fba3070fbe1bb6559",
      "Inputs": [
        {
          "Id": "dcb641bd63474a56afd817e22970d4ae",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b7550e0ab9444769f14a4e283d80caf",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 287,
      "SelectedString": "OST_Levels",
      "NodeType": "ExtensionNode",
      "Id": "80dd8afbf481472fba9e12afb7fc61e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2ba42a0ac97f4258b4f4786835beab08",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Id": "e2ee8c2f10a24c30bb90de5b58a1f32c",
      "Inputs": [
        {
          "Id": "434f0ae1ae5a434a9bfe17d0f260ed9f",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70ca07c943a84b8da45d6d0aab95983b",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "7d579ea6ac23419ea835e61fa4fb339f",
      "Inputs": [
        {
          "Id": "1e64619a2e294af1960609a3488d65ad",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bdb8949b9b74e1cb65c586a83c556a4",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3279e079560b4fc889e0fa87fa45bbf1",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7161804f927b4c4393f380a40a655151",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Contains@var[]..[],var[]..[]",
      "Id": "4062e6a4238e4c458bc9522e720c9d4c",
      "Inputs": [
        {
          "Id": "fb91dceea65e441f8e883348b9f125a9",
          "Name": "list",
          "Description": "List to search in\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd71a578ed2f47f48da41e308aa201cc",
          "Name": "item",
          "Description": "Item to look for\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0feb9b70bfa640848396d48141b98e72",
          "Name": "bool",
          "Description": "True if list contains item, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list contains the given item. This function searches through the sublists contained in it.\n\nList.Contains (list: var[]..[], item: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.StructuralFraming.ColumnByCurve@Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level,Revit.Elements.FamilyType",
      "Id": "7f00cafed4764388bff1a0cab02fa407",
      "Inputs": [
        {
          "Id": "f4afa033c973485098dae4f430743173",
          "Name": "curve",
          "Description": "The curve which defines the center line of the column.\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dfb92d1e78a8448f9560f953259d8273",
          "Name": "level",
          "Description": "The level with which you'd like the column to be associated.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "882322663b0e43a598df8dceea409d0b",
          "Name": "structuralColumnType",
          "Description": "The structural column type representing the column.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dad0864332db493e9b281d6c386a0507",
          "Name": "StructuralFraming",
          "Description": "StructuralFraming",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a column.\n\nStructuralFraming.ColumnByCurve (curve: Curve, level: Level, structuralColumnType: FamilyType): StructuralFraming"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "72f16772ffc04f9dadaf4340f53ac883",
      "Inputs": [
        {
          "Id": "ef42ae5d20cd4920bcc90498dad82224",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5dee0bf517474e98b216154a3ca594a8",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2194f0fe42d4cb9aafb4385e7c45a1c",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sublists@var[]..[],var[]..[],int",
      "Id": "33aef83f659b4d1e920799fbf92e8006",
      "Inputs": [
        {
          "Id": "0361dc916eac4251b68a6597e0f208de",
          "Name": "list",
          "Description": "The list from which to create sublists.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2022a16ce30c423dbfe935824082a639",
          "Name": "ranges",
          "Description": "The index ranges of the sublist elements. Ex. \\\"{0..3,5,2}\\\"\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72dc24e55ff64bac8b97fe0eda1ce256",
          "Name": "offset",
          "Description": "The offset to apply to the sublist. Ex. the range \\\"0..3\\\" with an offset of 2 will yield {0,1,2,3}{2,3,4,5}{4,5,6,7}...\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3648129e94db4a329a2b3b525d6d53d9",
          "Name": "lists",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Build sublists from a list using DesignScript range syntax.\n\nList.Sublists (list: var[]..[], ranges: var[]..[], offset: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0..1;\n1;",
      "Id": "57a4c4b7f8ee44db97492d151f9451db",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "64eb087a64204775bffec651e760bad6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4192dd9452d840aea935361cf090827c",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "efec7d2035be4382a0adccbb6a729883",
      "Inputs": [
        {
          "Id": "b0d59878fb73479b87036d4766923146",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 4,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da6f3377e416472c92247cd716a11b46",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "1c915bf71f30451eb668f46473fabc88",
      "Inputs": [
        {
          "Id": "db8d9cb7dc144eebbfa12e496c1ad032",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 4,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9dfc364b603548b2ac975ac476b8fef4",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "e698cb678d36407abf82775348e325f5",
      "Inputs": [
        {
          "Id": "032db6c6fff14954bfc39e4ecd9045b5",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 6,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac95dccacbde47599e793e9ffddf0532",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "8db9b974a935425f8d086a6c36af874d",
      "Inputs": [
        {
          "Id": "9060191f89cd4abbaea27e0ee18497c1",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8af0e9b9eb64f659675af51e24caf3d",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e17b3ec531694f56b00ca31f2c978716",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-1;",
      "Id": "fa5215ea4b8e4ce6b7bb87ff5e76a875",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "541bbe52ab3b47e8b76de2d8fd0b739a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-1;",
      "Id": "ff503cd6a28a4718a65c77f02f10bbb4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fc3a5aff02b04645852b56ec5184d7be",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "076275760f204ba08c7d8bd36b1c4c63",
      "Inputs": [
        {
          "Id": "98c257cf8302413998a879921931be00",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c956cd291f9a4bc6b03bcebed40d63b0",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63c27eecf499439c9ba286b3b2b64b39",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.StructuralColumnTypes, DSRevitNodesUI",
      "SelectedIndex": 7,
      "SelectedString": "H_SC_AR_S01_H-400x200x8x13",
      "NodeType": "ExtensionNode",
      "Id": "8372bfc1dbe04fa5b43c2badec886b8e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b89b6c83188d49f3a3e41d9b220be7c6",
          "Name": "Column Types",
          "Description": "The selected Column Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a structural column type in the active document"
    },
    {
      "ConcreteType": "DSRevitNodesUI.StructuralFramingTypes, DSRevitNodesUI",
      "SelectedIndex": 6,
      "SelectedString": "H_SB_AR_S02_H-300x150x6.5x9_Stair",
      "NodeType": "ExtensionNode",
      "Id": "6e5d008540b947aab31ac3d670c36bf2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6600920b119b4691adad5188a94a6c2c",
          "Name": "Framing Types",
          "Description": "The selected Framing Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a structural framing type in the active document"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce; from itertools import chain\r\nfrom itertools import groupby; import operator\r\nfrom copy import deepcopy\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n\r\ndef dictUpdate(dic1,dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n    \r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n    \r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a: \r\n            yield from flat(i)\r\n    else: yield a\r\n\r\ndef grpBy(iter, key):\r\n    f,keys,grps = key,[],[]\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_,key=f):\r\n        keys.append(key); grps.append(list(grp_data))\r\n    return grps,keys\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nptsPerLevel_new = IN[0]\r\nptsPerLevel_ori = IN[1][1:]\r\ngap = IN[2]\r\n# Place your code below this line\r\nif gap > 0:\r\n    ptsPerLevelExcept0F = ptsPerLevel_new#ptsPerLevel[1:]\r\nelse:\r\n    ptsPerLevelExcept0F = ptsPerLevel_ori\r\ntrPtsPerLevelExcept0F = go(\r\n    ptsPerLevelExcept0F,list,\r\n    map(lambda grp: list(zip(*grp))),\r\n)\r\n\r\ndef makeLineInGrp(lvGrp):\r\n    res = []\r\n    for row in lvGrp:\r\n        rowLines = go(\r\n            row,len,range,\r\n            map(lambda x: row[x:x+2]),list,\r\n            filter(lambda x: len(x)>=2),\r\n            map(lambda x: Line.ByStartPointEndPoint(*x))\r\n        )\r\n        res.append(rowLines)\r\n    return res\r\n\r\ndef makeLinePerLvGrp(ptsPerLevel):\r\n    res = list(map(makeLineInGrp, ptsPerLevel))\r\n    return res\r\n\r\nres = list(zip(makeLinePerLvGrp(ptsPerLevelExcept0F), makeLinePerLvGrp(trPtsPerLevelExcept0F)))\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "a5cfb3dd0fc44032b0e316a186a2bad1",
      "Inputs": [
        {
          "Id": "5e3465e721e74ec39f0fe379a78976c6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "827fc81f30f5441a8d0b9b8ac50a6691",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3fb9a01907843609cd03cdfa5b8c09d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c5aeda53c0b4f01972a57482cab1135",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "5 6 5 6",
      "Id": "d538ae6000e746ab9a590246367bf9a1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d8a7111c8f754cd6a2db4696023c83f9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "4 5 4",
      "Id": "65fc2a00781d4d33b6a20feb4118f733",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "65b8bf0976a944ceaab5a437905cb344",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "4\r\n3.5",
      "Id": "b6224999530b4779a7e98ae52e3c93c2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "93cea9f239fe4f4583818a7798f65307",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "589204bcfd0547569d7fe66b83f56f72",
      "Inputs": [
        {
          "Id": "3f7eb1eb9d7d4135914ce71cde9f987c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a1d4abc178d4495098d05c8390df08c0",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3d704fe941eb43b99dce3000430f7709",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0c284d025de64413ad665e2aad3b1a75",
      "Inputs": [
        {
          "Id": "d3106d24f77c4361bdc7d0cacf9117c1",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 4,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "4915fbdd1990436d972c246587a377c6",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7558495ebe0479fabc8d06470c677db",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "2",
      "Id": "fcc1b37f6b2d4d8db6198a831a64449c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab42a06e0e7741c1b0a4574b5948b9f5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "92746da8877d41cfabfd5eaa126b0243",
      "Inputs": [
        {
          "Id": "50d9dea7c9d84a909bff6c69c6d47901",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2ba4dbb3aab42919054c92e29da8938",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b890602266341949c15a852f4bf57e7",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "girdersPerLevel;",
      "Id": "03bb1e33121b475d934b2ea89a58fd49",
      "Inputs": [
        {
          "Id": "e100787a093944b9af5b7d3054ec3546",
          "Name": "girdersPerLevel",
          "Description": "girdersPerLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28287eb739694e0b882b36d09706526b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "dab15eda0e5843a49a641f7f4697e454",
      "Inputs": [
        {
          "Id": "86fd7b80c9554c7eb1e218a91fb57c3d",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b458115f05a4b0d9971d194f601bc27",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "1a1d5361d0ca4e5da57c66c676c6b509",
      "Inputs": [
        {
          "Id": "121cd94f0d7a4b8d9f8a9dcf669d2219",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b0670d1d70214a7cb723babb36b16cec",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "allLevels;",
      "Id": "380cdcb3d5ce41699dab215df2272cb7",
      "Inputs": [
        {
          "Id": "432392c4a11e4a53a391ddbd96b28acb",
          "Name": "allLevels",
          "Description": "allLevels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f108496ee0a14a44812634f85e2497b8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Id": "cdb4ba35c609452796f2fc1ef6664d66",
      "Inputs": [
        {
          "Id": "ec8fd40c7b9a43f4a5ff5a6907bebc28",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18c30fc2258d442a87982aed7afd7774",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "36aa87a2ba864f0b92b7e8e376ae62cc",
      "Inputs": [
        {
          "Id": "ae63897570d44d6bb89e2dd34cee2fc8",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "747c210376ad476eba42505543753648",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be67f2dc6e474cde895091265c7727bd",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a53e52a81694d449a842b9fca99c749",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i>0;",
      "Id": "092210d6684e4c00a58310c45e454a8b",
      "Inputs": [
        {
          "Id": "6f560bf05fa24151a08ea9609ca2f94d",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "330650128dfe41a1843179775ee0eea3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "allLevels;",
      "Id": "b97f94afcbb3469989a94c14edf66b85",
      "Inputs": [
        {
          "Id": "3413d0c3ca7f469abaddf99aa5eb1aa2",
          "Name": "allLevels",
          "Description": "allLevels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a25c3686d38d43c189c2a3de0a5bd0d9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "36f20d01eba04f4c9804860415c517a1",
      "Inputs": [
        {
          "Id": "36a80db822a74ad2b31c7851ccd4294c",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e20ad14d25c24d659cbc4b36786229c7",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "94b02e02f55b42949fcc4dafa1b329e6",
      "Inputs": [
        {
          "Id": "b1c5921e131540409abc64272ad8d3ce",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1c997ce9e06409786cf7d77c167b999",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5bd21ce3b6c44790aa75a347a23a2e7c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Contains@var[]..[],var[]..[]",
      "Id": "d80c4d5e19524b4d95bb1c8b6bc14b8a",
      "Inputs": [
        {
          "Id": "3abe459bf84e4e7684e5ed488cdecc5e",
          "Name": "list",
          "Description": "List to search in\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e384512b3dc434e8cb6c9f9ca95ae4f",
          "Name": "item",
          "Description": "Item to look for\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac4742369f204f0f950af825c8f5218c",
          "Name": "bool",
          "Description": "True if list contains item, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list contains the given item. This function searches through the sublists contained in it.\n\nList.Contains (list: var[]..[], item: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "6eb543a04dac481599edbb3f99c046b4",
      "Inputs": [
        {
          "Id": "4a8e99fcfbdb4289a23ffbc89caad13e",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e1067570d564e18914cc4f9d7bf7c67",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "549e9713401d4ed1ae42ac46c84a42f3",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a47143977a014f3e9a8e546fa61acc75",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i+1;",
      "Id": "95cde24c7b854fe794e484ab9708d346",
      "Inputs": [
        {
          "Id": "b0b1c0dab9e347c7b6766a8658e00bbe",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59a5eb22e07947f0ba97ca4722e6a65d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "segment_개수;",
      "Id": "03b379d6aea74097ae8decb240b95298",
      "Inputs": [
        {
          "Id": "9e8bf0495a674c52a723e95fab68f07d",
          "Name": "segment_개수",
          "Description": "segment_개수",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97c9e9fd87bd4c809b397e9a0c33c521",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "42a4944aa3834ef9a908b6109e60edf1",
      "Inputs": [
        {
          "Id": "afb24606c5584214a415c7bf25757883",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6862b4c696804498ae1b959453f714ff",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce; from itertools import chain\r\nfrom itertools import groupby; import operator\r\nfrom copy import deepcopy\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n\r\ndef dictUpdate(dic1,dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n    \r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n    \r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a: \r\n            yield from flat(i)\r\n    else: yield a\r\n\r\ndef grpBy(iter, key):\r\n    f,keys,grps = key,[],[]\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_,key=f):\r\n        keys.append(key); grps.append(list(grp_data))\r\n    return grps,keys\r\n#########################################################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ngirderCrvsPerLevel = IN[0]\r\nsegmentCnt = IN[1]\r\n# Place your code below this line\r\n\r\n## lvGrp -> dirGrp -> rowGrp -> eachLine\r\ndef find_XdirGirderCrvsPerLevel(girderCrvsPerLevel):\r\n    res = []\r\n    newLvGrp= []\r\n    for lvGrp in girderCrvsPerLevel:\r\n        for dirGrp in lvGrp:\r\n            if dirGrp[0][0].Direction.Normalized().X==1:\r\n                newLvGrp.append(dirGrp)\r\n        res.append(newLvGrp)\r\n    return res\r\n\r\ndef findBeamPts_inRowGrp(rowGrp):\r\n    return list(map(lambda eachLine: eachLine.PointsAtEqualSegmentLength(segmentCnt), rowGrp))\r\n    \r\ndef findBeamPts_inDirGrp(dirGrp):\r\n    return list(map(findBeamPts_inRowGrp, dirGrp))\r\n    \r\ndef findBeamPts_inLvGrp(lvGrp):\r\n    return list(map(findBeamPts_inDirGrp, lvGrp))\r\n    \r\ndef findBeamPts_all(ptsPerLevel):\r\n    return list(map(findBeamPts_inLvGrp, ptsPerLevel))[0]\r\n\r\ndef matchRowGrpAndCreateBeamCrvs(dirGrp_pts):\r\n    dirGrp_pts = list(dirGrp_pts)\r\n    res = []\r\n    maxIdx = len(list(dirGrp_pts))-1\r\n    for idx in list(range(maxIdx)):\r\n        rowGrp = dirGrp_pts[idx]\r\n        nextRowGrp = dirGrp_pts[idx+1]\r\n#        res.append(rowGrp)\r\n        for sttGrp,endGrp in list(zip(rowGrp,nextRowGrp)):\r\n            for i in range(len(list(sttGrp))):\r\n                #res.append(sttGrp)\r\n                try:\r\n                    stt = list(sttGrp)[i]\r\n                    end = list(endGrp)[i]\r\n                    line_ = Line.ByStartPointEndPoint(stt, end)\r\n                    res.append(line_)\r\n                except: pass\r\n    return res\r\n\r\nXdirGirderCrvsPerLevel = list(find_XdirGirderCrvsPerLevel(girderCrvsPerLevel))\r\nXdirBeamPtsPerLevel = findBeamPts_all(XdirGirderCrvsPerLevel)\r\nallBeamLines = map(matchRowGrpAndCreateBeamCrvs, XdirBeamPtsPerLevel)\r\n#res = matchRowGrpAndCreateBeamCrvs(XdirBeamPtsPerLevel[0])\r\n# Assign your output to the OUT variable.\r\nOUT = allBeamLines",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "94bdcae89bad466a9ee9c28242249c81",
      "Inputs": [
        {
          "Id": "6a06db0caf364bec84162eeb26fecb8b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2cd323a536e46baae3dab840fd52ea2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "869b8f1a515a4aa5a7301a1063543726",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.StructuralFramingTypes, DSRevitNodesUI",
      "SelectedIndex": 4,
      "SelectedString": "H_SB_AR_S02_H-194x150x6x9_Platform",
      "NodeType": "ExtensionNode",
      "Id": "5fe634507ea144a18341bb8161a8752e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0963699b494e4f0bb85d6dbca2b5db8f",
          "Name": "Framing Types",
          "Description": "The selected Framing Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a structural framing type in the active document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Coordinates.BasePoint",
      "Id": "4c22a83f49e04fd6aaf3cb75a99d37bd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "182bb50ada0a45e49fb3ce9d3a568ed1",
          "Name": "Point",
          "Description": "Project Base Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Project Base Point\n\nCoordinates.BasePoint ( ): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Coordinates.SurveyPoint",
      "Id": "41be640e7ab84996a8cd498d8978ea85",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1d3ceb19f9824b4ba624004c9ec10d95",
          "Name": "Point",
          "Description": "Survey Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Survey Point\n\nCoordinates.SurveyPoint ( ): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "7e6f2f95327343ee95e31bae456c377c",
      "Inputs": [
        {
          "Id": "a3ff36ac4d3c451cbcf5a58d43e4389b",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "422ad1089c614f3b8f66a4d1ad0ac21e",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "4e505203ce624ed091888afd215bb375",
      "Inputs": [
        {
          "Id": "b95e2b5a43614f0197ecd299ab84bb84",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "efe5cee88d184f2c94d0d28927ec963f",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Id": "b214868ba5fd4a1bac61d28c3abd99ff",
      "Inputs": [
        {
          "Id": "0000a3159d344665937caacbdd70e5e8",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b757139c18c4a16af723e53d73fca6d",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66f22a0be1d34ce0a8de693de83a400d",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "8f02cda437664e968c10f9c9fcabc40d",
      "Inputs": [
        {
          "Id": "475b35a9bd7f4724adfd1f83ff88138a",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "903189e681184096871f2ed14211ec17",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f484a416c8a741aea88f1b70ac41f389",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Id": "19dcb64231fe4e3dbd35e9032766510f",
      "Inputs": [
        {
          "Id": "507379347c0d4bf2b36f6d2330c34932",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7d8a2d7bbd94c829fd1b7cb01594a81",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07cc4b5fe0fa4c36ab2613bf4dea3e54",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\ngap;",
      "Id": "51f65a53894143d3aae3e1e548831955",
      "Inputs": [
        {
          "Id": "c511bda768304ac993d86ea50bc940c0",
          "Name": "gap",
          "Description": "gap",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02df9f24587441f9beb1ced60b9bbbb2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "585eb0665099498da5f4e109cac90f7b",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "01bd12aa03d64d30aa841b1916ce75fe",
      "Inputs": [
        {
          "Id": "1876716379384410b57c8a06186b7f19",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3999b2c8395d46728fc3222a614787ad",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "bc6b4492842746c585c7f81892fca379",
      "Inputs": [
        {
          "Id": "7decc30c2bf3417eb0902b58996aeaa7",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37378cec7b01418394da5979e4024bb3",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "451b0321e617499a9517604cbc1da0ed",
      "Inputs": [
        {
          "Id": "8de0a53ec28d4857bd2fb6ac4def0bc9",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f7137be9d1445679e3090596b75ae68",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "4edcd56b733e4f8a8fc671f3493f65dc",
      "Inputs": [
        {
          "Id": "579d55c2747148ac97fd4477ce97e2f9",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c55b20bf25e40c59a0cd4689edc676d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e30ea911ce764d25821708ebca85a1f5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Id": "68af4a51cf294e16975fa78c83d444f6",
      "Inputs": [
        {
          "Id": "109e4c1b0aec471d9245a523715fb1b8",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cdb68990b91348479fb6d6731259b743",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Id": "d0e0a467fe5f444da7d8994f42ba2508",
      "Inputs": [
        {
          "Id": "f43fb316706d4c0490059796de6eeced",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c043d6986664fd18ee3ece88e330c8a",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97749d3f34c74f6fb571f23e3f223b79",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "3cb3f34ba77e4da88802ad4924686278",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "21d2a497438042fd961a8591ff30918e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Contains@var[]..[],var[]..[]",
      "Id": "b42a008f2db54fc081f5c1f8a87655d9",
      "Inputs": [
        {
          "Id": "20740709f299473ab2d5dc3a33219307",
          "Name": "list",
          "Description": "List to search in\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13b42f3a25e54096a51e5eb07b73799f",
          "Name": "item",
          "Description": "Item to look for\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abdd0f989eef4261a0a623981f2cb20a",
          "Name": "bool",
          "Description": "True if list contains item, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list contains the given item. This function searches through the sublists contained in it.\n\nList.Contains (list: var[]..[], item: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "allLevels;\nelevations;",
      "Id": "4f3b629bdcdc48ae85940ebab598e992",
      "Inputs": [
        {
          "Id": "ca2d4f36135e4aebbc8d26481167706c",
          "Name": "allLevels",
          "Description": "allLevels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "961e1e66068a4e0e8f3301baccd11904",
          "Name": "elevations",
          "Description": "elevations",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69bec2400a8b4b23867e91443a55a4ac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3171b2f32a5a4b56b5bb26e14d9cc2e8",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "436aba93828349d1957121c85e7ad8b7",
      "Inputs": [
        {
          "Id": "5b0f2af69c9642a9b7816aed6545aa93",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b05a163b5916426f9e0f6a1ae79f67b2",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed4a1e9eab1a4a82b23277ec309ce85a",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e1f2b6aae59490388937b3dd03e6c38",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "1d44a5854ab3498582bb0ad8d6b21820",
      "Inputs": [
        {
          "Id": "d5a0a557912c466c89a37dd8826b53ed",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ceb1b4b49cd849b3b30124e5932e7e90",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "dbeb4c0eca944a4181d9047dacaf8c36",
      "Inputs": [
        {
          "Id": "19f063f97ebd4da4a14cf597fd2ecadc",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b24db763683c40d7a8ada08fa27b3f64",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "a7387d02ba5544c8a4dbdc502ba72f24",
      "Inputs": [
        {
          "Id": "9a7ad47f66b74c2c814ab61b6a2e472d",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d9b004949a746ae9709796b41c80e87",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "33cead776ce74dbcaf2cc74902ae3caf",
      "Inputs": [
        {
          "Id": "3250667b21eb40b4a8275fe6712e8350",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "364b6d76e2614d5cb07dc2722e2b1387",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "30e7830302234e8a8b865a86f177f745",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Contains@var[]..[],var[]..[]",
      "Id": "7856511b0c1444fb8801f0ae1251b317",
      "Inputs": [
        {
          "Id": "a8847ef771484602809b6a626594f605",
          "Name": "list",
          "Description": "List to search in\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c2374916aeaa421ebf833120c374a989",
          "Name": "item",
          "Description": "Item to look for\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62dcbe32f81b45aebf2ac92abd081645",
          "Name": "bool",
          "Description": "True if list contains item, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list contains the given item. This function searches through the sublists contained in it.\n\nList.Contains (list: var[]..[], item: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "712e4a9d7c9a44d3a5d5f4c42a2fe885",
      "Inputs": [
        {
          "Id": "d5f8a7ff6fca46a6b16ecb6db8579745",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2c2126684dd4ffabf28886377a13f7e",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ce1393e28d54e28b6af07b24a67849a",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9929cda809ea4c6aa9a85fcca694b23b",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "218734fdd91c4f63801c21bef8df943a",
      "Inputs": [
        {
          "Id": "f5f08716298740b29aa7604b8da4db46",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66aabf13cb274fc6831130d6dc92fe2f",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "5aa45871665a43da9048a1c81ec2226d",
      "Inputs": [
        {
          "Id": "1494437d5e7a4416a2d1efebdb72da22",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ab58c64cbea41489518438b3a61f85b",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "d0b87baf110945a0b2563eb22488b9b1",
      "Inputs": [
        {
          "Id": "4fac252eab0245c3a1a28dad512a54f3",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5eab3e259e074ff3a3d1176be055dd50",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "6d481fbe3b8644c387593b864f21745c",
      "Inputs": [
        {
          "Id": "6ce3f01837e54390921a9ddd97da4933",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57b78a774a274259ad6b24fcf7e9690e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5bc3fef50514ffd853810ddbcec0255",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Contains@var[]..[],var[]..[]",
      "Id": "e574fddff1984c43b565ce955f2cd9d6",
      "Inputs": [
        {
          "Id": "35a6239e37974c39ade35eab18b1de23",
          "Name": "list",
          "Description": "List to search in\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afc57b372bab49e4b7e7d469b2ec5464",
          "Name": "item",
          "Description": "Item to look for\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "309bef206bf94f61991eb3572d689507",
          "Name": "bool",
          "Description": "True if list contains item, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list contains the given item. This function searches through the sublists contained in it.\n\nList.Contains (list: var[]..[], item: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "18d2bef3cd02420fad625769639251a1",
      "Inputs": [
        {
          "Id": "ef4a7c926cc2427da2341e46a5295a59",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e607fa26b5c417d81662893fb508839",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80a0b6c1e2d04664b47ce3b686b40352",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "368803f075244d81901fc1e725497ce8",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "9864c76ddbd6475fb5d07b9e4e02c3dd",
      "Inputs": [
        {
          "Id": "c24efc03ee064c4f86f49af1d0d12de1",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96f6262046f14eaabc7705e68dc2fe8f",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22757c66a70848edb7886f774059a0d9",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "gap;",
      "Id": "ca89a9f5a4554eac97dbc34708ed95f9",
      "Inputs": [
        {
          "Id": "cd99117ddcf54c7b9c66e3ee49f6ad6f",
          "Name": "gap",
          "Description": "gap",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c085008e3ad9429191689cb03cd08367",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.StructuralFraming.BeamByCurve@Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level,Revit.Elements.FamilyType",
      "Id": "9b31f59be2ef4313b89da23ad490343a",
      "Inputs": [
        {
          "Id": "c1b0f541c71c4e9898a021537eb568bd",
          "Name": "curve",
          "Description": "The curve which defines the center line of the beam.\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "41784205f4794374933487601a94f1c4",
          "Name": "level",
          "Description": "The level with which you'd like the beam to be associated.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b642778ae7947e3b2d227b5c04e5442",
          "Name": "structuralFramingType",
          "Description": "The structural framing type representing the beam.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b656519a9f7420ea132e4f39a839d2b",
          "Name": "StructuralFraming",
          "Description": "StructuralFraming",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a beam.\n\nStructuralFraming.BeamByCurve (curve: Curve, level: Level, structuralFramingType: FamilyType): StructuralFraming"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.StructuralFraming.BeamByCurve@Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level,Revit.Elements.FamilyType",
      "Id": "86ebf01a70a741999b58aaaa0a81e30e",
      "Inputs": [
        {
          "Id": "3fc2b071905544878adb4fe489a5db8c",
          "Name": "curve",
          "Description": "The curve which defines the center line of the beam.\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b758a083ab5444280d73af9483f1ab5",
          "Name": "level",
          "Description": "The level with which you'd like the beam to be associated.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cff9e595dc054f41bda80cec38f7de90",
          "Name": "structuralFramingType",
          "Description": "The structural framing type representing the beam.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75cd527719ea4ec28d2745df7a11957e",
          "Name": "StructuralFraming",
          "Description": "StructuralFraming",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a beam.\n\nStructuralFraming.BeamByCurve (curve: Curve, level: Level, structuralFramingType: FamilyType): StructuralFraming"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "25090994b3a940bfaa1becc494f04fd4",
      "Inputs": [
        {
          "Id": "e4325db3b0344b33976e87ed45156b48",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d872ea801b3a437d825f06b2c8887cd2",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22867cd1013e4b1f8371f333968b43ce",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "8902891717ab48b1be56fce856611cee",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5927d8743c764306ac760524ec7422ca",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.ReplaceItemAtIndex@var[]..[],int,var[]..[]",
      "Id": "de1a2981106042f8bd79d3e4dafa49b1",
      "Inputs": [
        {
          "Id": "686a10dc43094316a237d48633007741",
          "Name": "list",
          "Description": "List to replace an item in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "36f1264e4ebb4b318badf2ff08b86277",
          "Name": "index",
          "Description": "Index of the item to be replaced.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "948f1294d7de4619b84bce9244d40619",
          "Name": "item",
          "Description": "The item to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5c467e992694657b681d38ab6eab62d",
          "Name": "list",
          "Description": "A new list with the item replaced.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replace an item from the given list that's located at the specified index.\n\nList.ReplaceItemAtIndex (list: var[]..[], index: int, item: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "ec4912534461413795062800e0b119e5",
      "Inputs": [
        {
          "Id": "782de154a1da4e6791724066cb9394ec",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c2ac1d34eec4f94b290e250f6ab5821",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4928b35f39dc450196f83929b8372f39",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Id": "19e1bbe0d35d42d68a3023aa2c92349d",
      "Inputs": [
        {
          "Id": "bfcaa39d07a94c139be1b1b49bd5e2ca",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5189614c8d804438875afa55c72dc6a0",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "067977a33ce148b498f831f0b6384ffd",
      "Inputs": [
        {
          "Id": "d9ac9a105bb2484894b88df3e310ec01",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c37d56958a434e9088bb949ea419a10b",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "5e8676998eb445a89a78668e17bc9489",
      "Inputs": [
        {
          "Id": "288955b0a6a84dfb9cccb94b43937dc5",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aecf34c11f1840d58084f05f5870317d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4356ebed67e24372a685e76a74679fde",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "6b19c4e48721441da12a407c724579bc",
      "Inputs": [
        {
          "Id": "6c5f0c9b674849359a39ccecd438ed69",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45f1167bbd7a4635b4051f854c60ce78",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\niter = IN[0]\r\n# Place your code below this line\r\n\r\nres = len(iter) // 2\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "edf74ecba875485180499e61cbf74b4f",
      "Inputs": [
        {
          "Id": "8151d2f4ad4a4d85af9dfddbe1effcdb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c6462b189914a8491e455a59e4cfe02",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "17e262c082374232904f41c81a965b57",
      "Inputs": [
        {
          "Id": "636f338f30814c5f9eddd25d9b9a7512",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0b5aa54b9c5145698a99be2309cc5b6f",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95adec44d3fa4f1597902b21d5663bdb",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "61fb213a490c4b4b9552d7be6e000e5c",
      "Inputs": [
        {
          "Id": "5a63eea43ddf42b2b21d8668740357ab",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f63404a525e4579bb735b7069d8c2c3",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Id": "43d1fef57a2d495d8e0635c02a68639c",
      "Inputs": [
        {
          "Id": "506378934e844adaa953506c4a2b7060",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61a0b995174e4e60883e8ed1ce612e2a",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c1d1265c6aa248808b15783f9624ee60",
      "Inputs": [
        {
          "Id": "2e5bca53b9434dd78b90f8c789bb15c7",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac52893c71794f22a0fcf0a1dffabd86",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e33c0dc4cc9d4bcd8e0a273b5b6e0f5d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "37850e6e11b5477fa30a1d8f4554c042",
      "Inputs": [
        {
          "Id": "cf4f0cce8ef84a7cad17b143033c26d5",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca9871387ff449b4898670019eadb910",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\niter = IN[0]\r\n# Place your code below this line\r\n\r\nres = len(iter) // 2\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "f0cb104f50b94f3b9eb570bb1ff89f2f",
      "Inputs": [
        {
          "Id": "5c71592fc6434cb3861a22246322a992",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12ff83af28d84f809057a727ebf9709b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "219c3339e201467a9fb956fd31c32f58",
      "Inputs": [
        {
          "Id": "b0ab4c8c9e044e089e966a092a09119d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f7d2a06fc94c43a28d0d3faa8e3501bd",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "346a8bb0985345e0b1673e5a5c7af0f0",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "9ae2ea5a94e748a6979691e6f0d73892",
      "Inputs": [
        {
          "Id": "d0df1d1b85984819bb96349e6987112d",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9cd489520e0345038dc4bf3d9d11e844",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "f57f0d388c8c47d39a21609971825112",
      "Inputs": [
        {
          "Id": "3e37a04bf09c4dd5af7ef87d3996e1c3",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "689dd8ca58c6490e92424fa872fcb973",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce\r\nfrom itertools import chain\r\nfrom itertools import groupby\r\nfrom copy import deepcopy\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter,map,reduce = curry(filter),curry(map),curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n\r\ndef dictUpdate(dic1,dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n    \r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n    \r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a: \r\n            yield from flat(i)\r\n    else: yield a\r\n      \r\ndef grpBy(iter, key):\r\n    f,grpKeys,grps = key,[],[]\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_,key=f):\r\n        grpKeys.append(key); grps.append(list(grp_data))\r\n    return grps,grpKeys\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nptsPerLevel = IN[0]\r\nslopeGap = IN[1]\r\n# Place your code below this line\r\n\r\ndef getMid_inTopLevel(roofLvPts):\r\n    res = go(\r\n        roofLvPts,\r\n        len,\r\n        lambda x: x//2,\r\n    )\r\n    return res\r\n\r\ndef modifyToplevelMid(ptsPerLevel, slopeGap):\r\n    roofLvPts = ptsPerLevel[-1]\r\n    otherLvPts = ptsPerLevel[:-1]\r\n    midIdx = getMid_inTopLevel(roofLvPts)\r\n    roofMidRowPts = list(roofLvPts[midIdx])\r\n    trsRoofMidRowPts = go(\r\n        roofMidRowPts,\r\n        map(lambda x: x.Translate(0,0,slopeGap)),\r\n    )\r\n    roofLvPts[midIdx] = trsRoofMidRowPts\r\n    \r\n    return otherLvPts + [roofLvPts]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = modifyToplevelMid(ptsPerLevel,slopeGap)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "797cabba96e94ac3b7dc25d50bbc37bd",
      "Inputs": [
        {
          "Id": "1610975b84904941b92940be5a7a6328",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd9b4dab34d744c59fcc49e99e003ef6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0dfaa7128a3349fe9c73ee96906c1bbe",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "roofGap*1000;",
      "Id": "910f3ca51ea04b41b7cafb9863939b92",
      "Inputs": [
        {
          "Id": "a98a011ad4fb445897cacdcae418db83",
          "Name": "roofGap",
          "Description": "roofGap",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc830761581747efba3fb5719d0ad762",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.6,
      "Id": "b6fb9211eef84af5b9e834edb6d062f7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bd366302a7294889aa4e881e94aa524e",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce; from itertools import chain\r\nfrom itertools import groupby; import operator\r\nfrom copy import deepcopy\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n\r\ndef dictUpdate(dic1,dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n    \r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n    \r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a: \r\n            yield from flat(i)\r\n    else: yield a\r\n\r\ndef grpBy(iter, key):\r\n    f,keys,grps = key,[],[]\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_,key=f):\r\n        keys.append(key); grps.append(list(grp_data))\r\n    return grps,keys\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ngrids = IN[0]\r\nverSpanGrids = grids[1]\r\nhorSpanGrids = grids[0]\r\n# Place your code below this line\r\nalpha = [chr(c) for c in range(ord('A'),ord('Z')+1)]\r\n\r\ndef get_horGridsName(grids, alpha):\r\n    res = go(\r\n        grids, len, \r\n        lambda x: range(1,x+1),\r\n        map(lambda x: alpha[x-1]),\r\n    )\r\n    return res\r\n\r\ndef get_verGridsName(grids):\r\n    res = go(\r\n        grids, len, \r\n        lambda x: range(1,x+1),\r\n        map(str),\r\n        \r\n    )\r\n    return res\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = get_horGridsName(horSpanGrids, alpha), get_verGridsName(verSpanGrids)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "d027912ca6ab4adfa52a0c7db3039a4e",
      "Inputs": [
        {
          "Id": "36ce9fa25f124b1bbd2d40aae8953b3f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a08f458ac05d49979c4960ab8854796f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "bb152c71170f46269e48764288f7ec23",
      "Inputs": [
        {
          "Id": "389bd9a2576a43078a0d6bbcb43a31a1",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1ca8255c30ab4e48bcf20241ea1e7d63",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6934e74004ac4839ad5d6401a40c8e9b",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "907bdb6bb5ee4cf5aa390800502ed0e3",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "effcfcdcb42f41449d1d887d22cceb53",
      "Inputs": [
        {
          "Id": "7edaa7d6ce884455b4218e5610934f01",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2129795f33ec41c480b4e832058bfedf",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4162c3ab5da84061af0229edad1936c1",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e990d2564ef34eac813fc16ebd1d0b70",
      "Inputs": [
        {
          "Id": "98910c80b7b34b699f1eba00b193c0d7",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e6dfab4c70447a18e94aae46935a5cd",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c7cd2aded294014923d8afe91174a17",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Name\";",
      "Id": "8708a0dd4fab4e88ad1e77247c04cf21",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cd77d69befdd45be81f54ec4f6474190",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "73a732a789d445bdaf8b5f00505ee2b1",
      "Inputs": [
        {
          "Id": "feb2178acb354d318bb4e5484d6d5eb6",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "beabc14a6ff44855a73e90ff124598bf",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d348eb456055444f9064ecf7ab300810",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f28a707d32e4732bb383f63089ef3ee",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"z Offset Value\";\n0;",
      "Id": "ab714a972cbe4c5184b02d7b259ad51b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1d007793538a4e53a4983b78f37ef076",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "665a59ab127d4a42b2c532755503f92e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "2a9937d00fe74569ae5115db74a1185a",
      "Inputs": [
        {
          "Id": "c23498be1fe0445398d37618e21dd21b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97b475bbe558445dbf10546793f612ca",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87d460f9bc7e4df48c4842111dc47890",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5da2452f7b084aac90c7e1cd0da56e28",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"z Offset Value\";\n0;",
      "Id": "27c2735e5e7d4c01831217b1f40ee733",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "87bad210aa2242c49a6a0cb37d4ed590",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52c8c464fc284aeea7dfba65123693cc",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Id": "d5bf93ee56ac4543a069de9cf588c6d2",
      "Inputs": [
        {
          "Id": "d25c25441deb4fb3affa7daad90b6246",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7a2ed93db924b0aad90fd8db4eef5f3",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4fe8580a084843348da610b5c028ea3e",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "a44f9e8c66f841fcb13d28a118dacaa7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "97b6c76323474df398bd7731b482ded0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Circle.ByCenterPointRadius@Autodesk.DesignScript.Geometry.Point,double",
      "Id": "337e0e50fe9d4b538dc17696a4b478d9",
      "Inputs": [
        {
          "Id": "ea0f529c93274d43bec590c3f009a893",
          "Name": "centerPoint",
          "Description": "Center point of circle\n\nPoint\nDefault value : Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2231da761e534e41bd7c89d21eff12e6",
          "Name": "radius",
          "Description": "Radius\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cdbf9be83d0d4fe684789ab89540b2a7",
          "Name": "Circle",
          "Description": "Circle created with center point and radius",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a Circle with input center Point and radius in the world XY plane, with world Z as normal.\n\nCircle.ByCenterPointRadius (centerPoint: Point = Autodesk.DesignScript.Geometry.Point.ByCoordinates(0, 0, 0), radius: double = 1): Circle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "500;",
      "Id": "bd1463aca1bb4dda9f6186c7d7d945c3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "57c8749f4e5b4f119f34a3c037c1e262",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce; from itertools import chain\r\nfrom itertools import groupby; import operator\r\nfrom copy import deepcopy\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n\r\ndef dictUpdate(dic1,dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n    \r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n    \r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a: \r\n            yield from flat(i)\r\n    else: yield a\r\n\r\ndef grpBy(iter, key):\r\n    f,keys,grps = key,[],[]\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_,key=f):\r\n        keys.append(key); grps.append(list(grp_data))\r\n    return grps,keys\r\n#########################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nallCols_loc = IN[0]\r\nallEndPts_forAllLv = IN[1]\r\ngap = IN[2]\r\n# Place your code below this line\r\ndef index_toName(datas):\r\n    rngsStr = list(map(str, range(len(datas))))\r\n    allNames = go(\r\n        rngsStr,\r\n        map(lambda x: \"0\" + x if len(x) < 2 else x)\r\n    )\r\n    return allNames\r\n    \r\ndef get_BuilingBdBox(allCols_loc):\r\n    #allCols_loc = list(map(lambda x: x.GetLocation(),allCols))\r\n    bdBox = BoundingBox.ByGeometry(allCols_loc).ToCuboid()\r\n    return bdBox\r\n\r\ndef find_longitudinalAxis(allCols_loc):\r\n    bdBox = get_BuilingBdBox(allCols_loc)\r\n    btmFace_PeriLine = go(\r\n        bdBox,\r\n        lambda x: x.Explode(),\r\n        filter(lambda x: x.NormalAtParameter(0.5,0.5).Z == -1),\r\n        list, lambda x: x[0],\r\n        lambda x: x.PerimeterCurves(),\r\n    )\r\n    longitudinalVec = go(\r\n        btmFace_PeriLine,\r\n        map(lambda x: x.Length), max,\r\n        lambda x: filter(lambda y: y.Length == x, btmFace_PeriLine),\r\n        list,lambda x:x[0],\r\n        lambda x: x.Direction.Normalized(),\r\n    )\r\n    if longitudinalVec.X < 0 or longitudinalVec.Y < 0:\r\n        longitudinalVec = longitudinalVec.Reverse()\r\n    else:\r\n        pass\r\n    \r\n    return longitudinalVec\r\n\r\n# 장축 방향으로 포인트 그룹 형성\r\ndef grp_longitudinal(ptsPerLv, longitudeAxis):\r\n    flattenPts = list(chain(*ptsPerLv))\r\n    if longitudeAxis.X == 1:\r\n        grpByLongi = go(\r\n            flattenPts,\r\n            lambda x: grpBy(x, key=lambda x: x.Y),\r\n            list,\r\n        )\r\n    elif longitudeAxis.Y == 1:\r\n        grpByLongi = go(\r\n            flattenPts,\r\n            lambda x: grpBy(x, key=lambda x: x.X),\r\n            list,\r\n        )\r\n    grped = grpByLongi[0]\r\n    zByRow = go(\r\n        grped,\r\n        map(lambda row: go(\r\n            row,\r\n            map(lambda x: x.Z),\r\n            set,list,\r\n            lambda x: x[0],\r\n        )),list,\r\n    )\r\n    return grped, zByRow\r\n    \r\ndef find_GapScan(zByRow):\r\n    \r\n    maxZ = max(zByRow)\r\n    minZ = min(zByRow)\r\n    z_gap = maxZ - minZ\r\n    all_idx = list(range(0,len(zByRow)))\r\n    stt_idx = all_idx[0]\r\n    end_idx = all_idx[-1]\r\n    maxZ_idx = zByRow.index(maxZ)\r\n    #엣지와 가운데 열 사이에 몇 줄이 있는가 판별\r\n    ## 상단부\r\n    cen_upper = list(range(stt_idx+1,maxZ_idx))\r\n    div_up_cnt = len(cen_upper)+1\r\n    divGapUp_unit = z_gap / div_up_cnt\r\n    divGapsUp_scan = list(map(lambda x: x*divGapUp_unit, range(1,len(cen_upper)+1)))\r\n    \r\n    ## 하단부\r\n    cen_below = list(range(maxZ_idx+1,end_idx))\r\n    div_bl_cnt = len(cen_below)+1\r\n    divGapBl_unit = z_gap / div_bl_cnt\r\n    divGapsBl_scan = list(map(lambda x: x*divGapBl_unit, range(1,len(cen_below)+1)))\r\n    \r\n    return {\r\n        \"maxZ_idx\": maxZ_idx,\r\n        \"divGapsUp_scan\": divGapsUp_scan,\r\n        \"divGapsBl_scan\": divGapsBl_scan,\r\n    }\r\n\r\ndef modify_ptsZ(ptsbyRows, gapScanDict):\r\n    all_idx = list(range(0,len(ptsbyRows)))\r\n    stt_idx = all_idx[0]\r\n    end_idx = all_idx[-1]\r\n    \r\n    maxZ_idx = gapScanDict[\"maxZ_idx\"]\r\n    divGapsUp_scan = gapScanDict[\"divGapsUp_scan\"]\r\n    divGapsBl_scan = gapScanDict[\"divGapsBl_scan\"]\r\n    \r\n    upperPtsRow = ptsbyRows[stt_idx+1:maxZ_idx]\r\n    modi_upperPtsRow = go(\r\n        zip(upperPtsRow,divGapsUp_scan),\r\n        map(lambda row_scan: go(\r\n            row_scan[0],\r\n            map(lambda pt: pt.Translate(0,0,row_scan[1]) ),\r\n        ) )\r\n    )\r\n    belowPtsRow = ptsbyRows[maxZ_idx+1:end_idx]\r\n    modi_belowPtsRow = go(\r\n        zip(belowPtsRow,divGapsBl_scan),\r\n        map(lambda row_scan: go(\r\n            row_scan[0],\r\n            map(lambda pt: pt.Translate(0,0,row_scan[1]) ),\r\n        ) )\r\n    )\r\n    \r\n    return [\r\n    ptsbyRows[stt_idx],\r\n    *modi_upperPtsRow, \r\n    ptsbyRows[maxZ_idx], \r\n    *modi_belowPtsRow,\r\n    ptsbyRows[end_idx]\r\n    ]\r\n\r\nlongitudeAxis = find_longitudinalAxis(allCols_loc)\r\ngrped_longi, zByRow = grp_longitudinal(allEndPts_forAllLv[-1], longitudeAxis)\r\ngapScanDict = find_GapScan(zByRow)\r\nif gap > 0:\r\n    res = [*allEndPts_forAllLv[:-1], modify_ptsZ(grped_longi, gapScanDict)]\r\nelse:\r\n    res = allEndPts_forAllLv\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "08138a0dc60248c6a35d7e984dffdcb4",
      "Inputs": [
        {
          "Id": "7ba90a55aa4d4d379ad76d9b32e9941e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7575d4a626b74eb0be36bd97fa0b540a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "138f74cd65d946af8e936348db1490db",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8e5db513ed34d99b7c0f205888408dd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "100df7d955f84004b171ea9dacb5e96f",
      "Inputs": [
        {
          "Id": "128e4aaab196445da57d28ab7cf99282",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77f9699ba19b439d9b0b3f509e807aab",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8344e85be24449d19ba5359bd665d954",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "4851fd708f1d44ec95c0f6565f969401",
      "Inputs": [
        {
          "Id": "dce410fef03d4ac99568d4d626c0f7c6",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52c887c2e7b244fe9c579a6eb0dcff4c",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "838d553e68424fdc9004a4984fdeb188",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "roofGap;",
      "Id": "0f6ca0e832d84452a3da0312aeabd257",
      "Inputs": [
        {
          "Id": "f091ffe800734ab7b9947d43373ce13c",
          "Name": "roofGap",
          "Description": "roofGap",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99d25fdbec034681940ca67a63a602a1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "roofGap;",
      "Id": "5ff320243c064b35b3f916a11ccf734b",
      "Inputs": [
        {
          "Id": "5cd496bd51e44e73947ee33308c862dc",
          "Name": "roofGap",
          "Description": "roofGap",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f563c1cce3a488aa28c9301e0d5df4a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "25b6e40c527448c0a56f860be164364b",
      "Inputs": [
        {
          "Id": "5eee126b19074223a196d2a6e42ed549",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52a938a0a2ba47c2bb11a05afcd1f6a6",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 266,
      "SelectedString": "OST_GridHeads",
      "NodeType": "ExtensionNode",
      "Id": "342200808833416c8533ef4349e2788f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b0627cf779b748b385ddbc5b1ef611d7",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Grid\";\n\"HA-GRID_10 mm Bubble_Red\";",
      "Id": "428d60e1616e4ef9ba530c52874276bb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "065f8cdb3f264e99b8b44dad9780e21d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ba9e6a21b0b4e87bb1ec147ac9e12cf",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "62dcd32a67714978a2715605dada8ac1",
      "Inputs": [
        {
          "Id": "cb42b11068f441408daee1a712423c3f",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c030224f5e644748a788c108548772ae",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd3b58d5b635425888559a20c32b7ded",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ngrids = IN[0]\r\ngridTypeName = IN[1]\r\n# Place your code below this line\r\ndef modify_gridsType(grids):\r\n    try:\r\n        list(map(lambda x: x.SetParameterByName(\"Type\", ElementType.ByName(gridTypeName)), grids ))\r\n    except:\r\n        pass\r\n    return grids\r\n# Assign your output to the OUT variable.\r\nOUT = modify_gridsType(grids)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "cee301f24b6f4cec99b3b0958c1c8ce8",
      "Inputs": [
        {
          "Id": "2ff2787fc49642f58b3670151c2e6ed2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e00fd335c628416fa9d546dda19571a5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f614633a65f435f8ff390b19fd28c95",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// 단 스팬 건물 생성시 루프 구배 주면 에러 발생\n// 장 단변 역전되면(y방향 스팬을 더 많이 입력하면) 에러",
      "Id": "2cf67570cdce4841b595f90c6b005b1f",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "ccc2a53fa5074aefa3ae006686c87e68",
      "Inputs": [
        {
          "Id": "b54277243a72452f9d11f9ba9c4053b2",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f79e177a008f4a93b5857a670fa3fcdc",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46a4d82bded74200b6938e2489bb76ad",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18960d8269264732ba0e308c2c94c9e9",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Type\";",
      "Id": "cc3d71139ac04cda960ed3efd7f48839",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e172cfa4592d46679c51751587535583",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.ElementType.ByName@string",
      "Id": "86c18fdb904a46839997250501e7192f",
      "Inputs": [
        {
          "Id": "c3214195ab1f41f5aac268c2c2069e14",
          "Name": "name",
          "Description": "Name of the type\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "801fa54ec9e64172aab38d67149d50c5",
          "Name": "ElementType",
          "Description": "Type Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the type Element with the given name.\n\nElementType.ByName (name: string): ElementType"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 22.0,
      "Id": "eba2b8f509704a7d9d9d04e7072f9fca",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "85dea35b0c9f4b4093df10dc2d8bf32b",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 13.0,
      "Id": "a06e4013555147b18b7a8eadf94085f9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e6199b6167e04e409888312fdeb8b759",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 7,
      "MaximumValue": 8,
      "MinimumValue": 3,
      "StepValue": 1,
      "Id": "378fadc0748c41448acf120c8da97c3a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3319d03ac6164db3a99d052426e17211",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 6,
      "MaximumValue": 6,
      "MinimumValue": 2,
      "StepValue": 1,
      "Id": "b0d1f20572cc41e6bd4518fa2ea70dbe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "712d9ed76a0e450bb65ee773e5e67119",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "4\r\n3.5",
      "Id": "415d24f648eb4c2ca7cf7ac961a32742",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2da1cd6a75854a2886d4dc28622b496b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";\n\"\\n\";",
      "Id": "3c8467ce6cbc4a45825c98f5a62963c3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f111d2c8ce0a436392c86ecd36ba0105",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b3b8bcb3a0548de98e47c78b9a64f43",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "14debba1da5c44c18e492b1c20957c55",
      "Inputs": [
        {
          "Id": "b919813c5001441a84cb1d7cc3639897",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1508ee4fa2f141f2aa979eebe3a68005",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "322a9c8cd79547bd847a5681228ff87d",
          "Name": "separator1",
          "Description": "string[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "445f5b4b4ca94022a85a021ef372e12a",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "3e51418fd05b474c8337f4f47c9074d6",
      "Inputs": [
        {
          "Id": "b0a1b24da42d4b9db1bdf44830d46bc0",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd0852b4af1f413e9ea3bc16b07f12f0",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce; from itertools import chain\r\nfrom itertools import groupby; import operator\r\nfrom copy import deepcopy\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n\r\ndef dictUpdate(dic1,dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n    \r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n    \r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a: \r\n            yield from flat(i)\r\n    else: yield a\r\n\r\ndef grpBy(iter, key):\r\n    f,keys,grps = key,[],[]\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_,key=f):\r\n        keys.append(key); grps.append(list(grp_data))\r\n    return grps,keys\r\n#########################################################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nbd_Width = IN[0]\r\nspanCnt = IN[1]\r\n# Place your code below this line\r\n\r\ndef get_minSpanWidth(bd_Width, spanCnt):\r\n    minSpan = bd_Width // spanCnt\r\n    remain = bd_Width % spanCnt\r\n    spans = [minSpan] * spanCnt\r\n    \r\n    if spanCnt % 2 == 0:\r\n        spans_midIdx = (spanCnt // 2) - 1\r\n    else:\r\n        spans_midIdx = (spanCnt // 2)\r\n    # 각 span에 잔여 길이 분배 - 중간 부터\r\n    tgtIdxes = list(range(spans_midIdx, spans_midIdx + remain))\r\n    \r\n    for i in tgtIdxes:\r\n        spans[i] += 1\r\n    \r\n    return spans\r\n# Assign your output to the OUT variable.\r\nOUT = get_minSpanWidth(bd_Width, spanCnt)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "0271cb8e3a424323a0ee758fea35474b",
      "Inputs": [
        {
          "Id": "b76e4cf46ea6491a810422fa7009dba8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e3c190874574fa9a0de960f05e34aba",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5c528c0a4254826baaf7743ece60932",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce; from itertools import chain\r\nfrom itertools import groupby; import operator\r\nfrom copy import deepcopy\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n\r\ndef dictUpdate(dic1,dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n    \r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n    \r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a: \r\n            yield from flat(i)\r\n    else: yield a\r\n\r\ndef grpBy(iter, key):\r\n    f,keys,grps = key,[],[]\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_,key=f):\r\n        keys.append(key); grps.append(list(grp_data))\r\n    return grps,keys\r\n#########################################################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nbd_Width = IN[0]\r\nspanCnt = IN[1]\r\n# Place your code below this line\r\n\r\ndef get_minSpanWidth(bd_Width, spanCnt):\r\n    minSpan = bd_Width // spanCnt\r\n    remain = bd_Width % spanCnt\r\n    spans = [minSpan] * spanCnt\r\n    \r\n    if spanCnt % 2 == 0:\r\n        spans_midIdx = (spanCnt // 2) - 1\r\n    else:\r\n        spans_midIdx = (spanCnt // 2)\r\n    # 각 span에 잔여 길이 분배 - 중간 부터\r\n    tgtIdxes = list(range(spans_midIdx, spans_midIdx + remain))\r\n    \r\n    for i in tgtIdxes:\r\n        spans[i] += 1\r\n    \r\n    return spans\r\n# Assign your output to the OUT variable.\r\nOUT = get_minSpanWidth(bd_Width, spanCnt)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "b4ff71f45fe04216b01eb08e47964ac1",
      "Inputs": [
        {
          "Id": "3c26cae4d0b240eaa76a7da2bd54696b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bd49f498d0a84d618252cb9ce8756924",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b66f2b265a104d608d30236c4977a603",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "xSpans;",
      "Id": "89816b2143214860a4e83e0302f7cf1e",
      "Inputs": [
        {
          "Id": "b28645e5a7054ee6a283c5c26e3d8edc",
          "Name": "xSpans",
          "Description": "xSpans",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c601e589d50c4309b35c320b7d2be7b0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ySpans;",
      "Id": "2d1d5e6cc0f9406b8ba6a8015405824f",
      "Inputs": [
        {
          "Id": "ba6efc3d43be404e8024deb8f089cba9",
          "Name": "ySpans",
          "Description": "ySpans",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f820f10109b4b4bbf6c8a6c45e52331",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "stories;",
      "Id": "d5f97f0b1cba4a6d9075380ab9de703b",
      "Inputs": [
        {
          "Id": "b3ca44077ff2492fa054373bea30d4f0",
          "Name": "stories",
          "Description": "stories",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e5d729fe0fcf43eb96ea164c90983280",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "73d9199a0382482991a644f841451fd0",
      "Inputs": [
        {
          "Id": "a6e33c640431445cabb8ebc8be0c5402",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afed36b3c2a74d0ca6c252d21cfaf2a8",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51af3598af9b45fd9c167d60c76975b6",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "allColumnsLine;",
      "Id": "a5b561b97b4249e6bc99e9f8d89301ad",
      "Inputs": [
        {
          "Id": "3855f40b35e14e3684c2b9f83e0f31f8",
          "Name": "allColumnsLine",
          "Description": "allColumnsLine",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "615a331ef52245ac9eb06c3faf0f306c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "allGirdersLine;",
      "Id": "0a43bba832334053a51e80c62293268e",
      "Inputs": [
        {
          "Id": "c9fe31f87824474aaa1acdb74741d050",
          "Name": "allGirdersLine",
          "Description": "allGirdersLine",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86e96df65a8b42babd624f5d266fe8c9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "allBeamsLine;",
      "Id": "947f103685cc45e8a798d0d0584ee73b",
      "Inputs": [
        {
          "Id": "650cdeec68314d7b951c6f7cfbc0bf8f",
          "Name": "allBeamsLine",
          "Description": "allBeamsLine",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2ba1fb8854245a1905ff142771d9a29",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Length",
      "Id": "e38dcdf54af44da9bd01bbb687bff2cd",
      "Inputs": [
        {
          "Id": "a8f2022c8d0d41acb9482afc5066ac3c",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a211ad05085b46e983b117fac03d28ce",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total arc length of the curve\n\nCurve.Length: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "4933d8c3b3994ded87375baddb6a827b",
      "Inputs": [
        {
          "Id": "8556649b387e42c7b15f1f78647f127b",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "031282ec0f2d4ef9ae0fee979968a6ee",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "dc48f327765f437099f73a00d1fce289",
      "Inputs": [
        {
          "Id": "ed3dca53becd42699906cbbc136bb379",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f8506c4ed024acb8be73a5825b31283",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "328e27988ad642aa8b091288a4f5a260",
      "Inputs": [
        {
          "Id": "9fc23f3fb35044a694129697eaa9e3ab",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4b0903a473b4404b094ab70cba7c6aa",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5fa9f428d9004692a7c7a57b42d48619",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndata = IN[0]\r\n# Place your code below this line\r\ntry:\r\n    res = data/10\r\nexcept:\r\n    res = 100000000000000\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "74c86c97e0bb4f6fb37e2e05a49d9b89",
      "Inputs": [
        {
          "Id": "57bb33043df24e03ae293787b8dd3467",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c1768b338dc49d0993be5c9aabd0e60",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "GenerativeDesign.Remember, GenerativeDesign.Dynamo.Nodes",
      "Cache": "[\r\n  -1500.0381366323777,\r\n  7649.9618633676228,\r\n  -0.0381366323776263,\r\n  4000.0000000000005,\r\n  9000.0,\r\n  12500.0,\r\n  7500.0000000000009\r\n]",
      "NodeType": "ExtensionNode",
      "Id": "539234cae11348c897766d331db66ae2",
      "Inputs": [
        {
          "Id": "403fad727fd54e929496d91bf8983acd",
          "Name": ">",
          "Description": "Data to sample and store in the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a994e5ae3bf64928b194e455896390fa",
          "Name": ">",
          "Description": "Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Store data passing through this node to the Dynamo file. Return the stored data if the input is null."
    },
    {
      "ConcreteType": "GenerativeDesign.Remember, GenerativeDesign.Dynamo.Nodes",
      "Cache": "[\r\n  -1500.0381366323777,\r\n  7649.9618633676228,\r\n  -0.0381366323776263,\r\n  4000.0000000000005,\r\n  9000.0,\r\n  12500.0,\r\n  7500.0000000000009\r\n]",
      "NodeType": "ExtensionNode",
      "Id": "7ab372cc48be43a18aa30f85da26ece8",
      "Inputs": [
        {
          "Id": "0f0f3d30f56344dfb6a5853a3e0846d0",
          "Name": ">",
          "Description": "Data to sample and store in the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "083ef7cc18a44432b7945d1a98ea17d9",
          "Name": ">",
          "Description": "Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Store data passing through this node to the Dynamo file. Return the stored data if the input is null."
    },
    {
      "ConcreteType": "GenerativeDesign.Remember, GenerativeDesign.Dynamo.Nodes",
      "Cache": "{\"ConcreteType\":\"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\"}",
      "NodeType": "ExtensionNode",
      "Id": "9e21598964074ca8ae34d3ad80c498e5",
      "Inputs": [
        {
          "Id": "293aead620184141b0f18134cb2282ce",
          "Name": ">",
          "Description": "Data to sample and store in the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59abf6d3aeb74c53a67a7c9ff992e245",
          "Name": ">",
          "Description": "Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Store data passing through this node to the Dynamo file. Return the stored data if the input is null."
    },
    {
      "ConcreteType": "GenerativeDesign.Remember, GenerativeDesign.Dynamo.Nodes",
      "Cache": "{\"ConcreteType\":\"PrimitiveGeometry.Geo.Point, PrimitiveGeometry\",\"X\":-4.9300004891837012E-13}",
      "NodeType": "ExtensionNode",
      "Id": "ef9fde01f0f845b88905649120546352",
      "Inputs": [
        {
          "Id": "93ca85a2c24c41148e463f5fb2ca4d38",
          "Name": ">",
          "Description": "Data to sample and store in the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "579ef6f3aad44a3c91fbb12ec20bcd65",
          "Name": ">",
          "Description": "Data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Store data passing through this node to the Dynamo file. Return the stored data if the input is null."
    }
  ],
  "Connectors": [
    {
      "Start": "d089b4554bed46e195b71ad9d7c800e4",
      "End": "36ce9fa25f124b1bbd2d40aae8953b3f",
      "Id": "c5b3d45a2c87450d9a2d145fca86f4d1",
      "IsHidden": "False"
    },
    {
      "Start": "d089b4554bed46e195b71ad9d7c800e4",
      "End": "7edaa7d6ce884455b4218e5610934f01",
      "Id": "c00e07b374324a8dba7bdb123bbe0a2a",
      "IsHidden": "False"
    },
    {
      "Start": "62bea1d55dcc40b48da2f4c477cfab4c",
      "End": "80251a62f9f74f1ca54cf6bf2827d5fc",
      "Id": "d65ef2ebd297433e95bbc05f8dcf7107",
      "IsHidden": "False"
    },
    {
      "Start": "5c081a0f3bc841559940ba58113317a9",
      "End": "ae81c4544cc0478b8e9f26c0f9526ac7",
      "Id": "7e6d4dee058f49479d42de1f972b2888",
      "IsHidden": "False"
    },
    {
      "Start": "70ef0345dda945818431101a8235f21e",
      "End": "c6e6450ac64940f1b340690d845882f7",
      "Id": "11de421421344d708f250e8468f6fbb0",
      "IsHidden": "False"
    },
    {
      "Start": "461f67bf7b7346b3b10e6e4c4129870d",
      "End": "3ee008bbac534cb380f737841e2ec190",
      "Id": "610754f1105343279130bd4067edb009",
      "IsHidden": "False"
    },
    {
      "Start": "ae19b848830546a9816b12ede012b453",
      "End": "487cf4dd30684d10af6b7509e63d97f3",
      "Id": "ef78536eac494644be31070ef72348b6",
      "IsHidden": "False"
    },
    {
      "Start": "04098db9282942f69e411cf1565136b3",
      "End": "0b48da0a607449049401768c6f4feb31",
      "Id": "91e6d2caa9ff4fb5b3a0b5b35d023ed1",
      "IsHidden": "False"
    },
    {
      "Start": "20ba374016b84bc581f5437a5b827274",
      "End": "2ffc18f3e3d94ee38135864700874d4c",
      "Id": "ab9ed51934714a63a5982738b149158d",
      "IsHidden": "False"
    },
    {
      "Start": "f388b08474024a379d5e61858523468b",
      "End": "c7d79892e841442f9d682b35a2aabebf",
      "Id": "0504d2b36d6c41748742e164e0526054",
      "IsHidden": "False"
    },
    {
      "Start": "8de4fef2195b4175a119f98d3b52aff2",
      "End": "f927eca8b1a04061a14391f7a7f2a3b5",
      "Id": "97ead602f94b4aee9d767d2de4c7a65d",
      "IsHidden": "False"
    },
    {
      "Start": "b54284ef16c2436d83283dab3d328c10",
      "End": "1a7816c026694180b5791e9f84b3724d",
      "Id": "03c80dac32944371afccb1c8b23a8559",
      "IsHidden": "False"
    },
    {
      "Start": "ee948f76cac94fcbbc127cead7869170",
      "End": "be452dd429964414bead2a875d781e41",
      "Id": "dbd02840141d43f1806bb4fc85365b87",
      "IsHidden": "False"
    },
    {
      "Start": "988986469e3c4329a6943fdc86be6418",
      "End": "4ba9bf2ac0194d2a9b3578865155e6da",
      "Id": "1eeb569b45b748d19f7c45ece480e519",
      "IsHidden": "False"
    },
    {
      "Start": "988986469e3c4329a6943fdc86be6418",
      "End": "3e37a04bf09c4dd5af7ef87d3996e1c3",
      "Id": "61c5ecd9a4e542a7826684bf87b9ab91",
      "IsHidden": "False"
    },
    {
      "Start": "f71c6770d7314b4caa17a97a24c47c5a",
      "End": "e35ce2ba78d0444486f3ff4a51ac67d9",
      "Id": "7a6c4032f34b47839bfbd9bae378b025",
      "IsHidden": "False"
    },
    {
      "Start": "a8884a93d49944d8a05e7bcfd301218c",
      "End": "f67d971409f94bb4abb837bddb993138",
      "Id": "b1c9e79ebf934e7b89dee41a2b740e41",
      "IsHidden": "False"
    },
    {
      "Start": "9d688cdf378b463fa57036ad9c014896",
      "End": "ee65da597925413f9ab9781840d976e3",
      "Id": "ef062dd0f935481aaad8826643476e92",
      "IsHidden": "False"
    },
    {
      "Start": "52915e0618954d8ba76059418c6316a7",
      "End": "c4a25e62d37943f2a13409cac595dd22",
      "Id": "80e8788496c14f56a7f1b4dd5c523041",
      "IsHidden": "False"
    },
    {
      "Start": "1f412a3f42cc42d2af8cce3710d54432",
      "End": "5d796599682943409227522f3ee04b28",
      "Id": "cc74dfbd22f94a41b73eabd497af7b86",
      "IsHidden": "False"
    },
    {
      "Start": "519c1a1c9bd04c9e8b59c91bafce3d78",
      "End": "13f3d72e64bc436baebc7ed8d87df893",
      "Id": "63eb6c97c6894cf08644ed614f09f591",
      "IsHidden": "False"
    },
    {
      "Start": "e671292d65df49bcbe3511f340521677",
      "End": "3acd299832644d40bf9214a019b83b92",
      "Id": "876d31e361bb4af7ad1ebc6e1f55a524",
      "IsHidden": "False"
    },
    {
      "Start": "e671292d65df49bcbe3511f340521677",
      "End": "7ec17acda1014395ac97c7ee93031d83",
      "Id": "abd7561be19047298c25172100dab5c7",
      "IsHidden": "False"
    },
    {
      "Start": "e671292d65df49bcbe3511f340521677",
      "End": "caa5781572a649d782db33e9c73fdb38",
      "Id": "4e52377d15574f20a9c91f521df1d510",
      "IsHidden": "False"
    },
    {
      "Start": "3b0b653c69c34522b7b365013d4938db",
      "End": "5259d409c11c4e22b6ae49252c49795e",
      "Id": "5cba223137494c1eaa69eddca85d8ed7",
      "IsHidden": "False"
    },
    {
      "Start": "74bf5ab48cc94e5483c1157764f44624",
      "End": "743e7e2acb364517b2d932da5d770eeb",
      "Id": "29b369d6e174463c9c5220980abfea84",
      "IsHidden": "False"
    },
    {
      "Start": "a36ca303a49042ee859c58bdde05b81a",
      "End": "792bf95cedce4efba69c8a8d6cab61b3",
      "Id": "1f5ec194a17941aa84a122770112787b",
      "IsHidden": "False"
    },
    {
      "Start": "c04c06895eb2469eb985e492687c77ae",
      "End": "5d38e1f07f514f8a8c8328efcdc2c726",
      "Id": "b2b2f5a24fb543679b81a3117989275f",
      "IsHidden": "False"
    },
    {
      "Start": "c04c06895eb2469eb985e492687c77ae",
      "End": "5b7d8da95ffd44bd9821b2083c00635b",
      "Id": "e5f863c92e6f4d669cd5164fb7895900",
      "IsHidden": "False"
    },
    {
      "Start": "8d6059783f1a431da30ac4176d77901a",
      "End": "dedf64f2816a4454a9eca05e59efb242",
      "Id": "ebf1fdb8c28f4ef98e95f844452cd337",
      "IsHidden": "False"
    },
    {
      "Start": "1104ca3e11664e7c801c6d920e78ddc7",
      "End": "0b9f9d10dac045eb8e9cfad04a2fd567",
      "Id": "25502551166d4046a086014613501c1a",
      "IsHidden": "False"
    },
    {
      "Start": "72afd5da537242038c5bbdd6ddf94829",
      "End": "be66d3582f6544f68cb57cc60bfc21c0",
      "Id": "b913aa1c86e542eea317813523b9f7fd",
      "IsHidden": "False"
    },
    {
      "Start": "f7d1750ab85c4be5a434bd7a8ea220af",
      "End": "477dbffe6e7d49fc988c40cce09cde8a",
      "Id": "042a9db455044bef8c61a6e452f8f727",
      "IsHidden": "False"
    },
    {
      "Start": "acf96cc510674c6a87325e5c3a7f9cd7",
      "End": "7f42d112d81f4635b5930e95958eb784",
      "Id": "bd35b3c0280443c483e6696f0c0b51fb",
      "IsHidden": "False"
    },
    {
      "Start": "acf96cc510674c6a87325e5c3a7f9cd7",
      "End": "da484d9b1d764bceb2bbddd2096528f0",
      "Id": "856fe94ce1e946449d907f92f5a21686",
      "IsHidden": "False"
    },
    {
      "Start": "acf96cc510674c6a87325e5c3a7f9cd7",
      "End": "89eef02a46cd491a9b5272bd86afd3b6",
      "Id": "f02ae4390793473fab06a1cc6f26b583",
      "IsHidden": "False"
    },
    {
      "Start": "6698603018c844ffbaea791fd3a81e92",
      "End": "75f810e8d45842b68507a84dd1595313",
      "Id": "76181a5a0e5942289f24fbd6539cbd3e",
      "IsHidden": "False"
    },
    {
      "Start": "8b348946f31c41ad9c6c7f9e81071c03",
      "End": "ee5d633ac22c48c6881f39eb97f5ecd6",
      "Id": "62d502e8ab1249d4b15aea4d5e9f8779",
      "IsHidden": "False"
    },
    {
      "Start": "d12151d2ee094657852fedb2b689e421",
      "End": "37114c122a6845c0abc18f1a7ed02ce4",
      "Id": "63277d55a2e64eb38449814739c25e94",
      "IsHidden": "False"
    },
    {
      "Start": "d12151d2ee094657852fedb2b689e421",
      "End": "689d348d40a14607b415991b5de9c6e7",
      "Id": "0aebc1254233439ca30480f388b6b8dd",
      "IsHidden": "False"
    },
    {
      "Start": "0bc3c1444acf4317954d79c233cf532f",
      "End": "904e0ffd6f554af99fcf7d4dfcd32f23",
      "Id": "7e3ae491582a4b638a4107e820f5fcfd",
      "IsHidden": "False"
    },
    {
      "Start": "3afa38bd87e74ccdaf7a6a9adbf9b180",
      "End": "e2ba4dbb3aab42919054c92e29da8938",
      "Id": "575c8fe6371147dca9c741284f41607f",
      "IsHidden": "False"
    },
    {
      "Start": "61731da151d044b5bd781a9c669d76cb",
      "End": "744e670f05ab40ff8b9ff7962f50195c",
      "Id": "58b624c248944b7fb63d5497e0fa09ba",
      "IsHidden": "False"
    },
    {
      "Start": "25f3613953ec4ed69889a98895f3a974",
      "End": "69c17b1ac61a4d158b1b17079349aa97",
      "Id": "82673cf8e1d543b1894a1cbce19a7f8c",
      "IsHidden": "False"
    },
    {
      "Start": "8f14e77865ac44eeacf052a84e547952",
      "End": "30648daa460641a693054fbdb7156a31",
      "Id": "f24fb84426b84818909f5e1ec8c4efa3",
      "IsHidden": "False"
    },
    {
      "Start": "83bdc39714b64422aebcf9c9b123d42f",
      "End": "1e64619a2e294af1960609a3488d65ad",
      "Id": "57419b1a11e1429db750f066c78ae2ec",
      "IsHidden": "False"
    },
    {
      "Start": "83bdc39714b64422aebcf9c9b123d42f",
      "End": "dd71a578ed2f47f48da41e308aa201cc",
      "Id": "45022d170ccf4493816668546cc6125d",
      "IsHidden": "False"
    },
    {
      "Start": "61a4a22b30204ebf83c7ae491bed9aec",
      "End": "ed4f3ac1886e480da1c21c1ae6ff4ae8",
      "Id": "3bd19c5fd1e341038cf8cb894236096c",
      "IsHidden": "False"
    },
    {
      "Start": "1b7550e0ab9444769f14a4e283d80caf",
      "End": "434f0ae1ae5a434a9bfe17d0f260ed9f",
      "Id": "8194cf69874b4c05b6e383bc4f8bc355",
      "IsHidden": "False"
    },
    {
      "Start": "1b7550e0ab9444769f14a4e283d80caf",
      "End": "50d9dea7c9d84a909bff6c69c6d47901",
      "Id": "2110809b8ab64360bf2a94ece74433c7",
      "IsHidden": "False"
    },
    {
      "Start": "2ba42a0ac97f4258b4f4786835beab08",
      "End": "dcb641bd63474a56afd817e22970d4ae",
      "Id": "89d63fc878b04a07b5495e9e5c230f24",
      "IsHidden": "False"
    },
    {
      "Start": "70ca07c943a84b8da45d6d0aab95983b",
      "End": "d25c25441deb4fb3affa7daad90b6246",
      "Id": "5fc0dea7e4114eb9919b6112aa91731c",
      "IsHidden": "False"
    },
    {
      "Start": "7161804f927b4c4393f380a40a655151",
      "End": "475b35a9bd7f4724adfd1f83ff88138a",
      "Id": "112942c7ef9a4143bf403cba9e71fd93",
      "IsHidden": "False"
    },
    {
      "Start": "7161804f927b4c4393f380a40a655151",
      "End": "a7cfca0f32314533b4b598765253ee00",
      "Id": "c7edecb7d94d49319d2b55cbf5d22492",
      "IsHidden": "False"
    },
    {
      "Start": "0feb9b70bfa640848396d48141b98e72",
      "End": "0bdb8949b9b74e1cb65c586a83c556a4",
      "Id": "6d4e61ee0ad6446187f51bce4431d714",
      "IsHidden": "False"
    },
    {
      "Start": "b2194f0fe42d4cb9aafb4385e7c45a1c",
      "End": "128e4aaab196445da57d28ab7cf99282",
      "Id": "6226ccbbb2454c70a5b1ae7febe69efd",
      "IsHidden": "False"
    },
    {
      "Start": "3648129e94db4a329a2b3b525d6d53d9",
      "End": "032db6c6fff14954bfc39e4ecd9045b5",
      "Id": "6bc011888ea048d2a81f8bd3a2a71004",
      "IsHidden": "False"
    },
    {
      "Start": "3648129e94db4a329a2b3b525d6d53d9",
      "End": "ea0f529c93274d43bec590c3f009a893",
      "Id": "69f028c82c944f47bbf4cb975db91a24",
      "IsHidden": "False"
    },
    {
      "Start": "64eb087a64204775bffec651e760bad6",
      "End": "2022a16ce30c423dbfe935824082a639",
      "Id": "b43974c231434f81ae5534b564edb7fc",
      "IsHidden": "False"
    },
    {
      "Start": "4192dd9452d840aea935361cf090827c",
      "End": "72dc24e55ff64bac8b97fe0eda1ce256",
      "Id": "57538e838e454850b01766d88fb7fe21",
      "IsHidden": "False"
    },
    {
      "Start": "da6f3377e416472c92247cd716a11b46",
      "End": "9060191f89cd4abbaea27e0ee18497c1",
      "Id": "f651aa471fbb4b309f57a1f30e9ad730",
      "IsHidden": "False"
    },
    {
      "Start": "9dfc364b603548b2ac975ac476b8fef4",
      "End": "98c257cf8302413998a879921931be00",
      "Id": "890128d2ca4e439292eac1b4828f0169",
      "IsHidden": "False"
    },
    {
      "Start": "ac95dccacbde47599e793e9ffddf0532",
      "End": "b0d59878fb73479b87036d4766923146",
      "Id": "4eb416f4d2e645afbe0112343cb48d2e",
      "IsHidden": "False"
    },
    {
      "Start": "ac95dccacbde47599e793e9ffddf0532",
      "End": "db8d9cb7dc144eebbfa12e496c1ad032",
      "Id": "e6e1b0958b2b45298472d7b83bad2fdb",
      "IsHidden": "False"
    },
    {
      "Start": "e17b3ec531694f56b00ca31f2c978716",
      "End": "ef42ae5d20cd4920bcc90498dad82224",
      "Id": "4350c11ecd8c457ea9aa369b9a355de8",
      "IsHidden": "False"
    },
    {
      "Start": "e17b3ec531694f56b00ca31f2c978716",
      "End": "dce410fef03d4ac99568d4d626c0f7c6",
      "Id": "20b31c064fbe4dfe8f705cb521148af2",
      "IsHidden": "False"
    },
    {
      "Start": "541bbe52ab3b47e8b76de2d8fd0b739a",
      "End": "a8af0e9b9eb64f659675af51e24caf3d",
      "Id": "bfa59b3387b6459086376ede028e00e3",
      "IsHidden": "False"
    },
    {
      "Start": "fc3a5aff02b04645852b56ec5184d7be",
      "End": "c956cd291f9a4bc6b03bcebed40d63b0",
      "Id": "c6f4ed09a17c48358450df7a639fdb63",
      "IsHidden": "False"
    },
    {
      "Start": "63c27eecf499439c9ba286b3b2b64b39",
      "End": "5dee0bf517474e98b216154a3ca594a8",
      "Id": "e9ce4246af114c459af8051094066840",
      "IsHidden": "False"
    },
    {
      "Start": "63c27eecf499439c9ba286b3b2b64b39",
      "End": "7575d4a626b74eb0be36bd97fa0b540a",
      "Id": "80049c4b7f174c459d99c57ced5677d7",
      "IsHidden": "False"
    },
    {
      "Start": "b89b6c83188d49f3a3e41d9b220be7c6",
      "End": "882322663b0e43a598df8dceea409d0b",
      "Id": "5220b4e5a0c34220a92acb3fe2263519",
      "IsHidden": "False"
    },
    {
      "Start": "6600920b119b4691adad5188a94a6c2c",
      "End": "2b642778ae7947e3b2d227b5c04e5442",
      "Id": "d3870f8b104e46caadd75601db9003a1",
      "IsHidden": "False"
    },
    {
      "Start": "9c5aeda53c0b4f01972a57482cab1135",
      "End": "d3106d24f77c4361bdc7d0cacf9117c1",
      "Id": "e1e8c0c899e34a358ab818c38f6b33ba",
      "IsHidden": "False"
    },
    {
      "Start": "9c5aeda53c0b4f01972a57482cab1135",
      "End": "4a8e99fcfbdb4289a23ffbc89caad13e",
      "Id": "fc68263f99f244bea4d863ca9dbaf6bd",
      "IsHidden": "False"
    },
    {
      "Start": "d8a7111c8f754cd6a2db4696023c83f9",
      "End": "045e9e2835564daeb6b685b28004e0ca",
      "Id": "2255bc4b5135412c9e06c41d2bb90b63",
      "IsHidden": "False"
    },
    {
      "Start": "65b8bf0976a944ceaab5a437905cb344",
      "End": "3483afb33be54ee4b837b2f0b98421e9",
      "Id": "df76e04ee97f401883e8913469d4ca56",
      "IsHidden": "False"
    },
    {
      "Start": "93cea9f239fe4f4583818a7798f65307",
      "End": "3a89bed2beba4522b73a005ceffb1d18",
      "Id": "dd62f25235bd4b83b5725eb487800304",
      "IsHidden": "False"
    },
    {
      "Start": "3d704fe941eb43b99dce3000430f7709",
      "End": "1876716379384410b57c8a06186b7f19",
      "Id": "8f8b2ee5cb4e41e495d25271aac9c27a",
      "IsHidden": "False"
    },
    {
      "Start": "3d704fe941eb43b99dce3000430f7709",
      "End": "3855f40b35e14e3684c2b9f83e0f31f8",
      "Id": "4b23b14ea4f345178d5ec3cde48ff460",
      "IsHidden": "False"
    },
    {
      "Start": "f7558495ebe0479fabc8d06470c677db",
      "End": "e100787a093944b9af5b7d3054ec3546",
      "Id": "58d8fca741bd40f382d4d57e02ae87bf",
      "IsHidden": "False"
    },
    {
      "Start": "ab42a06e0e7741c1b0a4574b5948b9f5",
      "End": "afb24606c5584214a415c7bf25757883",
      "Id": "4ba36c7be3d7465bb311a054f0d291b9",
      "IsHidden": "False"
    },
    {
      "Start": "8b890602266341949c15a852f4bf57e7",
      "End": "3413d0c3ca7f469abaddf99aa5eb1aa2",
      "Id": "63f6150d0099472992e35c5ce67010db",
      "IsHidden": "False"
    },
    {
      "Start": "8b890602266341949c15a852f4bf57e7",
      "End": "432392c4a11e4a53a391ddbd96b28acb",
      "Id": "c20961b84aa14cd29c415a762246eeac",
      "IsHidden": "False"
    },
    {
      "Start": "28287eb739694e0b882b36d09706526b",
      "End": "86fd7b80c9554c7eb1e218a91fb57c3d",
      "Id": "3513a1b73b664aeda982d32bc94602a3",
      "IsHidden": "False"
    },
    {
      "Start": "28287eb739694e0b882b36d09706526b",
      "End": "d5a0a557912c466c89a37dd8826b53ed",
      "Id": "a8869ce741b44d3f9342d569e9d3bf19",
      "IsHidden": "False"
    },
    {
      "Start": "28287eb739694e0b882b36d09706526b",
      "End": "c9fe31f87824474aaa1acdb74741d050",
      "Id": "a6cf479f1f0a49ab9472f9e4d9b1dc61",
      "IsHidden": "False"
    },
    {
      "Start": "8b458115f05a4b0d9971d194f601bc27",
      "End": "121cd94f0d7a4b8d9f8a9dcf669d2219",
      "Id": "d00ce7a758ed4f3687aa67073cb6bc48",
      "IsHidden": "False"
    },
    {
      "Start": "b0670d1d70214a7cb723babb36b16cec",
      "End": "36a80db822a74ad2b31c7851ccd4294c",
      "Id": "28d1dc31357a419e805392b74463e103",
      "IsHidden": "False"
    },
    {
      "Start": "f108496ee0a14a44812634f85e2497b8",
      "End": "ec8fd40c7b9a43f4a5ff5a6907bebc28",
      "Id": "139f0c024eaa45fcb08b101ab908a754",
      "IsHidden": "False"
    },
    {
      "Start": "18c30fc2258d442a87982aed7afd7774",
      "End": "403fad727fd54e929496d91bf8983acd",
      "Id": "c725c89e6e01411880f646e162d3f5e3",
      "IsHidden": "False"
    },
    {
      "Start": "18c30fc2258d442a87982aed7afd7774",
      "End": "0f0f3d30f56344dfb6a5853a3e0846d0",
      "Id": "6269f2db6c0f4fdaaf73e3af3a4a420e",
      "IsHidden": "False"
    },
    {
      "Start": "be67f2dc6e474cde895091265c7727bd",
      "End": "507379347c0d4bf2b36f6d2330c34932",
      "Id": "374021ab12024b7fab73dddbbde2d07b",
      "IsHidden": "False"
    },
    {
      "Start": "330650128dfe41a1843179775ee0eea3",
      "End": "747c210376ad476eba42505543753648",
      "Id": "5826c84d798544f7ae7106913f66ced8",
      "IsHidden": "False"
    },
    {
      "Start": "a25c3686d38d43c189c2a3de0a5bd0d9",
      "End": "109e4c1b0aec471d9245a523715fb1b8",
      "Id": "85e0db43ffab42f88d475b8faab7ee9a",
      "IsHidden": "False"
    },
    {
      "Start": "a25c3686d38d43c189c2a3de0a5bd0d9",
      "End": "ca2d4f36135e4aebbc8d26481167706c",
      "Id": "c007dd130576474580b5f13a909d9118",
      "IsHidden": "False"
    },
    {
      "Start": "e20ad14d25c24d659cbc4b36786229c7",
      "End": "b1c5921e131540409abc64272ad8d3ce",
      "Id": "fef1495f18a34e319e773041e714c533",
      "IsHidden": "False"
    },
    {
      "Start": "5bd21ce3b6c44790aa75a347a23a2e7c",
      "End": "2e384512b3dc434e8cb6c9f9ca95ae4f",
      "Id": "a07f339d4ca5425687c285f153e39dd3",
      "IsHidden": "False"
    },
    {
      "Start": "ac4742369f204f0f950af825c8f5218c",
      "End": "3e1067570d564e18914cc4f9d7bf7c67",
      "Id": "733b48d5b8864be2b2c818f1d13a1a16",
      "IsHidden": "False"
    },
    {
      "Start": "549e9713401d4ed1ae42ac46c84a42f3",
      "End": "6a06db0caf364bec84162eeb26fecb8b",
      "Id": "3d48589039d944ecada0d44088681ced",
      "IsHidden": "False"
    },
    {
      "Start": "59a5eb22e07947f0ba97ca4722e6a65d",
      "End": "9e8bf0495a674c52a723e95fab68f07d",
      "Id": "32c755989b514212b8466b479a696694",
      "IsHidden": "False"
    },
    {
      "Start": "97c9e9fd87bd4c809b397e9a0c33c521",
      "End": "a2cd323a536e46baae3dab840fd52ea2",
      "Id": "a3a4527e99424e7490f144f686099a61",
      "IsHidden": "False"
    },
    {
      "Start": "6862b4c696804498ae1b959453f714ff",
      "End": "b0b1c0dab9e347c7b6766a8658e00bbe",
      "Id": "db69f164d8f349d08ee97537f2f34116",
      "IsHidden": "False"
    },
    {
      "Start": "869b8f1a515a4aa5a7301a1063543726",
      "End": "f5f08716298740b29aa7604b8da4db46",
      "Id": "f1d7dfc1ab464b3780f89a419fda5d99",
      "IsHidden": "False"
    },
    {
      "Start": "869b8f1a515a4aa5a7301a1063543726",
      "End": "650cdeec68314d7b951c6f7cfbc0bf8f",
      "Id": "ac8fed917fc1401eaa108a3d8a034206",
      "IsHidden": "False"
    },
    {
      "Start": "0963699b494e4f0bb85d6dbca2b5db8f",
      "End": "cff9e595dc054f41bda80cec38f7de90",
      "Id": "cc8e4f970f2046cf8369785c759f4760",
      "IsHidden": "False"
    },
    {
      "Start": "182bb50ada0a45e49fb3ce9d3a568ed1",
      "End": "93ca85a2c24c41148e463f5fb2ca4d38",
      "Id": "191bf00be90e4ee6b51f23512a25f9c6",
      "IsHidden": "False"
    },
    {
      "Start": "1d3ceb19f9824b4ba624004c9ec10d95",
      "End": "293aead620184141b0f18134cb2282ce",
      "Id": "805feff07a644a238eef8df838a3e429",
      "IsHidden": "False"
    },
    {
      "Start": "422ad1089c614f3b8f66a4d1ad0ac21e",
      "End": "2b757139c18c4a16af723e53d73fca6d",
      "Id": "3fe0b6575070425689d0b4a02aaced87",
      "IsHidden": "False"
    },
    {
      "Start": "efe5cee88d184f2c94d0d28927ec963f",
      "End": "0000a3159d344665937caacbdd70e5e8",
      "Id": "655afe884df04cc3b4ce82c68ff87255",
      "IsHidden": "False"
    },
    {
      "Start": "66f22a0be1d34ce0a8de693de83a400d",
      "End": "903189e681184096871f2ed14211ec17",
      "Id": "9429aaa3260b424792897b9617d47678",
      "IsHidden": "False"
    },
    {
      "Start": "66f22a0be1d34ce0a8de693de83a400d",
      "End": "c511bda768304ac993d86ea50bc940c0",
      "Id": "862cbcc0e303465bba74f992865f6b11",
      "IsHidden": "False"
    },
    {
      "Start": "66f22a0be1d34ce0a8de693de83a400d",
      "End": "cd99117ddcf54c7b9c66e3ee49f6ad6f",
      "Id": "8d1f27e49cb741e7825c426faf15ede6",
      "IsHidden": "False"
    },
    {
      "Start": "07cc4b5fe0fa4c36ab2613bf4dea3e54",
      "End": "c24efc03ee064c4f86f49af1d0d12de1",
      "Id": "cde01dfd6d964f338f8598f0fe55cc87",
      "IsHidden": "False"
    },
    {
      "Start": "02df9f24587441f9beb1ced60b9bbbb2",
      "End": "b7d8a2d7bbd94c829fd1b7cb01594a81",
      "Id": "194eabf5cc5444b285603a3a1b9ae87f",
      "IsHidden": "False"
    },
    {
      "Start": "585eb0665099498da5f4e109cac90f7b",
      "End": "96f6262046f14eaabc7705e68dc2fe8f",
      "Id": "a5c33a7073d748c998a751689a1932c9",
      "IsHidden": "False"
    },
    {
      "Start": "3999b2c8395d46728fc3222a614787ad",
      "End": "7decc30c2bf3417eb0902b58996aeaa7",
      "Id": "7e8b32a14aa940b9a1031d600e631450",
      "IsHidden": "False"
    },
    {
      "Start": "37378cec7b01418394da5979e4024bb3",
      "End": "8de0a53ec28d4857bd2fb6ac4def0bc9",
      "Id": "94a17d87cc0a4f4eb516537a9d495ee4",
      "IsHidden": "False"
    },
    {
      "Start": "7f7137be9d1445679e3090596b75ae68",
      "End": "579d55c2747148ac97fd4477ce97e2f9",
      "Id": "705fcb9f8ed14d45877309dd94446d48",
      "IsHidden": "False"
    },
    {
      "Start": "e30ea911ce764d25821708ebca85a1f5",
      "End": "20740709f299473ab2d5dc3a33219307",
      "Id": "760bdd62b68244c68c1107b2f100c9a1",
      "IsHidden": "False"
    },
    {
      "Start": "cdb68990b91348479fb6d6731259b743",
      "End": "f43fb316706d4c0490059796de6eeced",
      "Id": "33a6803a8fb24d29a5f4c6d8e4fb6001",
      "IsHidden": "False"
    },
    {
      "Start": "97749d3f34c74f6fb571f23e3f223b79",
      "End": "e4325db3b0344b33976e87ed45156b48",
      "Id": "6f9d096e0d6c4e4395a3fbdb96aa5752",
      "IsHidden": "False"
    },
    {
      "Start": "21d2a497438042fd961a8591ff30918e",
      "End": "1c043d6986664fd18ee3ece88e330c8a",
      "Id": "1091105a0e274cdaa2a790a5c3bff836",
      "IsHidden": "False"
    },
    {
      "Start": "abdd0f989eef4261a0a623981f2cb20a",
      "End": "b05a163b5916426f9e0f6a1ae79f67b2",
      "Id": "2f666d5f5170452081950eba31cd081e",
      "IsHidden": "False"
    },
    {
      "Start": "69bec2400a8b4b23867e91443a55a4ac",
      "End": "5b0f2af69c9642a9b7816aed6545aa93",
      "Id": "0c832b82def24cf6bf008de335d5805e",
      "IsHidden": "False"
    },
    {
      "Start": "69bec2400a8b4b23867e91443a55a4ac",
      "End": "d5f8a7ff6fca46a6b16ecb6db8579745",
      "Id": "005608c381da4a8fb0525f5f60f957f4",
      "IsHidden": "False"
    },
    {
      "Start": "69bec2400a8b4b23867e91443a55a4ac",
      "End": "ef4a7c926cc2427da2341e46a5295a59",
      "Id": "efc7dcba06374bf38e7d02e4108ff8f2",
      "IsHidden": "False"
    },
    {
      "Start": "3171b2f32a5a4b56b5bb26e14d9cc2e8",
      "End": "13b42f3a25e54096a51e5eb07b73799f",
      "Id": "c229c852d961477dab558989fcdf0250",
      "IsHidden": "False"
    },
    {
      "Start": "3171b2f32a5a4b56b5bb26e14d9cc2e8",
      "End": "c2374916aeaa421ebf833120c374a989",
      "Id": "d034943b126e4f06bfe76d9e4d6a1edf",
      "IsHidden": "False"
    },
    {
      "Start": "3171b2f32a5a4b56b5bb26e14d9cc2e8",
      "End": "afc57b372bab49e4b7e7d469b2ec5464",
      "Id": "e55b434356fc4395b324e3e7b1b928a0",
      "IsHidden": "False"
    },
    {
      "Start": "ed4a1e9eab1a4a82b23277ec309ce85a",
      "End": "dfb92d1e78a8448f9560f953259d8273",
      "Id": "456c84a6d46542a29dad99ad4ee6ab43",
      "IsHidden": "False"
    },
    {
      "Start": "ceb1b4b49cd849b3b30124e5932e7e90",
      "End": "19f063f97ebd4da4a14cf597fd2ecadc",
      "Id": "e3e4372c35e846f88c85da141370b171",
      "IsHidden": "False"
    },
    {
      "Start": "b24db763683c40d7a8ada08fa27b3f64",
      "End": "9a7ad47f66b74c2c814ab61b6a2e472d",
      "Id": "a14a58b05b4e4c03b05ae7175740995f",
      "IsHidden": "False"
    },
    {
      "Start": "9d9b004949a746ae9709796b41c80e87",
      "End": "3250667b21eb40b4a8275fe6712e8350",
      "Id": "24739903dc2c4980bff9999306ce5085",
      "IsHidden": "False"
    },
    {
      "Start": "30e7830302234e8a8b865a86f177f745",
      "End": "a8847ef771484602809b6a626594f605",
      "Id": "7ec12e604e6d42c08a933ae2a44b1dfa",
      "IsHidden": "False"
    },
    {
      "Start": "62dcbe32f81b45aebf2ac92abd081645",
      "End": "d2c2126684dd4ffabf28886377a13f7e",
      "Id": "97cca2524fe546b495f46f1d9c9bec03",
      "IsHidden": "False"
    },
    {
      "Start": "7ce1393e28d54e28b6af07b24a67849a",
      "End": "41784205f4794374933487601a94f1c4",
      "Id": "90a03d838cae4a68bd0b79b4801bd3c4",
      "IsHidden": "False"
    },
    {
      "Start": "66aabf13cb274fc6831130d6dc92fe2f",
      "End": "1494437d5e7a4416a2d1efebdb72da22",
      "Id": "52a77db1211141fbbe95020c2f807475",
      "IsHidden": "False"
    },
    {
      "Start": "5ab58c64cbea41489518438b3a61f85b",
      "End": "4fac252eab0245c3a1a28dad512a54f3",
      "Id": "328eff6fc0844b3b9e19cf9fa53a0505",
      "IsHidden": "False"
    },
    {
      "Start": "5eab3e259e074ff3a3d1176be055dd50",
      "End": "6ce3f01837e54390921a9ddd97da4933",
      "Id": "1cd022f0735f4a539cc5fc9aa71e8fd9",
      "IsHidden": "False"
    },
    {
      "Start": "b5bc3fef50514ffd853810ddbcec0255",
      "End": "35a6239e37974c39ade35eab18b1de23",
      "Id": "b78be57c167a4d819c70c5e838772c57",
      "IsHidden": "False"
    },
    {
      "Start": "309bef206bf94f61991eb3572d689507",
      "End": "5e607fa26b5c417d81662893fb508839",
      "Id": "3ceca2da707241428c6913bac515f4d3",
      "IsHidden": "False"
    },
    {
      "Start": "80a0b6c1e2d04664b47ce3b686b40352",
      "End": "5b758a083ab5444280d73af9483f1ab5",
      "Id": "b220c465a7ad485da88df0f85886aaa9",
      "IsHidden": "False"
    },
    {
      "Start": "22757c66a70848edb7886f774059a0d9",
      "End": "3abe459bf84e4e7684e5ed488cdecc5e",
      "Id": "c1523587064c436c9eae1137a1f09b03",
      "IsHidden": "False"
    },
    {
      "Start": "c085008e3ad9429191689cb03cd08367",
      "End": "d872ea801b3a437d825f06b2c8887cd2",
      "Id": "83882a30d6fa46d3b51e77d7a471995a",
      "IsHidden": "False"
    },
    {
      "Start": "c085008e3ad9429191689cb03cd08367",
      "End": "1c2ac1d34eec4f94b290e250f6ab5821",
      "Id": "5ed7985b0283474e944968cda93b1e2c",
      "IsHidden": "False"
    },
    {
      "Start": "2b656519a9f7420ea132e4f39a839d2b",
      "End": "feb2178acb354d318bb4e5484d6d5eb6",
      "Id": "4059f0d5766042f6b3edbb512e346732",
      "IsHidden": "False"
    },
    {
      "Start": "75cd527719ea4ec28d2745df7a11957e",
      "End": "c23498be1fe0445398d37618e21dd21b",
      "Id": "480bb62dff9b40f3b5470022175437f3",
      "IsHidden": "False"
    },
    {
      "Start": "22867cd1013e4b1f8371f333968b43ce",
      "End": "686a10dc43094316a237d48633007741",
      "Id": "29ce4e85aa024ce58b861cbf5c57d285",
      "IsHidden": "False"
    },
    {
      "Start": "22867cd1013e4b1f8371f333968b43ce",
      "End": "782de154a1da4e6791724066cb9394ec",
      "Id": "eacbd14b94d14149a9281700bdad7ab7",
      "IsHidden": "False"
    },
    {
      "Start": "5927d8743c764306ac760524ec7422ca",
      "End": "948f1294d7de4619b84bce9244d40619",
      "Id": "ba5f744627424e54b3fa7cf97f3c14b7",
      "IsHidden": "False"
    },
    {
      "Start": "d5c467e992694657b681d38ab6eab62d",
      "End": "961e1e66068a4e0e8f3301baccd11904",
      "Id": "d940ffe95fe74d7a8903f21aceb97d31",
      "IsHidden": "False"
    },
    {
      "Start": "4928b35f39dc450196f83929b8372f39",
      "End": "36f1264e4ebb4b318badf2ff08b86277",
      "Id": "3ff3db4a576f4004aff08deb9f031981",
      "IsHidden": "False"
    },
    {
      "Start": "5189614c8d804438875afa55c72dc6a0",
      "End": "288955b0a6a84dfb9cccb94b43937dc5",
      "Id": "b81e3ab188434166b4b4893660c0643c",
      "IsHidden": "False"
    },
    {
      "Start": "c37d56958a434e9088bb949ea419a10b",
      "End": "bfcaa39d07a94c139be1b1b49bd5e2ca",
      "Id": "ff4d02dd2df4412fb8c88ae59b62d7b7",
      "IsHidden": "False"
    },
    {
      "Start": "4356ebed67e24372a685e76a74679fde",
      "End": "6c5f0c9b674849359a39ccecd438ed69",
      "Id": "5aed685a2637447b9330843f07d4e943",
      "IsHidden": "False"
    },
    {
      "Start": "45f1167bbd7a4635b4051f854c60ce78",
      "End": "8151d2f4ad4a4d85af9dfddbe1effcdb",
      "Id": "db7070ac341a4058acd6e74dc91880fe",
      "IsHidden": "False"
    },
    {
      "Start": "2c6462b189914a8491e455a59e4cfe02",
      "End": "0b5aa54b9c5145698a99be2309cc5b6f",
      "Id": "285fe4b015514a0fa92ee574b9a460d9",
      "IsHidden": "False"
    },
    {
      "Start": "95adec44d3fa4f1597902b21d5663bdb",
      "End": "5a63eea43ddf42b2b21d8668740357ab",
      "Id": "b18aa54e48aa4c94a155e77ac11220a5",
      "IsHidden": "False"
    },
    {
      "Start": "61a0b995174e4e60883e8ed1ce612e2a",
      "End": "2e5bca53b9434dd78b90f8c789bb15c7",
      "Id": "8430d5a47e3848b7b8f7c7be4e02a284",
      "IsHidden": "False"
    },
    {
      "Start": "e33c0dc4cc9d4bcd8e0a273b5b6e0f5d",
      "End": "cf4f0cce8ef84a7cad17b143033c26d5",
      "Id": "940f9f20951741748e2fa1b4fb6dcbf9",
      "IsHidden": "False"
    },
    {
      "Start": "ca9871387ff449b4898670019eadb910",
      "End": "5c71592fc6434cb3861a22246322a992",
      "Id": "693faf2d84fd402dbd4325d17892da54",
      "IsHidden": "False"
    },
    {
      "Start": "12ff83af28d84f809057a727ebf9709b",
      "End": "f7d2a06fc94c43a28d0d3faa8e3501bd",
      "Id": "f521870338aa4997a082346415dbb17c",
      "IsHidden": "False"
    },
    {
      "Start": "346a8bb0985345e0b1673e5a5c7af0f0",
      "End": "d0df1d1b85984819bb96349e6987112d",
      "Id": "383438179fc04191b8741d71d48c2368",
      "IsHidden": "False"
    },
    {
      "Start": "689dd8ca58c6490e92424fa872fcb973",
      "End": "506378934e844adaa953506c4a2b7060",
      "Id": "8e5f507ee88f4414a0182468646063dc",
      "IsHidden": "False"
    },
    {
      "Start": "689dd8ca58c6490e92424fa872fcb973",
      "End": "b0ab4c8c9e044e089e966a092a09119d",
      "Id": "461664acf95342ee895c96cf8a6b0be9",
      "IsHidden": "False"
    },
    {
      "Start": "689dd8ca58c6490e92424fa872fcb973",
      "End": "1610975b84904941b92940be5a7a6328",
      "Id": "53caf4e35a57445d94088db381925176",
      "IsHidden": "False"
    },
    {
      "Start": "689dd8ca58c6490e92424fa872fcb973",
      "End": "827fc81f30f5441a8d0b9b8ac50a6691",
      "Id": "b23426ae217c4f4681b8a4ae9cd1e00f",
      "IsHidden": "False"
    },
    {
      "Start": "0dfaa7128a3349fe9c73ee96906c1bbe",
      "End": "0361dc916eac4251b68a6597e0f208de",
      "Id": "609593148fc64c8abf1cd393aa47f1bc",
      "IsHidden": "False"
    },
    {
      "Start": "fc830761581747efba3fb5719d0ad762",
      "End": "bd9b4dab34d744c59fcc49e99e003ef6",
      "Id": "7374a4d7db8c4f6e922be7718ee88c57",
      "IsHidden": "False"
    },
    {
      "Start": "fc830761581747efba3fb5719d0ad762",
      "End": "f091ffe800734ab7b9947d43373ce13c",
      "Id": "41fd53703dba4536aa932284d4879cd1",
      "IsHidden": "False"
    },
    {
      "Start": "bd366302a7294889aa4e881e94aa524e",
      "End": "a98a011ad4fb445897cacdcae418db83",
      "Id": "9c514f4ddc194e4096b2f12cf9392405",
      "IsHidden": "False"
    },
    {
      "Start": "a08f458ac05d49979c4960ab8854796f",
      "End": "98910c80b7b34b699f1eba00b193c0d7",
      "Id": "07e9109380e2456489ae89c1375a9c2a",
      "IsHidden": "False"
    },
    {
      "Start": "907bdb6bb5ee4cf5aa390800502ed0e3",
      "End": "cb42b11068f441408daee1a712423c3f",
      "Id": "9010617a941343deaa599eec6be447a6",
      "IsHidden": "False"
    },
    {
      "Start": "4162c3ab5da84061af0229edad1936c1",
      "End": "389bd9a2576a43078a0d6bbcb43a31a1",
      "Id": "04a356a7dae9448ea78d9f64831b10e9",
      "IsHidden": "False"
    },
    {
      "Start": "1c7cd2aded294014923d8afe91174a17",
      "End": "6934e74004ac4839ad5d6401a40c8e9b",
      "Id": "923406d5597640c4a6dd6a739aed30c3",
      "IsHidden": "False"
    },
    {
      "Start": "cd77d69befdd45be81f54ec4f6474190",
      "End": "1ca8255c30ab4e48bcf20241ea1e7d63",
      "Id": "1bc73a4a6f374e4ba4015564af903d5e",
      "IsHidden": "False"
    },
    {
      "Start": "1d007793538a4e53a4983b78f37ef076",
      "End": "beabc14a6ff44855a73e90ff124598bf",
      "Id": "c7eca939a100431a8cdd20fe559c4814",
      "IsHidden": "False"
    },
    {
      "Start": "665a59ab127d4a42b2c532755503f92e",
      "End": "d348eb456055444f9064ecf7ab300810",
      "Id": "2f460ea0640640d686738e54fa761ea2",
      "IsHidden": "False"
    },
    {
      "Start": "87bad210aa2242c49a6a0cb37d4ed590",
      "End": "97b475bbe558445dbf10546793f612ca",
      "Id": "3d1ea34721884e498803d4a171cd5799",
      "IsHidden": "False"
    },
    {
      "Start": "52c8c464fc284aeea7dfba65123693cc",
      "End": "87d460f9bc7e4df48c4842111dc47890",
      "Id": "b2efdae2b8f74d7da5c861dfa4a636ae",
      "IsHidden": "False"
    },
    {
      "Start": "4fe8580a084843348da610b5c028ea3e",
      "End": "fb91dceea65e441f8e883348b9f125a9",
      "Id": "edbcb09c93e34c6da551411ae2985cc3",
      "IsHidden": "False"
    },
    {
      "Start": "97b6c76323474df398bd7731b482ded0",
      "End": "e7a2ed93db924b0aad90fd8db4eef5f3",
      "Id": "4161a7f1316146d4b0ba75aaf4a52851",
      "IsHidden": "False"
    },
    {
      "Start": "57c8749f4e5b4f119f34a3c037c1e262",
      "End": "2231da761e534e41bd7c89d21eff12e6",
      "Id": "aacd428929be4a24b2ed2f862990ac8a",
      "IsHidden": "False"
    },
    {
      "Start": "f8e5db513ed34d99b7c0f205888408dd",
      "End": "5e3465e721e74ec39f0fe379a78976c6",
      "Id": "8a252451e2bb4c5ab613e24200085634",
      "IsHidden": "False"
    },
    {
      "Start": "f8e5db513ed34d99b7c0f205888408dd",
      "End": "52c887c2e7b244fe9c579a6eb0dcff4c",
      "Id": "32cfdba9763848d3967e9c1bbf3acdac",
      "IsHidden": "False"
    },
    {
      "Start": "8344e85be24449d19ba5359bd665d954",
      "End": "7ba90a55aa4d4d379ad76d9b32e9941e",
      "Id": "5b1c0e6fae05453fab991b26e813c3f3",
      "IsHidden": "False"
    },
    {
      "Start": "838d553e68424fdc9004a4984fdeb188",
      "End": "d9ac9a105bb2484894b88df3e310ec01",
      "Id": "7d69f5d4886d4fae8f19b2bc0d565448",
      "IsHidden": "False"
    },
    {
      "Start": "838d553e68424fdc9004a4984fdeb188",
      "End": "3f7eb1eb9d7d4135914ce71cde9f987c",
      "Id": "f9e6ccc164bc4f8791bedb100b85debe",
      "IsHidden": "False"
    },
    {
      "Start": "838d553e68424fdc9004a4984fdeb188",
      "End": "636f338f30814c5f9eddd25d9b9a7512",
      "Id": "62203b09535a4588a44a064ecbae648d",
      "IsHidden": "False"
    },
    {
      "Start": "99d25fdbec034681940ca67a63a602a1",
      "End": "5cd496bd51e44e73947ee33308c862dc",
      "Id": "371ef744fee542fe86f3bb643ce47158",
      "IsHidden": "False"
    },
    {
      "Start": "99d25fdbec034681940ca67a63a602a1",
      "End": "e3fb9a01907843609cd03cdfa5b8c09d",
      "Id": "7e205a247ed042af8f0076a1cd7ffdc9",
      "IsHidden": "False"
    },
    {
      "Start": "8f563c1cce3a488aa28c9301e0d5df4a",
      "End": "138f74cd65d946af8e936348db1490db",
      "Id": "489a631147b34892bc09876126a7209f",
      "IsHidden": "False"
    },
    {
      "Start": "b0627cf779b748b385ddbc5b1ef611d7",
      "End": "5eee126b19074223a196d2a6e42ed549",
      "Id": "4674749bc40e48aea94824c8d88fe0cc",
      "IsHidden": "False"
    },
    {
      "Start": "8ba9e6a21b0b4e87bb1ec147ac9e12cf",
      "End": "e00fd335c628416fa9d546dda19571a5",
      "Id": "04938c2e8eaa468c9121e64428c08ee1",
      "IsHidden": "False"
    },
    {
      "Start": "8ba9e6a21b0b4e87bb1ec147ac9e12cf",
      "End": "c3214195ab1f41f5aac268c2c2069e14",
      "Id": "d18467e5647e4eb5a29d4a4d2d03ac2a",
      "IsHidden": "False"
    },
    {
      "Start": "dd3b58d5b635425888559a20c32b7ded",
      "End": "2ff2787fc49642f58b3670151c2e6ed2",
      "Id": "67c8e54164fa4359a5763186363e5854",
      "IsHidden": "False"
    },
    {
      "Start": "dd3b58d5b635425888559a20c32b7ded",
      "End": "b54277243a72452f9d11f9ba9c4053b2",
      "Id": "ac2133b091ce4c0cbe7edb0cfbe2c8c5",
      "IsHidden": "False"
    },
    {
      "Start": "e172cfa4592d46679c51751587535583",
      "End": "f79e177a008f4a93b5857a670fa3fcdc",
      "Id": "c65ebb2d60e8416498c1bfa34f0dcafc",
      "IsHidden": "False"
    },
    {
      "Start": "801fa54ec9e64172aab38d67149d50c5",
      "End": "46a4d82bded74200b6938e2489bb76ad",
      "Id": "b1a474d8ba4043128e8b93412427c9b8",
      "IsHidden": "False"
    },
    {
      "Start": "85dea35b0c9f4b4093df10dc2d8bf32b",
      "End": "b76e4cf46ea6491a810422fa7009dba8",
      "Id": "461dd26e86b74f508aaa72a1a9a0f4f2",
      "IsHidden": "False"
    },
    {
      "Start": "e6199b6167e04e409888312fdeb8b759",
      "End": "3c26cae4d0b240eaa76a7da2bd54696b",
      "Id": "664a5ee0fa6841b9bf2f2be729ef44ad",
      "IsHidden": "False"
    },
    {
      "Start": "3319d03ac6164db3a99d052426e17211",
      "End": "7e3c190874574fa9a0de960f05e34aba",
      "Id": "3858a09cb7c14f1886e001e88218e250",
      "IsHidden": "False"
    },
    {
      "Start": "712d9ed76a0e450bb65ee773e5e67119",
      "End": "bd49f498d0a84d618252cb9ce8756924",
      "Id": "df6331cc5bcf45cbb210c541de30ef83",
      "IsHidden": "False"
    },
    {
      "Start": "2da1cd6a75854a2886d4dc28622b496b",
      "End": "b919813c5001441a84cb1d7cc3639897",
      "Id": "76d4a275b6ac4bd88b2ee72e4e315ea4",
      "IsHidden": "False"
    },
    {
      "Start": "f111d2c8ce0a436392c86ecd36ba0105",
      "End": "1508ee4fa2f141f2aa979eebe3a68005",
      "Id": "609920043510477780e56753b9b70361",
      "IsHidden": "False"
    },
    {
      "Start": "9b3b8bcb3a0548de98e47c78b9a64f43",
      "End": "322a9c8cd79547bd847a5681228ff87d",
      "Id": "9b5376bc5dc44a32a0317d2101a88dd2",
      "IsHidden": "False"
    },
    {
      "Start": "445f5b4b4ca94022a85a021ef372e12a",
      "End": "b0a1b24da42d4b9db1bdf44830d46bc0",
      "Id": "78f05cfad5c146cb8e04e415db7f77ea",
      "IsHidden": "False"
    },
    {
      "Start": "bd0852b4af1f413e9ea3bc16b07f12f0",
      "End": "b3ca44077ff2492fa054373bea30d4f0",
      "Id": "8706e8aa647043e58a40fea63d15b2be",
      "IsHidden": "False"
    },
    {
      "Start": "d5c528c0a4254826baaf7743ece60932",
      "End": "b28645e5a7054ee6a283c5c26e3d8edc",
      "Id": "5ca1d2ca9c3f48dd98c41507b84277fc",
      "IsHidden": "False"
    },
    {
      "Start": "b66f2b265a104d608d30236c4977a603",
      "End": "ba6efc3d43be404e8024deb8f089cba9",
      "Id": "cfe201eaadbc4841ab1a222058e766be",
      "IsHidden": "False"
    },
    {
      "Start": "c601e589d50c4309b35c320b7d2be7b0",
      "End": "6e9fef6b508f48a4ad3bc9f41b321edd",
      "Id": "d07186f8008744089a0740450d274923",
      "IsHidden": "False"
    },
    {
      "Start": "5f820f10109b4b4bbf6c8a6c45e52331",
      "End": "22ec0b1144734523ba7da4899495ec69",
      "Id": "683f163430d54737adba88e5127d375b",
      "IsHidden": "False"
    },
    {
      "Start": "e5d729fe0fcf43eb96ea164c90983280",
      "End": "b59e7a60a43d4be59c0d9a4d1b66b6f0",
      "Id": "2ab957699bf54111ad7e1464807cfb6d",
      "IsHidden": "False"
    },
    {
      "Start": "e5d729fe0fcf43eb96ea164c90983280",
      "End": "33fb28695f134cad89077ad261bbcd7a",
      "Id": "85ee84327d1042f295beeb22f75e6739",
      "IsHidden": "False"
    },
    {
      "Start": "51af3598af9b45fd9c167d60c76975b6",
      "End": "9fc23f3fb35044a694129697eaa9e3ab",
      "Id": "fefd0ee335b642a3a45c8cfc4b05e3db",
      "IsHidden": "False"
    },
    {
      "Start": "615a331ef52245ac9eb06c3faf0f306c",
      "End": "f4afa033c973485098dae4f430743173",
      "Id": "541cdeba4eb04b70bbd2c1901f469bf4",
      "IsHidden": "False"
    },
    {
      "Start": "615a331ef52245ac9eb06c3faf0f306c",
      "End": "a6e33c640431445cabb8ebc8be0c5402",
      "Id": "2780be071d854b57a7f966d3742ec843",
      "IsHidden": "False"
    },
    {
      "Start": "86e96df65a8b42babd624f5d266fe8c9",
      "End": "c1b0f541c71c4e9898a021537eb568bd",
      "Id": "c3b13fbf9c664dfc960f1605016b6658",
      "IsHidden": "False"
    },
    {
      "Start": "86e96df65a8b42babd624f5d266fe8c9",
      "End": "afed36b3c2a74d0ca6c252d21cfaf2a8",
      "Id": "a40142274dea41db8bcb86f1cd2eccf9",
      "IsHidden": "False"
    },
    {
      "Start": "a2ba1fb8854245a1905ff142771d9a29",
      "End": "3fc2b071905544878adb4fe489a5db8c",
      "Id": "33cbfce986ab4b30b822a43fbcb2aa07",
      "IsHidden": "False"
    },
    {
      "Start": "a211ad05085b46e983b117fac03d28ce",
      "End": "8556649b387e42c7b15f1f78647f127b",
      "Id": "f10949c9145047489fac498f44d1265c",
      "IsHidden": "False"
    },
    {
      "Start": "031282ec0f2d4ef9ae0fee979968a6ee",
      "End": "57bb33043df24e03ae293787b8dd3467",
      "Id": "fbf24b87e91b4170b613f924daaf0d20",
      "IsHidden": "False"
    },
    {
      "Start": "031282ec0f2d4ef9ae0fee979968a6ee",
      "End": "ed3dca53becd42699906cbbc136bb379",
      "Id": "8e89075abe114c5981597464a3a6f057",
      "IsHidden": "False"
    },
    {
      "Start": "5fa9f428d9004692a7c7a57b42d48619",
      "End": "a8f2022c8d0d41acb9482afc5066ac3c",
      "Id": "a58342ef658744d18e1566dfcdb600f5",
      "IsHidden": "False"
    },
    {
      "Start": "a994e5ae3bf64928b194e455896390fa",
      "End": "ae63897570d44d6bb89e2dd34cee2fc8",
      "Id": "c972714d423c4cacafb2b3a8c6c6ba06",
      "IsHidden": "False"
    },
    {
      "Start": "083ef7cc18a44432b7945d1a98ea17d9",
      "End": "6f560bf05fa24151a08ea9609ca2f94d",
      "Id": "1d51ae60ee3c4181904182153a70d369",
      "IsHidden": "False"
    },
    {
      "Start": "59abf6d3aeb74c53a67a7c9ff992e245",
      "End": "a3ff36ac4d3c451cbcf5a58d43e4389b",
      "Id": "f48935b61a8944ceb8cf21dc16d6a22b",
      "IsHidden": "False"
    },
    {
      "Start": "579ef6f3aad44a3c91fbb12ec20bcd65",
      "End": "b95e2b5a43614f0197ecd299ab84bb84",
      "Id": "888f4066fdb843d59344e0eb2c391b3d",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "GenerativeDesign",
      "Version": "3.0.16.0",
      "ReferenceType": "Package",
      "Nodes": [
        "539234cae11348c897766d331db66ae2",
        "7ab372cc48be43a18aa30f85da26ece8",
        "9e21598964074ca8ae34d3ad80c498e5",
        "ef9fde01f0f845b88905649120546352"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {
        "DefaultStudySettings": ""
      }
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "Generative Design",
    "activeLinterId": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
    "warningCount": 0,
    "errorCount": 2
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -37053.70703125,
      "EyeY": 7110.35546875,
      "EyeZ": 1206.6015625,
      "LookX": 36444.75,
      "LookY": -9549.8828125,
      "LookZ": -16847.974609375,
      "UpX": 0.015842661261558533,
      "UpY": 0.9998476505279541,
      "UpZ": -0.0073240911588072777
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Grid.ByLine",
        "ShowGeometry": true,
        "Id": "8432515513fe458bae81e9a95281eebf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 5803.59850817966,
        "Y": -829.02144657241467
      },
      {
        "Name": "x간격_",
        "ShowGeometry": true,
        "Id": "c13e7252656046ea8287cead3a935b02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1248.9873380370582,
        "Y": 492.17893056363619
      },
      {
        "Name": "y간격_",
        "ShowGeometry": true,
        "Id": "e040263dcee24c72a0422f28b5d0c407",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1243.1573495760078,
        "Y": 665.92829930435482
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "91169be54e5c476ba16d72e8beb09b2b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 258.35026365077943,
        "Y": 369.59146082054383
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "133882275d2a4d4e8880a4ae6a33dbfa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4.350263650779425,
        "Y": 460.41896082054382
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "c18a46285e424b85a39e72a91ff27258",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 261.04653527076016,
        "Y": 674.92097101854324
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0411693261894b20aee8fb298d6fe829",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7.04653527076016,
        "Y": 765.74847101854323
      },
      {
        "Name": "findAllGridPts",
        "ShowGeometry": true,
        "Id": "2303066801614f48a1537c76d50d2cb3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1208.6430949115781,
        "Y": 657.99944687856043
      },
      {
        "Name": "층 간격_",
        "ShowGeometry": true,
        "Id": "2b9f71b549064558b15d1758c8a8209e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1241.8160423199768,
        "Y": 828.69650377625976
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "6c85f7595a3148b5a3edfcd1273dfb21",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 259.20535119481428,
        "Y": 1024.9119156923941
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "18977869390344c78ce23dfa460f08a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5.2053511948142841,
        "Y": 1115.7394156923942
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "4a7968ac4b3b442cb9d1d76815703033",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 643.15711187574448,
        "Y": 370.9387457648304
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "84a1cf3f226f46e2aec1bc6e99fe9bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 640.71886613444656,
        "Y": 685.3874160235415
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "8ecc4094f2b147099f1d8b55dfd9a558",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 636.274199278725,
        "Y": 1022.3621475757857
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "04017c7249504fe8a59dd56001fc4cf3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 983.26335875137238,
        "Y": 657.20577981458644
      },
      {
        "Name": "Point.ByCoordinates",
        "ShowGeometry": true,
        "Id": "34f17450f37d481597f86af190c2e7fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2779.7815245407592,
        "Y": 654.29595364860006
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "92116ae1a3ed4252afb95bda36b2094d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2240.9042974784124,
        "Y": 514.0837487650715
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "273823373bab4502ab35f47588598a27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2027.7680912869916,
        "Y": 789.14062696957672
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "d7b7c69626e445fbbd466468986c3769",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2252.7202511365622,
        "Y": 734.4204578474446
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "b75fad276c204a3db0a655db4f5be0c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2257.476148456155,
        "Y": 923.48727859506153
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "b40c6aecad0f46a4876a27a82a1ec3cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3713.59850817966,
        "Y": -941.02144657241479
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "977da98b1e4a4cfa8370dbf6320d87b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4270.59850817966,
        "Y": -1088.0214465724148
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "32fbd2724d8d4b6cb7df5fbfa61c8ed2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4270.59850817966,
        "Y": -941.02144657241479
      },
      {
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": true,
        "Id": "c0c682458ef94af69899d7a8e523c076",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4546.59850817966,
        "Y": -973.02144657241479
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "35d3f9cdbcc54a6eb4635d9dca8116e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3989.59850817966,
        "Y": -719.52144657241467
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "6cf3e7e12c2e47828d836d815c0e5fd5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4270.59850817966,
        "Y": -646.02144657241467
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "591d52df92364e24979ff4fceb04bc5f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4270.59850817966,
        "Y": -793.02144657241467
      },
      {
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": true,
        "Id": "a86741e10e5d4e3687072ef82640570c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4546.59850817966,
        "Y": -795.02144657241467
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "19341c72fb224c0ca3894ec852b37587",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4917.59850817966,
        "Y": -901.02144657241467
      },
      {
        "Name": "*",
        "ShowGeometry": true,
        "Id": "0f1f1c3a5f3c4e698c5a4fe6bf355c7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1750.8618101304044,
        "Y": 628.55107139937218
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "54de7175176b48939d6ed60bce40d200",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1594.5452393146995,
        "Y": 794.72853321484922
      },
      {
        "Name": "Curve.ExtendEnd",
        "ShowGeometry": true,
        "Id": "04e65f8de9104f05876cdb3ad34b30f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5177.59850817966,
        "Y": -829.02144657241467
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e5cb8ab0c0fb4f11a45da024183c3230",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4917.59850817966,
        "Y": -723.19394657241469
      },
      {
        "Name": "Curve.ExtendStart",
        "ShowGeometry": true,
        "Id": "5ff89a4a0720496b994149f6b6e886f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5490.59850817966,
        "Y": -829.02144657241467
      },
      {
        "Name": "Level.ByElevation",
        "ShowGeometry": true,
        "Id": "4a4d64c1b050486780000d5c30f5c215",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3716.9923772159432,
        "Y": 2111.2510635792737
      },
      {
        "Name": "*",
        "ShowGeometry": true,
        "Id": "4a0d52e14d7d43b28675c76750e5d7f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1155.9802814631703,
        "Y": 2246.5712138749518
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0d79c7579d324a739d7357f009710799",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 901.98028146317029,
        "Y": 2280.3987138749517
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "cf439b7d7e4f4da28ba21eebcafe32b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1155.9802814631703,
        "Y": 1920.5712138749518
      },
      {
        "Name": "List.Scan",
        "ShowGeometry": true,
        "Id": "6d525cb5b29d4effae35ef5a89935ef3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1438.9802814631703,
        "Y": 2054.5712138749518
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "de645f66d88447e09ad2ff20156a3994",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1155.9802814631703,
        "Y": 2098.3987138749517
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "d5c9e48062c6412fba3070fbe1bb6559",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2072.0997125518211,
        "Y": 2250.2065357410338
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "80dd8afbf481472fba9e12afb7fc61e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1756.1711248673505,
        "Y": 2177.7264357127328
      },
      {
        "Name": "Level.Elevation",
        "ShowGeometry": true,
        "Id": "e2ee8c2f10a24c30bb90de5b58a1f32c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2433.2933517536062,
        "Y": 2390.0745706231833
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "7d579ea6ac23419ea835e61fa4fb339f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3371.6563325410702,
        "Y": 2091.6968786243619
      },
      {
        "Name": "List.Contains",
        "ShowGeometry": true,
        "Id": "4062e6a4238e4c458bc9522e720c9d4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3064.9407223781527,
        "Y": 2385.237191216163
      },
      {
        "Name": "StructuralFraming.ColumnByCurve",
        "ShowGeometry": true,
        "Id": "7f00cafed4764388bff1a0cab02fa407",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13340.823962026179,
        "Y": 1643.078132860152
      },
      {
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Id": "72f16772ffc04f9dadaf4340f53ac883",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6699.6097632689452,
        "Y": 1429.4446230963842
      },
      {
        "Name": "List.Sublists",
        "ShowGeometry": true,
        "Id": "33aef83f659b4d1e920799fbf92e8006",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5218.8683449519021,
        "Y": 1571.4434176030595
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "57a4c4b7f8ee44db97492d151f9451db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4964.8683449519021,
        "Y": 1614.0984176030597
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "efec7d2035be4382a0adccbb6a729883",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5802.9110117847722,
        "Y": 1337.4837105937581
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "1c915bf71f30451eb668f46473fabc88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5800.2301228404822,
        "Y": 1741.9554195974981
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "e698cb678d36407abf82775348e325f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5472.0917229067518,
        "Y": 1572.7093758468518
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "8db9b974a935425f8d086a6c36af874d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6255.729828087553,
        "Y": 1336.5987835332769
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "fa5215ea4b8e4ce6b7bb87ff5e76a875",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6067.3191575845831,
        "Y": 1461.6766320181287
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ff503cd6a28a4718a65c77f02f10bbb4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6072.9629881084038,
        "Y": 1877.3071952156677
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "076275760f204ba08c7d8bd36b1c4c63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6261.3736586113737,
        "Y": 1752.2293467308175
      },
      {
        "Name": "6. 기둥 타입",
        "ShowGeometry": true,
        "Id": "8372bfc1dbe04fa5b43c2badec886b8e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12837.009784866004,
        "Y": 1842.9782999923923
      },
      {
        "Name": "7. 거더 타입",
        "ShowGeometry": true,
        "Id": "6e5d008540b947aab31ac3d670c36bf2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12848.959952165264,
        "Y": 2453.5852364174893
      },
      {
        "Name": "빔거더용 라인 형성",
        "ShowGeometry": true,
        "Id": "a5cfb3dd0fc44032b0e316a186a2bad1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6191.1774247792864,
        "Y": 3048.2816959899656
      },
      {
        "Name": "1. x방향 경간 입력(m)",
        "ShowGeometry": true,
        "Id": "d538ae6000e746ab9a590246367bf9a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -848.25101101508778,
        "Y": 470.22825069835903
      },
      {
        "Name": "2. y방향 경간 입력(m)",
        "ShowGeometry": true,
        "Id": "65fc2a00781d4d33b6a20feb4118f733",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -848.53637681637247,
        "Y": 649.85894054414916
      },
      {
        "Name": "3. 층고 입력(m)",
        "ShowGeometry": true,
        "Id": "b6224999530b4779a7e98ae52e3c93c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -850.07594475703206,
        "Y": 814.68147708133108
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "589204bcfd0547569d7fe66b83f56f72",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9136.287668786681,
        "Y": 1529.0714594249293
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "0c284d025de64413ad665e2aad3b1a75",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6539.48771160665,
        "Y": 2836.4882765684633
      },
      {
        "Name": "5. 경간 내 빔 개수",
        "ShowGeometry": true,
        "Id": "fcc1b37f6b2d4d8db6198a831a64449c",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1110.66558855836,
        "Y": 1720.8914858123
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "92746da8877d41cfabfd5eaa126b0243",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4815.0709331268781,
        "Y": 2884.4529369126412
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "03bb1e33121b475d934b2ea89a58fd49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6827.1778550230874,
        "Y": 2836.606793140827
      },
      {
        "Name": "Curve.StartPoint",
        "ShowGeometry": true,
        "Id": "dab15eda0e5843a49a641f7f4697e454",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8327.8497059536548,
        "Y": 3292.0846484986355
      },
      {
        "Name": "Point.Z",
        "ShowGeometry": true,
        "Id": "1a1d5361d0ca4e5da57c66c676c6b509",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8598.1980709736727,
        "Y": 3290.8445183838653
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "380cdcb3d5ce41699dab215df2272cb7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7153.3636026707482,
        "Y": 3917.3876340095262
      },
      {
        "Name": "Level.Elevation",
        "ShowGeometry": true,
        "Id": "cdb4ba35c609452796f2fc1ef6664d66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7539.3966674883586,
        "Y": 3919.853156032515
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "36aa87a2ba864f0b92b7e8e376ae62cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8428.3685111570139,
        "Y": 3915.0394725138854
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "092210d6684e4c00a58310c45e454a8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8218.9699280429122,
        "Y": 4082.4271283955909
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b97f94afcbb3469989a94c14edf66b85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7414.6923737574907,
        "Y": 2349.0728696413576
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "36f20d01eba04f4c9804860415c517a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8933.810276747854,
        "Y": 3623.6577332284555
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "94b02e02f55b42949fcc4dafa1b329e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9225.3418134105832,
        "Y": 3623.2458419077752
      },
      {
        "Name": "List.Contains",
        "ShowGeometry": true,
        "Id": "d80c4d5e19524b4d95bb1c8b6bc14b8a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9610.3915182938126,
        "Y": 3906.4948885803656
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "6eb543a04dac481599edbb3f99c046b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9987.2901490649911,
        "Y": 3560.1413996835977
      },
      {
        "Name": "segment_개수",
        "ShowGeometry": true,
        "Id": "95cde24c7b854fe794e484ab9708d346",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1383.6773704533571,
        "Y": 4737.6583864255435
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "03b379d6aea74097ae8decb240b95298",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9848.2608214753454,
        "Y": 4748.912082508562
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "42a4944aa3834ef9a908b6109e60edf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -170.19776644141928,
        "Y": 3108.0581251357476
      },
      {
        "Name": "findCrvPtsAtEqSegLengthInHoriGirderCrv",
        "ShowGeometry": true,
        "Id": "94bdcae89bad466a9ee9c28242249c81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10658.823968585108,
        "Y": 3730.1390467361839
      },
      {
        "Name": "8. 빔 타입",
        "ShowGeometry": true,
        "Id": "5fe634507ea144a18341bb8161a8752e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12875.827808636823,
        "Y": 3221.654189497222
      },
      {
        "Name": "Coordinates.BasePoint",
        "ShowGeometry": true,
        "Id": "4c22a83f49e04fd6aaf3cb75a99d37bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2289.4808366547895,
        "Y": 4052.3768486464724
      },
      {
        "Name": "Coordinates.SurveyPoint",
        "ShowGeometry": true,
        "Id": "41be640e7ab84996a8cd498d8978ea85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2309.67477366427,
        "Y": 3802.958226425
      },
      {
        "Name": "Point.Z",
        "ShowGeometry": true,
        "Id": "7e6f2f95327343ee95e31bae456c377c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2831.70459918012,
        "Y": 3820.01928670866
      },
      {
        "Name": "Point.Z",
        "ShowGeometry": true,
        "Id": "4e505203ce624ed091888afd215bb375",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2828.29262331571,
        "Y": 4036.67988396963
      },
      {
        "Name": "-",
        "ShowGeometry": true,
        "Id": "b214868ba5fd4a1bac61d28c3abd99ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3120.41748689046,
        "Y": 3910.71728615289
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "8f02cda437664e968c10f9c9fcabc40d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3979.83191615639,
        "Y": 2402.0942956498893
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": true,
        "Id": "19dcb64231fe4e3dbd35e9032766510f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9087.2941143826647,
        "Y": 4148.5470569845784
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "51f65a53894143d3aae3e1e548831955",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8842.3157632160037,
        "Y": 4264.4409842277983
      },
      {
        "Name": "Curve.StartPoint",
        "ShowGeometry": true,
        "Id": "01bd12aa03d64d30aa841b1916ce75fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9721.3894356987312,
        "Y": 1800.3038589784323
      },
      {
        "Name": "Point.Z",
        "ShowGeometry": true,
        "Id": "bc6b4492842746c585c7f81892fca379",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9977.4083313121064,
        "Y": 1800.3038589784328
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "451b0321e617499a9517604cbc1da0ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10201.061651626333,
        "Y": 1800.7159484203005
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "4edcd56b733e4f8a8fc671f3493f65dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10488.273228795892,
        "Y": 1795.5303407959896
      },
      {
        "Name": "Level.Elevation",
        "ShowGeometry": true,
        "Id": "68af4a51cf294e16975fa78c83d444f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7749.1882379908111,
        "Y": 2506.4905217667515
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": true,
        "Id": "d0e0a467fe5f444da7d8994f42ba2508",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8030.4613812277667,
        "Y": 2509.5237685074235
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3cb3f34ba77e4da88802ad4924686278",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7792.7779033907909,
        "Y": 2630.2814643846018
      },
      {
        "Name": "List.Contains",
        "ShowGeometry": true,
        "Id": "b42a008f2db54fc081f5c1f8a87655d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10941.463642190969,
        "Y": 2092.1001143569761
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "4f3b629bdcdc48ae85940ebab598e992",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10016.650139172196,
        "Y": 2337.1790493253948
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "436aba93828349d1957121c85e7ad8b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11230.119539841187,
        "Y": 1881.0043896454433
      },
      {
        "Name": "Curve.StartPoint",
        "ShowGeometry": true,
        "Id": "1d44a5854ab3498582bb0ad8d6b21820",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9762.2838231039223,
        "Y": 2962.2976513258081
      },
      {
        "Name": "Point.Z",
        "ShowGeometry": true,
        "Id": "dbeb4c0eca944a4181d9047dacaf8c36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10018.302718717303,
        "Y": 2962.2976513258081
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "a7387d02ba5544c8a4dbdc502ba72f24",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10241.956039031522,
        "Y": 2962.7097407676783
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "33cead776ce74dbcaf2cc74902ae3caf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10548.288785648509,
        "Y": 2976.6453025907931
      },
      {
        "Name": "List.Contains",
        "ShowGeometry": true,
        "Id": "7856511b0c1444fb8801f0ae1251b317",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10918.474977464481,
        "Y": 2832.6198709147197
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "712e4a9d7c9a44d3a5d5f4c42a2fe885",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11279.408254003189,
        "Y": 2574.1889258482779
      },
      {
        "Name": "Curve.StartPoint",
        "ShowGeometry": true,
        "Id": "218734fdd91c4f63801c21bef8df943a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11332.008811969739,
        "Y": 3914.6669645907659
      },
      {
        "Name": "Point.Z",
        "ShowGeometry": true,
        "Id": "5aa45871665a43da9048a1c81ec2226d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11588.02770758312,
        "Y": 3914.6669645907659
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "d0b87baf110945a0b2563eb22488b9b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11811.681027897339,
        "Y": 3915.0790540326357
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "6d481fbe3b8644c387593b864f21745c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12098.892605066898,
        "Y": 3909.8934464083259
      },
      {
        "Name": "List.Contains",
        "ShowGeometry": true,
        "Id": "e574fddff1984c43b565ce955f2cd9d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12415.391825070135,
        "Y": 3730.7032482798172
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "18d2bef3cd02420fad625769639251a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12684.048882711264,
        "Y": 3619.0297505849067
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "9864c76ddbd6475fb5d07b9e4e02c3dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9427.5999293706736,
        "Y": 4178.2078865547683
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ca89a9f5a4554eac97dbc34708ed95f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7272.3894968568966,
        "Y": 2739.3453776711372
      },
      {
        "Name": "StructuralFraming.BeamByCurve",
        "ShowGeometry": true,
        "Id": "9b31f59be2ef4313b89da23ad490343a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13404.714021777952,
        "Y": 2240.5533333927192
      },
      {
        "Name": "StructuralFraming.BeamByCurve",
        "ShowGeometry": true,
        "Id": "86ebf01a70a741999b58aaaa0a81e30e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13359.474510764647,
        "Y": 3048.718361229216
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "25090994b3a940bfaa1becc494f04fd4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8322.2440095557067,
        "Y": 2549.5083437395665
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8902891717ab48b1be56fce856611cee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9322.7714972639315,
        "Y": 2671.2685481210915
      },
      {
        "Name": "List.ReplaceItemAtIndex",
        "ShowGeometry": true,
        "Id": "de1a2981106042f8bd79d3e4dafa49b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9622.1801502816616,
        "Y": 2477.9383614131084
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "ec4912534461413795062800e0b119e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8615.58508529636,
        "Y": 2655.3033954236093
      },
      {
        "Name": "Point.Y",
        "ShowGeometry": true,
        "Id": "19e1bbe0d35d42d68a3023aa2c92349d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8489.1498374652565,
        "Y": 972.13315313204191
      },
      {
        "Name": "Curve.EndPoint",
        "ShowGeometry": true,
        "Id": "067977a33ce148b498f831f0b6384ffd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 8275.8353511845016,
        "Y": 973.029982550869
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "5e8676998eb445a89a78668e17bc9489",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8716.5787691864589,
        "Y": 970.681150230418
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "6b19c4e48721441da12a407c724579bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8950.0457758978682,
        "Y": 973.09919739422992
      },
      {
        "Name": "중간 항목 구하기",
        "ShowGeometry": true,
        "Id": "edf74ecba875485180499e61cbf74b4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9189.7616317098782,
        "Y": 973.01778049500433
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "17e262c082374232904f41c81a965b57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9477.5673299722675,
        "Y": 849.73767544276586
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "61fb213a490c4b4b9552d7be6e000e5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9799.2184225899273,
        "Y": 851.15209774332641
      },
      {
        "Name": "Point.Y",
        "ShowGeometry": true,
        "Id": "43d1fef57a2d495d8e0635c02a68639c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3969.42223965996,
        "Y": 396.1165514225832
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "c1d1265c6aa248808b15783f9624ee60",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4271.42223965996,
        "Y": 396.1165514225832
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "37850e6e11b5477fa30a1d8f4554c042",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4566.42223965996,
        "Y": 396.1165514225832
      },
      {
        "Name": "중간 항목 구하기",
        "ShowGeometry": true,
        "Id": "f0cb104f50b94f3b9eb570bb1ff89f2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4866.42223965996,
        "Y": 396.1165514225832
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "219c3339e201467a9fb956fd31c32f58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5158.42223965996,
        "Y": 379.11655142258309
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "9ae2ea5a94e748a6979691e6f0d73892",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5481.42223965996,
        "Y": 379.11655142258309
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f57f0d388c8c47d39a21609971825112",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3715.4222396599603,
        "Y": 395.94405142258319
      },
      {
        "Name": "루프층 가운데 열 상단점 레벨 상승",
        "ShowGeometry": true,
        "Id": "797cabba96e94ac3b7dc25d50bbc37bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4266.4460604167489,
        "Y": 887.77692033894755
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "910f3ca51ea04b41b7cafb9863939b92",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2963.6020564693595,
        "Y": 1291.6480781626105
      },
      {
        "Name": "4. 루프 구배 Gap Height(m)",
        "ShowGeometry": true,
        "Id": "b6fb9211eef84af5b9e834edb6d062f7",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1155.2921657603,
        "Y": 1322.25835879766
      },
      {
        "Name": "make_GridName",
        "ShowGeometry": true,
        "Id": "d027912ca6ab4adfa52a0c7db3039a4e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6239.3321412222786,
        "Y": -715.69305223540891
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "bb152c71170f46269e48764288f7ec23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6830.3321412222786,
        "Y": -907.69305223540891
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "effcfcdcb42f41449d1d887d22cceb53",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6535.3321412222786,
        "Y": -1041.6930522354089
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "e990d2564ef34eac813fc16ebd1d0b70",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6535.3321412222786,
        "Y": -715.69305223540891
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8708a0dd4fab4e88ad1e77247c04cf21",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6535.3321412222786,
        "Y": -863.86555223540893
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "73a732a789d445bdaf8b5f00505ee2b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14106.690741349272,
        "Y": 2267.9180420828452
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ab714a972cbe4c5184b02d7b259ad51b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13826.00533842711,
        "Y": 2362.7128615354527
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "2a9937d00fe74569ae5115db74a1185a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14150.447470537303,
        "Y": 3082.0865380897289
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "27c2735e5e7d4c01831217b1f40ee733",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13869.762067615102,
        "Y": 3176.8813575423287
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": true,
        "Id": "d5bf93ee56ac4543a069de9cf588c6d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2768.3257920042179,
        "Y": 2591.6821636218829
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a44f9e8c66f841fcb13d28a118dacaa7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2501.4428093936531,
        "Y": 2650.1464338547753
      },
      {
        "Name": "Circle.ByCenterPointRadius",
        "ShowGeometry": true,
        "Id": "337e0e50fe9d4b538dc17696a4b478d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5864.0544491925639,
        "Y": 855.91000560950908
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "bd1463aca1bb4dda9f6186c7d7d945c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5542.9196928050033,
        "Y": 852.81930881125743
      },
      {
        "Name": "modify_slope Roof Points",
        "ShowGeometry": true,
        "Id": "08138a0dc60248c6a35d7e984dffdcb4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7141.0610003788324,
        "Y": 1718.2879542995347
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "100df7d955f84004b171ea9dacb5e96f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7082.8090575553915,
        "Y": 1528.8257471121387
      },
      {
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": true,
        "Id": "4851fd708f1d44ec95c0f6565f969401",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7521.7811984137688,
        "Y": 1359.2501266467425
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0f6ca0e832d84452a3da0312aeabd257",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4795.35261006231,
        "Y": 2336.8184825592871
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5ff320243c064b35b3f916a11ccf734b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6526.7245205688068,
        "Y": 2156.8444070968085
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "25b6e40c527448c0a56f860be164364b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7057.3058066665462,
        "Y": -388.34734898404975
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "342200808833416c8533ef4349e2788f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6780.3663688473389,
        "Y": -378.230839839969
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "428d60e1616e4ef9ba530c52874276bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7282.5786491559384,
        "Y": -722.558008361207
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "62dcd32a67714978a2715605dada8ac1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7270.1245924636833,
        "Y": -1002.9555445719782
      },
      {
        "Name": "그리드 타입 수정",
        "ShowGeometry": true,
        "Id": "cee301f24b6f4cec99b3b0958c1c8ce8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 7741.7065904816618,
        "Y": -1002.2432615643404
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2cf67570cdce4841b595f90c6b005b1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2322.0,
        "Y": 1003.0
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "ccc2a53fa5074aefa3ae006686c87e68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8104.349713810032,
        "Y": -818.41183223943472
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "cc3d71139ac04cda960ed3efd7f48839",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7797.9070735877876,
        "Y": -768.27985821621951
      },
      {
        "Name": "ElementType.ByName",
        "ShowGeometry": true,
        "Id": "86c18fdb904a46839997250501e7192f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7670.5608229542077,
        "Y": -568.60221242496118
      },
      {
        "Name": "01. 건물 가로 너비",
        "ShowGeometry": true,
        "Id": "eba2b8f509704a7d9d9d04e7072f9fca",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1803.94128585569,
        "Y": -1012.37500897049
      },
      {
        "Name": "02. 건물 세로 너비",
        "ShowGeometry": true,
        "Id": "a06e4013555147b18b7a8eadf94085f9",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1803.83121062492,
        "Y": -570.601219019545
      },
      {
        "Name": "G1. 가로 경간 수 (var)",
        "ShowGeometry": true,
        "Id": "378fadc0748c41448acf120c8da97c3a",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1887.33176941957,
        "Y": -856.231666717582
      },
      {
        "Name": "G2. 세로 경간 수 (var)",
        "ShowGeometry": true,
        "Id": "b0d1f20572cc41e6bd4518fa2ea70dbe",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1879.87484922882,
        "Y": -415.164773651007
      },
      {
        "Name": "03. 층고 입력(m)",
        "ShowGeometry": true,
        "Id": "415d24f648eb4c2ca7cf7ac961a32742",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1832.3829103120809,
        "Y": -109.73984464747505
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3c8467ce6cbc4a45825c98f5a62963c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1618.5019990122719,
        "Y": -97.801221000408077
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "14debba1da5c44c18e492b1c20957c55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1364.5019990122721,
        "Y": -188.62872100040795
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "3e51418fd05b474c8337f4f47c9074d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -987.43315092836121,
        "Y": -191.17848911700798
      },
      {
        "Name": "get_xSpans",
        "ShowGeometry": true,
        "Id": "0271cb8e3a424323a0ee758fea35474b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1309.0951949139658,
        "Y": -941.44713821991741
      },
      {
        "Name": "get_ySpans",
        "ShowGeometry": true,
        "Id": "b4ff71f45fe04216b01eb08e47964ac1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1302.3344215903392,
        "Y": -554.33885253080916
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "89816b2143214860a4e83e0302f7cf1e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 269.15591397884464,
        "Y": -388.34810474491655
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2d1d5e6cc0f9406b8ba6a8015405824f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 263.96553558360279,
        "Y": -112.51109360011696
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d5f97f0b1cba4a6d9075380ab9de703b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 659.35372905747738,
        "Y": 872.57588026877988
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "73d9199a0382482991a644f841451fd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12336.744008006252,
        "Y": 2555.2252287519882
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a5b561b97b4249e6bc99e9f8d89301ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11702.850129470764,
        "Y": 1572.8748224021665
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0a43bba832334053a51e80c62293268e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11601.413742928906,
        "Y": 2244.3285843678013
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "947f103685cc45e8a798d0d0584ee73b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11702.834447338904,
        "Y": 3039.024848497555
      },
      {
        "Name": "Curve.Length",
        "ShowGeometry": true,
        "Id": "e38dcdf54af44da9bd01bbb687bff2cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12877.36967852608,
        "Y": 2634.7393684281274
      },
      {
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Id": "4933d8c3b3994ded87375baddb6a827b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13433.203415560485,
        "Y": 2635.343222605632
      },
      {
        "Name": "Total Pseudo Cost",
        "ShowGeometry": true,
        "Id": "dc48f327765f437099f73a00d1fce289",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 14069.379153408221,
        "Y": 2637.8008495000872
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "328e27988ad642aa8b091288a4f5a260",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12534.929538527742,
        "Y": 2604.2552354087807
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "74c86c97e0bb4f6fb37e2e05a49d9b89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13887.110228291951,
        "Y": 2767.3406680617786
      },
      {
        "Name": "Data.Remember",
        "ShowGeometry": true,
        "Id": "539234cae11348c897766d331db66ae2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8127.6547229372118,
        "Y": 3921.3133363213014
      },
      {
        "Name": "Data.Remember",
        "ShowGeometry": true,
        "Id": "7ab372cc48be43a18aa30f85da26ece8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7867.2342066089977,
        "Y": 4024.33088610653
      },
      {
        "Name": "Data.Remember",
        "ShowGeometry": true,
        "Id": "9e21598964074ca8ae34d3ad80c498e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2610.5059163339265,
        "Y": 3826.62857341928
      },
      {
        "Name": "Data.Remember",
        "ShowGeometry": true,
        "Id": "ef9fde01f0f845b88905649120546352",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2614.8867299852495,
        "Y": 4054.4283663080505
      }
    ],
    "Annotations": [
      {
        "Id": "11dab225e4ef4fb382a159b8a0d021d5",
        "Title": "그리드 격자 형성",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b40c6aecad0f46a4876a27a82a1ec3cb",
          "977da98b1e4a4cfa8370dbf6320d87b0",
          "32fbd2724d8d4b6cb7df5fbfa61c8ed2",
          "c0c682458ef94af69899d7a8e523c076",
          "35d3f9cdbcc54a6eb4635d9dca8116e1",
          "6cf3e7e12c2e47828d836d815c0e5fd5",
          "591d52df92364e24979ff4fceb04bc5f",
          "a86741e10e5d4e3687072ef82640570c",
          "5ff89a4a0720496b994149f6b6e886f4",
          "04e65f8de9104f05876cdb3ad34b30f0",
          "e5cb8ab0c0fb4f11a45da024183c3230",
          "19341c72fb224c0ca3894ec852b37587",
          "8432515513fe458bae81e9a95281eebf"
        ],
        "HasNestedGroups": false,
        "Left": 3703.59850817966,
        "Top": -1161.0214465724148,
        "Width": 2288.0,
        "Height": 647.00000000000011,
        "FontSize": 36.0,
        "InitialTop": -1088.0214465724148,
        "InitialHeight": 587.00000000000011,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a8a479baeedf4b27ab18892afe766058",
        "Title": "그리드용 포인트 형성",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "34f17450f37d481597f86af190c2e7fd",
          "92116ae1a3ed4252afb95bda36b2094d",
          "273823373bab4502ab35f47588598a27",
          "d7b7c69626e445fbbd466468986c3769",
          "b75fad276c204a3db0a655db4f5be0c3",
          "0f1f1c3a5f3c4e698c5a4fe6bf355c7e",
          "54de7175176b48939d6ed60bce40d200"
        ],
        "HasNestedGroups": false,
        "Left": 1584.5452393146995,
        "Top": 441.0837487650715,
        "Width": 1430.2362852260596,
        "Height": 644.40352982999,
        "FontSize": 36.0,
        "InitialTop": 514.0837487650715,
        "InitialHeight": 554.40352982999,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "900b0810080441c7be9cf6d74bbbd978",
        "Title": "그리드용 좌표 형성",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "91169be54e5c476ba16d72e8beb09b2b",
          "133882275d2a4d4e8880a4ae6a33dbfa",
          "c18a46285e424b85a39e72a91ff27258",
          "0411693261894b20aee8fb298d6fe829",
          "2303066801614f48a1537c76d50d2cb3",
          "6c85f7595a3148b5a3edfcd1273dfb21",
          "18977869390344c78ce23dfa460f08a6",
          "4a7968ac4b3b442cb9d1d76815703033",
          "84a1cf3f226f46e2aec1bc6e99fe9bdd",
          "8ecc4094f2b147099f1d8b55dfd9a558",
          "04017c7249504fe8a59dd56001fc4cf3",
          "d5f97f0b1cba4a6d9075380ab9de703b"
        ],
        "HasNestedGroups": false,
        "Left": -5.649736349220575,
        "Top": 296.59146082054383,
        "Width": 1401.2928312607987,
        "Height": 961.1479548718504,
        "FontSize": 36.0,
        "InitialTop": 369.59146082054383,
        "InitialHeight": 891.1479548718504,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8d4ff07f95b044e580314aa796da3f6f",
        "Title": "레벨용 Elevation 생성",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4a0d52e14d7d43b28675c76750e5d7f3",
          "0d79c7579d324a739d7357f009710799",
          "cf439b7d7e4f4da28ba21eebcafe32b5",
          "6d525cb5b29d4effae35ef5a89935ef3",
          "de645f66d88447e09ad2ff20156a3994"
        ],
        "HasNestedGroups": false,
        "Left": 891.98028146317029,
        "Top": 1847.5712138749518,
        "Width": 772.0,
        "Height": 564.82749999999987,
        "FontSize": 36.0,
        "InitialTop": 1920.5712138749518,
        "InitialHeight": 504.82749999999987,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8009cda389d847f3bfc18ff1fdd32889",
        "Title": "레벨 생성",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4a4d64c1b050486780000d5c30f5c215",
          "d5c9e48062c6412fba3070fbe1bb6559",
          "80dd8afbf481472fba9e12afb7fc61e3",
          "e2ee8c2f10a24c30bb90de5b58a1f32c",
          "7d579ea6ac23419ea835e61fa4fb339f",
          "4062e6a4238e4c458bc9522e720c9d4c"
        ],
        "HasNestedGroups": false,
        "Left": 1746.1711248673505,
        "Top": 2018.6968786243619,
        "Width": 2195.8212523485927,
        "Height": 528.540312591801,
        "FontSize": 36.0,
        "InitialTop": 2091.6968786243619,
        "InitialHeight": 443.37769199882132,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1550d6547ffe4d1c957edd16850eaa1d",
        "Title": "기둥용 라인 형성",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "72f16772ffc04f9dadaf4340f53ac883",
          "33aef83f659b4d1e920799fbf92e8006",
          "57a4c4b7f8ee44db97492d151f9451db",
          "1c915bf71f30451eb668f46473fabc88",
          "e698cb678d36407abf82775348e325f5",
          "efec7d2035be4382a0adccbb6a729883",
          "8db9b974a935425f8d086a6c36af874d",
          "fa5215ea4b8e4ce6b7bb87ff5e76a875",
          "ff503cd6a28a4718a65c77f02f10bbb4",
          "076275760f204ba08c7d8bd36b1c4c63"
        ],
        "HasNestedGroups": false,
        "Left": 4954.8683449519021,
        "Top": 1263.5987835332769,
        "Width": 2025.7414183170431,
        "Height": 745.70841168239076,
        "FontSize": 36.0,
        "InitialTop": 1336.5987835332769,
        "InitialHeight": 685.70841168239076,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "676588bf5a934255be430131aeb473fc",
        "Title": "기둥 생성",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7f00cafed4764388bff1a0cab02fa407",
          "8372bfc1dbe04fa5b43c2badec886b8e"
        ],
        "HasNestedGroups": false,
        "Left": 12827.009784866004,
        "Top": 1570.078132860152,
        "Width": 884.814177160175,
        "Height": 404.90016713224031,
        "FontSize": 36.0,
        "InitialTop": 1643.078132860152,
        "InitialHeight": 344.90016713224031,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "84fedeca6c9041c28a0f8d934cd09a07",
        "Title": "거더 생성",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6e5d008540b947aab31ac3d670c36bf2",
          "9b31f59be2ef4313b89da23ad490343a"
        ],
        "HasNestedGroups": false,
        "Left": 12838.959952165264,
        "Top": 2167.5533333927192,
        "Width": 939.75406961268891,
        "Height": 418.03190302477014,
        "FontSize": 36.0,
        "InitialTop": 2240.5533333927192,
        "InitialHeight": 358.03190302477014,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "32c3f908d4ca41798ecd7eab3131baf7",
        "Title": "GF이상 레벨 거더 커브 필터링",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "dab15eda0e5843a49a641f7f4697e454",
          "1a1d5361d0ca4e5da57c66c676c6b509",
          "380cdcb3d5ce41699dab215df2272cb7",
          "cdb4ba35c609452796f2fc1ef6664d66",
          "36aa87a2ba864f0b92b7e8e376ae62cc",
          "092210d6684e4c00a58310c45e454a8b",
          "36f20d01eba04f4c9804860415c517a1",
          "94b02e02f55b42949fcc4dafa1b329e6",
          "d80c4d5e19524b4d95bb1c8b6bc14b8a",
          "6eb543a04dac481599edbb3f99c046b4",
          "539234cae11348c897766d331db66ae2",
          "7ab372cc48be43a18aa30f85da26ece8"
        ],
        "HasNestedGroups": false,
        "Left": 7143.3636026707482,
        "Top": 3217.8445183838653,
        "Width": 3088.9265463942429,
        "Height": 996.582610011726,
        "FontSize": 36.0,
        "InitialTop": 3290.8445183838653,
        "InitialHeight": 936.582610011726,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5aed4f6bc93b498f89e2e4a30450f320",
        "Title": "Survey Point - Project Base Point 높이차",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4c22a83f49e04fd6aaf3cb75a99d37bd",
          "41be640e7ab84996a8cd498d8978ea85",
          "7e6f2f95327343ee95e31bae456c377c",
          "4e505203ce624ed091888afd215bb375",
          "b214868ba5fd4a1bac61d28c3abd99ff",
          "9e21598964074ca8ae34d3ad80c498e5"
        ],
        "HasNestedGroups": false,
        "Left": 2279.4808366547895,
        "Top": 3729.958226425,
        "Width": 1033.9366502356706,
        "Height": 454.41862222147256,
        "FontSize": 36.0,
        "InitialTop": 3802.958226425,
        "InitialHeight": 394.41862222147256,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e354a4acad69405a8ede49f279c52f71",
        "Title": "모든 기둥 시점 높이 추출 및 유형화",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "01bd12aa03d64d30aa841b1916ce75fe",
          "bc6b4492842746c585c7f81892fca379",
          "451b0321e617499a9517604cbc1da0ed",
          "4edcd56b733e4f8a8fc671f3493f65dc"
        ],
        "HasNestedGroups": false,
        "Left": 9711.3894356987312,
        "Top": 1722.5303407959896,
        "Width": 981.88379309716038,
        "Height": 235.0,
        "FontSize": 36.0,
        "InitialTop": 1795.5303407959896,
        "InitialHeight": 150.18560762431093,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7cee16287326477fa69ba23167d1eca2",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1d44a5854ab3498582bb0ad8d6b21820",
          "dbeb4c0eca944a4181d9047dacaf8c36",
          "a7387d02ba5544c8a4dbdc502ba72f24",
          "33cead776ce74dbcaf2cc74902ae3caf"
        ],
        "HasNestedGroups": false,
        "Left": 9752.2838231039223,
        "Top": 2889.2976513258081,
        "Width": 1001.0049625445863,
        "Height": 249.34765126498496,
        "FontSize": 36.0,
        "InitialTop": 2962.2976513258081,
        "InitialHeight": 159.34765126498496,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "cf2da910337146b38be55c70db4c13a8",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "218734fdd91c4f63801c21bef8df943a",
          "5aa45871665a43da9048a1c81ec2226d",
          "d0b87baf110945a0b2563eb22488b9b1",
          "6d481fbe3b8644c387593b864f21745c"
        ],
        "HasNestedGroups": false,
        "Left": 11322.008811969739,
        "Top": 3836.8934464083259,
        "Width": 981.88379309715856,
        "Height": 235.0,
        "FontSize": 36.0,
        "InitialTop": 3909.8934464083259,
        "InitialHeight": 150.1856076243098,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "35faaea030c542988aad0a82f0bcc0a2",
        "Title": "루프층 가운데 열 기둥 추출",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "19e1bbe0d35d42d68a3023aa2c92349d",
          "067977a33ce148b498f831f0b6384ffd",
          "5e8676998eb445a89a78668e17bc9489",
          "6b19c4e48721441da12a407c724579bc",
          "edf74ecba875485180499e61cbf74b4f",
          "17e262c082374232904f41c81a965b57",
          "61fb213a490c4b4b9552d7be6e000e5c"
        ],
        "HasNestedGroups": false,
        "Left": 8265.8353511845016,
        "Top": 776.73767544276586,
        "Width": 1719.3830714054257,
        "Height": 355.94347478765224,
        "FontSize": 36.0,
        "InitialTop": 849.73767544276586,
        "InitialHeight": 268.36152195146417,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "697e5628bfd14a12b4770361dcaff341",
        "Title": "루프층 가운데 열 기둥 추출 - 전체 파이썬으로 축약하고 리스트 구조 유지한채로 가운데 열 포인트만 입력받은 구배 높이 만큼 높여서 반환하도록 수정 요",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "43d1fef57a2d495d8e0635c02a68639c",
          "c1d1265c6aa248808b15783f9624ee60",
          "37850e6e11b5477fa30a1d8f4554c042",
          "f0cb104f50b94f3b9eb570bb1ff89f2f",
          "219c3339e201467a9fb956fd31c32f58",
          "9ae2ea5a94e748a6979691e6f0d73892",
          "f57f0d388c8c47d39a21609971825112"
        ],
        "HasNestedGroups": false,
        "Left": 3705.4222396599603,
        "Top": 263.11655142258309,
        "Width": 1961.9999999999995,
        "Height": 295.00000000000006,
        "FontSize": 36.0,
        "InitialTop": 379.11655142258309,
        "InitialHeight": 162.00000000000011,
        "TextblockHeight": 106.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "100ebc521e004f059b06de2196ec15c3",
        "Title": "그리드 이름 수정",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d027912ca6ab4adfa52a0c7db3039a4e",
          "bb152c71170f46269e48764288f7ec23",
          "effcfcdcb42f41449d1d887d22cceb53",
          "e990d2564ef34eac813fc16ebd1d0b70",
          "8708a0dd4fab4e88ad1e77247c04cf21"
        ],
        "HasNestedGroups": false,
        "Left": 6229.3321412222786,
        "Top": -1114.6930522354089,
        "Width": 914.0,
        "Height": 561.0,
        "FontSize": 36.0,
        "InitialTop": -1041.6930522354089,
        "InitialHeight": 471.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bfb875ae97a2456696a506905711c8ce",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a5cfb3dd0fc44032b0e316a186a2bad1",
          "0c284d025de64413ad665e2aad3b1a75",
          "03bb1e33121b475d934b2ea89a58fd49"
        ],
        "HasNestedGroups": false,
        "Left": 6181.1774247792864,
        "Top": 2763.4882765684633,
        "Width": 976.000430243801,
        "Height": 481.79341942150222,
        "FontSize": 36.0,
        "InitialTop": 2836.4882765684633,
        "InitialHeight": 356.79341942150222,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9c1ea72259484bbb90e2eb63bf766bd9",
        "Title": "그리드 타입 수정",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "62dcd32a67714978a2715605dada8ac1",
          "428d60e1616e4ef9ba530c52874276bb",
          "cee301f24b6f4cec99b3b0958c1c8ce8",
          "cc3d71139ac04cda960ed3efd7f48839"
        ],
        "HasNestedGroups": false,
        "Left": 7260.1245924636833,
        "Top": -1075.9555445719782,
        "Width": 701.78248112410438,
        "Height": 495.39753621077114,
        "FontSize": 36.0,
        "InitialTop": -1002.9555445719782,
        "InitialHeight": 425.39753621077114,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "64440d23e8154b79a162cedbee75acc0",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5fe634507ea144a18341bb8161a8752e",
          "86ebf01a70a741999b58aaaa0a81e30e"
        ],
        "HasNestedGroups": false,
        "Left": 12865.827808636823,
        "Top": 2975.718361229216,
        "Width": 867.646702127824,
        "Height": 377.93582826800593,
        "FontSize": 36.0,
        "InitialTop": 3048.718361229216,
        "InitialHeight": 317.93582826800593,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d4dfa4e90d5b4bef858dabdb5a3bfa45",
        "Title": "장축 커브 필터링",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 11811.299013891728,
        "Top": 3467.6490443825219,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3fc64427448048be9c94ca043e646854",
        "Title": "가운데 기둥 열 들 높이 올리기 구간 추가 필요",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 5238.68267131366,
        "Top": 1186.3282544643803,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -3513.628085208039,
    "Y": -498.68314858244776,
    "Zoom": 0.3064255118834433
  }
}