{
  "Uuid": "85bcf151-2a93-40fc-b906-7644e4add275",
  "IsCustomNode": false,
  "Description": "",
  "Name": "공통_Load Distribution_1.0.3",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "b2a49b909bc541aeb001385b890bfea8",
      "Inputs": [
        {
          "Id": "14f1648433474e7580b1443397bd7356",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ce37ab31de545d9a49734c18d5c0c9c",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 612,
      "SelectedString": "OST_StructuralFraming",
      "NodeType": "ExtensionNode",
      "Id": "97c54e52b6d24fe8bc68f1f5535565b1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1deee3be24b949e1941b47be2b544582",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "5f3ca38487e94ee2b4bcd9b06f481ffb",
      "Inputs": [
        {
          "Id": "2daffd0a156f460f9c1eb7d1b6f06595",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da87395dd607481685ef5ab7b5947b18",
          "Name": "Geometry",
          "Description": "Location Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get an existing element's location\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "DSRevitNodesUI.RoomsByStatus, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "dfee72e7cc844747b135c981fc877574",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f57a3755aaa2428d99627f7616d39764",
          "Name": "PlacedRooms",
          "Description": "Placed Rooms in the document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f58057e1e8f480e9de83fcff8a7229e",
          "Name": "UnplacedRooms",
          "Description": "Unplaced Rooms in the document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa12dba71a874da48507e41528144f89",
          "Name": "NotEnclosedRooms",
          "Description": "Not Enclosed Rooms in the document",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cdb1fa6be1b64c269e5b429fa030d84c",
          "Name": "RedundantRooms",
          "Description": "Elements at the given level.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Returns all rooms in the document grouped by status"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Room.CoreCenterBoundary",
      "Id": "211688b734bd41209dba730bad6261bd",
      "Inputs": [
        {
          "Id": "c6ea57d8d9364ea2ac3cbababfcdc75a",
          "Name": "room",
          "Description": "Revit.Elements.Room",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ba074e1d7134cb182e2fa80a0c1a6dd",
          "Name": "Curve[][]",
          "Description": "Curve[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Core center boundary\n\nRoom.CoreCenterBoundary: Curve[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double,bool,double",
      "Id": "1fa59893c2834090b96809dd740dce16",
      "Inputs": [
        {
          "Id": "ca0ece6f96a04bfd814175a989fc2fd0",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e47207c30602454ba3f2cb5d4b5642bd",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84d532d2400141c887d08a5aa454d065",
          "Name": "trimCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b327cf00cc55484da6134e9b1a348b88",
          "Name": "trimLength",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e3d82d7c5b04971a8ad298431b6cbaa",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001, trimCurves: bool = false, trimLength: double = 0): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "d5924a99a9ff46cc9f9773b80b74086a",
      "Inputs": [
        {
          "Id": "c53c1089b02141c3860b9b2272c4052a",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00e98b6b89dd4c668502feec511cf309",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49f1f8061310489ea5e64a764888e7ea",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Reference Level\";",
      "Id": "1288abe4e92e4f21b8b340b06eb1c81c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fa8e5f5b1e384e04a59d23b80faaae9e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Id": "f0a071aa4b4b45a1a38beed1baf029b1",
      "Inputs": [
        {
          "Id": "920f662ab29649dd902121f861d04b09",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "486da1b94f944a1abe9370e9fe64f92e",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "Dynamo.ComboNodes.DSModelElementByCategorySelection, DSRevitNodesUI",
      "SelectedIndex": 480,
      "SelectedString": "OST_Roofs",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "86afe7f1-870e-44f0-ae56-e6e862c52d01-00291c47"
      ],
      "Id": "20a02cce84a44caead6a8a4fc1ff417b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e2374e3bb78545738cc15f5e51020b3d",
          "Name": "Element",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "de91f984a28c4eeb8800728158f62b92",
      "Inputs": [
        {
          "Id": "09da2a87a94443ed97aa59513bf130a6",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5602191b73684fe19b817d416256d84b",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#################################Module For Functional Programing#############################################\r\nfrom functools import reduce\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ngeo = IN[0][0]\r\n# Place your code below this line\r\n\r\ndef getBtmCrvs(geo):\r\n    btmSrf = go\\\r\n    (\r\n        geo.Explode(),\r\n        filter(lambda x:round(x.NormalAtParameter(0.5,0.5).Z, 4)==-1),\r\n        list,\r\n        lambda x: x[0].PerimeterCurves(),\r\n    )\r\n    \r\n    return btmSrf\r\n# Assign your output to the OUT variable.\r\nOUT = getBtmCrvs(geo)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "0d3fc64fb53c4ef0b776477c7c2bfede",
      "Inputs": [
        {
          "Id": "cff55a44a0344bc69159f1b363cb4d6a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b0fb013892d4515adbedf447d9a48b6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "828dc4e2cd03413eab87223e6b809e1f",
      "Inputs": [
        {
          "Id": "3da93b5a1ba14280a09dad6f01d86eee",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03adb3f959be4961b997b6d483ab2e92",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "6c2e1968b221451293a51d60f438750b",
      "Inputs": [
        {
          "Id": "462c3c81cc704c11bef99f23abb9f8a9",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2af6a0c3a4784aadb129e2bb9b09f000",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d00715250a44459096e0d6ce0227b2ee",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a9e94ec6619488a944d8fda6c22f1a4",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "0235d20c40764180bb8cf0f982eae897",
      "Inputs": [
        {
          "Id": "6d825225a7974d83998391a3da8f0a85",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f42194499ac5465fb25f0084987b5c14",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "893fce6d25e14740810a1d0fe97a6d64",
      "Inputs": [
        {
          "Id": "49809fb89e9b4d0cbaeda496ac31f394",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "181f04d8d6024fc5b2862f79f0edaa7f",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Id": "d9faa17160604ecd954990eb0a8bd654",
      "Inputs": [
        {
          "Id": "f5526cc8678a4770b2a841e58db031e1",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b36df529b0f24605b22babc738baa808",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da24a77b4b624b388b004a804ea77f86",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "2c122bbcd0d740e8a51810fc1c3e7670",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f0b9aaa4df584a819f1c59fffcece22c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[1];",
      "Id": "ac0f890652e848559107af5797497836",
      "Inputs": [
        {
          "Id": "073f9e4a16354394befdc9b20110c8ba",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edf52384935743ec8db0d69136fc658d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "023defe944064ba3915c3c5d1d549e69",
      "Inputs": [
        {
          "Id": "479e5c846aad439c95b57a79824089be",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c70184ac59724ffebf33484c4905102b",
          "Name": "Geometry",
          "Description": "Location Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get an existing element's location\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 584,
      "SelectedString": "OST_StructuralColumns",
      "NodeType": "ExtensionNode",
      "Id": "75c0ae7762784a6dbedc1aed2765c5cd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6df21ecf7a324927a1c2e211b0bf48f6",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "9254457efbcc4dd38af8a446011532fb",
      "Inputs": [
        {
          "Id": "4e367542af6442049b1557adfc88017d",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "493c48e8c7554f7b95990cdb049d799a",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#################################Module For Functional Programing#############################################\r\nfrom functools import reduce\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncols = IN[0]\r\n# Place your code below this line\r\n\r\ndef getColumnCrv(el):\r\n    sttPt = el.GetLocation()\r\n    endPt = go\\\r\n    (\r\n        el,\r\n        lambda x: x.GetLocation(),\r\n        lambda x: x.Translate(0,0, el.GetParameterValueByName(\"Length\")),\r\n    )\r\n    \r\n    return Line.ByStartPointEndPoint(sttPt,endPt)\r\n# Assign your output to the OUT variable.\r\nOUT = map(getColumnCrv,cols)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "8b448b05d212466ca09dac41f01a35ce",
      "Inputs": [
        {
          "Id": "c88710110069449f9d2ac0b7e074b619",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90941572e374477d809649afabfb494e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#################################Module For Functional Programing#############################################\r\nfrom functools import reduce\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ncols = IN[0]\r\nexceptionRules = IN[1]\r\n# Place your code below this line\r\n\r\n#def getColumnCrv(els,exceptionRule):\r\n#    res = go\\\r\n#    (\r\n#        els,\r\n#        filter(lambda x: \"UG PED\" not in str(x.GetParameterValueByName(\"Family and Type\"))),\r\n#        filter(lambda x: exceptionRule not in str(x.GetParameterValueByName(\"Family and Type\"))),\r\n#    )\r\n#    \r\n#    return res\r\n\r\ndef getColumnCrv_(els,exceptionRules):\r\n    defaultFiltering = go\\\r\n    (\r\n        els,\r\n        filter(lambda x: \"UG PED\" not in str(x.GetParameterValueByName(\"Family and Type\"))),\r\n        list,\r\n    )\r\n    \r\n    res = defaultFiltering\r\n    for r in exceptionRules:\r\n        res = list(filter(lambda x: r not in str(x.GetParameterValueByName(\"Family and Type\")), res))\r\n    \r\n    \r\n    return res\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = getColumnCrv_(cols,exceptionRules)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "5947929000cd4f26be10262504b830f5",
      "Inputs": [
        {
          "Id": "278c98882eda458ebded23c91549af06",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d495bc6537641c29fd06dc786c78e04",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a342604dbaf4c3db5b9d48b95d0d101",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "W200xL200,\r\nW300xL300",
      "Id": "1d286349bcf440bd803fce47b14800ff",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d18f09fb6f204558a89468e57121e209",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "e05105b48fb44d8c94e40f4d5f33ffcd",
      "Inputs": [
        {
          "Id": "8165128927eb4867a4279e125d105906",
          "Name": "closedCurve",
          "Description": "Closed curve used as surface boundary\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d68c19719db42f998a69b7a8e1f26a8",
          "Name": "Surface",
          "Description": "Surface created by patch",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double,bool,double",
      "Id": "708c49311e704bd6bbc3234ca264df57",
      "Inputs": [
        {
          "Id": "a678d2d15759415aa63f751c00f84198",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a9f02db397f4d45b80c44437e9f419e",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b556ff57c5974561a3f826588291ff75",
          "Name": "trimCurves",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95fb7220147344feb581b21b33191945",
          "Name": "trimLength",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea67aac4517e4e67b9a2cc3a18b9ad44",
          "Name": "PolyCurve",
          "Description": "Polycurve created by joined curves",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001, trimCurves: bool = false, trimLength: double = 0): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.Direction",
      "Id": "2b2dc3a2e8794d2daa184f3ba638a81a",
      "Inputs": [
        {
          "Id": "4a9f846d29e6474e92c23e5aee460d0b",
          "Name": "line",
          "Description": "Autodesk.DesignScript.Geometry.Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51ad86c0c42a4c36ba2197185d11fb18",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The direction of the Curve\n\nLine.Direction: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "cf6b1e2526ea49e3b8179bd7e99bf8f2",
      "Inputs": [
        {
          "Id": "376d5c0283754aef83fbc4c4ed45b2a9",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a95cb3de0fd4d8a80dde1608c3c869c",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1a6b4a79998464dbd135708ac3216ea",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fabf748b02454a35b1e7a5f6b964e643",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Normalized",
      "Id": "d443be8817834204bddfa359791ef14c",
      "Inputs": [
        {
          "Id": "5908f76e42d54b54a92c1b07aa12cfce",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3154cbc96a8e4e79bfdbf2f789a21434",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the normalized version of a vector\n\nVector.Normalized ( ): Vector"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#################################Module For Functional Programing#############################################\r\nfrom functools import reduce\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nvecs = IN[0]\r\n# Place your code below this line\r\n\r\ndef getXYZ(vecs):\r\n    res = go\\\r\n    (\r\n        vecs,\r\n        map(lambda x: (round(x.X), round(x.Y), round(x.Z))),\r\n        map(str),\r\n    )\r\n    \r\n    return res\r\n# Assign your output to the OUT variable.\r\nOUT = getXYZ(vecs)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "a3222dec76fe41efafe1a59704615f1a",
      "Inputs": [
        {
          "Id": "d0638b277eb64ef9979582e2eea11f1c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1b8169a5b9e428da463cdcd0e16b403",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "7c2910a897364f169799ce609bac9683",
      "Inputs": [
        {
          "Id": "921218520bc24d6592c509c7ea797a80",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54ad591cbdd34b21b559be99e3b385c5",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.IsParallel@Autodesk.DesignScript.Geometry.Vector",
      "Id": "985ded39c04d42dbaa0449e244d0cd86",
      "Inputs": [
        {
          "Id": "8b6a521dc6094890b0b4a34b3d59af20",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f99fff6531604cc4ada8db5d13dca18b",
          "Name": "otherVector",
          "Description": "Other vector\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1664e4f510e41e79a59ba2f2be35be1",
          "Name": "bool",
          "Description": "Returns True if the vectors are parallel; false otherwise.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determine whether two vectors are parallel.\n\nVector.IsParallel (otherVector: Vector): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "5eb56397581242fd93cb649dad6d61e5",
      "Inputs": [
        {
          "Id": "9d9d85b67f2441a59daaba201c090c15",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58e603b4ae31419ab108037da9537048",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[1];",
      "Id": "8e78d0a6d0734f6fb19ff6ddc15f6772",
      "Inputs": [
        {
          "Id": "8d6688e081564eaba376349766988c73",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3e35c3e185e497ea978679ab9b53087",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "5449b19eadde45b9a56e7fe0ad5bebe5",
      "Inputs": [
        {
          "Id": "2390ae9d68b84c8db44122a284c305fb",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c50e940e20c433a983fa9bb2ebf7990",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bccdcd8e73c44ad18899e2cdf022406f",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "8f5ca1301b8c4a46bc8f3548ac020cad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "24d0c9486f094465b0ae4e99c599bfd6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\",\";",
      "Id": "69c45813c87f4708a0c3a1e08ada40be",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8aefbdb75047449aa73e43e18bb420f6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "b546379d151d42d68e463736694d38fe",
      "Inputs": [
        {
          "Id": "01d60ae1affd4e6e9dbb17332be1f88a",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "026ad89e39d847d1a3952f37d7e09472",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b452fb4deb3f4779a297bc2ad1f52daa",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b07f43b4d8b041bc92d9c422b4a9415d",
      "Inputs": [
        {
          "Id": "199eaf9badc84c39b1d4aeecf59de002",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3f08ad6554b4f92940c9cd84e20dd6d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8dde9279cf02476c92db815820d76aa3",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];\ni[1];\ni[2];",
      "Id": "977e362fce7846de822827eaea51de99",
      "Inputs": [
        {
          "Id": "f9cbe8e3500f45e1aec63b9a5a528e94",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eda64617a5ed45909c9aaa6504aa9a78",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba7a444c6faf444b852c0fd680e33812",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b66931c53e64c488465ea1ac1761d76",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "8d3e8db6cc57498cbc9fbd2c6210165d",
      "Inputs": [
        {
          "Id": "db1a4049d90d4832bcc64eca758cd7ab",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b1f94b62c96466aa840503ccc4163fe",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "9f0505151cb04e909879564421c45175",
      "Inputs": [
        {
          "Id": "31dc7e96c3ab464ca145b9ec3b812ea8",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "835fcf11829341adb1264106ac8911c1",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef355cab089542a1bfd803200a636980",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcc02c90d7964099831718c9153e3eed",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Id": "0d258d9830984223a32904fe16bf7b47",
      "Inputs": [
        {
          "Id": "47f06e8b3a5340a3a6bc3efca238a534",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "defe7efb21b0424eb3a8d93fc678b24e",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "5b8e53e034a64d0ab5f5b6e91b40922f",
      "Inputs": [
        {
          "Id": "84fb8c0a0bb74dbdaaa75d50ca3dfec4",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75bb8380e05b4b59b4e49e1cde4f2404",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7dd4869905e14700b99394e82a0b9957",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 3,
      "MaximumValue": 7,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "771af761d15b451fa2e1546f3f52a167",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b56a0bed70be425a9371b845cd1d9da0",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "2bece1c14eb04d5fa1eb1f3fb30f7953",
      "Inputs": [
        {
          "Id": "ed3d5211922e4573aff56c6c2df19017",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cf77415689a47799ddc67c8d2e96604",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Id": "9618a6c425ef4d03bddaba893f28eb6e",
      "Inputs": [
        {
          "Id": "0cd96a46a95b46d792e68aaa12c8cebf",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37b0b9c1875244269a7a8ddf035ed861",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "b91741e284d2438580a6d611f5c1d87f",
      "Inputs": [
        {
          "Id": "aa77070faab94b049220867d0b6d3d0d",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0f7fac773ca14873be5c39d46a5cfd35",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "93f50735e91048f08e3c9d1bfe493915",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d90cd5d48631435d9aa1750a1388ccda",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "3d312b1ca2f546dc8904a9b234a33329",
      "Inputs": [
        {
          "Id": "d8dcfa8c83564f199f610f0f2f1ece05",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "39db9c2ae46340609c7042212aaebe8a",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1cf96ee9346748a882340e1592d8120e",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8062be100d624541a08d5610cd60c39a",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "f1aa099222c943d2b33d3b4ae847b930",
      "Inputs": [
        {
          "Id": "e58c0865e1e24a04954b0be97e73690f",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ffc77ebefdc4eadbc1b55a572f99980",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "86ec88c67b2a4ea694872b89a02ab299",
      "Inputs": [
        {
          "Id": "f06075b0aad541a9bc13eb1a02c2a1de",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7a52c255a74479cbf6ee71a1e1e95ee",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "f28fec9ef53741a695799ac606afcf68",
      "Inputs": [
        {
          "Id": "512034bb636f4891992e07ff5ec14bdf",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "dc0bb4aa115e4209b82bbf2d733222ef",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9b96cbef8f74692b7241a3c21718913",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bd7699d47824a3d922b753b6bb76b18",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 0,
      "MaximumValue": 7,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "23261dae303f4efa8a3332b5d07bb9f3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d91db1f1ee3747a5b9629beaa9329c5a",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "bb8e3bead90a432d81cb99b5dcb01525",
      "Inputs": [
        {
          "Id": "46c59b4b4e444c38931a06d63fe4dcd4",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4477d0b4a60d46e4ac833842479c2d56",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3451a9a340f34e6b9ad0b57d109efa3b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Id": "45de908b349f4c28a838e3690e7c018d",
      "Inputs": [
        {
          "Id": "136aedf08d794a379814abf2ec17d132",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1781a34d69364e8983786e36f8bb510e",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "143d86f3e9e540f69fb5dc26763dffb2",
      "Inputs": [
        {
          "Id": "8b1d6c35d7ed459a83e7bd64c097a71f",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9014bb251af14475991b834d9a0c81e9",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Id": "0c88a20584e342c9ab5de2dd343de3a9",
      "Inputs": [
        {
          "Id": "a0323b0845c947248d2a376627ff7c1d",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd7cca0ee7cf4796835e9ab86c005770",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "f915d82b309f43279c9d060434efc169",
      "Inputs": [
        {
          "Id": "0c5d66f8cde64c5e8ef8fed75f5d2106",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b763ec672eb48539548147305c39089",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "765702529b5e4f7cad704c94e5c2eb09",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "647a0bba04264d0c896bb24112216ce0",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "5c2ed3e93edc4db5aa7bc8b39d8e590a",
      "Inputs": [
        {
          "Id": "255def3172494cc09f9b2a54813159de",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a41cfa8918274edd934b608f64842fc7",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"G\";",
      "Id": "b8f76ad6bb9843a9bb2c5cd8881708e0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0e1ebfb5b32b40aab6acfa45d93801f9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "bd70d470ae2c4ebbbee75f5a3beef249",
      "Inputs": [
        {
          "Id": "4be04c74eeb343c29b042f53f1e6ba6e",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f74afd8f61874bd38b8cbc68bb36f323",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae5c640d9a314c7397d018e436fc7a5b",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59d039fb0e0848acadd0be1166ddd620",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "c65da069732748cc9ae81e80646f9be2",
      "Inputs": [
        {
          "Id": "56a3e3cd8819470f813be707b095d498",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7df2ea257bdd4958adfda5552b877c63",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35fbe252662b419da487f5229db4eca4",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "da3c8c31a3774e1b98dab5e8c064912e",
      "Inputs": [
        {
          "Id": "541e6658fb9e43df8ee3bdb2175b8267",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c350eb640304f5396623bb684dc21fb",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "71b6e2e587cd4f4d96cc85422f9dc589",
      "Inputs": [
        {
          "Id": "4751cf34a9424c8f82cbd1bcd42e0536",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ee455a4be514d5cafb175aa204d8687",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "07f53730be5444039763b4be51d3572c",
      "Inputs": [
        {
          "Id": "c78be5360f7c41bcb26e5c2c723a5ea7",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2cc5657adc43495ca7b45e6ee5361c75",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf24843b1696459591e5cf0e54a2efa5",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a0d561be48fa4b9a8e8bf43bf9c23b98",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "540062591b214874aed5478cf2ec3625",
      "Inputs": [
        {
          "Id": "dd8235c435cf4a799b729169a41c7edd",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "497d6847392c4b82b71f22ecf3a6e412",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "502211ea1fab46718e718ffd6a41931c",
      "Inputs": [
        {
          "Id": "bf0b82dde26e4b3184170cb4dc776b9d",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ee2ba0268a74f35a5d5c231bd029348",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "014ea5ec398b46008fa0592d96874b55",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c962a6a4e5044d40975920fdafb8352f",
      "Inputs": [
        {
          "Id": "d079ca3bc55742a1a22e19bc04be5b73",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "399f3a8f5b7d41748eb1eea34aebc4f5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d06a489916b440897746d68bd21cc73",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "9c8e1e117f674e878ceef3299f255f35",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2adcf27b071b4297b685689615f9df4a",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPerimeterPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "72842b902e264aba8baeb80cd669609b",
      "Inputs": [
        {
          "Id": "948c017cc6b849cf96a1c2900cb600d8",
          "Name": "points",
          "Description": "List of perimeter points\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e8d87b3b6964452b9e8b7ab55e3b6bc",
          "Name": "Surface",
          "Description": "Surface created from perimeter points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Polygon Surface connecting input Points in a closed Polygon and patching it.\n\nSurface.ByPerimeterPoints (points: Point[]): Surface"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript.Geometry import Line\r\n\r\nfrom math import sqrt, hypot\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\npoints = UnwrapElement(IN[0])\r\nalpha = IN[1]\r\n# Place your code below this line\r\n\r\ndef concave_hull(points, alpha):\r\n    res = []\r\n    \r\n    pLen = len(points)\r\n    alpha2 = alpha * alpha\r\n    if pLen < 2:\r\n        raise Exception('AlphaShape needs at least 2 points')\r\n\r\n    for i, p in enumerate(points):\r\n        for j in range(i+1, pLen):\r\n            if p.IsAlmostEqualTo(points[j]):\r\n                raise Exception('AlphaShape needs pairwise distinct points')\r\n            dist = hypot(p.X - points[j].X, p.Y - points[j].Y)                    \r\n            #if (dist > 2 * alpha) : continue #circle fits between points ==> p_i, p_j can't be alpha-exposed                    \r\n    \r\n            x1, y1, x2, y2 = p.X, p.Y, points[j].X, points[j].Y\r\n            midX, midY = (x1 + x2) / 2, (y1 + y2) / 2\r\n    \r\n            #find two circles that contain p_i and p_j; note that center1 == center2 if dist == 2*alpha\r\n            alphaDist = sqrt(alpha2 - (dist / 2) ** 2)\r\n            #alphaDist = alpha2 - (dist / 2) ** 2\r\n            deltaX, deltaY = (x2 - x1) / dist, (y1 - y2) / dist\r\n            c1x, c1y = midX + alphaDist * deltaY, midY + alphaDist * deltaX\r\n            c2x, c2y = midX - alphaDist * deltaY, midY - alphaDist * deltaX\r\n            \r\n            #check if one of the circles is alpha-exposed, i.e. no other point lies in it\r\n            c1_empty = True \r\n            c2_empty = True\r\n            for k in range(pLen):                \r\n                if i == k or j == k: \r\n                    continue\r\n                if ((c1x - points[k].X) * (c1x - points[k].X) + (c1y - points[k].Y) * (c1y - points[k].Y) < alpha2):\r\n                    c1_empty = False\r\n                if ((c2x - points[k].X) * (c2x - points[k].X) + (c2y - points[k].Y) * (c2y - points[k].Y) < alpha2):\r\n                    c2_empty = False\r\n                if not c1_empty and not c2_empty:\r\n                    break\r\n            if c1_empty or c2_empty:\r\n                res.append(Line.ByStartPointEndPoint(p, points[j]))\r\n                #res.append(c1_empty)\r\n    return res\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = concave_hull(points, alpha)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "db0a60aaf203434fa0158243144559fc",
      "Inputs": [
        {
          "Id": "19a14f5bdad1444f923b492b127dbe0b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4434dbca758d4316a04a5791fa5d3c47",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4919a0db4af34ff79cda2885e4f19ae4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "100000;",
      "Id": "e9ccd649b91c4c35aa10f8a4f8db2e15",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fcec23c5575c4e1d901a6df11c894a0a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\npoints, alpha = IN[0],IN[1]\r\n# Place your code below this line\r\n\r\ndef ToVals(pt):\r\n\treturn [pt.X,pt.Y,pt.Z]\r\n\r\ndef ToPts(ptVals):\r\n\treturn Point.ByCoordinates(ptVals[0],ptVals[1],ptVals[2])\r\n\r\ndef CreateOutline(pts):\r\n\tcrvs = []\r\n\ti = 0\r\n\twhile i < len(pts):\r\n\t\tif i == len(pts)-1:\r\n\t\t\tcrvs.append(Line.ByStartPointEndPoint(pts[i],pts[0]))\r\n\t\telse:\r\n\t\t\tcrvs.append(Line.ByStartPointEndPoint(pts[i],pts[i+1]))\r\n\t\ti = i+1\r\n\treturn PolyCurve.ByJoinedCurves(crvs)\r\n\r\n\r\n'''\r\nTaken from Thomas Switzers awesome GitHub repo and modified to suit Dynamo Context\r\nhttps://gist.github.com/arthur-e/5cf52962341310f438e96c1f3c3398b8\r\nI take zero credit for this work other than porting it across.\r\n'''\r\ndef convex_hull_graham(points):\r\n\t'''\r\n\tReturns points on convex hull in CCW order according to Graham's scan algorithm. \r\n\tBy Tom Switzer <thomas.switzer@gmail.com>.\r\n\t'''\r\n\tTURN_LEFT, TURN_RIGHT, TURN_NONE = (1, -1, 0)\r\n\r\n\tdef cmp(a, b):\r\n\t\treturn (a > b) - (a < b)\r\n\t\r\n\tdef turn(p, q, r):\r\n\t\treturn cmp((q[0] - p[0])*(r[1] - p[1]) - (r[0] - p[0])*(q[1] - p[1]), 0)\r\n\t\r\n\tdef _keep_left(hull, r):\r\n\t\twhile len(hull) > 1 and turn(hull[-2], hull[-1], r) != TURN_LEFT:\r\n\t\t\thull.pop()\r\n\t\tif not len(hull) or hull[-1] != r:\r\n\t\t\thull.append(r)\r\n\t\treturn hull\r\n\r\n\tpoints = [ToVals(p) for p in points]\t\r\n\tpoints = sorted(points)\r\n\tl = reduce(_keep_left, points, [])\r\n\tu = reduce(_keep_left, reversed(points), [])\r\n\tpoints = l.extend(u[i] for i in range(1, len(u) - 1)) or l\r\n\tpoints = [ToPts(p) for p in points]\r\n\treturn CreateOutline(points)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = convex_hull_graham(points)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "c5a4f58080784cf5ab0ff0733dd98eee",
      "Inputs": [
        {
          "Id": "9fc5b6f7faed4738b230b330a3e35fac",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75b360e1776a4240a30af401408ff9bc",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "73b5a862f216465fbca3520c4437c090",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "2808d7f3399b488fa8bc49ccae959785",
      "Inputs": [
        {
          "Id": "060773cd65fc4a2481010d008e12abab",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "425c678ce811408ca9a998d6f646bc28",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0668cf785bb4ccd846bfecb60a84db0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 14,
      "MaximumValue": 16,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "642479f75ecd45cda1c815800234a00c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "570837ee3aa04fd2be591253ee6129fa",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 255,
        "G": 105,
        "B": 180,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "fc11d8615603488faf8f5d8d3b3e7953",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d1d28337a0b345b18f4f5cede8188921",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Id": "d6915e6b808943a1b404808e2b47cf1a",
      "Inputs": [
        {
          "Id": "71507c546a80452d82b68ff52d1fb370",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7dd348b14c2f453f94abfdb25463d555",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5269aa6a9cf94851aa77366870cdca5a",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Modifiers.GeometryColor.ByGeometryColor@Autodesk.DesignScript.Geometry.Geometry,DSCore.Color",
      "Id": "0f85cff152c14624939d2f026335fa00",
      "Inputs": [
        {
          "Id": "85b9ea94aa3f483484161f1e0024ff51",
          "Name": "geometry",
          "Description": "The geometry to which you would like to apply color.\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96c1c8189f9b427298240bb0dd218906",
          "Name": "color",
          "Description": "The color.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94a1d06558194cbe898e1906ee5cf94b",
          "Name": "GeometryColor",
          "Description": "A Display object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Display geometry using a color.\n\nGeometryColor.ByGeometryColor (geometry: Geometry, color: Color): GeometryColor"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 170,
        "G": 193,
        "B": 233,
        "A": 154
      },
      "NodeType": "ColorInputNode",
      "Id": "90f1981e767b4adf9ba82687de9ca4fc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d2c836d909f64a9fb6f66bdb4634749d",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Autodesk.DesignScript.Geometry import Line\r\n\r\nfrom math import sqrt, hypot\r\nfrom itertools import combinations\r\n################Module For Functional Programing#########################\r\nfrom functools import reduce; from itertools import chain\r\nfrom itertools import groupby; import operator\r\nfrom copy import deepcopy\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter, map, reduce = curry(filter), curry(map), curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n\r\ndef dictUpdate(dic1,dic2):\r\n    dic1.update(dic2)\r\n    return dic1\r\n    \r\ndef dictsMerge(dics):\r\n    res = reduce(dictUpdate, dics)\r\n    return res\r\n    \r\ndef dictDeleteKeys(dic, keys):\r\n    for k in keys:\r\n        del dic[k]\r\n    return dic\r\n\r\ndef flat(a):\r\n    if isinstance(a, list):\r\n        for i in a: \r\n            yield from flat(i)\r\n    else: yield a\r\n\r\ndef grpBy(iter, key):\r\n    f,keys,grps = key,[],[]\r\n    sorted_ = sorted(iter, key=f)\r\n    for key, grp_data in groupby(sorted_,key=f):\r\n        keys.append(key); grps.append(list(grp_data))\r\n    return grps,keys\r\n#########################################################################\r\n\r\ndef concave_hull_(points, alpha):\r\n    points = UnwrapElement(points)\r\n    res = []\r\n    \r\n    pLen = len(points)\r\n    alpha2 = alpha * alpha\r\n    if pLen < 2:\r\n        raise Exception('AlphaShape needs at least 2 points')\r\n\r\n    for i, p in enumerate(points):\r\n        for j in range(i+1, pLen):\r\n            if p.IsAlmostEqualTo(points[j]):\r\n                raise Exception('AlphaShape needs pairwise distinct points')\r\n            dist = hypot(p.X - points[j].X, p.Y - points[j].Y)                    \r\n            #if (dist > 2 * alpha) : continue #circle fits between points ==> p_i, p_j can't be alpha-exposed                    \r\n    \r\n            x1, y1, x2, y2 = p.X, p.Y, points[j].X, points[j].Y\r\n            midX, midY = (x1 + x2) / 2, (y1 + y2) / 2\r\n    \r\n            #find two circles that contain p_i and p_j; note that center1 == center2 if dist == 2*alpha\r\n            alphaDist = sqrt(alpha2 - (dist / 2) ** 2)\r\n            #alphaDist = alpha2 - (dist / 2) ** 2\r\n            deltaX, deltaY = (x2 - x1) / dist, (y1 - y2) / dist\r\n            c1x, c1y = midX + alphaDist * deltaY, midY + alphaDist * deltaX\r\n            c2x, c2y = midX - alphaDist * deltaY, midY - alphaDist * deltaX\r\n            \r\n            #check if one of the circles is alpha-exposed, i.e. no other point lies in it\r\n            c1_empty = True \r\n            c2_empty = True\r\n            for k in range(pLen):                \r\n                if i == k or j == k: \r\n                    continue\r\n                if ((c1x - points[k].X) * (c1x - points[k].X) + (c1y - points[k].Y) * (c1y - points[k].Y) < alpha2):\r\n                    c1_empty = False\r\n                if ((c2x - points[k].X) * (c2x - points[k].X) + (c2y - points[k].Y) * (c2y - points[k].Y) < alpha2):\r\n                    c2_empty = False\r\n                if not c1_empty and not c2_empty:\r\n                    break\r\n            if c1_empty or c2_empty:\r\n                res.append(Line.ByStartPointEndPoint(p, points[j]))\r\n                #res.append(c1_empty)\r\n    return res\r\n    \r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n#concaveHullfunc = IN[0]\r\ngrids = IN[1]\r\ngridsX, gridsY = grids\r\n\r\n# Place your code below this line\r\n\r\n\r\ndataX = go(\r\n    gridsX,\r\n    lambda x: sorted(x, key=lambda e: e.StartPoint.X),\r\n    lambda x: grpBy(x, key=lambda e: e.StartPoint.X)[0],\r\n    map(lambda x: sorted(x, key=lambda e: e.StartPoint.Y)),\r\n    #2개씩 1간격으로 서브리스트 생성\r\n    map(lambda x: list(map(lambda n: x[n:n+1+1], range(len(x))[:-1]))),\r\n    lambda x: list(chain(*x)),\r\n)\r\ndataY = go(\r\n    gridsY,\r\n    lambda x: sorted(x, key=lambda e: e.StartPoint.X),\r\n    lambda x: grpBy(x, key=lambda e: e.StartPoint.X)[0],\r\n    map(lambda x: sorted(x, key=lambda e: e.StartPoint.Y)),list,\r\n    #2개씩 1간격으로 서브리스트 생성\r\n    lambda x: list(map(lambda n: x[n:n+1+1], range(len(x))[:-1])),\r\n    # 서브리스트 구조 Transpose\r\n    map(lambda x: list(zip(*chain(x)))),\r\n    lambda x: list(chain(*x)),\r\n)\r\n\r\ndef get_IntersectInGrp(xGrp, yGrp):\r\n    res = []\r\n    for x in xGrp:\r\n        for y in yGrp:\r\n            res.append(x.Intersect(y))\r\n    return list(chain(*res))\r\n\r\ndef GetBoundingSrfs(intscts):\r\n    res = []\r\n    try:\r\n        crvSet = concave_hull_(intscts, 100000)\r\n        polyCrv = PolyCurve.ByJoinedCurves(crvSet)\r\n        srf = Surface.ByPatch(polyCrv)\r\n        srfThick = srf.Thicken(10,False)\r\n        bdCube = BoundingBox.ByGeometry(srfThick).ToCuboid()\r\n        bdCubeSrfs = bdCube.Explode()\r\n        bdBelowSrf = go(\r\n            bdCubeSrfs,\r\n            filter(lambda x: x.NormalAtParameter(0.5,0.5).Z == -1),\r\n            list\r\n        )[0]\r\n        return bdBelowSrf\r\n    except: pass\r\n    \r\n    \r\ndef main(xGrps, yGrps):\r\n    res = []\r\n    for xGrp in xGrps:\r\n        for yGrp in yGrps:\r\n            intscts = get_IntersectInGrp(xGrp, yGrp)\r\n            if GetBoundingSrfs(intscts):\r\n                res.append(GetBoundingSrfs(intscts))\r\n    return res\r\n    \r\n# Assign your output to the OUT variable.\r\nOUT = main(dataX, dataY)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "73f1e592e8234c4a80337bece507e18e",
      "Inputs": [
        {
          "Id": "1e4bac5310fc4690ae01e5ae84e29bbc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a432b86df69f47689a1eb4fb442ba6a0",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "48336759b5754bca96954c028174eef1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "6c05d206fdc04701861c13c6ae553ae2",
      "Inputs": [
        {
          "Id": "5ada0c366fe34da0b073be3066ac41b7",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6290dabff3b442390138241a40a4c25",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.DoesIntersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "fd16253c91cf4de6b8d5742bc1bf0fd1",
      "Inputs": [
        {
          "Id": "382138e51d594db69ce62b128cb51e74",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec07692958444801bf27af38bfb4c3df",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "623b090ddbb7456795dae7960bfd5b68",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determine if another Geometry object intersects with this one\n\nGeometry.DoesIntersect (other: Geometry): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[7][0];",
      "Id": "98fc57963f0a428ba07148b7da6a67ee",
      "Inputs": [
        {
          "Id": "04e1b3667b544de7a3411474d6822c46",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b60e10842c6b48ddbae3285e52335243",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "f5b7a1f628004a46859291fc2f22771a",
      "Inputs": [
        {
          "Id": "594a998f36db44e6aaa7934351cf37b8",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "691c633c262a4a77a3da8203dc92395a",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1cdf1a2af9bc43c5ad88aef74d0ead6a",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49d8a4578acd44cf8c13bcd4854cfaa4",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "8ce37ab31de545d9a49734c18d5c0c9c",
      "End": "c53c1089b02141c3860b9b2272c4052a",
      "Id": "9ec8c85f392243f79f445a40e6f32162",
      "IsHidden": "False"
    },
    {
      "Start": "8ce37ab31de545d9a49734c18d5c0c9c",
      "End": "2daffd0a156f460f9c1eb7d1b6f06595",
      "Id": "a72cd2305e1748adb3aff033352fc361",
      "IsHidden": "False"
    },
    {
      "Start": "8ce37ab31de545d9a49734c18d5c0c9c",
      "End": "462c3c81cc704c11bef99f23abb9f8a9",
      "Id": "5c0f9939655e40d3be99d4280bea02fe",
      "IsHidden": "False"
    },
    {
      "Start": "1deee3be24b949e1941b47be2b544582",
      "End": "14f1648433474e7580b1443397bd7356",
      "Id": "a40038268dfc455faac785ea80ab249b",
      "IsHidden": "False"
    },
    {
      "Start": "da87395dd607481685ef5ab7b5947b18",
      "End": "6d825225a7974d83998391a3da8f0a85",
      "Id": "be271e2e0f494c94a4344c6e1cce626f",
      "IsHidden": "False"
    },
    {
      "Start": "f57a3755aaa2428d99627f7616d39764",
      "End": "c6ea57d8d9364ea2ac3cbababfcdc75a",
      "Id": "6e2285f58dd34835af3d9524e87df8a6",
      "IsHidden": "False"
    },
    {
      "Start": "f57a3755aaa2428d99627f7616d39764",
      "End": "920f662ab29649dd902121f861d04b09",
      "Id": "e2b5ec36bb9e407ab7982585edaae841",
      "IsHidden": "False"
    },
    {
      "Start": "2ba074e1d7134cb182e2fa80a0c1a6dd",
      "End": "ca0ece6f96a04bfd814175a989fc2fd0",
      "Id": "0329fae082404d76bac034d611ca5822",
      "IsHidden": "False"
    },
    {
      "Start": "fa8e5f5b1e384e04a59d23b80faaae9e",
      "End": "00e98b6b89dd4c668502feec511cf309",
      "Id": "523cafcf1334402e8b6c9be780b8109e",
      "IsHidden": "False"
    },
    {
      "Start": "e2374e3bb78545738cc15f5e51020b3d",
      "End": "09da2a87a94443ed97aa59513bf130a6",
      "Id": "41df3945c85843618147f1cfae9f54ff",
      "IsHidden": "False"
    },
    {
      "Start": "5602191b73684fe19b817d416256d84b",
      "End": "cff55a44a0344bc69159f1b363cb4d6a",
      "Id": "8b0e55dca47b4c1bbb0e56ceec2ffc35",
      "IsHidden": "False"
    },
    {
      "Start": "6b0fb013892d4515adbedf447d9a48b6",
      "End": "a678d2d15759415aa63f751c00f84198",
      "Id": "2abb7934675a4f5bb5f5cf558f715dcf",
      "IsHidden": "False"
    },
    {
      "Start": "d00715250a44459096e0d6ce0227b2ee",
      "End": "073f9e4a16354394befdc9b20110c8ba",
      "Id": "2fc7dd3c23434fc997a2630d6b3eb6aa",
      "IsHidden": "False"
    },
    {
      "Start": "f42194499ac5465fb25f0084987b5c14",
      "End": "49809fb89e9b4d0cbaeda496ac31f394",
      "Id": "bf5762939c624bb9874e36c3d294b7d9",
      "IsHidden": "False"
    },
    {
      "Start": "181f04d8d6024fc5b2862f79f0edaa7f",
      "End": "f5526cc8678a4770b2a841e58db031e1",
      "Id": "14bd24a9a1744726bccc6ec8131be76f",
      "IsHidden": "False"
    },
    {
      "Start": "da24a77b4b624b388b004a804ea77f86",
      "End": "2af6a0c3a4784aadb129e2bb9b09f000",
      "Id": "5bf2227655294043a777cfc7cbc4fe67",
      "IsHidden": "False"
    },
    {
      "Start": "f0b9aaa4df584a819f1c59fffcece22c",
      "End": "b36df529b0f24605b22babc738baa808",
      "Id": "275cd41256f64bf29c68a3bb8841fd83",
      "IsHidden": "False"
    },
    {
      "Start": "edf52384935743ec8db0d69136fc658d",
      "End": "255def3172494cc09f9b2a54813159de",
      "Id": "fcf6da061ab64efba4facb63b57f5a02",
      "IsHidden": "False"
    },
    {
      "Start": "edf52384935743ec8db0d69136fc658d",
      "End": "4be04c74eeb343c29b042f53f1e6ba6e",
      "Id": "ef2f2b43b6444e529a096ed9d8891bf1",
      "IsHidden": "False"
    },
    {
      "Start": "edf52384935743ec8db0d69136fc658d",
      "End": "479e5c846aad439c95b57a79824089be",
      "Id": "d0cf116b3b304e7e9fca74aaf860526f",
      "IsHidden": "False"
    },
    {
      "Start": "edf52384935743ec8db0d69136fc658d",
      "End": "5ada0c366fe34da0b073be3066ac41b7",
      "Id": "bc2dd3afa25b4c889d33036e54145cf8",
      "IsHidden": "False"
    },
    {
      "Start": "c70184ac59724ffebf33484c4905102b",
      "End": "4a9f846d29e6474e92c23e5aee460d0b",
      "Id": "410cfd48ea2f4738a77220f9b9d3774c",
      "IsHidden": "False"
    },
    {
      "Start": "c70184ac59724ffebf33484c4905102b",
      "End": "376d5c0283754aef83fbc4c4ed45b2a9",
      "Id": "9add318d91784127b30da478ab1bc71c",
      "IsHidden": "False"
    },
    {
      "Start": "6df21ecf7a324927a1c2e211b0bf48f6",
      "End": "4e367542af6442049b1557adfc88017d",
      "Id": "568b79251ecf4d4a892206d754d32fe3",
      "IsHidden": "False"
    },
    {
      "Start": "493c48e8c7554f7b95990cdb049d799a",
      "End": "278c98882eda458ebded23c91549af06",
      "Id": "7026c9aee6154c999d3d18a4a4414de9",
      "IsHidden": "False"
    },
    {
      "Start": "9a342604dbaf4c3db5b9d48b95d0d101",
      "End": "c88710110069449f9d2ac0b7e074b619",
      "Id": "3054e5a78d3246e9b71eb70b5adbbf28",
      "IsHidden": "False"
    },
    {
      "Start": "d18f09fb6f204558a89468e57121e209",
      "End": "01d60ae1affd4e6e9dbb17332be1f88a",
      "Id": "a170a09302734a588e2194e80e407abf",
      "IsHidden": "False"
    },
    {
      "Start": "ea67aac4517e4e67b9a2cc3a18b9ad44",
      "End": "8165128927eb4867a4279e125d105906",
      "Id": "0d6785ebe8444e37a3dd8b99e3f34f7d",
      "IsHidden": "False"
    },
    {
      "Start": "51ad86c0c42a4c36ba2197185d11fb18",
      "End": "5908f76e42d54b54a92c1b07aa12cfce",
      "Id": "0df23a71a97c422eaa70d146a208564d",
      "IsHidden": "False"
    },
    {
      "Start": "a1a6b4a79998464dbd135708ac3216ea",
      "End": "9d9d85b67f2441a59daaba201c090c15",
      "Id": "a29e7c393e614875a75133963faa92f5",
      "IsHidden": "False"
    },
    {
      "Start": "a1a6b4a79998464dbd135708ac3216ea",
      "End": "8d6688e081564eaba376349766988c73",
      "Id": "ba25448d2e3c49c8bd6c26a68bf38618",
      "IsHidden": "False"
    },
    {
      "Start": "a1a6b4a79998464dbd135708ac3216ea",
      "End": "a432b86df69f47689a1eb4fb442ba6a0",
      "Id": "1608b3674dbf4caab1cc265dcbb94630",
      "IsHidden": "False"
    },
    {
      "Start": "3154cbc96a8e4e79bfdbf2f789a21434",
      "End": "d0638b277eb64ef9979582e2eea11f1c",
      "Id": "456bc07b36aa4479bdd45a548a37c7bb",
      "IsHidden": "False"
    },
    {
      "Start": "3154cbc96a8e4e79bfdbf2f789a21434",
      "End": "921218520bc24d6592c509c7ea797a80",
      "Id": "9620f2d00ec2462080a1d8af172172f7",
      "IsHidden": "False"
    },
    {
      "Start": "3154cbc96a8e4e79bfdbf2f789a21434",
      "End": "f99fff6531604cc4ada8db5d13dca18b",
      "Id": "5c0dc11e418b43ab9bbf84da5013922c",
      "IsHidden": "False"
    },
    {
      "Start": "54ad591cbdd34b21b559be99e3b385c5",
      "End": "8b6a521dc6094890b0b4a34b3d59af20",
      "Id": "7bc4dde5605442c3bee185e0eeac7019",
      "IsHidden": "False"
    },
    {
      "Start": "f1664e4f510e41e79a59ba2f2be35be1",
      "End": "4a95cb3de0fd4d8a80dde1608c3c869c",
      "Id": "6e9ac1e9fa6c45f0be9b8d61b7695515",
      "IsHidden": "False"
    },
    {
      "Start": "58e603b4ae31419ab108037da9537048",
      "End": "f9cbe8e3500f45e1aec63b9a5a528e94",
      "Id": "00b6b3d7ea7d430c99dade8a1399264b",
      "IsHidden": "False"
    },
    {
      "Start": "58e603b4ae31419ab108037da9537048",
      "End": "db1a4049d90d4832bcc64eca758cd7ab",
      "Id": "d9bf658ca6fd4140bbb72121cdb0c76f",
      "IsHidden": "False"
    },
    {
      "Start": "58e603b4ae31419ab108037da9537048",
      "End": "31dc7e96c3ab464ca145b9ec3b812ea8",
      "Id": "881b84f77ee14b538dd98a9ee3fd1795",
      "IsHidden": "False"
    },
    {
      "Start": "c3e35c3e185e497ea978679ab9b53087",
      "End": "d8dcfa8c83564f199f610f0f2f1ece05",
      "Id": "c7a7676e9b8941a487697f0560d50b70",
      "IsHidden": "False"
    },
    {
      "Start": "c3e35c3e185e497ea978679ab9b53087",
      "End": "e58c0865e1e24a04954b0be97e73690f",
      "Id": "e282e449f1e14d76a58bc741cba62238",
      "IsHidden": "False"
    },
    {
      "Start": "bccdcd8e73c44ad18899e2cdf022406f",
      "End": "199eaf9badc84c39b1d4aeecf59de002",
      "Id": "aeef61cc5b704e89b94ea11e529e4144",
      "IsHidden": "False"
    },
    {
      "Start": "24d0c9486f094465b0ae4e99c599bfd6",
      "End": "8c50e940e20c433a983fa9bb2ebf7990",
      "Id": "eeef57327a844dc2bb48193ee98dfda2",
      "IsHidden": "False"
    },
    {
      "Start": "8aefbdb75047449aa73e43e18bb420f6",
      "End": "026ad89e39d847d1a3952f37d7e09472",
      "Id": "1ecaa4caaccd41f7b7ff9489b71e588a",
      "IsHidden": "False"
    },
    {
      "Start": "b452fb4deb3f4779a297bc2ad1f52daa",
      "End": "2390ae9d68b84c8db44122a284c305fb",
      "Id": "c337c401198e4aa0b5b966fa5917221b",
      "IsHidden": "False"
    },
    {
      "Start": "8dde9279cf02476c92db815820d76aa3",
      "End": "1d495bc6537641c29fd06dc786c78e04",
      "Id": "79e02256ed9146618d89fd0966d873a6",
      "IsHidden": "False"
    },
    {
      "Start": "6b1f94b62c96466aa840503ccc4163fe",
      "End": "47f06e8b3a5340a3a6bc3efca238a534",
      "Id": "8aa986567f094d4ca87764fc682d178f",
      "IsHidden": "False"
    },
    {
      "Start": "ef355cab089542a1bfd803200a636980",
      "End": "ed3d5211922e4573aff56c6c2df19017",
      "Id": "7729f895f6b6470b80c02fb64eb68347",
      "IsHidden": "False"
    },
    {
      "Start": "ef355cab089542a1bfd803200a636980",
      "End": "aa77070faab94b049220867d0b6d3d0d",
      "Id": "4063b16e77c844569782f5e3c85d97ad",
      "IsHidden": "False"
    },
    {
      "Start": "defe7efb21b0424eb3a8d93fc678b24e",
      "End": "835fcf11829341adb1264106ac8911c1",
      "Id": "2e8b863cbb3f466ca01d6cc38aed1a2d",
      "IsHidden": "False"
    },
    {
      "Start": "7dd4869905e14700b99394e82a0b9957",
      "End": "56a3e3cd8819470f813be707b095d498",
      "Id": "1eb87631d7604f7fbb4bfdce04e1d1e8",
      "IsHidden": "False"
    },
    {
      "Start": "7dd4869905e14700b99394e82a0b9957",
      "End": "bf0b82dde26e4b3184170cb4dc776b9d",
      "Id": "c55681ab2af342d280a2dc3f317785cb",
      "IsHidden": "False"
    },
    {
      "Start": "b56a0bed70be425a9371b845cd1d9da0",
      "End": "75bb8380e05b4b59b4e49e1cde4f2404",
      "Id": "307d7b41045744c2a43e68b10d8a0aa1",
      "IsHidden": "False"
    },
    {
      "Start": "4cf77415689a47799ddc67c8d2e96604",
      "End": "0cd96a46a95b46d792e68aaa12c8cebf",
      "Id": "7fea65fc6c794cfb8e96d52349ed363c",
      "IsHidden": "False"
    },
    {
      "Start": "37b0b9c1875244269a7a8ddf035ed861",
      "End": "0f7fac773ca14873be5c39d46a5cfd35",
      "Id": "61d2fdfe98904db3a5e2c2f9eb9f69f3",
      "IsHidden": "False"
    },
    {
      "Start": "93f50735e91048f08e3c9d1bfe493915",
      "End": "84fb8c0a0bb74dbdaaa75d50ca3dfec4",
      "Id": "53b89ac7a6a84dd69309a988bed8247e",
      "IsHidden": "False"
    },
    {
      "Start": "1cf96ee9346748a882340e1592d8120e",
      "End": "f06075b0aad541a9bc13eb1a02c2a1de",
      "Id": "3efa36af3cc1464e911da29aa0f202a5",
      "IsHidden": "False"
    },
    {
      "Start": "1cf96ee9346748a882340e1592d8120e",
      "End": "512034bb636f4891992e07ff5ec14bdf",
      "Id": "feaf4cacf7284a328c5701d697a63e12",
      "IsHidden": "False"
    },
    {
      "Start": "9ffc77ebefdc4eadbc1b55a572f99980",
      "End": "136aedf08d794a379814abf2ec17d132",
      "Id": "4a56fdcfd929418b89253f43e7c6495a",
      "IsHidden": "False"
    },
    {
      "Start": "b7a52c255a74479cbf6ee71a1e1e95ee",
      "End": "a0323b0845c947248d2a376627ff7c1d",
      "Id": "9aecbc517cea4e248a8c56e007865dac",
      "IsHidden": "False"
    },
    {
      "Start": "c9b96cbef8f74692b7241a3c21718913",
      "End": "46c59b4b4e444c38931a06d63fe4dcd4",
      "Id": "3349a8f2742c4df5aab57f9a4feb1335",
      "IsHidden": "False"
    },
    {
      "Start": "d91db1f1ee3747a5b9629beaa9329c5a",
      "End": "4477d0b4a60d46e4ac833842479c2d56",
      "Id": "d8bd49f7eddd4082b6f68d41de3a1c3f",
      "IsHidden": "False"
    },
    {
      "Start": "3451a9a340f34e6b9ad0b57d109efa3b",
      "End": "7df2ea257bdd4958adfda5552b877c63",
      "Id": "76be7cd466ab48a0acdf5bbd32ad47e8",
      "IsHidden": "False"
    },
    {
      "Start": "3451a9a340f34e6b9ad0b57d109efa3b",
      "End": "c78be5360f7c41bcb26e5c2c723a5ea7",
      "Id": "5d91192bc7164465abae8e1de41c2454",
      "IsHidden": "False"
    },
    {
      "Start": "1781a34d69364e8983786e36f8bb510e",
      "End": "8b1d6c35d7ed459a83e7bd64c097a71f",
      "Id": "7cd65f5831ad453d8a151d0ddc8bf97a",
      "IsHidden": "False"
    },
    {
      "Start": "9014bb251af14475991b834d9a0c81e9",
      "End": "39db9c2ae46340609c7042212aaebe8a",
      "Id": "408e6c348be84575ac3024b2a09e5427",
      "IsHidden": "False"
    },
    {
      "Start": "dd7cca0ee7cf4796835e9ab86c005770",
      "End": "dc0bb4aa115e4209b82bbf2d733222ef",
      "Id": "96d054e22bbe47dc9dcb36be17c70ee2",
      "IsHidden": "False"
    },
    {
      "Start": "647a0bba04264d0c896bb24112216ce0",
      "End": "f74afd8f61874bd38b8cbc68bb36f323",
      "Id": "1436f967ba464f8daf5da7572964f007",
      "IsHidden": "False"
    },
    {
      "Start": "a41cfa8918274edd934b608f64842fc7",
      "End": "0c5d66f8cde64c5e8ef8fed75f5d2106",
      "Id": "7cca8521eb454ca58d1a7e157f602e53",
      "IsHidden": "False"
    },
    {
      "Start": "0e1ebfb5b32b40aab6acfa45d93801f9",
      "End": "2b763ec672eb48539548147305c39089",
      "Id": "ae7ed234d5c946239824904a2ef07a51",
      "IsHidden": "False"
    },
    {
      "Start": "35fbe252662b419da487f5229db4eca4",
      "End": "541e6658fb9e43df8ee3bdb2175b8267",
      "Id": "bdcf67d11d104129850452339756badf",
      "IsHidden": "False"
    },
    {
      "Start": "8c350eb640304f5396623bb684dc21fb",
      "End": "4751cf34a9424c8f82cbd1bcd42e0536",
      "Id": "8e2d627aa6734fbd93469111ef54d2ec",
      "IsHidden": "False"
    },
    {
      "Start": "4ee455a4be514d5cafb175aa204d8687",
      "End": "2cc5657adc43495ca7b45e6ee5361c75",
      "Id": "df877002b6214e35be5a20ed9e8f6054",
      "IsHidden": "False"
    },
    {
      "Start": "cf24843b1696459591e5cf0e54a2efa5",
      "End": "dd8235c435cf4a799b729169a41c7edd",
      "Id": "434ba4a35e1644d6a7bb84e74f747454",
      "IsHidden": "False"
    },
    {
      "Start": "497d6847392c4b82b71f22ecf3a6e412",
      "End": "1ee2ba0268a74f35a5d5c231bd029348",
      "Id": "e390a8db3a1b4e8fae28aa9c13a2289d",
      "IsHidden": "False"
    },
    {
      "Start": "014ea5ec398b46008fa0592d96874b55",
      "End": "d079ca3bc55742a1a22e19bc04be5b73",
      "Id": "9ac6d2051a4e4b99b1c08e5fb0031d7c",
      "IsHidden": "False"
    },
    {
      "Start": "6d06a489916b440897746d68bd21cc73",
      "End": "19a14f5bdad1444f923b492b127dbe0b",
      "Id": "441d93f7bd1645eb91d3562479675e4e",
      "IsHidden": "False"
    },
    {
      "Start": "fcec23c5575c4e1d901a6df11c894a0a",
      "End": "4434dbca758d4316a04a5791fa5d3c47",
      "Id": "5c2bc7dab312401eb0a23311bbaba36e",
      "IsHidden": "False"
    },
    {
      "Start": "a0668cf785bb4ccd846bfecb60a84db0",
      "End": "71507c546a80452d82b68ff52d1fb370",
      "Id": "6a7e6e7e8fdb4dde9ea8f46b955bbfcc",
      "IsHidden": "False"
    },
    {
      "Start": "570837ee3aa04fd2be591253ee6129fa",
      "End": "425c678ce811408ca9a998d6f646bc28",
      "Id": "3cd691d2cd154d2db34e134bdd3963aa",
      "IsHidden": "False"
    },
    {
      "Start": "d1d28337a0b345b18f4f5cede8188921",
      "End": "7dd348b14c2f453f94abfdb25463d555",
      "Id": "498d9fb718a74baaa494bf6bf51a95f1",
      "IsHidden": "False"
    },
    {
      "Start": "d2c836d909f64a9fb6f66bdb4634749d",
      "End": "96c1c8189f9b427298240bb0dd218906",
      "Id": "8f380da0679b48b581301aa8b20d32d4",
      "IsHidden": "False"
    },
    {
      "Start": "48336759b5754bca96954c028174eef1",
      "End": "060773cd65fc4a2481010d008e12abab",
      "Id": "fe15bb7adfbb4f3eb5472f67bd51e39d",
      "IsHidden": "False"
    },
    {
      "Start": "48336759b5754bca96954c028174eef1",
      "End": "85b9ea94aa3f483484161f1e0024ff51",
      "Id": "89858c92403c4c8d9f0a49fdddcd0073",
      "IsHidden": "False"
    },
    {
      "Start": "48336759b5754bca96954c028174eef1",
      "End": "ec07692958444801bf27af38bfb4c3df",
      "Id": "f0a350b246fe43e9b4f7dd92c4fad5bb",
      "IsHidden": "False"
    },
    {
      "Start": "48336759b5754bca96954c028174eef1",
      "End": "594a998f36db44e6aaa7934351cf37b8",
      "Id": "ca50b43a53734eeeb0d6f50d490f0b40",
      "IsHidden": "False"
    },
    {
      "Start": "e6290dabff3b442390138241a40a4c25",
      "End": "04e1b3667b544de7a3411474d6822c46",
      "Id": "588a517b514e407fbc8abf195eab1782",
      "IsHidden": "False"
    },
    {
      "Start": "623b090ddbb7456795dae7960bfd5b68",
      "End": "691c633c262a4a77a3da8203dc92395a",
      "Id": "25a2a59d678f413bb161e4cc0b3609f3",
      "IsHidden": "False"
    },
    {
      "Start": "b60e10842c6b48ddbae3285e52335243",
      "End": "382138e51d594db69ce62b128cb51e74",
      "Id": "bcc83a9abf254459ba2205bdad40fb9f",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 5610.431640625,
      "EyeY": 8885.556640625,
      "EyeZ": 17405.2734375,
      "LookX": -2756.8154296875,
      "LookY": -1653.14892578125,
      "LookZ": -5829.4296875,
      "UpX": -0.01492241770029068,
      "UpY": 0.99939060211181641,
      "UpZ": -0.031555719673633575
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "All Elements of Category",
        "ShowGeometry": false,
        "Id": "b2a49b909bc541aeb001385b890bfea8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2303.8050389692758,
        "Y": 95.54870010032846
      },
      {
        "Name": "Categories",
        "ShowGeometry": false,
        "Id": "97c54e52b6d24fe8bc68f1f5535565b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2660.8050389692753,
        "Y": 95.54870010032846
      },
      {
        "Name": "Element.GetLocation",
        "ShowGeometry": false,
        "Id": "5f3ca38487e94ee2b4bcd9b06f481ffb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1946.8050389692758,
        "Y": 337.88118233378225
      },
      {
        "Name": "Rooms By Status",
        "ShowGeometry": true,
        "Id": "dfee72e7cc844747b135c981fc877574",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 187.52472396236544,
        "Y": 3012.4702329368874
      },
      {
        "Name": "Room.CoreCenterBoundary",
        "ShowGeometry": false,
        "Id": "211688b734bd41209dba730bad6261bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1006.3124273963992,
        "Y": 3038.2371505573019
      },
      {
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": false,
        "Id": "1fa59893c2834090b96809dd740dce16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1376.0273739594886,
        "Y": 3140.3133310898716
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": false,
        "Id": "d5924a99a9ff46cc9f9773b80b74086a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1568.7194355087468,
        "Y": -267.0653152750258
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "1288abe4e92e4f21b8b340b06eb1c81c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1978.6080180741124,
        "Y": -203.36786033603403
      },
      {
        "Name": "Element.Parameters",
        "ShowGeometry": true,
        "Id": "f0a071aa4b4b45a1a38beed1baf029b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 787.43690581803048,
        "Y": 3392.0112008833266
      },
      {
        "Name": "Select Model Element By Category",
        "ShowGeometry": false,
        "Id": "20a02cce84a44caead6a8a4fc1ff417b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -395.50526379355642,
        "Y": -957.32055466271117
      },
      {
        "Name": "Element.Geometry",
        "ShowGeometry": false,
        "Id": "de91f984a28c4eeb8800728158f62b92",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 0.68323211922097471,
        "Y": -976.54197088389378
      },
      {
        "Name": "getBottomCrv",
        "ShowGeometry": false,
        "Id": "0d3fc64fb53c4ef0b776477c7c2bfede",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 345.4637691873121,
        "Y": -996.05269981064066
      },
      {
        "Name": "Geometry.Explode",
        "ShowGeometry": false,
        "Id": "828dc4e2cd03413eab87223e6b809e1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 975.93058842272194,
        "Y": -1308.0719349310298
      },
      {
        "Name": "List.GroupByKey",
        "ShowGeometry": false,
        "Id": "6c2e1968b221451293a51d60f438750b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -673.33059872394369,
        "Y": 209.86430261211319
      },
      {
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Id": "0235d20c40764180bb8cf0f982eae897",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1612.8050389692758,
        "Y": 337.88118233378225
      },
      {
        "Name": "Point.Z",
        "ShowGeometry": false,
        "Id": "893fce6d25e14740810a1d0fe97a6d64",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1316.8050389692758,
        "Y": 337.88118233378225
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Id": "d9faa17160604ecd954990eb0a8bd654",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1014.8050389692758,
        "Y": 394.88118233378225
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "2c122bbcd0d740e8a51810fc1c3e7670",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1316.8050389692758,
        "Y": 485.70868233378224
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "ac0f890652e848559107af5797497836",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -327.04488780718157,
        "Y": 375.73533459473663
      },
      {
        "Name": "Element.GetLocation",
        "ShowGeometry": false,
        "Id": "023defe944064ba3915c3c5d1d549e69",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1063.1680159206403,
        "Y": 208.4346162541799
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "75c0ae7762784a6dbedc1aed2765c5cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 238.67336028076272,
        "Y": 1869.1851790947417
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "9254457efbcc4dd38af8a446011532fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 550.67336028076249,
        "Y": 1863.1851790947417
      },
      {
        "Name": "getColumnCrv",
        "ShowGeometry": true,
        "Id": "8b448b05d212466ca09dac41f01a35ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1594.2682358260474,
        "Y": 1861.9881664110922
      },
      {
        "Name": "filterAGCols",
        "ShowGeometry": true,
        "Id": "5947929000cd4f26be10262504b830f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1190.0820050752059,
        "Y": 1864.1135327685538
      },
      {
        "Name": "제외단면",
        "ShowGeometry": true,
        "Id": "1d286349bcf440bd803fce47b14800ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -505.31806044194946,
        "Y": 2455.3968022991085
      },
      {
        "Name": "Surface.ByPatch",
        "ShowGeometry": false,
        "Id": "e05105b48fb44d8c94e40f4d5f33ffcd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1150.4629287800362,
        "Y": -1055.3357805867458
      },
      {
        "Name": "PolyCurve.ByJoinedCurves",
        "ShowGeometry": false,
        "Id": "708c49311e704bd6bbc3234ca264df57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 631.01696206433144,
        "Y": -951.91783449450077
      },
      {
        "Name": "Line.Direction",
        "ShowGeometry": false,
        "Id": "2b2dc3a2e8794d2daa184f3ba638a81a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1397.7824437480376,
        "Y": 414.57528029581692
      },
      {
        "Name": "List.GroupByKey",
        "ShowGeometry": false,
        "Id": "cf6b1e2526ea49e3b8179bd7e99bf8f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2619.120729234116,
        "Y": 217.76670518127617
      },
      {
        "Name": "Vector.Normalized",
        "ShowGeometry": false,
        "Id": "d443be8817834204bddfa359791ef14c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1610.6242273551379,
        "Y": 415.32267877694113
      },
      {
        "Name": "getXYZ",
        "ShowGeometry": false,
        "Id": "a3222dec76fe41efafe1a59704615f1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1994.9036005443795,
        "Y": 714.71769135192835
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Id": "7c2910a897364f169799ce609bac9683",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1945.1976198156794,
        "Y": 415.33836639446486
      },
      {
        "Name": "Vector.IsParallel",
        "ShowGeometry": false,
        "Id": "985ded39c04d42dbaa0449e244d0cd86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2256.9472870626405,
        "Y": 497.17690958458581
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "5eb56397581242fd93cb649dad6d61e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4237.9884557136,
        "Y": -57.269802214220363
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "8e78d0a6d0734f6fb19ff6ddc15f6772",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4259.2861084405395,
        "Y": 549.87884658660062
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "5449b19eadde45b9a56e7fe0ad5bebe5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 368.01721263886077,
        "Y": 2527.3968022991085
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8f5ca1301b8c4a46bc8f3548ac020cad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -12.982787361139231,
        "Y": 2633.2243022991088
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "69c45813c87f4708a0c3a1e08ada40be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -266.98278736113934,
        "Y": 2489.2243022991088
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "b546379d151d42d68e463736694d38fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -12.982787361139231,
        "Y": 2455.3968022991085
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "b07f43b4d8b041bc92d9c422b4a9415d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 749.01721263886077,
        "Y": 2527.3968022991085
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "977e362fce7846de822827eaea51de99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4498.6059145781182,
        "Y": -440.16502434186759
      },
      {
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Id": "8d3e8db6cc57498cbc9fbd2c6210165d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4572.4290719728942,
        "Y": 69.744838878575422
      },
      {
        "Name": "List.GroupByKey",
        "ShowGeometry": false,
        "Id": "9f0505151cb04e909879564421c45175",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5154.1951479181826,
        "Y": -60.903765535205366
      },
      {
        "Name": "Point.X",
        "ShowGeometry": false,
        "Id": "0d258d9830984223a32904fe16bf7b47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4831.1532292254542,
        "Y": 68.582012908474439
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "5b8e53e034a64d0ab5f5b6e91b40922f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6959.0845737172076,
        "Y": -110.27477835562104
      },
      {
        "Name": "Integer Slider",
        "ShowGeometry": false,
        "Id": "771af761d15b451fa2e1546f3f52a167",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6305.4291062784605,
        "Y": -210.59461367554292
      },
      {
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Id": "2bece1c14eb04d5fa1eb1f3fb30f7953",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5709.7827143680433,
        "Y": 161.08011938027718
      },
      {
        "Name": "Point.Y",
        "ShowGeometry": false,
        "Id": "9618a6c425ef4d03bddaba893f28eb6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5993.8094812964109,
        "Y": 163.98936175323524
      },
      {
        "Name": "List.SortByKey",
        "ShowGeometry": false,
        "Id": "b91741e284d2438580a6d611f5c1d87f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6364.3677005147811,
        "Y": -63.028448372305661
      },
      {
        "Name": "List.GroupByKey",
        "ShowGeometry": false,
        "Id": "3d312b1ca2f546dc8904a9b234a33329",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5395.0886906950273,
        "Y": 544.112429105706
      },
      {
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Id": "f1aa099222c943d2b33d3b4ae847b930",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4480.9704016217756,
        "Y": 682.22485898678485
      },
      {
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Id": "86ec88c67b2a4ea694872b89a02ab299",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5835.3397790783874,
        "Y": 657.47324538944213
      },
      {
        "Name": "List.SortByKey",
        "ShowGeometry": false,
        "Id": "f28fec9ef53741a695799ac606afcf68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6605.2612432916276,
        "Y": 541.98774626860575
      },
      {
        "Name": "Integer Slider",
        "ShowGeometry": false,
        "Id": "23261dae303f4efa8a3332b5d07bb9f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6312.0234552156226,
        "Y": 409.70146438021203
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "bb8e3bead90a432d81cb99b5dcb01525",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6955.28921825808,
        "Y": 475.00303900530162
      },
      {
        "Name": "Point.Y",
        "ShowGeometry": false,
        "Id": "45de908b349f4c28a838e3690e7c018d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4776.9704016217756,
        "Y": 682.22485898678474
      },
      {
        "Name": "String from Object",
        "ShowGeometry": false,
        "Id": "143d86f3e9e540f69fb5dc26763dffb2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5078.9704016217756,
        "Y": 682.22485898678474
      },
      {
        "Name": "Point.X",
        "ShowGeometry": false,
        "Id": "0c88a20584e342c9ab5de2dd343de3a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6131.3397790783874,
        "Y": 657.47324538944213
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": false,
        "Id": "f915d82b309f43279c9d060434efc169",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 271.72696098212646,
        "Y": 498.66533697444845
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": false,
        "Id": "5c2ed3e93edc4db5aa7bc8b39d8e590a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -29.828615729498438,
        "Y": 498.66533697444856
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "b8f76ad6bb9843a9bb2c5cd8881708e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 41.273411964180013,
        "Y": 683.85516388492113
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": false,
        "Id": "bd70d470ae2c4ebbbee75f5a3beef249",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 575.142843995745,
        "Y": 374.9720267806411
      },
      {
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": false,
        "Id": "c65da069732748cc9ae81e80646f9be2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7311.3456381954811,
        "Y": 249.44743486319976
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Id": "da3c8c31a3774e1b98dab5e8c064912e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7631.4942506524321,
        "Y": 250.96283165376062
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": false,
        "Id": "71b6e2e587cd4f4d96cc85422f9dc589",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7885.8794072051242,
        "Y": 256.4690038735157
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": false,
        "Id": "07f53730be5444039763b4be51d3572c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8211.58270950922,
        "Y": 518.169596838345
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "540062591b214874aed5478cf2ec3625",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8561.10499037462,
        "Y": 386.70446997152118
      },
      {
        "Name": "Geometry.Intersect",
        "ShowGeometry": false,
        "Id": "502211ea1fab46718e718ffd6a41931c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8844.63082783354,
        "Y": -107.26528222759168
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "c962a6a4e5044d40975920fdafb8352f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9229.6329114524888,
        "Y": -108.85803756298242
      },
      {
        "Name": "Boolean",
        "ShowGeometry": false,
        "Id": "9c8e1e117f674e878ceef3299f255f35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9938.0168990230559,
        "Y": 260.28863508548625
      },
      {
        "Name": "Surface.ByPerimeterPoints",
        "ShowGeometry": false,
        "Id": "72842b902e264aba8baeb80cd669609b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10365.878377174946,
        "Y": -226.29767001369231
      },
      {
        "Name": "Concave_Hull",
        "ShowGeometry": false,
        "Id": "db0a60aaf203434fa0158243144559fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9547.6502711173835,
        "Y": -242.697765240016
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "e9ccd649b91c4c35aa10f8a4f8db2e15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9261.027207146748,
        "Y": -358.39881864776351
      },
      {
        "Name": "Convex_Hull",
        "ShowGeometry": false,
        "Id": "c5a4f58080784cf5ab0ff0733dd98eee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 10284.999304251669,
        "Y": -883.96176439024089
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "2808d7f3399b488fa8bc49ccae959785",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3625.0617089484663,
        "Y": -568.57662808559894
      },
      {
        "Name": "Integer Slider",
        "ShowGeometry": false,
        "Id": "642479f75ecd45cda1c815800234a00c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3133.1974145747495,
        "Y": -624.13009444934926
      },
      {
        "Name": "Color Palette",
        "ShowGeometry": false,
        "Id": "fc11d8615603488faf8f5d8d3b3e7953",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3621.9386503734272,
        "Y": -832.315510732285
      },
      {
        "Name": "GeometryColor.ByGeometryColor",
        "ShowGeometry": true,
        "Id": "d6915e6b808943a1b404808e2b47cf1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3978.987669279094,
        "Y": -716.98818095014792
      },
      {
        "Name": "GeometryColor.ByGeometryColor",
        "ShowGeometry": true,
        "Id": "0f85cff152c14624939d2f026335fa00",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4020.97053164088,
        "Y": -276.60863999470837
      },
      {
        "Name": "Color Palette",
        "ShowGeometry": false,
        "Id": "90f1981e767b4adf9ba82687de9ca4fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3730.8019130284465,
        "Y": -293.31006089949926
      },
      {
        "Name": "Frame 사이 일괄 면 생성_new",
        "ShowGeometry": false,
        "Id": "73f1e592e8234c4a80337bece507e18e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3067.6430300355423,
        "Y": 47.791601273293281
      },
      {
        "Name": "Element.Geometry",
        "ShowGeometry": true,
        "Id": "6c05d206fdc04701861c13c6ae553ae2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3089.0178233700817,
        "Y": 603.85696666949866
      },
      {
        "Name": "Geometry.DoesIntersect",
        "ShowGeometry": true,
        "Id": "fd16253c91cf4de6b8d5742bc1bf0fd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3602.7288202521631,
        "Y": 457.34704297013803
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "98fc57963f0a428ba07148b7da6a67ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3361.0758203029909,
        "Y": 687.88626954551432
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": false,
        "Id": "f5b7a1f628004a46859291fc2f22771a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4040.4474482860423,
        "Y": 232.86680630594003
      }
    ],
    "Annotations": [
      {
        "Id": "53073e6821ef4c498138d68d19ba94d3",
        "Title": "제외 단면 명 리스트 정리구간",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5449b19eadde45b9a56e7fe0ad5bebe5",
          "8f5ca1301b8c4a46bc8f3548ac020cad",
          "69c45813c87f4708a0c3a1e08ada40be",
          "b546379d151d42d68e463736694d38fe",
          "b07f43b4d8b041bc92d9c422b4a9415d"
        ],
        "HasNestedGroups": false,
        "Left": -276.98278736113934,
        "Top": 2382.3968022991085,
        "Width": 1231.0,
        "Height": 382.82750000000033,
        "FontSize": 36.0,
        "InitialTop": 2455.3968022991085,
        "InitialHeight": 322.82750000000033,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5e1c2ba24894461f81d5e692f9155de3",
        "Title": "빔 위치 커브 X, Y 축 분개",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "023defe944064ba3915c3c5d1d549e69",
          "2b2dc3a2e8794d2daa184f3ba638a81a",
          "cf6b1e2526ea49e3b8179bd7e99bf8f2",
          "d443be8817834204bddfa359791ef14c",
          "a3222dec76fe41efafe1a59704615f1a",
          "7c2910a897364f169799ce609bac9683",
          "985ded39c04d42dbaa0449e244d0cd86"
        ],
        "HasNestedGroups": false,
        "Left": 1053.1680159206403,
        "Top": 135.4346162541799,
        "Width": 1799.9527133134757,
        "Height": 723.28307509774845,
        "FontSize": 36.0,
        "InitialTop": 208.4346162541799,
        "InitialHeight": 651.28307509774845,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e977047c760d44748c0a3fc7033ee7dc",
        "Title": "1방향인 경우",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3610.6736368755551,
        "Top": 1019.0664700609714,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -1479.4111022596194,
    "Y": 170.64475718282921,
    "Zoom": 0.72135661195761747
  }
}