{
  "Uuid": "541a3871-5f43-4c2f-bcf0-c24585819cf0",
  "IsCustomNode": false,
  "Description": "Create Draft Modeling in Plant-Architecture Bidding Stage",
  "Name": "#1_Bid_Draft Model_Automation_1.0.0",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "6084901b4746495493b4306a7955dd85",
      "Name": "5. Select : Structural Column Types",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "H_SC_ACC_W600xL600",
      "Description": "Select a structural column type in the active document",
      "SelectedIndex": 5
    },
    {
      "Id": "36e20a3c3078426190f5d59ec14c9317",
      "Name": "6. Select : Structural Framing Types",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "H_SB_ACB_B300xH600",
      "Description": "Select a structural framing type in the active document",
      "SelectedIndex": 0
    },
    {
      "Id": "61d6e073a14341d7a785cec24d2232a1",
      "Name": "2. Select : Floor Types",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "H_FL_AMF_RC Slab_T150",
      "Description": "All floor types available in the document.",
      "SelectedIndex": 5
    },
    {
      "Id": "d8cbb69f737d4a1b8942c063512b95b0",
      "Name": "1. Select: Roof Types",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "H_RF_AMF_RC Roof Finish_WP_Insulation_Protection",
      "Description": "All roof types in the current document.",
      "SelectedIndex": 0
    },
    {
      "Id": "d83febe4f2d34cd0ac2ac08b63083b3b",
      "Name": "4. Select : Pedestal Types",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "H_SC_ACC_UG PED_W600xL600",
      "Description": "Select a structural column type in the active document",
      "SelectedIndex": 1
    },
    {
      "Id": "9e781073830943beaebb5ee8440c4675",
      "Name": "3. Select : Foundation Types",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "Foundation Rectangular (Non-Pile):H_SF_AR_S18_W2400xL2400xT500_Bitumen",
      "Description": "All family types available in the document.",
      "SelectedIndex": 39
    },
    {
      "Id": "33b419e9a8b44f89b31274ad2b101314",
      "Name": "7. Select : Tie Girder Types",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "H_SB_ACB_TG_B400xH600",
      "Description": "Select a structural framing type in the active document",
      "SelectedIndex": 4
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Grid.Curve",
      "Id": "da8910ee65e74768b05cee180ac3630d",
      "Inputs": [
        {
          "Id": "4918d350cc21418eb8f8187ab6413805",
          "Name": "grid",
          "Description": "Revit.Elements.Grid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e916938e021497eb3bb15bf7322d04e",
          "Name": "Curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the underlying Curve geometry from this Element\n\nGrid.Curve: Curve"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "6ff858a4df3d4590851814caf27869c7",
      "Inputs": [
        {
          "Id": "e7bf80dc5c3c45808dd51c5793bb9ef7",
          "Name": "Category",
          "Description": "카테고리",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39047913b04241ec9a7ed116720985d4",
          "Name": "Elements",
          "Description": "요소 클래스입니다.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 267,
      "SelectedString": "OST_Grids",
      "NodeType": "ExtensionNode",
      "Id": "1782ee80aa8f40cbbb52c4e0ef51fd8c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9c293fa91ff648b184f2c1ee5a43430e",
          "Name": "Category",
          "Description": "선택된 카테고리.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "b5a74bc4e07c41e68b364b4beac0f918",
      "Inputs": [
        {
          "Id": "a51be42f6ab345b98e75530ea30acdb5",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76b0f4fb39734ea1adf0d965dadcdfcd",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61f457aaf34943b98f4fcaee4d7e8ab3",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f874431b8de64c9d80e1b85ef770a81b",
      "Inputs": [
        {
          "Id": "fbebebcb909f42768124488fcaef55a0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db3b2c29fd834d78bf953a056ab0646f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9cd7645db2341cebb73786fa45eb5e1",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.Type@var",
      "Id": "2255244388dd4825be39b5826d84e005",
      "Inputs": [
        {
          "Id": "6db21ab80e6b481b9c47c96a7a33eb0b",
          "Name": "object",
          "Description": "Object to query type\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b724db8864104b70894242d1ef45668d",
          "Name": "string",
          "Description": "Type of object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the type of object represented as string.\n\nObject.Type (object: var): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "point",
      "Id": "65155b78d58e4f7b8486ea9271dfac49",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e8c339faf3e742cc80c3e8533efcc854",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "1d1bb0772a1b46dcb5332ef1dfc2c61d",
      "Inputs": [
        {
          "Id": "74e905d95e1d40e89671a3f216b3075b",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3de456de8bf043b988c3afa35beaa9bf",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e05067ff7fde4d70b9cfa36084160ec7",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5bc20e67b502464eb87e11d15ae14a05",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "9ac7a9c137a74e94ae3da47af70b7992",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "59c053d047f6488c8d7df514fbf94503",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "1bbd0373bc0644ffbe08ffc5a003f5dc",
      "Inputs": [
        {
          "Id": "f3de64c1fec84ff487739a50d0d9d850",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ba83a5c881740c2955f91f18aaa5e95",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a70249b61df446a2823c5cbaf25e4200",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b3c64729b31241769e68693f29d64008",
      "Inputs": [
        {
          "Id": "b3da605eccc54de58d60be0d8bf17105",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1684a07fe03642d0a4b3f5adda692be4",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32aaf1dc0bb24ddabdc877dfa444c14f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "3daac58052cc43ce998337e06a938416",
      "Inputs": [
        {
          "Id": "63e16b276f6b47e39386cfce433e2b5f",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0feaa20058a245e48fd8d2785f21324a",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6bdd489461d47a1b277e2a068c4e431",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 287,
      "SelectedString": "OST_Levels",
      "NodeType": "ExtensionNode",
      "Id": "99295404975a4691ab2bea3fa01f158a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2589d9cb8874fec92bf42a2c0f8a534",
          "Name": "Category",
          "Description": "선택된 카테고리.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "72feccdc4967423b88bc66771c79a24c",
      "Inputs": [
        {
          "Id": "8299a36f06e8485eaca39d39127fe1c2",
          "Name": "Category",
          "Description": "카테고리",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "11ae8eae5652429cab7bb67b53f7a21a",
          "Name": "Elements",
          "Description": "요소 클래스입니다.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Id": "61521cb278404175ad783d335452726f",
      "Inputs": [
        {
          "Id": "c05eacb6418f40b29eab9378c2af13ce",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aed305d5a3c54cf09b68a1626e8c3e18",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "9cd7a71b5a764557874470f6610e326c",
      "Inputs": [
        {
          "Id": "bdebdf81425e4d11b19919ddb8e2c48f",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e2153a98364488cb614a6dcd5317f50",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "5bf77bef596a474baa67c21ef720a5f1",
      "Inputs": [
        {
          "Id": "cd5b26f5bee24d61b207fa2ae5a221d2",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a22657354494d159dc89baa1e73ed21",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea269e8acdc04d3f93eb36aa4c55cf0d",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "6dd9d292589849ff814796afd847b48e",
      "Inputs": [
        {
          "Id": "f036ccc111be437aa60dc9a139d477bc",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc296b2d40314be6bf378ddb04f4be1a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ec4dcc1e62847a0b9f73e890eca4289",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Id": "1e91d149d53b4d538abb4428ae762f8c",
      "Inputs": [
        {
          "Id": "76b5f42a9bb64ad5afad7d94a1cac2cf",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c20f42e1c0804a4f9e1dc4e7cfaa6655",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@double,double,double",
      "Id": "d0eea3d974114ead84bb2c9ce312c3a6",
      "Inputs": [
        {
          "Id": "464e0ac8e610485db64cac8586ab25f2",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13f4149c980642f0b3cdd98bb310cb70",
          "Name": "xTranslation",
          "Description": "Displacement along X-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60ec1f94125d417f855d59746273fa39",
          "Name": "yTranslation",
          "Description": "Displacement along Y-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0af5008a66624d1f89b0f85702c8203f",
          "Name": "zTranslation",
          "Description": "Displacement along Z-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25fbaf201b7b42b280652f459431c04a",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Translates any given geometry by the given displacements in the x, y, and z directions defined in WCS respectively.\n\nGeometry.Translate (xTranslation: double = 0, yTranslation: double = 0, zTranslation: double = 0): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "84e66ea0d2eb4b8dabd6a9628a0a8d80",
      "Inputs": [
        {
          "Id": "7573e638e7e24b029da2170624dded4c",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c10ecc02b4a9421985580b15c10a5cce",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "73c08f8e05b149919dd0e28c3f50d5dc",
      "Inputs": [
        {
          "Id": "5797332821a346d29372a5cee733dd53",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82d8e6affde44f0183b53b90a667f776",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa3a78889a044e51b6b8762905611fa8",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": -1.0,
      "Id": "1c9dc30184a84cc9ab6c4aa417424c0f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f2aa6dc421504deaa5fad431db61a906",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@double,double,double",
      "Id": "5798cb7700084542b4c58b88172166a3",
      "Inputs": [
        {
          "Id": "49f220c4b158401e827d9892265427fe",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f83adff0d394c1b9104d0f16782cb62",
          "Name": "xTranslation",
          "Description": "Displacement along X-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a0c41b7666bb4aaaa74073c2eec3256d",
          "Name": "yTranslation",
          "Description": "Displacement along Y-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6cb73fec955444029be6ab72c89d6fad",
          "Name": "zTranslation",
          "Description": "Displacement along Z-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eafb30e90d014f26bc0fb7d288dd46d8",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Translates any given geometry by the given displacements in the x, y, and z directions defined in WCS respectively.\n\nGeometry.Translate (xTranslation: double = 0, yTranslation: double = 0, zTranslation: double = 0): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.StructuralFraming.ColumnByCurve@Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level,Revit.Elements.FamilyType",
      "Id": "9ee147d5b20c46739f8f6932c4576dd3",
      "Inputs": [
        {
          "Id": "dd26c69c0e36435fb2361568f9ad89a1",
          "Name": "curve",
          "Description": "The curve which defines the center line of the column.\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64f5898487fc4a8cb5e605d95aafc769",
          "Name": "level",
          "Description": "The level with which you'd like the column to be associated.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f944278bc43c41abb2b2f9427f528ac1",
          "Name": "structuralColumnType",
          "Description": "The structural column type representing the column.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9401cb9b90d4f449d86073b562d1100",
          "Name": "StructuralFraming",
          "Description": "StructuralFraming",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a column.\n\nStructuralFraming.ColumnByCurve (curve: Curve, level: Level, structuralColumnType: FamilyType): StructuralFraming"
    },
    {
      "ConcreteType": "DSRevitNodesUI.StructuralColumnTypes, DSRevitNodesUI",
      "SelectedIndex": 5,
      "SelectedString": "H_SC_ACC_W600xL600",
      "NodeType": "ExtensionNode",
      "Id": "6084901b4746495493b4306a7955dd85",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "72f30c3256eb4732aa13ea787be6762c",
          "Name": "Column Types",
          "Description": "선택된 Column Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a structural column type in the active document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Intersect@Autodesk.DesignScript.Geometry.Geometry",
      "Id": "a0cd85bebf504ebc8be14d9c7f6e31a5",
      "Inputs": [
        {
          "Id": "114ecfa5b7584f3d9c8efa422815f57c",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4bc39a5789f4b6ab677fde21c3cd0d6",
          "Name": "other",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77bd0b04a03a426fbfcbdca70463390a",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Get the intersection Geometry for this object and another\n\nGeometry.Intersect (other: Geometry): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b7d93e5c60794356808371e6f7cece16",
      "Inputs": [
        {
          "Id": "94a57be8626f44c6af0a8c87e58632ca",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1d6c884e118f493fa5dc0c2adb66d721",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55489913b2be4460901f8588a48da170",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ParameterAtPoint@Autodesk.DesignScript.Geometry.Point",
      "Id": "b1ce84fe38f54b4db480175a7794e0d0",
      "Inputs": [
        {
          "Id": "3bafbbe6fa284aa983a87ecd12a7ad1c",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fda999c05cb743208a841b3cbd6a33af",
          "Name": "point",
          "Description": "A point along or near the curve\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b5f3564925a4be8aa28efb36a907afb",
          "Name": "double",
          "Description": "The parameter on the curve for the given point.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Get the parameter at a given point along the curve. If the point is not on the curve then ParameterAtPoint will still return a value which will correspond to a nearby point on the curve, but the point is not in general the closest point.\n\nCurve.ParameterAtPoint (point: Point): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "ce311c0e78f7421492691997a137b01f",
      "Inputs": [
        {
          "Id": "c6b9dd6156e64f338bf3ad35934745aa",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2a26e3479c04eeda0c6d4cf015ea5ec",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "ab6c1b75886d471bb5e0e128dc051d28",
      "Inputs": [
        {
          "Id": "7d8ea072eb544599835b993f93a670cf",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6dd0df074fdc4233ba09ef6957e270f9",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db0a0df7c8904ad98adbd16e831e1a05",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "da804ce85beb4ab59400df051859ba30",
      "Inputs": [
        {
          "Id": "3ffe297712f94a00ae96023785426006",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f32584d5c8f4e75aabcd6286bfb0009",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b79478d8726248ea9098de07f1c30695",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByPoints@Autodesk.DesignScript.Geometry.Point[],bool",
      "Id": "b942a61b057d49059f619a15b9bfc6bd",
      "Inputs": [
        {
          "Id": "65c11dbe05694506ae9a643ab2d97e56",
          "Name": "points",
          "Description": "Points to make polycurve\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b902fba2147472d8fb1853de01b85e6",
          "Name": "connectLastToFirst",
          "Description": "True to connect last point to first point, false to leave open\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e4b5f18b4d24737978722c94591ea22",
          "Name": "PolyCurve",
          "Description": "Polycurve created by points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by connecting points. Set the 'connectLastToFirst' input to true to close the PolyCurve.\n\nPolyCurve.ByPoints (points: Point[], connectLastToFirst: bool = false): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.Curves",
      "Id": "c9243d2812134870abddc5e5919d2bab",
      "Inputs": [
        {
          "Id": "4d2a746d4a894c348ae16cc4538c93b4",
          "Name": "polyCurve",
          "Description": "Autodesk.DesignScript.Geometry.PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "17cc2cda70fb4f40a397cebac22892d3",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns curves of the polycurve\n\nPolyCurve.Curves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@double,double,double",
      "Id": "2a38ed02e6814358adb2b9eaa1ccdf4d",
      "Inputs": [
        {
          "Id": "93473eab46814f2bb3c8e10c05fd7344",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf16d19ea2d34d03baf161b64d0f0e0a",
          "Name": "xTranslation",
          "Description": "Displacement along X-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60c19d56c28f4b3c98d1ddbe7ec08bd8",
          "Name": "yTranslation",
          "Description": "Displacement along Y-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a05ab60913cf42e58a0fbbedf3769089",
          "Name": "zTranslation",
          "Description": "Displacement along Z-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "735fb95be1954d1193ca5792e99d750a",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Translates any given geometry by the given displacements in the x, y, and z directions defined in WCS respectively.\n\nGeometry.Translate (xTranslation: double = 0, yTranslation: double = 0, zTranslation: double = 0): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.StructuralFraming.BeamByCurve@Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level,Revit.Elements.FamilyType",
      "Id": "e2f3ae817a254e1794889bfc10756146",
      "Inputs": [
        {
          "Id": "4887134e3acb4465aaafab4cc29a0a18",
          "Name": "curve",
          "Description": "The curve which defines the center line of the beam.\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09c740a36df84c28acd25a36f44cdb6c",
          "Name": "level",
          "Description": "The level with which you'd like the beam to be associated.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4830e198dc8b45cfa8360a537885ac02",
          "Name": "structuralFramingType",
          "Description": "The structural framing type representing the beam.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a940c1cfec1342938706a5986b929478",
          "Name": "StructuralFraming",
          "Description": "StructuralFraming",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a beam.\n\nStructuralFraming.BeamByCurve (curve: Curve, level: Level, structuralFramingType: FamilyType): StructuralFraming"
    },
    {
      "ConcreteType": "DSRevitNodesUI.StructuralFramingTypes, DSRevitNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "H_SB_ACB_B300xH600",
      "NodeType": "ExtensionNode",
      "Id": "36e20a3c3078426190f5d59ec14c9317",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6b415ffb6c6b462c98e012ee9535332e",
          "Name": "Framing Types",
          "Description": "선택된 Framing Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a structural framing type in the active document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.BoundingBox.ToCuboid",
      "Id": "b3ae9b013ab841da88111bacf4234a80",
      "Inputs": [
        {
          "Id": "98e6eba3cb17425bb221f5a1ace1f6e3",
          "Name": "boundingBox",
          "Description": "Autodesk.DesignScript.Geometry.BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e16433640644c8684f29a562f2c79e2",
          "Name": "Cuboid",
          "Description": "Returns cuboid representation of the bounding box.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the bounding box as a solid cuboid.\n\nBoundingBox.ToCuboid ( ): Cuboid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Solids",
      "Id": "e78045b1f0f44fb488929213ab7fef29",
      "Inputs": [
        {
          "Id": "854e0cde022d4644ac684bbade5a4ea9",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6fa52cff85147d4a93abed7510ba26d",
          "Name": "Solid[]",
          "Description": "Solid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Solids in this Element\n\nElement.Solids: Solid[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Id": "ca7f9f4e4a6643fca6681dad7469db35",
      "Inputs": [
        {
          "Id": "69a5ffc243724ec19c4095c5e4644ba7",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9b1173dcde24ee1a74e44feb3257840",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.BoundingBox.ByGeometry@Autodesk.DesignScript.Geometry.Geometry[]",
      "Id": "4f26806c0fe24564a61f25fd3584cc50",
      "Inputs": [
        {
          "Id": "c4f79dcd3b114918b0199e920b7c3dea",
          "Name": "geom",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b4a382c2b6844a3a8f50abfa587b522",
          "Name": "BoundingBox",
          "Description": "BoundingBox",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Create an axis-aligned BoundingBox around input Geometry.\n\nBoundingBox.ByGeometry (geom: Geometry[]): BoundingBox"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolySurface.BySolid@Autodesk.DesignScript.Geometry.Solid",
      "Id": "f9062740ce784015921f3a40b042c284",
      "Inputs": [
        {
          "Id": "4e9ad69591b34cf6b97b991021217bd8",
          "Name": "solid",
          "Description": "Solid which surfaces to use\n\nSolid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f80ac08d5eee4afebf01bb6d758d4d7a",
          "Name": "PolySurface",
          "Description": "PolySurface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make Polysurface by surfaces of Solid.\n\nPolySurface.BySolid (solid: Solid): PolySurface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolySurface.Surfaces",
      "Id": "e3065488df334b22a1517159f88333b0",
      "Inputs": [
        {
          "Id": "713c60f75477480887c44f15266284e1",
          "Name": "polySurface",
          "Description": "Autodesk.DesignScript.Geometry.PolySurface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "776145aa654f4514b5373004cc7264c5",
          "Name": "Surface[]",
          "Description": "Surface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return new Surfaces representing the underlying Surfaces.\n\nPolySurface.Surfaces ( ): Surface[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.5,
      "Id": "1003838c812044798921b991537ae75b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34cca87de5ba48c3bf958b2687b00b69",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "c2729205e8a0493a846eda211388eb30",
      "Inputs": [
        {
          "Id": "9e7e32aaea68478f998854b684a73ad0",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc9f8ebf879f4658886bafec3b73a4a2",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Floor.ByOutlineTypeAndLevel@Autodesk.DesignScript.Geometry.Curve[],Revit.Elements.FloorType,Revit.Elements.Level",
      "Id": "1c0fd818c565474fb817abff83207ef0",
      "Inputs": [
        {
          "Id": "ab5c3b835eeb4b3087a3ec3c93fcd3cd",
          "Name": "outlineCurves",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c76c436f0eb4d0bb828c580a33acfb2",
          "Name": "floorType",
          "Description": "FloorType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91ae70f04c184ecfb18968a7527ac3da",
          "Name": "level",
          "Description": "Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd121c6988ba4054a1a7ec88e2b1483c",
          "Name": "Floor",
          "Description": "The floor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Floor given its curve outline and Level\n\nFloor.ByOutlineTypeAndLevel (outlineCurves: Curve[], floorType: FloorType, level: Level): Floor"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FloorTypes, DSRevitNodesUI",
      "SelectedIndex": 5,
      "SelectedString": "H_FL_AMF_RC Slab_T150",
      "NodeType": "ExtensionNode",
      "Id": "61d6e073a14341d7a785cec24d2232a1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "383a43d3b3bc4649bcd6ff10ec7403dd",
          "Name": "Floor Type",
          "Description": "선택된 Floor Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All floor types available in the document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.ParameterByName@Revit.Elements.Element,string",
      "Id": "792c1efe4a98426aac05b81a214f23f4",
      "Inputs": [
        {
          "Id": "7bd16b02e1ca40a79bc1f7956a5acc43",
          "Name": "element",
          "Description": "Element\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6691f9e8468b46c0a210a16044af39df",
          "Name": "name",
          "Description": "Parameter Name\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9bf7fc21c604344bbee9fd2fba57d67",
          "Name": "Parameter",
          "Description": "Parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Element's Parameter by Name\n\nParameter.ParameterByName (element: Element, name: string): Parameter"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Name",
      "Id": "a770fd8b664249c6aaa2969a4b4f232b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "441595e78f1a4ff8a8be66eec54829a2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.Value",
      "Id": "3bf3b58e5b124575b892e5b22c3b63eb",
      "Inputs": [
        {
          "Id": "d7816cc4047244c8aeac44b25bd8b523",
          "Name": "parameter",
          "Description": "Revit.Elements.Parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f2d993a1dad41558086afc19c42a46b",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of the parameter\n\nParameter.Value: var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "52753fb9b74846ec8f74065815262d8a",
      "Inputs": [
        {
          "Id": "b72cfac6e06f492cb3897692636ce50d",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac55842c4877412d835ba3257dc421f5",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ebb1b234c24498e895aba15b96367a0",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35285cab93e949e79d443723053f8c20",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "f28b17f80fc34f26b290d5d884a12ae7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "59b20f81365a4d9ea7640be085d8d7ae",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "x",
      "Id": "11a833a0335343238f5d9f661ac68ad1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6120923b8739416d829d1f60e8145b24",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "y",
      "Id": "d12fdcb5dd0a4b8285525f0ecd162891",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e167e7e8f655496089a9a81b1c7c41f1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "29fbbb99adda45ef8822753dd49bc7a5",
      "Inputs": [
        {
          "Id": "143f212304a74a419535efe8d2d12b3a",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6da30b76c25d443cb1f1093a8e09b26d",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d28ca63c9fe342e3bed487e8a3f4f400",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af75a9c57d6f42d9acd039706c596705",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "4c46ccd4bc2048d99a6aecc87dbbd481",
      "Inputs": [
        {
          "Id": "45d695673e74480da6aa1550eca0cab7",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7244baae1164b7089d10528baf5bee4",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "919680e0c6ec4d9c8e86172e7d38d8f8",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "8beadf428e4a41ec90010f2085c4902e",
      "Inputs": [
        {
          "Id": "d4fcb77b9157440d918b6c7263fa652c",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db77cd88b13d4ee98df1203e2274b252",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ffd5ce54c6974a42937df8ea1b070913",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "60e04df06dda4ac7a279450b1b1b8e14",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "83fb8ff262f24263b3384fbc7ba9980f",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "2df67dac910d43b0b9e88940256100a2",
      "Inputs": [
        {
          "Id": "d124533b49164c7c850acf2a69d340d0",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe2fdbb8e85840eb8634e11d839d2860",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3e765bc0ad249a8b78daba9ef09632d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RestOfItems@var[]..[]",
      "Id": "369b73fc3a5845e0ac09bb247e7ae9dd",
      "Inputs": [
        {
          "Id": "33876d0d752c48f880ada7d1263bd747",
          "Name": "list",
          "Description": "List to get the rest of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fee539145f974175b7908e063676b927",
          "Name": "rest",
          "Description": "Rest of the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes the first item from the given list.\n\nList.RestOfItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Id": "3245538da2024426bb18b2652ac409d5",
      "Inputs": [
        {
          "Id": "320cc3d1473a41a2afe5a2f7596107af",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "304af0b7206047bbbae3d95b607dbe73",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ade664893ac4bfabdca693cd1c1c3e7",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "855a488dfe174e15b59470aafe75cbd5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "13b13e44112945b988d00b9cbc8b8047",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByPoints@Autodesk.DesignScript.Geometry.Point[],bool",
      "Id": "de63d4020d074d7db9193b3758d12e5e",
      "Inputs": [
        {
          "Id": "4abf6e5f0f014fcf9e78e31315dab775",
          "Name": "points",
          "Description": "Points to make polycurve\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28b2a31ef2e24f3186221a054073b122",
          "Name": "connectLastToFirst",
          "Description": "True to connect last point to first point, false to leave open\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7633c178569d4f10a4665f84555e57c5",
          "Name": "PolyCurve",
          "Description": "Polycurve created by points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by connecting points. Set the 'connectLastToFirst' input to true to close the PolyCurve.\n\nPolyCurve.ByPoints (points: Point[], connectLastToFirst: bool = false): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Id": "8ea34e35ad584feb83bb1be755529eb2",
      "Inputs": [
        {
          "Id": "6ac4e8959c5646c98590191ebe754b5a",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31c2856f53524f9686dfe263531c9ab8",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.Curves",
      "Id": "1986edb1b90d49a6943370a1ae3470ff",
      "Inputs": [
        {
          "Id": "324647a5d04c40109c656822dfdacbfd",
          "Name": "polyCurve",
          "Description": "Autodesk.DesignScript.Geometry.PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e4c5c7607a7412aab77498cc97df572",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns curves of the polycurve\n\nPolyCurve.Curves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "3ab2c157726a434a83af6bffb877022c",
      "Inputs": [
        {
          "Id": "8e6f882804784b62b32d8c734961a75e",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a46bb19de75d4104a1b3af0a5fa8d0ef",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "n-1;",
      "Id": "fdedce942f5d4aae87a21ed6de00c8c5",
      "Inputs": [
        {
          "Id": "22e117bab94d46cc8593a7993127210d",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "20b9ef60bd2d440694a0fbb054d7418b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "d9f3dba8f0d0442e8ac9f8c4f6beca03",
      "Inputs": [
        {
          "Id": "8d04f27fe9384d42b1466fff6fb853f0",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "476a833224e94ceea42c71cd70e6dd65",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d4a7783c5ee4d5c99cd1f46cfac7b36",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "1469a9de20294afe9315f8eb6424d267",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d9f891a73d8440a889924ff3531f6fd7",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Id": "9bc3127c96bd4cb283eb59cf98c79b29",
      "Inputs": [
        {
          "Id": "aca1f7985e6f4d009d6d88c7bbfb3051",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7078e7caa8ab46aab01f43b45c26191a",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2578f47674245b49b693172d0430af8",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "75731dd8e87b4358b21be2ed829e9f0e",
      "Inputs": [
        {
          "Id": "923e46457bb645fd81b2185380089027",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06182f0579d245bfbdc0c4feaaa16a49",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb6d1974a20b4d548f46d93d1dd65c4d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "7579fe630c3f4ea8ad3e41429ae7f572",
      "Inputs": [
        {
          "Id": "6ef117b4e8724eb4815cb018caa06e66",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eba072c180dc44cbb057a6cd73d0a3fe",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "310c8cbfbff544cda273219f0a7f44f3",
      "Inputs": [
        {
          "Id": "139d57e356f64b1ab8481c6461c01d7b",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e0a8236bf66a4d56a81900b036d3efd7",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b536b97c4d3e4d45b1c4be97bc6595a0",
      "Inputs": [
        {
          "Id": "d43d79de8f784469be8b480afd9a15db",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "61b326907cc14a2eb9a503fedf0a8123",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "889b25581945414d9c200e7871e7435c",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.NormalAtParameter@double,double",
      "Id": "175850fd3393491c926a3cfc594e1de1",
      "Inputs": [
        {
          "Id": "51e28d0738d945e2ace9ab30ba2e36de",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b7bba7f567146b69bdc6209604d9fef",
          "Name": "u",
          "Description": "U component of parameter\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fa7660cbb54427da60beef62098fcd0",
          "Name": "v",
          "Description": "V component of parameter\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "466ae424a14b48338b3fad9a44e276d8",
          "Name": "Vector",
          "Description": "Normal at parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return the normal Vector at specified U and V parameters.\n\nSurface.NormalAtParameter (u: double = 0, v: double = 0): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Z",
      "Id": "f48adfb865194f26952571d2c044cf0f",
      "Inputs": [
        {
          "Id": "7421993d7685489b8cdf61faebd5bc05",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6529ad6d26342bca7beb2baeb6b87e2",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z value of a vector.\n\nVector.Z: double"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": -1.0,
      "Id": "40508acc8ab045448e26d45c37a5508b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48eda2654d9d46ba9e20a87a42f9bf42",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "887292cd79cb47d38ee7dfd1196a6e22",
      "Inputs": [
        {
          "Id": "e5710f008cf342edae289e1fa4bb45d1",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d59d9fd73ae14eceb8adbaecb2f644cd",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "61c326d77417491ab3473612ad58c68e",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "e69a78cbc3364d6eae73c70bb1ff7f76",
      "Inputs": [
        {
          "Id": "6c6cd7a70d274b9e8f37b8bcc5bbd7c2",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d2263d1e9a2435c87c2130eaa3fc75e",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c12041361bd1404985e84dd9274e5268",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "83bab4e0084e4bd6a7ea42d9ad57cfc8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "488b786adc6749a0ad641271e7909137",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9af41e5f9c39468981879ce6a82b0ac5",
      "Inputs": [
        {
          "Id": "b4a025a1077c4aa1b5beb52e7e2c6aee",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35ed34dc1f734d528a7bbb3125540611",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1a214a392964fe392fc7e66db5d280e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 700,
      "SelectedString": "OST_Walls",
      "NodeType": "ExtensionNode",
      "Id": "76dcd9b388a144f3952d11b974901f33",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "866e12ebdb154eb481196a3fc1ecd44b",
          "Name": "Category",
          "Description": "선택된 카테고리.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "153142078d91414f8ea2fa25a61dfa16",
      "Inputs": [
        {
          "Id": "be8485c223e847e081e78b9c3fa5dded",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0280f50b70b47afab30e3c4ce4bcac9",
          "Name": "Geometry",
          "Description": "Location Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get an existing element's location\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "6cee43f9ead646b68e92f74d345d7eec",
      "Inputs": [
        {
          "Id": "ab08564eed244bc88014ab5cb7b39c33",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5dba02a77e0149ddb2640bbc42a9486e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b3810eca1c6461e9b00e9bb0c2ce077",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.PointAtParameter@double",
      "Id": "83164c2d0f074ccea31fd1b329c6cd22",
      "Inputs": [
        {
          "Id": "5cf98d3bdb2a44c8b10d07b102c4abd1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f5a6d37582145a0846ad56e840d9ced",
          "Name": "param",
          "Description": "The parameter at which to evaluate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6200301226aa434d8a4459631ac4ffbe",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get a Point on the Curve at a specified parameter between StartParameter() and EndParameter()\n\nCurve.PointAtParameter (param: double = 0): Point"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.5,
      "Id": "2f7e65a832c5429f943c9a1160f2993d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d05acb9c174c4880bd95bb435e9be457",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "e7c1ada31a554865bff43e312c53b52b",
      "Inputs": [
        {
          "Id": "9dfab40bd641407eae00d96fcacfb987",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a661cd1b6294b91a4f9f39af0b5fbd8",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "910fc48dd60544c693f05e865b60685c",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "2d8e4c03c86f47de839052fdd0b02f99",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7b73f4a2cbd54d7eb39472ab6647a384",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "aca9f2dcffee4bffa8f8568f42581155",
      "Inputs": [
        {
          "Id": "2565ef2d844f422ba659c675bf25931e",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7aaddac0d437430cbdeb177490cc51f0",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8322193a29f749e085fb3e1b4524c3b4",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "45ca057e46184e1e990c9f13142f5ff0",
      "Inputs": [
        {
          "Id": "3aa25d14d4b246a7af912e4f8886bb6d",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1360da4be1644b0ebf8fd1b5da9f342f",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a74e085ffb74441392c56ca588faf85e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "5219af0d35204b96b49339c70c0caacb",
      "Inputs": [
        {
          "Id": "9b5ce5ff13764351ad38221b1fd45452",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7242791450846658921a5c4cce46ed2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6a644400feb427ca70122ef7c0b3a4d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "b92c77dbdf404378be53642b4126628c",
      "Inputs": [
        {
          "Id": "1b51e78012024567a4c76cffe5459ffd",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb395d1ece9e4faa80757a4e088780d1",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "25a474028c514cf995b975d0cf014661",
      "Inputs": [
        {
          "Id": "26bd4861a36040aba3c89358152265c5",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a562af148ec448aaccc085744fe0b08",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "aa2237b56bd04676942792045e7a60fb",
      "Inputs": [
        {
          "Id": "04d3bc014978431395fa5746430914ed",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec050dd1fe0a4758b7a420bccfab34b2",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Roof.ByOutlineTypeAndLevel@Autodesk.DesignScript.Geometry.Curve[],Revit.Elements.RoofType,Revit.Elements.Level",
      "Id": "c331ed185d5f479c8bf9bb90d77ca4fe",
      "Inputs": [
        {
          "Id": "062e607d3b9f4887ba00061dc5635acf",
          "Name": "outline",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "447f6153af5d4e0ca225a91af3c4d271",
          "Name": "roofType",
          "Description": "RoofType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "720ce07a510a4ce695bbbe51cba75f94",
          "Name": "level",
          "Description": "Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e7e7252993f4a49ac40b0c56485b4b7",
          "Name": "Roof",
          "Description": "The Roof",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Roof given its curve outline and Level\n\nRoof.ByOutlineTypeAndLevel (outline: Curve[], roofType: RoofType, level: Level): Roof"
    },
    {
      "ConcreteType": "DSRevitNodesUI.RoofTypes, DSRevitNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "H_RF_AMF_RC Roof Finish_WP_Insulation_Protection",
      "NodeType": "ExtensionNode",
      "Id": "d8cbb69f737d4a1b8942c063512b95b0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2250dabf671247f5837da9bc684952c0",
          "Name": "Roof Types",
          "Description": "선택된 Roof Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All roof types in the current document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "3d1401e36dba4d708070c2963d4ceec2",
      "Inputs": [
        {
          "Id": "4cb3e0b11cb541b89b3ff30d4de7ead2",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98292a1945bf48d3b57f1589b8f24d94",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "537a3e6475d44773be383f75624e022a",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d379bc6d7304fe28769afcf75c4df79",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Thickness",
      "Id": "fc917cdc61d74705be91efbd8bff1514",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ca043c2dee534a7e9a8ed7fcd7f5ec37",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.ParameterByName@Revit.Elements.Element,string",
      "Id": "ad664230ff1f4f92afbb3e2cb9111d0f",
      "Inputs": [
        {
          "Id": "4694f8b226d04f62896810e97af8aa01",
          "Name": "element",
          "Description": "Element\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92fd2c29b54d42fba1b1277fadc4098d",
          "Name": "name",
          "Description": "Parameter Name\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc4045edcabf46b8aee29987f94fe5f2",
          "Name": "Parameter",
          "Description": "Parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Element's Parameter by Name\n\nParameter.ParameterByName (element: Element, name: string): Parameter"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.Value",
      "Id": "3c17e6f220584168b65b9d4be844a568",
      "Inputs": [
        {
          "Id": "9eaee4182da0457099db67b91a6e0527",
          "Name": "parameter",
          "Description": "Revit.Elements.Parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c52d0fffea24b67bea654cec7cf884a",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of the parameter\n\nParameter.Value: var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Base Offset From Level",
      "Id": "e70bbe0e958340bb998e7cccd0d4d301",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e5f39c76de24c90b0dc7cdf9641d0f0",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "7b8122e118134c2d83c474d041c43b45",
      "Inputs": [
        {
          "Id": "05e74b4320e441c9b535e3606b880422",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f38e14021694d0e8c52d8916c229ff6",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81ea2fde11ea4e9280e2ecd0ee0d28ef",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": -1.0,
      "Id": "cf0eb6964427415586c14fb77457f538",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "942f02e803404b5eaede32c62ce598af",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "27cb04c089484eb9adc003138a94951b",
      "Inputs": [
        {
          "Id": "2dc64f6835674ee5baa161ce91468f40",
          "Name": "combineFunction",
          "Description": "연결자로 사용할 함수",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5dfde4d4c77747aeafd066af62d26cdc",
          "Name": "list0",
          "Description": "리스트 #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4233adaa15b477ea68b3aad45a55e86",
          "Name": "list1",
          "Description": "리스트 #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7cd98d9a63894818a4757346c601ce25",
          "Name": "list",
          "Description": "결합된 리스트",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "0ea28c3c18f94f01af53cbc3dcc37de5",
      "Inputs": [
        {
          "Id": "18fdfe06c665489aa83bb4aaf02576c9",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c2accf1b1d748509f288ce84ea692ca",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b356d1faced84d9c9f060651b86d7317",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "1eb6baaf7e04415a8e36d2753680b0c7",
      "Inputs": [
        {
          "Id": "bdb8deeb479042c99d042329a2533051",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e794c05015df4c0091f752713d568d51",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16312934df9c482cba3d100b483ba91d",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolySurface.ByJoinedSurfaces@Autodesk.DesignScript.Geometry.Surface[]",
      "Id": "424a853753514afbae5a4a2478b4676c",
      "Inputs": [
        {
          "Id": "3005abcaea25447e8b077e8fda2c926c",
          "Name": "surfaces",
          "Description": "Surfaces to join into polysurface\n\nSurface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "797229e98ac44570a99cdb1cd3cb27a3",
          "Name": "PolySurface",
          "Description": "PolySurface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make Polysurface by joining surfaces.\n\nPolySurface.ByJoinedSurfaces (surfaces: Surface[]): PolySurface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ba1feab2ab254428b4377c3f3ba6fb24",
      "Inputs": [
        {
          "Id": "aa7f8b00ae2342eba2a54eafb9548402",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d4702937160431892db7fe866c91283",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be7f88f6bebc44388310bab79dc8f6e6",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "31d0fbfd35b4460eaf0f78bdaed769e8",
      "Inputs": [
        {
          "Id": "4a22c43e5f2e444b9b2c4f151d73a7fa",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec0223f6ff1c47f98cb4a044cdec2c8b",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8acd015ac33a40d1b3c38f42ed70c84f",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "19db7c1519e648bb830c8d568a8e80bd",
      "Inputs": [
        {
          "Id": "46a870c1e1f64826850c86e520112358",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6bb2f63b3714e92b6a4a7754ff03734",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "132158b883754463892a950227203a9e",
      "Inputs": [
        {
          "Id": "6a3ac43b7bc64bd290b0627bd02d3343",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fe897988d8c463eb53ccce0ccf92566",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "914be168982d431d92f33f9a875b725a",
      "Inputs": [
        {
          "Id": "ccdd7506620e4a4394afc3b01dd0ea47",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13711b2ae4944e2f9740bf91d67b0c36",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f303788d242a4c4684256284dde5c846",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "e0047cc6d66444b583084e9a8cdebb4e",
      "Inputs": [
        {
          "Id": "59f2faee7e1c4fe09c5d75b28be0a54a",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b637278053543f9820138f94edcecaf",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "65d065a7fce345cc98e43023f991dcf0",
      "Inputs": [
        {
          "Id": "a06840211eb64eb6ba60bf41fd3f7ece",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "130b9804853242968e3c8e527ce0af1d",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "83e97889286d47e698a5cbf9af566c8f",
      "Inputs": [
        {
          "Id": "99a346c2f3894ad2b3c20e4e9cd0572a",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8122821554c4acfa740a9e6575384ac",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5650c17463742e2945ad07c1e3d39b9",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.X",
      "Id": "eb78cd25495644b4ae1cb78f6b4d9bfd",
      "Inputs": [
        {
          "Id": "a019f82701b146a4ba8849e3c11d0d2b",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f83debeecaa647c9898088bf1ca15cc9",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the X value of a vector.\n\nVector.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Y",
      "Id": "7e9e9a06a3cd4893b82b8f401704981a",
      "Inputs": [
        {
          "Id": "fa53f238f86b40e3aae1a021a291563d",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9bfa20f0786447cd82da8853ec7bd3e1",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y value of a vector.\n\nVector.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "352e1a020efe4f89844842c2ec05ecad",
      "Inputs": [
        {
          "Id": "19cf3f78d2ac4dccbfa1bb25b7a1b1ab",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "318e41ab5b2f42e59f8171e368cdd6ad",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Normalized",
      "Id": "52f85e3eb37f4b19ba63a0d20b51c0d7",
      "Inputs": [
        {
          "Id": "e7895debf3d64209b2ece7164e77856d",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36240dbaf13d4109834472f3234bb059",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the normalized version of a vector\n\nVector.Normalized ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "c6dd239a8e2b462fae1257d391fb135c",
      "Inputs": [
        {
          "Id": "5d88d9151a5a45dfbf345c7be10529c6",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4bcee135bdd46c88d83a66fc81076d0",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "99ac2a995dbc49de82fb36b83fbb6056",
      "Inputs": [
        {
          "Id": "fb24154f525c4de2ad586cf44da7c4f9",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f47a7f6834542d8b01cc8adbe96708a",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b21d33b7f8af4456a031dbd5ef93728f",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": -1.0,
      "Id": "e82fea75b989448bad7da6042c2af10f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e9e14ecf851544268f10409576f06dbe",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "d398278631ac4d3591a6f32f0782fa2c",
      "Inputs": [
        {
          "Id": "7cce9977cac64b6189509112a9490cec",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ae61156aa0c42dc95449b3ed4f89dd8",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85e736d1bd12487c811ab88c2c2f627a",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "845224a251e1451eb2a7eba60e88dff2",
      "Inputs": [
        {
          "Id": "c4771ad766be4307844d11e91825ff3f",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3787ffb2f1c4e728e944501476e7806",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b2df69c37d843b89d4e38f172c76885",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "ac6d40548e6e4da1adeef8b57f6edfc8",
      "Inputs": [
        {
          "Id": "e78434eaffc74033a1cedfc8a6f763a0",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c8171b5138547349fdd60fd7dc2384d",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "910d5ace20714ee3b714f69000b56e2f",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b745b7121354405b54c598efd244f77",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.Reverse",
      "Id": "e2e63795e5d84993a7c34967e9fef4c3",
      "Inputs": [
        {
          "Id": "f528e330927c480984b0597869b7f24d",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91abb393ffb645a99292985d257d5468",
          "Name": "Curve",
          "Description": "A new Curve with the opposite direction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Reverse the direction of the curve\n\nCurve.Reverse ( ): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "4553ae26ffe846abbe6ee27b2f507737",
      "Inputs": [
        {
          "Id": "3f84aee8d7854de0b19aae779b0747c6",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b281607c4c44683a167c967a680e1e2",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "863faf9766d64f6791bfc6d0c9766a55",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "d3c05b59796543ffb7de46d2b0a2935c",
      "Inputs": [
        {
          "Id": "37ae2b1ed4ad4305999ae2e7000f06e8",
          "Name": "Category",
          "Description": "카테고리",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8544ceb741ab41fb99464f128cfba290",
          "Name": "Elements",
          "Description": "요소 클래스입니다.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetIntersectingElementsOfCategory@Revit.Elements.Category",
      "Id": "5384ff0501584f0f9fd2339b9a885f44",
      "Inputs": [
        {
          "Id": "8daa5be1aa4448f4a5768db06b2a651b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5796bdf6094f4a17859731c36f59c9cd",
          "Name": "category",
          "Description": "Category of Elements to check intersection against\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b90bb8f277d74be3a1ce7dc9cf18f852",
          "Name": "Element[]",
          "Description": "List of intersection elements of the specified category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all Elements intersecting the input element, that are of a specific category.\n\nElement.GetIntersectingElementsOfCategory (category: Category): Element[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 238,
      "SelectedString": "OST_Floors",
      "NodeType": "ExtensionNode",
      "Id": "a85cbc288afb4409863f9e2e1c399c45",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e695cb4e1a0477caf03a31f111d2970",
          "Name": "Category",
          "Description": "선택된 카테고리.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 584,
      "SelectedString": "OST_StructuralColumns",
      "NodeType": "ExtensionNode",
      "Id": "647f78aed64b4ad8a2b326b5320e37a7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fc0d83260c1845cebcce4d0e1be0f3f2",
          "Name": "Category",
          "Description": "선택된 카테고리.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetIntersectingElementsOfCategory@Revit.Elements.Category",
      "Id": "eddad5e65f40438480751ae61b0ee840",
      "Inputs": [
        {
          "Id": "21c3612c9b41428f9d60dfca4658a522",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a3d3246d0f843aaaa17aaf397863e9e",
          "Name": "category",
          "Description": "Category of Elements to check intersection against\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f685026ff36d4fd0bf52f1e0c5067232",
          "Name": "Element[]",
          "Description": "List of intersection elements of the specified category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all Elements intersecting the input element, that are of a specific category.\n\nElement.GetIntersectingElementsOfCategory (category: Category): Element[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 612,
      "SelectedString": "OST_StructuralFraming",
      "NodeType": "ExtensionNode",
      "Id": "e9cf56bff72f4972a3544159d295d294",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "45502d322ae94acaa473bf5169abf04d",
          "Name": "Category",
          "Description": "선택된 카테고리.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetIntersectingElementsOfCategory@Revit.Elements.Category",
      "Id": "28de0935ae5e4a49a19994d009234961",
      "Inputs": [
        {
          "Id": "766217ba0e7043ac994072f3d427a092",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8334520ee7c1448392fe7701e4a4c02e",
          "Name": "category",
          "Description": "Category of Elements to check intersection against\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5e054557f4d4c539cbbb1dc48776627",
          "Name": "Element[]",
          "Description": "List of intersection elements of the specified category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all Elements intersecting the input element, that are of a specific category.\n\nElement.GetIntersectingElementsOfCategory (category: Category): Element[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "7784976fc077470aa8de8b71b97c34bc",
      "Inputs": [
        {
          "Id": "f1ac10cc6c014b829f1e29c411f06e46",
          "Name": "combineFunction",
          "Description": "연결자로 사용할 함수",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "123a1197a4e94b1ea520dbef8f4d6d2e",
          "Name": "list0",
          "Description": "리스트 #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c143547074b64a13b1d2a98ca0233b57",
          "Name": "list1",
          "Description": "리스트 #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ba32b971e2f407796b5e1d20233dbda",
          "Name": "list2",
          "Description": "리스트 #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "652e1b8e9380469b9a2e7f3e0112ddee",
          "Name": "list",
          "Description": "결합된 리스트",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "1a04d6baa6bb43f1a5a7664f35ba538f",
      "Inputs": [
        {
          "Id": "fa32a01b900145aca700ce0c7875a0c1",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "358a0e931b244ebcb67a39ca8328b308",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26df3b662a254fc7a0ff429f61e2b077",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ff2bc4aba2949648f52319826519186",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.JoinGeometry@Revit.Elements.Element",
      "Id": "9fda205130e341a784dbd93a1bf8a6e0",
      "Inputs": [
        {
          "Id": "3b04eaf3ec9b43369d5e4bda95e5a8d6",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4723b2b83f224acfad7b4a1f694aa0e0",
          "Name": "otherElement",
          "Description": "Other element to join with\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26d0602f01cf47c8863a60714ecc3ef2",
          "Name": "Element[]",
          "Description": "The two joined elements",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Joins the geometry of two elements, if they are intersecting.\n\nElement.JoinGeometry (otherElement: Element): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "da908222991845e099221eff7096dec9",
      "Inputs": [
        {
          "Id": "b9aacfa412ad4e1ab51f7d8d19a60441",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8f1d2b6e1e34098b5d457784ea0f82c",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "185d9578e4004cccaaae2a0f1fa8cdb3",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "501522a717ca4118b67da56b12abc2f2",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "y Offset Value",
      "Id": "4acf7c99ba8c416db416047adb4e7f44",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "44b2625449b5495da05467206549468d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "8101b24d93aa46998bd8ad2d392db857",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e61a899811634f0cabdc75bdd6fa5530",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "f0a29c37b9ef45bab5fed609fdd7db47",
      "Inputs": [
        {
          "Id": "c31e733baeb845c7993b670d19b006b3",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "65fd4dadb53d4472bcec6e4b101f9ef9",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6dcc2c7fc28424cb3884713ee6e713f",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1de76a624564729a6fabdfe1a19f2f3",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "2d3c74e9d94f451fb49ea559d9954d49",
      "Inputs": [
        {
          "Id": "739e7b644a0242608305e25e2ffaa964",
          "Name": "combineFunction",
          "Description": "연결자로 사용할 함수",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a2ef6935e2f49d3bc0fdba2c81c8f27",
          "Name": "list0",
          "Description": "리스트 #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27ac27c344564fae9602af8df936a218",
          "Name": "list1",
          "Description": "리스트 #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "baabc69c53374f29ae48968935328972",
          "Name": "list2",
          "Description": "리스트 #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f17fce66762423b8e94a0783125b6ca",
          "Name": "list",
          "Description": "결합된 리스트",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Id": "5c49b01d052b4f2a91d6508d175a48a6",
      "Inputs": [
        {
          "Id": "682f00c08aca45cbb23aab29e108a6ad",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "afc673c0ba0c466882c7fccc24534e27",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "eda07881a6b841d495839dfa03ac75e6",
      "Inputs": [
        {
          "Id": "59f86c3df87e45dda5f648ec3ffee9e4",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b62c7356277c401986fc35191896bc27",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "840c577fa2804246adc469b2e124e169",
      "Inputs": [
        {
          "Id": "acabfc694a8043168233d35e798b14be",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd20eecf93fc467286412b936d37e3ae",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "752dbdb4876042cfb9959dc011fbd135",
      "Inputs": [
        {
          "Id": "bf135a32c1f045f490fec25e3ec116fa",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a1df1ece45441a9b3c987c9947b9c33",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d198d083bf0c453e8049650007d6ac0c",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "f8c8e641399749e3a40f063ac58e3ab1",
      "Inputs": [
        {
          "Id": "045fba608b384e4e9b5df4b7683e5877",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae2285deb55a4e5083349a62427a3911",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aca5690a6f22491fba94bec4466d10ff",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.JoinGeometry@Revit.Elements.Element",
      "Id": "037af4d52c01480997276ce863e7b53b",
      "Inputs": [
        {
          "Id": "b0024b24815546929d729c5d4769d7f8",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19acc23c50aa4e9a933000800fde8711",
          "Name": "otherElement",
          "Description": "Other element to join with\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72eefb6815eb4e14ac527f82e3a12c7d",
          "Name": "Element[]",
          "Description": "The two joined elements",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Joins the geometry of two elements, if they are intersecting.\n\nElement.JoinGeometry (otherElement: Element): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.UnjoinAllGeometry@Revit.Elements.Element[]",
      "Id": "dbcf0f5129ad40cb85a4cdc13afb5b09",
      "Inputs": [
        {
          "Id": "e22e931ee15b4d32a7bd2f4702b63ccf",
          "Name": "elements",
          "Description": "List of elements to unjoin from each other\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "528a93a8f9794754906374c5bb12110d",
          "Name": "Element[]",
          "Description": "All input Elements, with their geometry now unjoined from each other.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Unjoins the geometry of all elements from each other if they are joined. This performs only one transaction in Revit.\n\nElement.UnjoinAllGeometry (elements: Element[]): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.UnjoinAllGeometry@Revit.Elements.Element[]",
      "Id": "f6e1a49457754a18851d83af78164783",
      "Inputs": [
        {
          "Id": "cc958f75e4e04113bb7148b5351fa7c6",
          "Name": "elements",
          "Description": "List of elements to unjoin from each other\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f262c91077314af389faedd94a0b479e",
          "Name": "Element[]",
          "Description": "All input Elements, with their geometry now unjoined from each other.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Unjoins the geometry of all elements from each other if they are joined. This performs only one transaction in Revit.\n\nElement.UnjoinAllGeometry (elements: Element[]): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "2427d1d99d1d42e2b917a43a2a40180f",
      "Inputs": [
        {
          "Id": "e6830839d2f0404593f5cdf5698c5cab",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ddcea1acbd144febdaa61497e57e1af",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31c22396deed40c991d2db3f9a2e1fd8",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b781104c9a1d41db8ecbabf3649e5b18",
      "Inputs": [
        {
          "Id": "5d2c42a5016c44caa0e4d479aa06dc03",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1494076b354e45b59439e1f31f011544",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ff467e50a73494c9e60a2ffac0330fb",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RestOfItems@var[]..[]",
      "Id": "c04d0e87ce1740d49fb6e8892a7b7ba2",
      "Inputs": [
        {
          "Id": "5f61060720464782ab8f7ca520ce5312",
          "Name": "list",
          "Description": "List to get the rest of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4fff353a9944b768d227dfa14ee2710",
          "Name": "rest",
          "Description": "Rest of the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes the first item from the given list.\n\nList.RestOfItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetGeometryJoinOrder@Revit.Elements.Element,Revit.Elements.Element",
      "Id": "82befbea3b7a46a99a187f21df4683e8",
      "Inputs": [
        {
          "Id": "8820d06ed118475aa1dff8dfe3241321",
          "Name": "cuttingElement",
          "Description": "The element that should be cutting the other element\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee48d09061c644749ece6f9f44b6f211",
          "Name": "otherElement",
          "Description": "The other element that is being cut by the cuttingElement\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64f0caefcadf47cfbd88fe5541d45050",
          "Name": "Element[]",
          "Description": "Input elements with the geometry join order updated.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Sets the order in which the geometry of two elements is joined.\n\nElement.SetGeometryJoinOrder (cuttingElement: Element, otherElement: Element): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "d5fef0cc89d94fa899b474ab4b0a1758",
      "Inputs": [
        {
          "Id": "5d00334fa9904defb761433218063251",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dbcfdcde74af45e08ca22d2c0fff54c1",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57864fc22f954bdea9af9329a3a3a9b5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "67fdf2f32a9e4a6f9c7923812fad5ab9",
      "Inputs": [
        {
          "Id": "f7e68fe3e544438aa7006ed16d3a21d5",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d2aceab4c6be4436823a913a67eae113",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@double,double,double",
      "Id": "31f2e4542a81436eacd0f06b585d0e8e",
      "Inputs": [
        {
          "Id": "10b1223a45bb4639a059492345e75fad",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e5f0b40f63e480bad21e2124b57b112",
          "Name": "xTranslation",
          "Description": "Displacement along X-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e2d547ef05a4fde99e871dfc2989c5d",
          "Name": "yTranslation",
          "Description": "Displacement along Y-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cabb2d11b614f63b75917419925c9a0",
          "Name": "zTranslation",
          "Description": "Displacement along Z-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83602d9e2afc4e93a4d685ac9e00a686",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Translates any given geometry by the given displacements in the x, y, and z directions defined in WCS respectively.\n\nGeometry.Translate (xTranslation: double = 0, yTranslation: double = 0, zTranslation: double = 0): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "fb353887273e456bb05bbcf113920ed3",
      "Inputs": [
        {
          "Id": "9c6b64b04f22475db8194649e934f418",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f58233a03db042049bf748a33b0e0fe0",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a228712f23f4531b7555f8d6e8a0442",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.StructuralFraming.ColumnByCurve@Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level,Revit.Elements.FamilyType",
      "Id": "3119e0e5f40d470080fed367e22fcb41",
      "Inputs": [
        {
          "Id": "d8b7bfaea29745a1a7d0d1c2ce3c98b4",
          "Name": "curve",
          "Description": "The curve which defines the center line of the column.\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4bdd0bedb47c487db43832e819e5504d",
          "Name": "level",
          "Description": "The level with which you'd like the column to be associated.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5671cb24d9e448bbf021f8f323c6c86",
          "Name": "structuralColumnType",
          "Description": "The structural column type representing the column.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4595a9bfd0e493d87e6034374d4127a",
          "Name": "StructuralFraming",
          "Description": "StructuralFraming",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Create a column.\n\nStructuralFraming.ColumnByCurve (curve: Curve, level: Level, structuralColumnType: FamilyType): StructuralFraming"
    },
    {
      "ConcreteType": "DSRevitNodesUI.StructuralColumnTypes, DSRevitNodesUI",
      "SelectedIndex": 1,
      "SelectedString": "H_SC_ACC_UG PED_W600xL600",
      "NodeType": "ExtensionNode",
      "Id": "d83febe4f2d34cd0ac2ac08b63083b3b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "67af9a68c22848158d067d17bf3f98ae",
          "Name": "Column Types",
          "Description": "선택된 Column Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a structural column type in the active document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.ByPointAndLevel@Revit.Elements.FamilyType,Autodesk.DesignScript.Geometry.Point,Revit.Elements.Level",
      "Id": "bbb453caa31b4791a734c81e08cdcea2",
      "Inputs": [
        {
          "Id": "61e25f68d13b4f9090fb1656da138ff1",
          "Name": "familyType",
          "Description": "Family Type. Also called Family Symbol.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6429ada11ff4cf192b906301c56c6d7",
          "Name": "point",
          "Description": "Point in meters.\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e33dc8158c845fdaa6450417f791efd",
          "Name": "level",
          "Description": "Level to host Family Instance.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5297f7aff3884584a48742a963ad3676",
          "Name": "FamilyInstance",
          "Description": "FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Place a Revit FamilyInstance given the FamilyType (also known as the FamilySymbol in the Revit API), it's coordinates in world space, and the Level\n\nFamilyInstance.ByPointAndLevel (familyType: FamilyType, point: Point, level: Level): FamilyInstance"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 39,
      "SelectedString": "Foundation Rectangular (Non-Pile):H_SF_AR_S18_W2400xL2400xT500_Bitumen",
      "NodeType": "ExtensionNode",
      "Id": "9e781073830943beaebb5ee8440c4675",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9d345dad18ec48ddac7af55be0341abf",
          "Name": "Family Type",
          "Description": "선택된 Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All family types available in the document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "b8900da4e1e44fdb858c55e14c064d8b",
      "Inputs": [
        {
          "Id": "e1496a0b390c49af9e8e748c52d69d2a",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "188443b91e944d01b811cb477232c6c0",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "40275b744e6041ab9ca92f9e9e4695c7",
      "Inputs": [
        {
          "Id": "347eef8a6c05491d8bf1635f8002c870",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c17da35a54f144169f8ee6419b1e4ba7",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "9c6117ca51d442a8b1cd2fb5738bda34",
      "Inputs": [
        {
          "Id": "ad61ad1ae40d476e88eff831960e7742",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0243171c6c4d4becbe890b514f89b34a",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "b3a323fe85604a658654ec98fc531d19",
      "Inputs": [
        {
          "Id": "7025fe07f00e4fca818e19eac9b349b1",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "789d3e0542e147938b5b8ddc0b85b69b",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c55a89fda494b0389427bd6dd671994",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fe37c288d304f4fa016c6160b0a4459",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Name",
      "Id": "a01ca22a953a46e0a99fe2b0c84c50db",
      "Inputs": [
        {
          "Id": "fbbf34f34bf54155baadf5df7e1bc9a5",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b6e6140479342f98d4def2cbfdb8a38",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The name of the level\n\nLevel.Name: string"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "BOF",
      "Id": "7906d0f1eb4744c5bf97b1dee50861a5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "640594e45915423895cde604b16a493e",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "f206d9ef332e439b9159fc4a0909233a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d1a2d3c8ceba4fc6a8d700885a9af01b",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "186f071dc2ce4dcb89eefe567e0765fb",
      "Inputs": [
        {
          "Id": "0ec9259b61f8424e9acd83579cba8c7a",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67a83c0d1fa644a590b66a45c766a6ec",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "059913907c6b4ef48bd819ab9788054d",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f919bdd4a796492c937ef516d51ebe4d",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Id": "10ace61d2c9e49c8a242fb77509281e1",
      "Inputs": [
        {
          "Id": "37830aa7688c4f66a07d3163e3578b7f",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8698f158b26848d489eaec6a658a81bc",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3464c552e6bc4736b767c8932c417885",
      "Inputs": [
        {
          "Id": "88c20bb134b7494e85754f3da1ecd3a0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5da0b0fd7f714575a0b91bb3c5e9cdcd",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90eac6229be2422c882b9875a0ee0345",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c671106a09464d70aa90246a0b5824bc",
      "Inputs": [
        {
          "Id": "0f82f14f0eb24455ab5083e01b61b3d1",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "709c2c28aa0841d0bbcc1528cbdcd40a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21eaa5cf44e847c79535862104a50f17",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "7129e56cc32240e4b729e0d981615042",
      "Inputs": [
        {
          "Id": "46e5b239fcea4540b11340448e5d3d86",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f53cbee3df2d4a20838cf71dc4b9775c",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02aa4796305347608ff77b89c8287553",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88a09e1686964873a5253db179b51744",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Height Offset From Level",
      "Id": "1a12616e7d394f82b62ba015817b8e2e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "524ce54621914888a3d0664a5b53476b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Solids",
      "Id": "a030a637d71a4f9c97df36e0b0befaf1",
      "Inputs": [
        {
          "Id": "1ba6dbfc8ae8440f9d14672ca9112ead",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0023a9f950624c1caa7863c655ecea0f",
          "Name": "Solid[]",
          "Description": "Solid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Solids in this Element\n\nElement.Solids: Solid[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "95469868dcb74a16b9ad8e5e1ef7a51b",
      "Inputs": [
        {
          "Id": "dd01c708a26e4d55971e0e90e5e0d12f",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3fe02223368499ba465e9d2ad0f016c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "febce9466c714396a2de2736b217392d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Solid.ByUnion@Autodesk.DesignScript.Geometry.Solid[]",
      "Id": "e223cd3e8fa1450bba3b128892a61ba9",
      "Inputs": [
        {
          "Id": "450a4f229dc041979a45f0b4761a43d2",
          "Name": "solids",
          "Description": "A collection of solids\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fa536515fc748939ca0037314f43297",
          "Name": "Solid",
          "Description": "Solid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Union a collection of solids into one solid\n\nSolid.ByUnion (solids: Solid[]): Solid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "ab46d0e95fae4c94a86eca7922bdaf44",
      "Inputs": [
        {
          "Id": "b89d0c42b73a4d7589b4da9b7336c923",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "749130ccf2684c558dd84a4a00eff1a2",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23b6457476834accb0fe0f57a2617d1d",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RestOfItems@var[]..[]",
      "Id": "10385ccc097742468ed2bedcd381f2a6",
      "Inputs": [
        {
          "Id": "cd22de8437b7498f8e737c117e90d818",
          "Name": "list",
          "Description": "List to get the rest of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1c58b174a834f5597679792b59c5cf1",
          "Name": "rest",
          "Description": "Rest of the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes the first item from the given list.\n\nList.RestOfItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@double,double,double",
      "Id": "8760586d830c489a851f0fcc1e0dc4d2",
      "Inputs": [
        {
          "Id": "b5d1264a2ded4f5db5ab75bb9a69663e",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17429761577d442e93a965082465d2af",
          "Name": "xTranslation",
          "Description": "Displacement along X-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a61f0f518c34ea8b75e93a95b36333d",
          "Name": "yTranslation",
          "Description": "Displacement along Y-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91c9e2b94fb64a4e80d962ebbe1057c0",
          "Name": "zTranslation",
          "Description": "Displacement along Z-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "874866b1d8ae4a539f26b9b5d55c6d1f",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Translates any given geometry by the given displacements in the x, y, and z directions defined in WCS respectively.\n\nGeometry.Translate (xTranslation: double = 0, yTranslation: double = 0, zTranslation: double = 0): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "938c1803b86a47108aeaf026707a6763",
      "Inputs": [
        {
          "Id": "346ee684c4fc4931964df82ea03256bc",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "033785dfbcc544949958786d03c057ee",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Id": "f3980554b30d4d32b689ab29a818c508",
      "Inputs": [
        {
          "Id": "37ab9841f5f64017bcb8bdd510d4123d",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a8530791e744c8990a837be8ad9214f",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Id": "7aa670deaf0e48e29e70ecef5e9a34c4",
      "Inputs": [
        {
          "Id": "c0f58c52b79a439f8254ad67cfc4fa82",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b60e11f5b7940a5998521835986113b",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Id": "f6a8c9dd90da4084b4b719408ab5d811",
      "Inputs": [
        {
          "Id": "0ad95c02cacf4bfba6bda5af3a319d55",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1cf753c91f44e378055a80a0126ce68",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f4dbe9209b8943e4af93d75da8539058",
      "Inputs": [
        {
          "Id": "adc5d68c28fa4c6190c59d23e5b1d4b4",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac9cbf6878e942f084e596604d13aef1",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb2dd0a09760419a801e80ed6c14d888",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.MinimumItem@var[]",
      "Id": "9b7b83f566db4d05be859e2f034c4b17",
      "Inputs": [
        {
          "Id": "11774807673f4608a0e5af257bf7570d",
          "Name": "list",
          "Description": "List of comparable items to take the minimum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee42d559c1e149b39d2ef433aa88656a",
          "Name": "item",
          "Description": "Minimum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the minimum value from a list.\n\nList.MinimumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.MaximumItem@var[]",
      "Id": "e1cf44c374cb4d129e0adf9b9f6bdb68",
      "Inputs": [
        {
          "Id": "821c4584bf584e4ab1ac77c094e8473e",
          "Name": "list",
          "Description": "List of comparable items to take the maximum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69f7150b2ac84e20a1d85337f910decd",
          "Name": "item",
          "Description": "Maximum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the maximum value from a list.\n\nList.MaximumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.MinimumItem@var[]",
      "Id": "b60fe23a7ea648ab9bf04f6e1b53f7e0",
      "Inputs": [
        {
          "Id": "7a1e334245554a058c22bb316d833228",
          "Name": "list",
          "Description": "List of comparable items to take the minimum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3375deb3f3064530aeaa633caf9bbb15",
          "Name": "item",
          "Description": "Minimum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the minimum value from a list.\n\nList.MinimumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.MaximumItem@var[]",
      "Id": "7d3f2e481a98475698b39268748063d8",
      "Inputs": [
        {
          "Id": "2e3465f5011d4213abb86bc80f3973d7",
          "Name": "list",
          "Description": "List of comparable items to take the maximum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae827a14469d428697868d38e603aae5",
          "Name": "item",
          "Description": "Maximum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the maximum value from a list.\n\nList.MaximumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "8871b6c475e047edbfb4cdae7608f655",
      "Inputs": [
        {
          "Id": "9a02a53d54984ba3aaf693ad9d0989d1",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7efee3286474172970078a5bb81af27",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "d50be92d12f64eb8a365b1fce01e0c1a",
      "Inputs": [
        {
          "Id": "0b57dcf1d61b4b939c8dc8d473287485",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e20df1b5b227460bb28acd1a8e1df7a1",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "d039511114374095b9eea719e5165404",
      "Inputs": [
        {
          "Id": "688a55fe4dbe44ff9942cb9c8ffcec6e",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d148e6d60ab455083e545baecb4ec7b",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b65246366884e3f99a4a644e443e212",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "fbdbefee526248a4a6145948364de351",
      "Inputs": [
        {
          "Id": "d6f124f32ed74a468bc9be512550f67e",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "658e251f02b64893bc96d43803c9e053",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4167dae3b6840c48a296311945d21f4",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "7b9bfcc2c82e42b7be3bfbfbc1c83cfd",
      "Inputs": [
        {
          "Id": "64b089a846294871a97a590abb458642",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13e84a993bb14d57954c3a08b1519e93",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5952b0c1c5c14b7b9e09ce3e954f61bb",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "04d6d8697cb54fb28cfb593f828ef6c8",
      "Inputs": [
        {
          "Id": "4de69b56c2a443bdb3a0783d8a0cc026",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d492af17e4d74fe5b96d3fc4ab3b6817",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4269f1417088451a93ad09a2a14ead98",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "a11582f0bcee4871b8ac22440451548e",
      "Inputs": [
        {
          "Id": "295df6c9c6cf404eb12641d602ca41a3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9db2cd62b5a5475b906586f43e95fd76",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c0a61f17002430b9a787ceafadd6e00",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.PruneDuplicates@Autodesk.DesignScript.Geometry.Point[],double",
      "Id": "846a4ed69ae7486c8cd1abb9c1a446df",
      "Inputs": [
        {
          "Id": "60ac82f08e03454e8721999beb0df90e",
          "Name": "points",
          "Description": "List of points from which to prune duplicates\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0fae1575cade48989aa80a0452f8738e",
          "Name": "tolerance",
          "Description": "Tolerance used for pruning\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be949f075ab642acb92ce22dc9caa4d0",
          "Name": "Point[]",
          "Description": "Unique points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Prune points to exclude duplicates within tolerance of included points\n\nPoint.PruneDuplicates (points: Point[], tolerance: double = 0.001): Point[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "6be47a8aa02a41088bcd5b9f6a962587",
      "Inputs": [
        {
          "Id": "8e26c07bd8d9411fb44c574e212f463f",
          "Name": "item0",
          "Description": "항목 인덱스 #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25f4f8dd3191495c972921a1bfcc0cab",
          "Name": "item1",
          "Description": "항목 Index 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ae6d599e8cd4d01b090b2442b7851be",
          "Name": "item2",
          "Description": "항목 Index 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6a6a3bc6a7b4304a7203233104c31e8",
          "Name": "item3",
          "Description": "항목 Index 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca618508046c4d8aa2fb071ff690c17f",
          "Name": "list",
          "Description": "리스트(유형: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByPoints@Autodesk.DesignScript.Geometry.Point[],bool",
      "Id": "def816e0b48f428eb6ccf3a2b0790750",
      "Inputs": [
        {
          "Id": "5aa285f2af6840e9ab5437d8a1013f3c",
          "Name": "points",
          "Description": "Points to make polycurve\n\nPoint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6acd211fa79549be858110980c30f821",
          "Name": "connectLastToFirst",
          "Description": "True to connect last point to first point, false to leave open\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0b00167c0c043ab9780d48ee10a0baa",
          "Name": "PolyCurve",
          "Description": "Polycurve created by points",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by connecting points. Set the 'connectLastToFirst' input to true to close the PolyCurve.\n\nPolyCurve.ByPoints (points: Point[], connectLastToFirst: bool = false): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.Curves",
      "Id": "abe825cf7ed04782b9fb0c521f0b0314",
      "Inputs": [
        {
          "Id": "27c4313588ee4b43a6206c5fc689a311",
          "Name": "polyCurve",
          "Description": "Autodesk.DesignScript.Geometry.PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a9a0c3244a14389a50e53d8bb0033e4",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns curves of the polycurve\n\nPolyCurve.Curves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.StructuralFraming.BeamByCurve@Autodesk.DesignScript.Geometry.Curve,Revit.Elements.Level,Revit.Elements.FamilyType",
      "Id": "97b1d5393fb64e59afbd3b6ef4b76dea",
      "Inputs": [
        {
          "Id": "9253ec4f03094eeda978e8d82c199582",
          "Name": "curve",
          "Description": "The curve which defines the center line of the beam.\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db081f04e6f340cf8c3cc1f73e1c461f",
          "Name": "level",
          "Description": "The level with which you'd like the beam to be associated.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "958509fdd6e34a8aa4d4708bcd16f625",
          "Name": "structuralFramingType",
          "Description": "The structural framing type representing the beam.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1d9d47832474023ae9b6132d3148d42",
          "Name": "StructuralFraming",
          "Description": "StructuralFraming",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a beam.\n\nStructuralFraming.BeamByCurve (curve: Curve, level: Level, structuralFramingType: FamilyType): StructuralFraming"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f9fb66cc1d67457ab81c5290f63b8f48",
      "Inputs": [
        {
          "Id": "3f4fbaa2d459488182c7808544357492",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7cd7cdb19d494360b5a46157ccea4f55",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95410e7590264b858d1269f7039440f8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "c05be71868d442f19729c2301e8efff1",
      "Inputs": [
        {
          "Id": "4f0dedf100884d11bf82f61e1e7af676",
          "Name": "item0",
          "Description": "항목 인덱스 #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc7b14693b9446b48ff8b658a472b915",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8097ab78bcee4f7c85e126f75e199f57",
          "Name": "list",
          "Description": "리스트(유형: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetIntersectingElementsOfCategory@Revit.Elements.Category",
      "Id": "1436750309af4a9aaa80b41fc5d589a1",
      "Inputs": [
        {
          "Id": "1515f17c578d4e839164aef02e9cfb2c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f857606c1e3480297157a7d3e752add",
          "Name": "category",
          "Description": "Category of Elements to check intersection against\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81c67ba086e24488be48d19990cb20c6",
          "Name": "Element[]",
          "Description": "List of intersection elements of the specified category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all Elements intersecting the input element, that are of a specific category.\n\nElement.GetIntersectingElementsOfCategory (category: Category): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetCategory",
      "Id": "7d003cbb6e8d4a63b916db38561bc8fe",
      "Inputs": [
        {
          "Id": "5b6c7ad5fa2149d597ce0d24bfebc357",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79abc82398184115b2028b4b6d7bc005",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Element Category\n\nElement.GetCategory: Category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "216e6aedb2b240ff9f3c5367f5ef6fd1",
      "Inputs": [
        {
          "Id": "eee62814356a42aaaaf5d2a5f0de4a63",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46e5ca39c77b4d678f0d5e4fe3d57b77",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.JoinGeometry@Revit.Elements.Element",
      "Id": "db50459804c5481f86a2fb22671d7d21",
      "Inputs": [
        {
          "Id": "6af492699490448a92744339b7b15339",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f35b3c4e9713439abdeee651c941b19e",
          "Name": "otherElement",
          "Description": "Other element to join with\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29a030d30b3a404b8781512997a83582",
          "Name": "Element[]",
          "Description": "The two joined elements",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Joins the geometry of two elements, if they are intersecting.\n\nElement.JoinGeometry (otherElement: Element): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "22bf2334c96d4c168e5b4c11b0e0daf5",
      "Inputs": [
        {
          "Id": "cc83b3f61ec3475cbc9cdb298174c4c8",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3f590e5a2f44069b2e3e260c74840be",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d4e4e8191d546dfa6e59c66c501f74f",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.ParameterByName@Revit.Elements.Element,string",
      "Id": "0d698200a81041e899fb75f5138adffb",
      "Inputs": [
        {
          "Id": "800e903236d1470487ab98e5a859ffcb",
          "Name": "element",
          "Description": "Element\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34aaa20ef22d4c6f9b96786e6efabc18",
          "Name": "name",
          "Description": "Parameter Name\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4dbaf842f9942a5bd2d84422d243cf3",
          "Name": "Parameter",
          "Description": "Parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Element's Parameter by Name\n\nParameter.ParameterByName (element: Element, name: string): Parameter"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Foundation Thickness",
      "Id": "7bf74633386b464a9fca4a63052c1cf5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f8beb3c2c9dc4401b00b4a63b19acccc",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.Value",
      "Id": "1333b269cc294b5dba323dfa8ad93936",
      "Inputs": [
        {
          "Id": "6e8fc8f4b608444b8035058b910b2ee0",
          "Name": "parameter",
          "Description": "Revit.Elements.Parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "79a5a9c7aec3488bad0a04336cd93508",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of the parameter\n\nParameter.Value: var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "47904117a1c84c379a624d14d2b8a3ae",
      "Inputs": [
        {
          "Id": "80ea1a275c9443989ebdfa7b9f4424e3",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c17d874474d6444cae90d67f46e30c59",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "87bb41cf05ed44448213e41c5b20f477",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.StructuralFramingTypes, DSRevitNodesUI",
      "SelectedIndex": 4,
      "SelectedString": "H_SB_ACB_TG_B400xH600",
      "NodeType": "ExtensionNode",
      "Id": "33b419e9a8b44f89b31274ad2b101314",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0a38445ad19849b59c6587ce49c9770d",
          "Name": "Framing Types",
          "Description": "The selected Framing Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a structural framing type in the active document"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetGeometryJoinOrder@Revit.Elements.Element,Revit.Elements.Element",
      "Id": "5f9be9cf94ef4502bb29d860aa69c072",
      "Inputs": [
        {
          "Id": "9b7fcb2ce0ee4e54bf13be06b25ed326",
          "Name": "cuttingElement",
          "Description": "The element that should be cutting the other element\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "adb3d1fbe3254101998750686164290f",
          "Name": "otherElement",
          "Description": "The other element that is being cut by the cuttingElement\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0cdb57a6ec54d078256526249f652bf",
          "Name": "Element[]",
          "Description": "Input elements with the geometry join order updated.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Sets the order in which the geometry of two elements is joined.\n\nElement.SetGeometryJoinOrder (cuttingElement: Element, otherElement: Element): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "0943b21ab0764673800c4bcf71e9ec36",
      "Inputs": [
        {
          "Id": "f7b3fc1913bb4a2da82a096250cd7da2",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d7d8dd669ee4465d8c1e0736c1d269c5",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "1e7da67cc4dc498fb4dcc1e6d630f1e5",
      "Inputs": [
        {
          "Id": "7622f0edb8bb436ab97e7a7da7a3e925",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75cfd59a496b4cb1b8437f7562ad2981",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "y Offset Value",
      "Id": "7693e9a2e73945d29a20783be3249403",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "69a8481399a741d084d13dd184d68d8d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "a5a91de174594b269558a6fed559b0ef",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "893f6fcac4d343eb98e272b1f9e66746",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "79f35b8a93bd4c43997437c30d10bf4b",
      "Inputs": [
        {
          "Id": "9a38ae441ec043e1aa9b07dce2c1beba",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e90f0eefb612434195a423fcc50b8f2f",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00c56f4a5fdd4ef8ad091bc40610b963",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13fe76ede7c14adb9bc177cb7718a13c",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Id": "2245addbf32548d7b12c9358cd3509f0",
      "Inputs": [
        {
          "Id": "6854de32d7b54a9e85f2b2dbc9034170",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "acf3ac0f627b41a69fcac3aec539aa30",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5774ce50297143bc8e7da78d5ca502fa",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "d1eca05a0fc74027878cd0e96aa87c7f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7336db96eb62423ea97cce5a7c8d9c81",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Base Offset",
      "Id": "068e160fd74d4d8a86c0d782a7a39ce8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2305784422bc47079560a12aad129d8b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "c91591f59aba4d3f9c776e1d06c82af0",
      "Inputs": [
        {
          "Id": "ab319d542b274c6cb4472a605569a55b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4f17b04226d4a208639b57c6e2adcd6",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4c05e8572424850a02108c38c7dfc23",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5fa2157380c94d2d8cf8f1313516d631",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "fdnThk;\n0;",
      "Id": "004fd90fcb57406395e82c6c5f995731",
      "Inputs": [
        {
          "Id": "9fdef261ffb24d61880efa6e543723a9",
          "Name": "fdnThk",
          "Description": "fdnThk",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be909f8edcf7435a93478115c63727c9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86402611cd224d5ab43f418e9b814930",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "a7455add1fbb4cd991dcf49c202d029a",
      "Inputs": [
        {
          "Id": "37edc26ee9e746ca8dde80a150d85fee",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2c9ee7fa7c44afdbe25ee6650bcbe7b",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "536c5b6b12e4446a904dc570717ce215",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66716721356f4028be45e770715d883d",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Top Offset",
      "Id": "22dd4fd8dac6483297c6d16a284a5b06",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "abbcfdf826dc45a99bd523ab64dc2f9c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "57b9526830d640c2ab96d94620868f55",
      "Inputs": [
        {
          "Id": "2fa7f5566fa8448f9713414b1514c44b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5725799772c44f398103a558471e3685",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9d58e6a11f742588f09677b4cdd1d99",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ee449aa54ae40dbb06b46edc267bf4c",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Top Offset",
      "Id": "db1b9c64b28d461498f8d4a104eb5c63",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f58f76f6d744f82a517cc54e05d0230",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "dc7bb29d26d6473a916696fe3e594adf",
      "Inputs": [
        {
          "Id": "d17dc5e2778e400ba17b85abdd33a79d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "439941e4985e4a35abc06962832768ef",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48ad422e21d94dd8a1a509a9e03caea1",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4dd64744cd3f4918963c636bed570c74",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "558e6ec44cea43b0bb33a8dfc2792369",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8743aeab2d5b4f5995895b7029ad7e60",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Base Offset",
      "Id": "4ae9066ef8fa4988865f2ff514eda7df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99419b7c7dd542a0a27e83c3b0015a61",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "33d100d7171f4085b53d8e7a0bbd1d13",
      "Inputs": [
        {
          "Id": "0b0f44ad14af4231a36dfa2862045b50",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f47a540ed2a40f0969938eb62432cbe",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed332408c59645ec8b70802c2c0431f4",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "814ff31a1e224e8dbe7f83d023c99633",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Start Level Offset\";\n\"End Level Offset\";\n\n0;",
      "Id": "dc6be8eb46bb4c01b4f46243464cb30a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1e94a07fa4dc4822918344277cc149c5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b07c8621c3584627803fefdc116e0508",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b2f4237b4d441468c488a5715096916",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"Start Level Offset\",\n\"End Level Offset\"\n];\n0;",
      "Id": "60ceb677864d47bd9d8eac90259b40ca",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5442ae5d8ced4ece9a7259c73e29d22c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f247e32890da4d429a0afa4fef60a31d",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "b107f1572f3a4933b9e5566d1597d3bb",
      "Inputs": [
        {
          "Id": "c90f62f2b06d46afb9ae106804acb82b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "ded6642a24f64428a4fb0a76443d10c0",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "564597a1fbda4e6ea0d106e361f9361b",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f7e9d41457e4ce899d0c327645596e5",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Reference Level\";",
      "Id": "672deb3b4a0e4b4fa9832e33a3461040",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "58dc307251664ad586598d0b972e90ce",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "levels;",
      "Id": "594519a99dad419ca3439569f5f36a15",
      "Inputs": [
        {
          "Id": "4877856650b241ee9567ffd77a2fd578",
          "Name": "levels",
          "Description": "levels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97b94a68b5614469a2f3e9309d5a3a0f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "levels;",
      "Id": "8ec43ee9d1904760ad8290e27a3fd81b",
      "Inputs": [
        {
          "Id": "4d681f19b1204460b22e44d140f54c92",
          "Name": "levels",
          "Description": "levels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34135857a7f346ffbe26ba8509084661",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "8d9b4f1282a44339ad14be161c86800c",
      "Inputs": [
        {
          "Id": "b61f6f21a08742a99e440eb858036681",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3b3838976904da99c96df8cf6b96ef2",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "986f7577139a4608a30cf8027f51b597",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f991cf583f9c4f8ea37039224b488419",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "9f091a183c724f3bace7478f4d6ea404",
      "Inputs": [
        {
          "Id": "c0a473afc26a43d0846de7439ee09842",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "527947ed6a904f7abeb5de0931f905f8",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c7255eedc3e943f681cc96790ed58531",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "542074705de245489d48541fb0eaa2d9",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "19db9ff2e6244083ac1f04ba8d59dcdd",
      "Inputs": [
        {
          "Id": "8c8c4eb273db4809a3527cd2d32a56b3",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5c900ff160d424ebd7e68a1ec0ae0f1",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1fe7301db6444d3b796fce1d6f3078b",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa51dd5ed6a04259941fe235d9fda057",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Start Level Offset\";\n\"End Level Offset\";\n\n0;",
      "Id": "77f8c2b159784a4196f1ce83b8d52cbf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4c589e62768a4691b333f5e9da8cd2b3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8ff8abb2fda14153b7a1557e25e9ff83",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d3e4b108d354e419398caa6f9889d33",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "08d126ca56064fe7901e04b537740cb4",
      "Inputs": [
        {
          "Id": "4dbdb66a3df04c8a8bd59f44407c13f7",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "384294e7cbb94217bdda6a760a767b9a",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1d2642ec3bf403eb4acea630c111b19",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5807cfd80a4471491dcb468c6962f80",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Height Offset From Level",
      "Id": "ae635f826ddb42c082ea4962a2d3b09b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4d0ab7c1059b4835bad0c61f80bdfe37",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "91e29cc146694b0892f3bb125fb72902",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fbcbaf077aba4d76b8bbeb52fd547ac9",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "74f6483158bb4433b1701df44dd91821",
      "Inputs": [
        {
          "Id": "0304cbb2f02d49d692fdc5bf2c86ee4c",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c23b6ae97874e5c9932f39828dec0d8",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25e28461342947d5aaf6d427187bd615",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ngridPtsGrps = IN[0]\r\n# Place your code below this line\r\n\r\ndef getPoint_SttEndPair(ptsGrp):\r\n    rngs = range(len(ptsGrp)-1)\r\n    combi = list(map(lambda x: Line.ByStartPointEndPoint(ptsGrp[x],ptsGrp[x+1]),rngs))\r\n    \r\n    return combi\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = map(getPoint_SttEndPair, gridPtsGrps)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "9222a06b17e04dee8805caea52c39340",
      "Inputs": [
        {
          "Id": "f28bb2e701c642e7a63bee97bcc83cac",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25963143237d452ab7b898db35db6584",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "levels;",
      "Id": "21ebb93a794047358c68e54ad3604201",
      "Inputs": [
        {
          "Id": "ce2a70065a4e4571920e5607fcec94fd",
          "Name": "levels",
          "Description": "levels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96d335d71b794174b7f5677b012d3f7b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "75d9fed61d66412f90c26ffa56b296fc",
      "Inputs": [
        {
          "Id": "f79790f2fa8d4d77a85621858f45f0fd",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0af1d3e6f2c040d988ec630be1a87a3a",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "efe3f476440c4e6ba18ffc8c5f1e472d",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c19a0b67d39c445b857aea81277f5ec0",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Id": "fe07b63774d446b0b88c07f710422358",
      "Inputs": [
        {
          "Id": "04cfe43d7f4149e2bc6f59a44ad62335",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a3597fba87a46799c2408cdd7ae3b39",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "81e565518ca345a58cd91f63b90c4941",
      "Inputs": [
        {
          "Id": "32ffd1de7bc24e43b2d00e0257f7e439",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63c796446b974d2ca7007e6bba781d15",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.TakeItems@var[]..[],int",
      "Id": "90a2b2db5b0f4d2880f9bfbcec7e3431",
      "Inputs": [
        {
          "Id": "01daa050c3cb408c99e78d476d01f763",
          "Name": "list",
          "Description": "List to take from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3bc7ec1210b440a957182a8f392c41d",
          "Name": "amount",
          "Description": "Amount of items to take. If negative, items are taken from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15452dc839344aa386e2f43557f48f02",
          "Name": "list",
          "Description": "List of extracted items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fetches an amount of items from the start of the list.\n\nList.TakeItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Reverse@var[]..[]",
      "Id": "8da505d7675b41c6ba298b79271ad6a0",
      "Inputs": [
        {
          "Id": "14a5c57a1e2a484d8f5ccd0e658978f9",
          "Name": "list",
          "Description": "List to be reversed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ecb06feaa6d4f49b74c885b484f3f6c",
          "Name": "list",
          "Description": "Reversed list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing the items of the given list but in reverse order.\n\nList.Reverse (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Reverse@var[]..[]",
      "Id": "7769c93a65bd4d498362ec718248b67d",
      "Inputs": [
        {
          "Id": "be4bd2c4a45f4dce8b053b7df7bbe5b0",
          "Name": "list",
          "Description": "List to be reversed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4235f2e249204a3686cf6dd0b4beb0ca",
          "Name": "list",
          "Description": "Reversed list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing the items of the given list but in reverse order.\n\nList.Reverse (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nlevels = IN[0]\r\ncolumnGrps = IN[1]\r\ngrp_level_pairs = list(zip(columnGrps,levels))\r\n\r\n# Place your code below this line\r\n\r\ndef setParam_grp(grp,level):\r\n    res = list(map(lambda x: x.SetParameterByName(\"Top Level\",level),grp))\r\n    return res\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = map(lambda x: setParam_grp(*x), grp_level_pairs)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1ca1f1e7413649a08309062ee26f3346",
      "Inputs": [
        {
          "Id": "2431b2e487fa4395b479d96c146354c1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "30f1a4d1a79c4e90ada34304f7bd7f58",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1295fd023204ee8b113f2ff79a4a08f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.JoinGeometry@Revit.Elements.Element",
      "Id": "a06c39ad2a564ee3852846e73718d3cd",
      "Inputs": [
        {
          "Id": "29184f26edbc49dfbd7daa3138c376cb",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31f311cd9d6f4088a92300bfb8c3b036",
          "Name": "otherElement",
          "Description": "Other element to join with\n\nElement",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3805296371af41439fd774812dc9c1df",
          "Name": "Element[]",
          "Description": "The two joined elements",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Joins the geometry of two elements, if they are intersecting.\n\nElement.JoinGeometry (otherElement: Element): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "dd4fda7f838c4b54a0ce67bed68e3d64",
      "Inputs": [
        {
          "Id": "9c711ffadbd84f11bcee0b304ee790d6",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0cdd2fc2a6d742af9ef3c107337dde42",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6b23585399d4085891b7b755de10a8d",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f732b20ceed94078afbcff513afdbf58",
      "Inputs": [
        {
          "Id": "76181ad2da52426a90825be3c7a68317",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b146c317fd8485d8a640471b01039cd",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed906a0867cb4b8d8dad171f92a38946",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "fd586c31c6124e7eabb6f984e1f92e30",
      "Inputs": [
        {
          "Id": "b9c6aee7358b421385fdadbf2cee63ff",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63d7c485c8aa4fc286c7981bc22a3dba",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "79f4d179d65d445eb0c771f72c201833",
      "Inputs": [
        {
          "Id": "8f503a99d3ac4af5a38ee4d2af6c891e",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "442b4d16b64d49b6bbe013388801e4fc",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetGeometryJoinOrder@Revit.Elements.Element,Revit.Elements.Element",
      "Id": "be50061c54c54b62b7b50cdfc0d86bdd",
      "Inputs": [
        {
          "Id": "67a038ce9d094dccbaa4eeeec43d838d",
          "Name": "cuttingElement",
          "Description": "The element that should be cutting the other element\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7a24261bb7c43238bc8a0c20208c35a",
          "Name": "otherElement",
          "Description": "The other element that is being cut by the cuttingElement\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d821b10599c54e2ea487b6c67ee316dd",
          "Name": "Element[]",
          "Description": "Input elements with the geometry join order updated.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Sets the order in which the geometry of two elements is joined.\n\nElement.SetGeometryJoinOrder (cuttingElement: Element, otherElement: Element): Element[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "a2dc687612064d2cac267ceb18864b7a",
      "Inputs": [
        {
          "Id": "242b00cdb6dd49a2bf41d612dd34a7d3",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53f563e3b63b40f4a877ab6cc12755ff",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1b54cbec3684091bafe1b1e0c0926b4",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "columns;",
      "Id": "9ee2a2160fca4ae09ffebe43807d6a33",
      "Inputs": [
        {
          "Id": "00be7783e90545c59f8b7202ac0776c0",
          "Name": "columns",
          "Description": "columns",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c391fec31de4d2fb8cfe6c0d42989e9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.JoinGeometry@Revit.Elements.Element",
      "Id": "b7e815d1d6d3434ab9aa638f6f8376c8",
      "Inputs": [
        {
          "Id": "c838aa0462a2454185c878373e54eb85",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c85416c940464d78a8eba8ffa4f9264c",
          "Name": "otherElement",
          "Description": "Other element to join with\n\nElement",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c113f84cdf144e59893878095ddf51d8",
          "Name": "Element[]",
          "Description": "The two joined elements",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Joins the geometry of two elements, if they are intersecting.\n\nElement.JoinGeometry (otherElement: Element): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a244e31ac5064a3291ce1a64ff934d04",
      "Inputs": [
        {
          "Id": "a14d93ab83b04d698d9a1422ef805e14",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a71955b82854e4185d6290d6a4c9571",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0189ddefaabe4532af9873318f4acdf5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "d971f54755fb49ab93553c1454ce5dc8",
      "Inputs": [
        {
          "Id": "59bca94488d34cbd8a6882aa329a0e81",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e20dce8674241dbab04b6d1e152009f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4c147cbae5b48a6a96737485cca70e6",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "02ba29cf36274d8d8bb02973aef063bb",
      "Inputs": [
        {
          "Id": "923de0951e4d44f69c8be23b91294b0f",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5e3b917331e49138327c72000b92987",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "876011b0eb764496a6bf663ea00facfd",
      "Inputs": [
        {
          "Id": "ee3d5868ac324726b11792816d3ccd60",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83e68e44bba54f8f8cde373dd3909492",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "de4e6ba4e85c48e785eaa6280234a77e",
      "Inputs": [
        {
          "Id": "6e8f44d62c5c47d29cdf9cdbcce17b11",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b52c1ba0c624c4ea4e2c502796e6316",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetGeometryJoinOrder@Revit.Elements.Element,Revit.Elements.Element",
      "Id": "b1626a794d9f4beaafaf1199aa7dd027",
      "Inputs": [
        {
          "Id": "d55d361c71ee4760a86c49cf7dedec67",
          "Name": "cuttingElement",
          "Description": "The element that should be cutting the other element\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d8f832e552d4b56898c6bf310fb5d1b",
          "Name": "otherElement",
          "Description": "The other element that is being cut by the cuttingElement\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a73abb47fe4498d9b9be280e256abbd",
          "Name": "Element[]",
          "Description": "Input elements with the geometry join order updated.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Sets the order in which the geometry of two elements is joined.\n\nElement.SetGeometryJoinOrder (cuttingElement: Element, otherElement: Element): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "floors;",
      "Id": "3ca29260fa504c8d97a80c31957429f2",
      "Inputs": [
        {
          "Id": "eaa55fce086e4024ab0ea69be9ee5e31",
          "Name": "floors",
          "Description": "floors",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "767055d4e3694a178d10cb5d6ff07411",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "2e916938e021497eb3bb15bf7322d04e",
      "End": "59f2faee7e1c4fe09c5d75b28be0a54a",
      "Id": "150660ed0ccf4f8e801d5d19f09ed297",
      "IsHidden": "False"
    },
    {
      "Start": "2e916938e021497eb3bb15bf7322d04e",
      "End": "a06840211eb64eb6ba60bf41fd3f7ece",
      "Id": "93e4503c3dbb498cabd41e535e71f47f",
      "IsHidden": "False"
    },
    {
      "Start": "2e916938e021497eb3bb15bf7322d04e",
      "End": "e78434eaffc74033a1cedfc8a6f763a0",
      "Id": "7aaf9bace7004330afb6a3b38a4a237b",
      "IsHidden": "False"
    },
    {
      "Start": "39047913b04241ec9a7ed116720985d4",
      "End": "7bd16b02e1ca40a79bc1f7956a5acc43",
      "Id": "befc3c6bade340bfa516e9fb6597cb6c",
      "IsHidden": "False"
    },
    {
      "Start": "39047913b04241ec9a7ed116720985d4",
      "End": "d124533b49164c7c850acf2a69d340d0",
      "Id": "7e5cf389f1b9437aaeb192d037fc59c3",
      "IsHidden": "False"
    },
    {
      "Start": "9c293fa91ff648b184f2c1ee5a43430e",
      "End": "e7bf80dc5c3c45808dd51c5793bb9ef7",
      "Id": "4e78745d4ef34a1ea6cbacd4bd3d6d2f",
      "IsHidden": "False"
    },
    {
      "Start": "61f457aaf34943b98f4fcaee4d7e8ab3",
      "End": "fbebebcb909f42768124488fcaef55a0",
      "Id": "7c51ef1667f2495e861006cf288245cb",
      "IsHidden": "False"
    },
    {
      "Start": "c9cd7645db2341cebb73786fa45eb5e1",
      "End": "6db21ab80e6b481b9c47c96a7a33eb0b",
      "Id": "7b2f4a8396484f40a067bdba908c68b2",
      "IsHidden": "False"
    },
    {
      "Start": "c9cd7645db2341cebb73786fa45eb5e1",
      "End": "b3da605eccc54de58d60be0d8bf17105",
      "Id": "ae3556acc607478a8099316429b424e6",
      "IsHidden": "False"
    },
    {
      "Start": "b724db8864104b70894242d1ef45668d",
      "End": "74e905d95e1d40e89671a3f216b3075b",
      "Id": "9e49b4e3896a45759fc10824670713e1",
      "IsHidden": "False"
    },
    {
      "Start": "e8c339faf3e742cc80c3e8533efcc854",
      "End": "3de456de8bf043b988c3afa35beaa9bf",
      "Id": "1abbce6469af444e9166f3d2c2d80b9a",
      "IsHidden": "False"
    },
    {
      "Start": "5bc20e67b502464eb87e11d15ae14a05",
      "End": "f3de64c1fec84ff487739a50d0d9d850",
      "Id": "3475315ae4c34d4b94138d666914d4f5",
      "IsHidden": "False"
    },
    {
      "Start": "59c053d047f6488c8d7df514fbf94503",
      "End": "e05067ff7fde4d70b9cfa36084160ec7",
      "Id": "09ea0f88e2c541ba97f71c2abab10e34",
      "IsHidden": "False"
    },
    {
      "Start": "59c053d047f6488c8d7df514fbf94503",
      "End": "0ba83a5c881740c2955f91f18aaa5e95",
      "Id": "59450a2a419a44e08528e24b95b5e91f",
      "IsHidden": "False"
    },
    {
      "Start": "a70249b61df446a2823c5cbaf25e4200",
      "End": "1684a07fe03642d0a4b3f5adda692be4",
      "Id": "305d8057dba04f68a6baf0f81d7a7e78",
      "IsHidden": "False"
    },
    {
      "Start": "32aaf1dc0bb24ddabdc877dfa444c14f",
      "End": "63e16b276f6b47e39386cfce433e2b5f",
      "Id": "7541ef43b46842eb96733ee0f399f427",
      "IsHidden": "False"
    },
    {
      "Start": "c6bdd489461d47a1b277e2a068c4e431",
      "End": "7573e638e7e24b029da2170624dded4c",
      "Id": "827922ae7e9545368fb90673391ab88c",
      "IsHidden": "False"
    },
    {
      "Start": "c6bdd489461d47a1b277e2a068c4e431",
      "End": "49f220c4b158401e827d9892265427fe",
      "Id": "9c0b4acdcf1e4856b47a04a97086eb93",
      "IsHidden": "False"
    },
    {
      "Start": "c6bdd489461d47a1b277e2a068c4e431",
      "End": "d4bc39a5789f4b6ab677fde21c3cd0d6",
      "Id": "57593068033c4118ab50688afe2afc9e",
      "IsHidden": "False"
    },
    {
      "Start": "c2589d9cb8874fec92bf42a2c0f8a534",
      "End": "8299a36f06e8485eaca39d39127fe1c2",
      "Id": "98680e7dee3e4a8fb1b936572ae933d8",
      "IsHidden": "False"
    },
    {
      "Start": "11ae8eae5652429cab7bb67b53f7a21a",
      "End": "c05eacb6418f40b29eab9378c2af13ce",
      "Id": "e67c48a3872b42679c06562dd93986c9",
      "IsHidden": "False"
    },
    {
      "Start": "11ae8eae5652429cab7bb67b53f7a21a",
      "End": "f036ccc111be437aa60dc9a139d477bc",
      "Id": "65e5ad36b31f4f06a19a9f4bfbe0a2bc",
      "IsHidden": "False"
    },
    {
      "Start": "aed305d5a3c54cf09b68a1626e8c3e18",
      "End": "bdebdf81425e4d11b19919ddb8e2c48f",
      "Id": "07b8c3abc7b54fb2859e0b5437283c10",
      "IsHidden": "False"
    },
    {
      "Start": "aed305d5a3c54cf09b68a1626e8c3e18",
      "End": "cd5b26f5bee24d61b207fa2ae5a221d2",
      "Id": "09ff3514017248eba2e1532d12d0e191",
      "IsHidden": "False"
    },
    {
      "Start": "1e2153a98364488cb614a6dcd5317f50",
      "End": "3a22657354494d159dc89baa1e73ed21",
      "Id": "ed896a9310d14e009057cfae9141fa41",
      "IsHidden": "False"
    },
    {
      "Start": "ea269e8acdc04d3f93eb36aa4c55cf0d",
      "End": "cc296b2d40314be6bf378ddb04f4be1a",
      "Id": "816c6ae3356440039d5cbc6cf6db670f",
      "IsHidden": "False"
    },
    {
      "Start": "6ec4dcc1e62847a0b9f73e890eca4289",
      "End": "fbbf34f34bf54155baadf5df7e1bc9a5",
      "Id": "4690ad07235f42b1b0bbf660ca36dacd",
      "IsHidden": "False"
    },
    {
      "Start": "6ec4dcc1e62847a0b9f73e890eca4289",
      "End": "0ec9259b61f8424e9acd83579cba8c7a",
      "Id": "1564438242a84d3a9f43d25e254618ba",
      "IsHidden": "False"
    },
    {
      "Start": "c20f42e1c0804a4f9e1dc4e7cfaa6655",
      "End": "320cc3d1473a41a2afe5a2f7596107af",
      "Id": "c617583c52d942098cd140a84b4b5770",
      "IsHidden": "False"
    },
    {
      "Start": "25fbaf201b7b42b280652f459431c04a",
      "End": "4abf6e5f0f014fcf9e78e31315dab775",
      "Id": "1b6ea22921b2464eb4c736c6f59fe6d8",
      "IsHidden": "False"
    },
    {
      "Start": "25fbaf201b7b42b280652f459431c04a",
      "End": "f7e68fe3e544438aa7006ed16d3a21d5",
      "Id": "9935ce44c17340c09a0bb45ad05c70ab",
      "IsHidden": "False"
    },
    {
      "Start": "25fbaf201b7b42b280652f459431c04a",
      "End": "f28bb2e701c642e7a63bee97bcc83cac",
      "Id": "6e738e4eb93e4576b35053907b606ce4",
      "IsHidden": "False"
    },
    {
      "Start": "c10ecc02b4a9421985580b15c10a5cce",
      "End": "5797332821a346d29372a5cee733dd53",
      "Id": "0fe611d8ea4d48d0aa48171cf4b9eaac",
      "IsHidden": "False"
    },
    {
      "Start": "fa3a78889a044e51b6b8762905611fa8",
      "End": "6cb73fec955444029be6ab72c89d6fad",
      "Id": "de6613b066244c268a4f8f7ecd4d8edc",
      "IsHidden": "False"
    },
    {
      "Start": "f2aa6dc421504deaa5fad431db61a906",
      "End": "82d8e6affde44f0183b53b90a667f776",
      "Id": "66127ecce79d470faae682da8b404a75",
      "IsHidden": "False"
    },
    {
      "Start": "eafb30e90d014f26bc0fb7d288dd46d8",
      "End": "464e0ac8e610485db64cac8586ab25f2",
      "Id": "3dee45e265c5465faf5d6d34ef9bdd29",
      "IsHidden": "False"
    },
    {
      "Start": "e9401cb9b90d4f449d86073b562d1100",
      "End": "32ffd1de7bc24e43b2d00e0257f7e439",
      "Id": "3a6ffb533ebb43ae8f177e12a5878acd",
      "IsHidden": "False"
    },
    {
      "Start": "e9401cb9b90d4f449d86073b562d1100",
      "End": "30f1a4d1a79c4e90ada34304f7bd7f58",
      "Id": "5545d93872b0445d84a91a70b090c754",
      "IsHidden": "False"
    },
    {
      "Start": "72f30c3256eb4732aa13ea787be6762c",
      "End": "f944278bc43c41abb2b2f9427f528ac1",
      "Id": "8faf42571cc04a22add55a94ba8fdde2",
      "IsHidden": "False"
    },
    {
      "Start": "77bd0b04a03a426fbfcbdca70463390a",
      "End": "94a57be8626f44c6af0a8c87e58632ca",
      "Id": "7b82af75a425456db85064d6f47d8154",
      "IsHidden": "False"
    },
    {
      "Start": "55489913b2be4460901f8588a48da170",
      "End": "fda999c05cb743208a841b3cbd6a33af",
      "Id": "3a73554ece514460969b21dcad4b563a",
      "IsHidden": "False"
    },
    {
      "Start": "55489913b2be4460901f8588a48da170",
      "End": "3ffe297712f94a00ae96023785426006",
      "Id": "44149a1a673f4abaadd654780df52028",
      "IsHidden": "False"
    },
    {
      "Start": "9b5f3564925a4be8aa28efb36a907afb",
      "End": "c6b9dd6156e64f338bf3ad35934745aa",
      "Id": "d390a9ee35e84769970fd7a7ec29a9a3",
      "IsHidden": "False"
    },
    {
      "Start": "9b5f3564925a4be8aa28efb36a907afb",
      "End": "7d8ea072eb544599835b993f93a670cf",
      "Id": "b2f7319a81544bb0820678bb2149196e",
      "IsHidden": "False"
    },
    {
      "Start": "a2a26e3479c04eeda0c6d4cf015ea5ec",
      "End": "6dd0df074fdc4233ba09ef6957e270f9",
      "Id": "e6e2953b751d4ce3b38d80ae30a0df6e",
      "IsHidden": "False"
    },
    {
      "Start": "db0a0df7c8904ad98adbd16e831e1a05",
      "End": "1f32584d5c8f4e75aabcd6286bfb0009",
      "Id": "ca1b90b9bd884c9ca2109937a947099e",
      "IsHidden": "False"
    },
    {
      "Start": "b79478d8726248ea9098de07f1c30695",
      "End": "65c11dbe05694506ae9a643ab2d97e56",
      "Id": "89d26ac03d414e5bb7729a8639d9b80c",
      "IsHidden": "False"
    },
    {
      "Start": "b79478d8726248ea9098de07f1c30695",
      "End": "adc5d68c28fa4c6190c59d23e5b1d4b4",
      "Id": "5f7b741e94aa426c8ffa7bac76bc23b5",
      "IsHidden": "False"
    },
    {
      "Start": "9e4b5f18b4d24737978722c94591ea22",
      "End": "4d2a746d4a894c348ae16cc4538c93b4",
      "Id": "65d3411361944aa3928b18ac9a3e8bc7",
      "IsHidden": "False"
    },
    {
      "Start": "17cc2cda70fb4f40a397cebac22892d3",
      "End": "923e46457bb645fd81b2185380089027",
      "Id": "765be481df6b4772a779e868681bcf50",
      "IsHidden": "False"
    },
    {
      "Start": "735fb95be1954d1193ca5792e99d750a",
      "End": "139d57e356f64b1ab8481c6461c01d7b",
      "Id": "910cadbc71694dd1bd49daa8fc0fb747",
      "IsHidden": "False"
    },
    {
      "Start": "a940c1cfec1342938706a5986b929478",
      "End": "b9aacfa412ad4e1ab51f7d8d19a60441",
      "Id": "31a5bf757cc44d4a91d3322b7714e8ef",
      "IsHidden": "False"
    },
    {
      "Start": "6b415ffb6c6b462c98e012ee9535332e",
      "End": "4830e198dc8b45cfa8360a537885ac02",
      "Id": "d6a39c388d414874940f527bbd88e6c3",
      "IsHidden": "False"
    },
    {
      "Start": "8e16433640644c8684f29a562f2c79e2",
      "End": "4e9ad69591b34cf6b97b991021217bd8",
      "Id": "4322dfc4a0b840ab92a4f2491359b6c7",
      "IsHidden": "False"
    },
    {
      "Start": "a6fa52cff85147d4a93abed7510ba26d",
      "End": "d43d79de8f784469be8b480afd9a15db",
      "Id": "8f5993c38ec046e4bf7b491cc6dbbd02",
      "IsHidden": "False"
    },
    {
      "Start": "a9b1173dcde24ee1a74e44feb3257840",
      "End": "749130ccf2684c558dd84a4a00eff1a2",
      "Id": "58f0fa15ca3d4ea7855fe6835d15a706",
      "IsHidden": "False"
    },
    {
      "Start": "2b4a382c2b6844a3a8f50abfa587b522",
      "End": "98e6eba3cb17425bb221f5a1ace1f6e3",
      "Id": "4e1aef7cb9284a4a9842b578e5f4f604",
      "IsHidden": "False"
    },
    {
      "Start": "f80ac08d5eee4afebf01bb6d758d4d7a",
      "End": "713c60f75477480887c44f15266284e1",
      "Id": "3c287493385d4b2090f104253efd6a4a",
      "IsHidden": "False"
    },
    {
      "Start": "776145aa654f4514b5373004cc7264c5",
      "End": "51e28d0738d945e2ace9ab30ba2e36de",
      "Id": "73b95f27a0c441d1ac47dd77a0af0f89",
      "IsHidden": "False"
    },
    {
      "Start": "776145aa654f4514b5373004cc7264c5",
      "End": "b4a025a1077c4aa1b5beb52e7e2c6aee",
      "Id": "040854b2a66a4e3aa21ee32a48d66fc7",
      "IsHidden": "False"
    },
    {
      "Start": "776145aa654f4514b5373004cc7264c5",
      "End": "3aa25d14d4b246a7af912e4f8886bb6d",
      "Id": "9571cd86b4a64e709913214feda82e25",
      "IsHidden": "False"
    },
    {
      "Start": "776145aa654f4514b5373004cc7264c5",
      "End": "bdb8deeb479042c99d042329a2533051",
      "Id": "10d364e8a55347d5a28c7e53e31fe454",
      "IsHidden": "False"
    },
    {
      "Start": "34cca87de5ba48c3bf958b2687b00b69",
      "End": "5b7bba7f567146b69bdc6209604d9fef",
      "Id": "993bf4d4affa40c08b2d14e93c698102",
      "IsHidden": "False"
    },
    {
      "Start": "34cca87de5ba48c3bf958b2687b00b69",
      "End": "1fa7660cbb54427da60beef62098fcd0",
      "Id": "e59022f6ab7a4dfcbab7f4d3cf613933",
      "IsHidden": "False"
    },
    {
      "Start": "fc9f8ebf879f4658886bafec3b73a4a2",
      "End": "ab5c3b835eeb4b3087a3ec3c93fcd3cd",
      "Id": "5258e41208c94f3aaef0538d396e60c2",
      "IsHidden": "False"
    },
    {
      "Start": "bd121c6988ba4054a1a7ec88e2b1483c",
      "End": "cc958f75e4e04113bb7148b5351fa7c6",
      "Id": "e33c115a638243b29837434364c926c4",
      "IsHidden": "False"
    },
    {
      "Start": "bd121c6988ba4054a1a7ec88e2b1483c",
      "End": "4dbdb66a3df04c8a8bd59f44407c13f7",
      "Id": "36b8b8871f6544e98708e87e1163451e",
      "IsHidden": "False"
    },
    {
      "Start": "383a43d3b3bc4649bcd6ff10ec7403dd",
      "End": "3c76c436f0eb4d0bb828c580a33acfb2",
      "Id": "d6e300af3bd74d11b5a82bcd80fb6193",
      "IsHidden": "False"
    },
    {
      "Start": "b9bf7fc21c604344bbee9fd2fba57d67",
      "End": "d7816cc4047244c8aeac44b25bd8b523",
      "Id": "5fedbca919d548bcb4ec5a69e92e7b03",
      "IsHidden": "False"
    },
    {
      "Start": "441595e78f1a4ff8a8be66eec54829a2",
      "End": "6691f9e8468b46c0a210a16044af39df",
      "Id": "b536d86835b0422ea18edc359dda50a6",
      "IsHidden": "False"
    },
    {
      "Start": "8f2d993a1dad41558086afc19c42a46b",
      "End": "b72cfac6e06f492cb3897692636ce50d",
      "Id": "b9e382de8f2544878d20f837ccf102c6",
      "IsHidden": "False"
    },
    {
      "Start": "8f2d993a1dad41558086afc19c42a46b",
      "End": "143f212304a74a419535efe8d2d12b3a",
      "Id": "1b52dcb1f7a3435eb7aaf7c877139614",
      "IsHidden": "False"
    },
    {
      "Start": "35285cab93e949e79d443723053f8c20",
      "End": "45d695673e74480da6aa1550eca0cab7",
      "Id": "e91149c04d7e4fbbaf2864397f185cb9",
      "IsHidden": "False"
    },
    {
      "Start": "59b20f81365a4d9ea7640be085d8d7ae",
      "End": "5ebb1b234c24498e895aba15b96367a0",
      "Id": "7a75160a31b94bc78eaec64152248495",
      "IsHidden": "False"
    },
    {
      "Start": "59b20f81365a4d9ea7640be085d8d7ae",
      "End": "d28ca63c9fe342e3bed487e8a3f4f400",
      "Id": "3deeef49a9214e71aabf13d4cb5e779f",
      "IsHidden": "False"
    },
    {
      "Start": "6120923b8739416d829d1f60e8145b24",
      "End": "ac55842c4877412d835ba3257dc421f5",
      "Id": "2a7e3a7370f74ca1966b8064812b9394",
      "IsHidden": "False"
    },
    {
      "Start": "e167e7e8f655496089a9a81b1c7c41f1",
      "End": "6da30b76c25d443cb1f1093a8e09b26d",
      "Id": "eeac60da58d14d4f84d10c4d37374fd9",
      "IsHidden": "False"
    },
    {
      "Start": "af75a9c57d6f42d9acd039706c596705",
      "End": "b7244baae1164b7089d10528baf5bee4",
      "Id": "81bd95e1c0004768ba45cdfc99fe5616",
      "IsHidden": "False"
    },
    {
      "Start": "919680e0c6ec4d9c8e86172e7d38d8f8",
      "End": "d4fcb77b9157440d918b6c7263fa652c",
      "Id": "f6f916cdba17485a8641276a598d06c5",
      "IsHidden": "False"
    },
    {
      "Start": "ffd5ce54c6974a42937df8ea1b070913",
      "End": "fe2fdbb8e85840eb8634e11d839d2860",
      "Id": "89b1b9bba96f430897eecd2e0d9780b5",
      "IsHidden": "False"
    },
    {
      "Start": "83fb8ff262f24263b3384fbc7ba9980f",
      "End": "db77cd88b13d4ee98df1203e2274b252",
      "Id": "99d9c2fc03a94b22a735c2c1514e5c75",
      "IsHidden": "False"
    },
    {
      "Start": "d3e765bc0ad249a8b78daba9ef09632d",
      "End": "4918d350cc21418eb8f8187ab6413805",
      "Id": "c52b2a10deb84abfbf97b0be63081b3e",
      "IsHidden": "False"
    },
    {
      "Start": "fee539145f974175b7908e063676b927",
      "End": "4877856650b241ee9567ffd77a2fd578",
      "Id": "76af4fbda33645ad8be215c476dbad9e",
      "IsHidden": "False"
    },
    {
      "Start": "9ade664893ac4bfabdca693cd1c1c3e7",
      "End": "0af5008a66624d1f89b0f85702c8203f",
      "Id": "4dbf2494e2e342bb9c2fbba84f28389a",
      "IsHidden": "False"
    },
    {
      "Start": "13b13e44112945b988d00b9cbc8b8047",
      "End": "304af0b7206047bbbae3d95b607dbe73",
      "Id": "a6f2a5366b0b4ec393b98d8b2afb863f",
      "IsHidden": "False"
    },
    {
      "Start": "7633c178569d4f10a4665f84555e57c5",
      "End": "324647a5d04c40109c656822dfdacbfd",
      "Id": "58d149c77f71477eac624697c321882b",
      "IsHidden": "False"
    },
    {
      "Start": "31c2856f53524f9686dfe263531c9ab8",
      "End": "aca1f7985e6f4d009d6d88c7bbfb3051",
      "Id": "a710ccfe65bb44549001a0d6940eefb1",
      "IsHidden": "False"
    },
    {
      "Start": "a46bb19de75d4104a1b3af0a5fa8d0ef",
      "End": "22e117bab94d46cc8593a7993127210d",
      "Id": "880a6050a2dd4d0695e1e5e2eb135413",
      "IsHidden": "False"
    },
    {
      "Start": "20b9ef60bd2d440694a0fbb054d7418b",
      "End": "476a833224e94ceea42c71cd70e6dd65",
      "Id": "82c4efd578094f1c9576b250d8620b99",
      "IsHidden": "False"
    },
    {
      "Start": "0d4a7783c5ee4d5c99cd1f46cfac7b36",
      "End": "64f5898487fc4a8cb5e605d95aafc769",
      "Id": "49e9dacf1b1b46369cb8c53a89825964",
      "IsHidden": "False"
    },
    {
      "Start": "0d4a7783c5ee4d5c99cd1f46cfac7b36",
      "End": "09c740a36df84c28acd25a36f44cdb6c",
      "Id": "b6b06793cd024b7283cbd51361821100",
      "IsHidden": "False"
    },
    {
      "Start": "0d4a7783c5ee4d5c99cd1f46cfac7b36",
      "End": "91ae70f04c184ecfb18968a7527ac3da",
      "Id": "d43ef4505f1042ec833a5fc0330dc2ac",
      "IsHidden": "False"
    },
    {
      "Start": "0d4a7783c5ee4d5c99cd1f46cfac7b36",
      "End": "682f00c08aca45cbb23aab29e108a6ad",
      "Id": "25496756f1ae446893911d7e22d1e03d",
      "IsHidden": "False"
    },
    {
      "Start": "0d4a7783c5ee4d5c99cd1f46cfac7b36",
      "End": "346ee684c4fc4931964df82ea03256bc",
      "Id": "f382ab05fb2a4727abf3334c7f7c77a4",
      "IsHidden": "False"
    },
    {
      "Start": "d9f891a73d8440a889924ff3531f6fd7",
      "End": "7078e7caa8ab46aab01f43b45c26191a",
      "Id": "c62a0a94249e4ef8b2416841b9b7ee7a",
      "IsHidden": "False"
    },
    {
      "Start": "a2578f47674245b49b693172d0430af8",
      "End": "a05ab60913cf42e58a0fbbedf3769089",
      "Id": "d9ff8e4456ab40c2a2c5c12b86db00ec",
      "IsHidden": "False"
    },
    {
      "Start": "cb6d1974a20b4d548f46d93d1dd65c4d",
      "End": "93473eab46814f2bb3c8e10c05fd7344",
      "Id": "a634958d3fe74164b4c7dc4ec9ce376f",
      "IsHidden": "False"
    },
    {
      "Start": "eba072c180dc44cbb057a6cd73d0a3fe",
      "End": "dd26c69c0e36435fb2361568f9ad89a1",
      "Id": "a5fab92c0d63494b92c7914dd7323245",
      "IsHidden": "False"
    },
    {
      "Start": "e0a8236bf66a4d56a81900b036d3efd7",
      "End": "4887134e3acb4465aaafab4cc29a0a18",
      "Id": "7f74c3e9968e4c9e8cdca895d932dda3",
      "IsHidden": "False"
    },
    {
      "Start": "889b25581945414d9c200e7871e7435c",
      "End": "69a5ffc243724ec19c4095c5e4644ba7",
      "Id": "0cdb0bce6084459f89dadfafcfec17ba",
      "IsHidden": "False"
    },
    {
      "Start": "466ae424a14b48338b3fad9a44e276d8",
      "End": "7421993d7685489b8cdf61faebd5bc05",
      "Id": "db285ac527c14f738ddb1a30f21cd1a5",
      "IsHidden": "False"
    },
    {
      "Start": "b6529ad6d26342bca7beb2baeb6b87e2",
      "End": "e5710f008cf342edae289e1fa4bb45d1",
      "Id": "7cb46901843d4cbe9634515cc871f6cc",
      "IsHidden": "False"
    },
    {
      "Start": "b6529ad6d26342bca7beb2baeb6b87e2",
      "End": "9dfab40bd641407eae00d96fcacfb987",
      "Id": "c4fcd8a5df17426ca3d2cf3f93eb1362",
      "IsHidden": "False"
    },
    {
      "Start": "48eda2654d9d46ba9e20a87a42f9bf42",
      "End": "d59d9fd73ae14eceb8adbaecb2f644cd",
      "Id": "4f05b6e8c14941e88fa902907ecf0bed",
      "IsHidden": "False"
    },
    {
      "Start": "61c326d77417491ab3473612ad58c68e",
      "End": "6c6cd7a70d274b9e8f37b8bcc5bbd7c2",
      "Id": "973ee69c268940719b26f9d9369e8389",
      "IsHidden": "False"
    },
    {
      "Start": "c12041361bd1404985e84dd9274e5268",
      "End": "35ed34dc1f734d528a7bbb3125540611",
      "Id": "3bbc510bf7874d32ba1bc4a2f323a286",
      "IsHidden": "False"
    },
    {
      "Start": "c12041361bd1404985e84dd9274e5268",
      "End": "5dfde4d4c77747aeafd066af62d26cdc",
      "Id": "df23e9ec47974798a2004d3449d11814",
      "IsHidden": "False"
    },
    {
      "Start": "488b786adc6749a0ad641271e7909137",
      "End": "5d2263d1e9a2435c87c2130eaa3fc75e",
      "Id": "a9dde6e229aa4eac9515c0669498a0f5",
      "IsHidden": "False"
    },
    {
      "Start": "488b786adc6749a0ad641271e7909137",
      "End": "7aaddac0d437430cbdeb177490cc51f0",
      "Id": "030bc70520bc4af1a529a5432c1153ee",
      "IsHidden": "False"
    },
    {
      "Start": "e1a214a392964fe392fc7e66db5d280e",
      "End": "ab08564eed244bc88014ab5cb7b39c33",
      "Id": "a51450127af14445ae8cc13a0c3d1590",
      "IsHidden": "False"
    },
    {
      "Start": "866e12ebdb154eb481196a3fc1ecd44b",
      "End": "37ae2b1ed4ad4305999ae2e7000f06e8",
      "Id": "e9acb08f654c4e37a347d536df262db6",
      "IsHidden": "False"
    },
    {
      "Start": "a0280f50b70b47afab30e3c4ce4bcac9",
      "End": "5cf98d3bdb2a44c8b10d07b102c4abd1",
      "Id": "da703875f97e4cb4a6a9bc1a8afda002",
      "IsHidden": "False"
    },
    {
      "Start": "8b3810eca1c6461e9b00e9bb0c2ce077",
      "End": "cd22de8437b7498f8e737c117e90d818",
      "Id": "908431d3325b451081ca298994fb5a21",
      "IsHidden": "False"
    },
    {
      "Start": "6200301226aa434d8a4459631ac4ffbe",
      "End": "46a870c1e1f64826850c86e520112358",
      "Id": "a0c55735f4dd4d38a5eb87d1c9280a35",
      "IsHidden": "False"
    },
    {
      "Start": "d05acb9c174c4880bd95bb435e9be457",
      "End": "8f5a6d37582145a0846ad56e840d9ced",
      "Id": "fc355b5411a54a32a1a8a6f2093b3ff4",
      "IsHidden": "False"
    },
    {
      "Start": "910fc48dd60544c693f05e865b60685c",
      "End": "2565ef2d844f422ba659c675bf25931e",
      "Id": "a8d5a76f8728432f833fbb491fd79b2c",
      "IsHidden": "False"
    },
    {
      "Start": "7b73f4a2cbd54d7eb39472ab6647a384",
      "End": "8a661cd1b6294b91a4f9f39af0b5fbd8",
      "Id": "538f869cf58443cebf2c7617b883a4bb",
      "IsHidden": "False"
    },
    {
      "Start": "8322193a29f749e085fb3e1b4524c3b4",
      "End": "1360da4be1644b0ebf8fd1b5da9f342f",
      "Id": "d297e971c05d4285b0b5dcdc5bc687e5",
      "IsHidden": "False"
    },
    {
      "Start": "8322193a29f749e085fb3e1b4524c3b4",
      "End": "f4233adaa15b477ea68b3aad45a55e86",
      "Id": "80ab5b2f40ab42a99001b4d32661c8d2",
      "IsHidden": "False"
    },
    {
      "Start": "a74e085ffb74441392c56ca588faf85e",
      "End": "9b5ce5ff13764351ad38221b1fd45452",
      "Id": "a2a5618df298444bb361bcac3586fbd5",
      "IsHidden": "False"
    },
    {
      "Start": "c6a644400feb427ca70122ef7c0b3a4d",
      "End": "1b51e78012024567a4c76cffe5459ffd",
      "Id": "b7bd7c4a487048fe9888818d1309b26e",
      "IsHidden": "False"
    },
    {
      "Start": "fb395d1ece9e4faa80757a4e088780d1",
      "End": "26bd4861a36040aba3c89358152265c5",
      "Id": "920f68c904b640269265943e1f77e9f5",
      "IsHidden": "False"
    },
    {
      "Start": "8a562af148ec448aaccc085744fe0b08",
      "End": "062e607d3b9f4887ba00061dc5635acf",
      "Id": "0207e2f773874cef8ade1573c41183e5",
      "IsHidden": "False"
    },
    {
      "Start": "ec050dd1fe0a4758b7a420bccfab34b2",
      "End": "720ce07a510a4ce695bbbe51cba75f94",
      "Id": "157eb5693f4c4e5db68d662193b0a08c",
      "IsHidden": "False"
    },
    {
      "Start": "7e7e7252993f4a49ac40b0c56485b4b7",
      "End": "4cb3e0b11cb541b89b3ff30d4de7ead2",
      "Id": "46b86d05c2e64eb69be9a22545d1788f",
      "IsHidden": "False"
    },
    {
      "Start": "7e7e7252993f4a49ac40b0c56485b4b7",
      "End": "4694f8b226d04f62896810e97af8aa01",
      "Id": "091d376a94eb490da7f806e1f0f2f530",
      "IsHidden": "False"
    },
    {
      "Start": "2250dabf671247f5837da9bc684952c0",
      "End": "447f6153af5d4e0ca225a91af3c4d271",
      "Id": "a8b61026a2974d14b9f437d27d514cf1",
      "IsHidden": "False"
    },
    {
      "Start": "1d379bc6d7304fe28769afcf75c4df79",
      "End": "e22e931ee15b4d32a7bd2f4702b63ccf",
      "Id": "019a01f3be37402ab39548c6815037cd",
      "IsHidden": "False"
    },
    {
      "Start": "1d379bc6d7304fe28769afcf75c4df79",
      "End": "0cdd2fc2a6d742af9ef3c107337dde42",
      "Id": "a0ae9d67d71b4598a9f76dee38360418",
      "IsHidden": "False"
    },
    {
      "Start": "1d379bc6d7304fe28769afcf75c4df79",
      "End": "c838aa0462a2454185c878373e54eb85",
      "Id": "e1bf2332f9864d6bbaf4cb3fa916da75",
      "IsHidden": "False"
    },
    {
      "Start": "ca043c2dee534a7e9a8ed7fcd7f5ec37",
      "End": "92fd2c29b54d42fba1b1277fadc4098d",
      "Id": "692b8072526e45cba8b48e8dd0bf0a1b",
      "IsHidden": "False"
    },
    {
      "Start": "bc4045edcabf46b8aee29987f94fe5f2",
      "End": "9eaee4182da0457099db67b91a6e0527",
      "Id": "3808df316d4e4f6dafcdeae81fc6d706",
      "IsHidden": "False"
    },
    {
      "Start": "9c52d0fffea24b67bea654cec7cf884a",
      "End": "05e74b4320e441c9b535e3606b880422",
      "Id": "1ac4ed5f9ce844459a8a2717dd33cc38",
      "IsHidden": "False"
    },
    {
      "Start": "8e5f39c76de24c90b0dc7cdf9641d0f0",
      "End": "98292a1945bf48d3b57f1589b8f24d94",
      "Id": "179a74fd223544618ca0c93707a5fc51",
      "IsHidden": "False"
    },
    {
      "Start": "81ea2fde11ea4e9280e2ecd0ee0d28ef",
      "End": "537a3e6475d44773be383f75624e022a",
      "Id": "f06b83be1eb2483382c87e521ef2e405",
      "IsHidden": "False"
    },
    {
      "Start": "942f02e803404b5eaede32c62ce598af",
      "End": "4f38e14021694d0e8c52d8916c229ff6",
      "Id": "d1e9eb73cfd14c57be1bfd5ab44072de",
      "IsHidden": "False"
    },
    {
      "Start": "7cd98d9a63894818a4757346c601ce25",
      "End": "e794c05015df4c0091f752713d568d51",
      "Id": "abd7d3ed4b7d4143a1e1746488532dbf",
      "IsHidden": "False"
    },
    {
      "Start": "b356d1faced84d9c9f060651b86d7317",
      "End": "2dc64f6835674ee5baa161ce91468f40",
      "Id": "d2d3efc6c99d4eb8a7c324ad67c97522",
      "IsHidden": "False"
    },
    {
      "Start": "16312934df9c482cba3d100b483ba91d",
      "End": "aa7f8b00ae2342eba2a54eafb9548402",
      "Id": "25e5414387c9479983dfaeefe9040f84",
      "IsHidden": "False"
    },
    {
      "Start": "be7f88f6bebc44388310bab79dc8f6e6",
      "End": "3005abcaea25447e8b077e8fda2c926c",
      "Id": "664a1c44a3c04ee3a62130af5c1fff3a",
      "IsHidden": "False"
    },
    {
      "Start": "8acd015ac33a40d1b3c38f42ed70c84f",
      "End": "13711b2ae4944e2f9740bf91d67b0c36",
      "Id": "4b26a51e6bdd47cd9715e9053846e08e",
      "IsHidden": "False"
    },
    {
      "Start": "a6bb2f63b3714e92b6a4a7754ff03734",
      "End": "6a3ac43b7bc64bd290b0627bd02d3343",
      "Id": "367ca8788c174fd094a5a59fb7555386",
      "IsHidden": "False"
    },
    {
      "Start": "2fe897988d8c463eb53ccce0ccf92566",
      "End": "4a22c43e5f2e444b9b2c4f151d73a7fa",
      "Id": "0a0a4040e7e249f6808076048079427d",
      "IsHidden": "False"
    },
    {
      "Start": "2fe897988d8c463eb53ccce0ccf92566",
      "End": "bf135a32c1f045f490fec25e3ec116fa",
      "Id": "62bb042d604f411bb6ab38ee49a558df",
      "IsHidden": "False"
    },
    {
      "Start": "2fe897988d8c463eb53ccce0ccf92566",
      "End": "acabfc694a8043168233d35e798b14be",
      "Id": "8007ba7c01734f2586b99d4ce7f25300",
      "IsHidden": "False"
    },
    {
      "Start": "f303788d242a4c4684256284dde5c846",
      "End": "27ac27c344564fae9602af8df936a218",
      "Id": "d6ccbb953cf84cfea6e5efd70cce7c51",
      "IsHidden": "False"
    },
    {
      "Start": "f303788d242a4c4684256284dde5c846",
      "End": "ad61ad1ae40d476e88eff831960e7742",
      "Id": "373375cf9fa94ceb80a7c59022224815",
      "IsHidden": "False"
    },
    {
      "Start": "7b637278053543f9820138f94edcecaf",
      "End": "d8122821554c4acfa740a9e6575384ac",
      "Id": "5a78c73e9ee14b68a692cdbfc0aebb12",
      "IsHidden": "False"
    },
    {
      "Start": "130b9804853242968e3c8e527ce0af1d",
      "End": "99a346c2f3894ad2b3c20e4e9cd0572a",
      "Id": "5f956bb2826e41059503045a4e05957c",
      "IsHidden": "False"
    },
    {
      "Start": "a5650c17463742e2945ad07c1e3d39b9",
      "End": "e7895debf3d64209b2ece7164e77856d",
      "Id": "8d4d6fe548cb4243bf4f8eb7cd844a2c",
      "IsHidden": "False"
    },
    {
      "Start": "f83debeecaa647c9898088bf1ca15cc9",
      "End": "19cf3f78d2ac4dccbfa1bb25b7a1b1ab",
      "Id": "f2ccf7e7fd8c462697c75a771b91b0d5",
      "IsHidden": "False"
    },
    {
      "Start": "9bfa20f0786447cd82da8853ec7bd3e1",
      "End": "5d88d9151a5a45dfbf345c7be10529c6",
      "Id": "d57310605d594e6db3898365fc9e214d",
      "IsHidden": "False"
    },
    {
      "Start": "318e41ab5b2f42e59f8171e368cdd6ad",
      "End": "fb24154f525c4de2ad586cf44da7c4f9",
      "Id": "0e7fc7e706ab40b5b4e07b5978ec81d3",
      "IsHidden": "False"
    },
    {
      "Start": "36240dbaf13d4109834472f3234bb059",
      "End": "a019f82701b146a4ba8849e3c11d0d2b",
      "Id": "f3d65edbbe824a848508aca02aeded56",
      "IsHidden": "False"
    },
    {
      "Start": "36240dbaf13d4109834472f3234bb059",
      "End": "fa53f238f86b40e3aae1a021a291563d",
      "Id": "6068cb52d6a64a9d8a0dd111db3ae47b",
      "IsHidden": "False"
    },
    {
      "Start": "e4bcee135bdd46c88d83a66fc81076d0",
      "End": "7cce9977cac64b6189509112a9490cec",
      "Id": "5010ac2efc134b5cb6e08df16ea04091",
      "IsHidden": "False"
    },
    {
      "Start": "b21d33b7f8af4456a031dbd5ef93728f",
      "End": "c4771ad766be4307844d11e91825ff3f",
      "Id": "74ff178e1211466e918d933e09943aef",
      "IsHidden": "False"
    },
    {
      "Start": "e9e14ecf851544268f10409576f06dbe",
      "End": "5f47a7f6834542d8b01cc8adbe96708a",
      "Id": "548169189a6d44a5bd818a590c1fc66c",
      "IsHidden": "False"
    },
    {
      "Start": "e9e14ecf851544268f10409576f06dbe",
      "End": "1ae61156aa0c42dc95449b3ed4f89dd8",
      "Id": "97d5c783c4e9440ca3454416eb9546bc",
      "IsHidden": "False"
    },
    {
      "Start": "85e736d1bd12487c811ab88c2c2f627a",
      "End": "f3787ffb2f1c4e728e944501476e7806",
      "Id": "0c2aba3df11f423db56a28abb3464f55",
      "IsHidden": "False"
    },
    {
      "Start": "0b2df69c37d843b89d4e38f172c76885",
      "End": "0c8171b5138547349fdd60fd7dc2384d",
      "Id": "17cb9c2e0ec54ef2b73107bc04cf22ec",
      "IsHidden": "False"
    },
    {
      "Start": "910d5ace20714ee3b714f69000b56e2f",
      "End": "3f84aee8d7854de0b19aae779b0747c6",
      "Id": "e50163e92a894d8ab8c76c5d71773237",
      "IsHidden": "False"
    },
    {
      "Start": "3b745b7121354405b54c598efd244f77",
      "End": "f528e330927c480984b0597869b7f24d",
      "Id": "7c55a0a5179b43c283ba2f1d04337ff4",
      "IsHidden": "False"
    },
    {
      "Start": "91abb393ffb645a99292985d257d5468",
      "End": "8b281607c4c44683a167c967a680e1e2",
      "Id": "d8c557f817c74022955bdbb29b7f5545",
      "IsHidden": "False"
    },
    {
      "Start": "863faf9766d64f6791bfc6d0c9766a55",
      "End": "a51be42f6ab345b98e75530ea30acdb5",
      "Id": "17a6ad5c64b84b1f8e3dfd211479a790",
      "IsHidden": "False"
    },
    {
      "Start": "863faf9766d64f6791bfc6d0c9766a55",
      "End": "76b0f4fb39734ea1adf0d965dadcdfcd",
      "Id": "15a667d1f76d4b8ca374dbb73bf0a20e",
      "IsHidden": "False"
    },
    {
      "Start": "863faf9766d64f6791bfc6d0c9766a55",
      "End": "114ecfa5b7584f3d9c8efa422815f57c",
      "Id": "ccdb9a75686a4db9bea7ad9bd83ff115",
      "IsHidden": "False"
    },
    {
      "Start": "863faf9766d64f6791bfc6d0c9766a55",
      "End": "3bafbbe6fa284aa983a87ecd12a7ad1c",
      "Id": "8b312a37d2ef4555b088d3dd9ec1144f",
      "IsHidden": "False"
    },
    {
      "Start": "8544ceb741ab41fb99464f128cfba290",
      "End": "be8485c223e847e081e78b9c3fa5dded",
      "Id": "7c982e9f45614320ab5ec4f42f8e60c8",
      "IsHidden": "False"
    },
    {
      "Start": "8544ceb741ab41fb99464f128cfba290",
      "End": "ccdd7506620e4a4394afc3b01dd0ea47",
      "Id": "ed1d182763134a0c80274dce7d5ad6d2",
      "IsHidden": "False"
    },
    {
      "Start": "8544ceb741ab41fb99464f128cfba290",
      "End": "045fba608b384e4e9b5df4b7683e5877",
      "Id": "80fd7463cc1f44419aee041c39c169a2",
      "IsHidden": "False"
    },
    {
      "Start": "b90bb8f277d74be3a1ce7dc9cf18f852",
      "End": "123a1197a4e94b1ea520dbef8f4d6d2e",
      "Id": "eba67c2d40044faa95c6d190a2b7d785",
      "IsHidden": "False"
    },
    {
      "Start": "5e695cb4e1a0477caf03a31f111d2970",
      "End": "5796bdf6094f4a17859731c36f59c9cd",
      "Id": "a635a14416dc4493a147fc221c3dce01",
      "IsHidden": "False"
    },
    {
      "Start": "fc0d83260c1845cebcce4d0e1be0f3f2",
      "End": "3a3d3246d0f843aaaa17aaf397863e9e",
      "Id": "d4a4f56061b2457e96611c3e392a8634",
      "IsHidden": "False"
    },
    {
      "Start": "f685026ff36d4fd0bf52f1e0c5067232",
      "End": "c143547074b64a13b1d2a98ca0233b57",
      "Id": "e4476d44df36450fbf80e454fa0d8fc5",
      "IsHidden": "False"
    },
    {
      "Start": "45502d322ae94acaa473bf5169abf04d",
      "End": "8334520ee7c1448392fe7701e4a4c02e",
      "Id": "a59b33e0d49543988066091ca7c008b8",
      "IsHidden": "False"
    },
    {
      "Start": "c5e054557f4d4c539cbbb1dc48776627",
      "End": "2ba32b971e2f407796b5e1d20233dbda",
      "Id": "d6ececee909f4ea9ab6d8fa5a4f1b470",
      "IsHidden": "False"
    },
    {
      "Start": "652e1b8e9380469b9a2e7f3e0112ddee",
      "End": "4723b2b83f224acfad7b4a1f694aa0e0",
      "Id": "c7de359e1b0e4b4abd109d934bd570b6",
      "IsHidden": "False"
    },
    {
      "Start": "6ff2bc4aba2949648f52319826519186",
      "End": "f1ac10cc6c014b829f1e29c411f06e46",
      "Id": "ffa0bc5cec3945f985e53baec29d1283",
      "IsHidden": "False"
    },
    {
      "Start": "26d0602f01cf47c8863a60714ecc3ef2",
      "End": "f7b3fc1913bb4a2da82a096250cd7da2",
      "Id": "7128c6b4788940e190cedae0a289d1f0",
      "IsHidden": "False"
    },
    {
      "Start": "26d0602f01cf47c8863a60714ecc3ef2",
      "End": "7622f0edb8bb436ab97e7a7da7a3e925",
      "Id": "aed9f81d042042a4bbc7d0bdf5393689",
      "IsHidden": "False"
    },
    {
      "Start": "501522a717ca4118b67da56b12abc2f2",
      "End": "c90f62f2b06d46afb9ae106804acb82b",
      "Id": "2a67f4263c28443688107cdad0691977",
      "IsHidden": "False"
    },
    {
      "Start": "44b2625449b5495da05467206549468d",
      "End": "a8f1d2b6e1e34098b5d457784ea0f82c",
      "Id": "c5135176fd634c63808c6afedf513015",
      "IsHidden": "False"
    },
    {
      "Start": "e61a899811634f0cabdc75bdd6fa5530",
      "End": "185d9578e4004cccaaae2a0f1fa8cdb3",
      "Id": "42d7e32462f3419bbd4e1fa90b0acc07",
      "IsHidden": "False"
    },
    {
      "Start": "e1de76a624564729a6fabdfe1a19f2f3",
      "End": "739e7b644a0242608305e25e2ffaa964",
      "Id": "6deadfb360734a2887e969d853a10951",
      "IsHidden": "False"
    },
    {
      "Start": "3f17fce66762423b8e94a0783125b6ca",
      "End": "854e0cde022d4644ac684bbade5a4ea9",
      "Id": "c90cb837a2d14f3d9a9b21306c2011e8",
      "IsHidden": "False"
    },
    {
      "Start": "afc673c0ba0c466882c7fccc24534e27",
      "End": "59f86c3df87e45dda5f648ec3ffee9e4",
      "Id": "9c0998488c2f48eda0bd734f312185ee",
      "IsHidden": "False"
    },
    {
      "Start": "b62c7356277c401986fc35191896bc27",
      "End": "ec0223f6ff1c47f98cb4a044cdec2c8b",
      "Id": "13b077089ece46278e4409855d4e119a",
      "IsHidden": "False"
    },
    {
      "Start": "cd20eecf93fc467286412b936d37e3ae",
      "End": "7a1df1ece45441a9b3c987c9947b9c33",
      "Id": "2082363c525745b2a07da63e92ddac8d",
      "IsHidden": "False"
    },
    {
      "Start": "d198d083bf0c453e8049650007d6ac0c",
      "End": "ae2285deb55a4e5083349a62427a3911",
      "Id": "417d6705d09a4e159ae8d3ace1b59212",
      "IsHidden": "False"
    },
    {
      "Start": "72eefb6815eb4e14ac527f82e3a12c7d",
      "End": "5d2c42a5016c44caa0e4d479aa06dc03",
      "Id": "cc1c5fbdde064430ba0205457410322e",
      "IsHidden": "False"
    },
    {
      "Start": "528a93a8f9794754906374c5bb12110d",
      "End": "b0024b24815546929d729c5d4769d7f8",
      "Id": "ca1efd0907c24d0a9a151850487d2981",
      "IsHidden": "False"
    },
    {
      "Start": "528a93a8f9794754906374c5bb12110d",
      "End": "ee48d09061c644749ece6f9f44b6f211",
      "Id": "423812b3bd954084a1e41590c9705a1d",
      "IsHidden": "False"
    },
    {
      "Start": "f262c91077314af389faedd94a0b479e",
      "End": "3b04eaf3ec9b43369d5e4bda95e5a8d6",
      "Id": "617812bda94b4a98a45a1745766a34de",
      "IsHidden": "False"
    },
    {
      "Start": "31c22396deed40c991d2db3f9a2e1fd8",
      "End": "19acc23c50aa4e9a933000800fde8711",
      "Id": "9693f60dd3064dc6ada12cadbfbd3919",
      "IsHidden": "False"
    },
    {
      "Start": "0ff467e50a73494c9e60a2ffac0330fb",
      "End": "5f61060720464782ab8f7ca520ce5312",
      "Id": "c508f84831c445a7877abdf0ac36d76a",
      "IsHidden": "False"
    },
    {
      "Start": "d4fff353a9944b768d227dfa14ee2710",
      "End": "5d00334fa9904defb761433218063251",
      "Id": "707d963487274e7d805e813a0a18004c",
      "IsHidden": "False"
    },
    {
      "Start": "57864fc22f954bdea9af9329a3a3a9b5",
      "End": "8820d06ed118475aa1dff8dfe3241321",
      "Id": "ebd3073ec0cf46ab98d1c1ebb546dcae",
      "IsHidden": "False"
    },
    {
      "Start": "d2aceab4c6be4436823a913a67eae113",
      "End": "10b1223a45bb4639a059492345e75fad",
      "Id": "2736a900af5b4c218068f6f587cb06f5",
      "IsHidden": "False"
    },
    {
      "Start": "d2aceab4c6be4436823a913a67eae113",
      "End": "f58233a03db042049bf748a33b0e0fe0",
      "Id": "88107c054d1d436e87ce9966f92d2426",
      "IsHidden": "False"
    },
    {
      "Start": "83602d9e2afc4e93a4d685ac9e00a686",
      "End": "9c6b64b04f22475db8194649e934f418",
      "Id": "b7739a72c19546a89785016a98590a10",
      "IsHidden": "False"
    },
    {
      "Start": "83602d9e2afc4e93a4d685ac9e00a686",
      "End": "88c20bb134b7494e85754f3da1ecd3a0",
      "Id": "fb8c5c3150ba4c09a5446f39d807385f",
      "IsHidden": "False"
    },
    {
      "Start": "0a228712f23f4531b7555f8d6e8a0442",
      "End": "0f82f14f0eb24455ab5083e01b61b3d1",
      "Id": "202d33a1b42a4746ab746374e5eeea61",
      "IsHidden": "False"
    },
    {
      "Start": "e4595a9bfd0e493d87e6034374d4127a",
      "End": "ab319d542b274c6cb4472a605569a55b",
      "Id": "b17152f3917344e880567ba59fd9a83c",
      "IsHidden": "False"
    },
    {
      "Start": "67af9a68c22848158d067d17bf3f98ae",
      "End": "c5671cb24d9e448bbf021f8f323c6c86",
      "Id": "027b2d6573c3476194fb16451648f00d",
      "IsHidden": "False"
    },
    {
      "Start": "5297f7aff3884584a48742a963ad3676",
      "End": "46e5b239fcea4540b11340448e5d3d86",
      "Id": "de715075046543008b698b409994bee7",
      "IsHidden": "False"
    },
    {
      "Start": "9d345dad18ec48ddac7af55be0341abf",
      "End": "61e25f68d13b4f9090fb1656da138ff1",
      "Id": "c69b9ea00de94e71a0c27b42d5614c30",
      "IsHidden": "False"
    },
    {
      "Start": "9d345dad18ec48ddac7af55be0341abf",
      "End": "800e903236d1470487ab98e5a859ffcb",
      "Id": "cd77f2ef587048af890a987f32e13b66",
      "IsHidden": "False"
    },
    {
      "Start": "188443b91e944d01b811cb477232c6c0",
      "End": "e6830839d2f0404593f5cdf5698c5cab",
      "Id": "03766e41dfaf4ef58f07f2d65775d7a1",
      "IsHidden": "False"
    },
    {
      "Start": "c17da35a54f144169f8ee6419b1e4ba7",
      "End": "5ddcea1acbd144febdaa61497e57e1af",
      "Id": "bd93415b529c4aa9885e4e6429743483",
      "IsHidden": "False"
    },
    {
      "Start": "9fe37c288d304f4fa016c6160b0a4459",
      "End": "67a83c0d1fa644a590b66a45c766a6ec",
      "Id": "9eae045852a54fe2b9c6bb29f071dba4",
      "IsHidden": "False"
    },
    {
      "Start": "2b6e6140479342f98d4def2cbfdb8a38",
      "End": "7025fe07f00e4fca818e19eac9b349b1",
      "Id": "3b65606bbaa54073b6db30b0c49ee23e",
      "IsHidden": "False"
    },
    {
      "Start": "640594e45915423895cde604b16a493e",
      "End": "789d3e0542e147938b5b8ddc0b85b69b",
      "Id": "0e8a091c2264410d9bbad44c5246e139",
      "IsHidden": "False"
    },
    {
      "Start": "d1a2d3c8ceba4fc6a8d700885a9af01b",
      "End": "8c55a89fda494b0389427bd6dd671994",
      "Id": "e7d867c681da470ca7f496ba8b4ed673",
      "IsHidden": "False"
    },
    {
      "Start": "059913907c6b4ef48bd819ab9788054d",
      "End": "37830aa7688c4f66a07d3163e3578b7f",
      "Id": "71a742e3acdd41df866b990336230b2e",
      "IsHidden": "False"
    },
    {
      "Start": "059913907c6b4ef48bd819ab9788054d",
      "End": "4bdd0bedb47c487db43832e819e5504d",
      "Id": "9b772909504f447ba701ed7bf0cdd3f3",
      "IsHidden": "False"
    },
    {
      "Start": "059913907c6b4ef48bd819ab9788054d",
      "End": "8e33dc8158c845fdaa6450417f791efd",
      "Id": "1f1b309e46814881a83d928aa821276d",
      "IsHidden": "False"
    },
    {
      "Start": "f919bdd4a796492c937ef516d51ebe4d",
      "End": "33876d0d752c48f880ada7d1263bd747",
      "Id": "003268b170e64c1ebe00d4dba9145e7a",
      "IsHidden": "False"
    },
    {
      "Start": "f919bdd4a796492c937ef516d51ebe4d",
      "End": "8e6f882804784b62b32d8c734961a75e",
      "Id": "6d6cf95586f54c668e3b1650ea7eaa3b",
      "IsHidden": "False"
    },
    {
      "Start": "f919bdd4a796492c937ef516d51ebe4d",
      "End": "04d3bc014978431395fa5746430914ed",
      "Id": "5b546ee4acd94ecc9743d9ba5971f9f5",
      "IsHidden": "False"
    },
    {
      "Start": "f919bdd4a796492c937ef516d51ebe4d",
      "End": "8d04f27fe9384d42b1466fff6fb853f0",
      "Id": "201410b56ce34816bfb55a175781fc5c",
      "IsHidden": "False"
    },
    {
      "Start": "f919bdd4a796492c937ef516d51ebe4d",
      "End": "76b5f42a9bb64ad5afad7d94a1cac2cf",
      "Id": "237289d060fe4f2da914f683d3ba24bc",
      "IsHidden": "False"
    },
    {
      "Start": "f919bdd4a796492c937ef516d51ebe4d",
      "End": "ce2a70065a4e4571920e5607fcec94fd",
      "Id": "95ccc5660f3a4f69b794c1e514f42b0b",
      "IsHidden": "False"
    },
    {
      "Start": "8698f158b26848d489eaec6a658a81bc",
      "End": "80ea1a275c9443989ebdfa7b9f4424e3",
      "Id": "40fd7775f97145c69b7e07751309e268",
      "IsHidden": "False"
    },
    {
      "Start": "90eac6229be2422c882b9875a0ee0345",
      "End": "d6429ada11ff4cf192b906301c56c6d7",
      "Id": "bf2170da954e440b8b28ab4ff75e4f8d",
      "IsHidden": "False"
    },
    {
      "Start": "21eaa5cf44e847c79535862104a50f17",
      "End": "d8b7bfaea29745a1a7d0d1c2ce3c98b4",
      "Id": "0d01ac05143a4aa2ae4d988bc8ebb5b7",
      "IsHidden": "False"
    },
    {
      "Start": "524ce54621914888a3d0664a5b53476b",
      "End": "f53cbee3df2d4a20838cf71dc4b9775c",
      "Id": "d98ebce7211d4d7eb4de52de0672263f",
      "IsHidden": "False"
    },
    {
      "Start": "0023a9f950624c1caa7863c655ecea0f",
      "End": "dd01c708a26e4d55971e0e90e5e0d12f",
      "Id": "e1a0d3f79b7d4d6084c9dfeb84eb11a5",
      "IsHidden": "False"
    },
    {
      "Start": "febce9466c714396a2de2736b217392d",
      "End": "450a4f229dc041979a45f0b4761a43d2",
      "Id": "dfea6dedbf5c483cade5ac06f4c11453",
      "IsHidden": "False"
    },
    {
      "Start": "2fa536515fc748939ca0037314f43297",
      "End": "b89d0c42b73a4d7589b4da9b7336c923",
      "Id": "1f4737d2ed7d42be98d0541bdb035a35",
      "IsHidden": "False"
    },
    {
      "Start": "23b6457476834accb0fe0f57a2617d1d",
      "End": "c4f79dcd3b114918b0199e920b7c3dea",
      "Id": "9eaaedbaf8a04df88f85f303856e4388",
      "IsHidden": "False"
    },
    {
      "Start": "e1c58b174a834f5597679792b59c5cf1",
      "End": "9e7e32aaea68478f998854b684a73ad0",
      "Id": "d59f9b19a56f44a198b8b1176606be6c",
      "IsHidden": "False"
    },
    {
      "Start": "874866b1d8ae4a539f26b9b5d55c6d1f",
      "End": "9253ec4f03094eeda978e8d82c199582",
      "Id": "77b765a9ef874387acc94542b9bf3f05",
      "IsHidden": "False"
    },
    {
      "Start": "033785dfbcc544949958786d03c057ee",
      "End": "37ab9841f5f64017bcb8bdd510d4123d",
      "Id": "e20c8ba7e82a45df9c4e8ce7ac771eaa",
      "IsHidden": "False"
    },
    {
      "Start": "033785dfbcc544949958786d03c057ee",
      "End": "db081f04e6f340cf8c3cc1f73e1c461f",
      "Id": "a71e2b901cec4cd6a5cf0fba82f58fb2",
      "IsHidden": "False"
    },
    {
      "Start": "3a8530791e744c8990a837be8ad9214f",
      "End": "91c9e2b94fb64a4e80d962ebbe1057c0",
      "Id": "7660833c339e48de82d4e262c87eabb0",
      "IsHidden": "False"
    },
    {
      "Start": "5b60e11f5b7940a5998521835986113b",
      "End": "9a02a53d54984ba3aaf693ad9d0989d1",
      "Id": "36e8be5f08174bb4aacb069e9f05a9fa",
      "IsHidden": "False"
    },
    {
      "Start": "a1cf753c91f44e378055a80a0126ce68",
      "End": "0b57dcf1d61b4b939c8dc8d473287485",
      "Id": "c0c4acc898e34188a701bf475c1c588a",
      "IsHidden": "False"
    },
    {
      "Start": "fb2dd0a09760419a801e80ed6c14d888",
      "End": "c0f58c52b79a439f8254ad67cfc4fa82",
      "Id": "9c5f9869b9f04fe0a12d3230ff633e8f",
      "IsHidden": "False"
    },
    {
      "Start": "fb2dd0a09760419a801e80ed6c14d888",
      "End": "0ad95c02cacf4bfba6bda5af3a319d55",
      "Id": "857e33f2a7934e08823d074e63d65ad9",
      "IsHidden": "False"
    },
    {
      "Start": "fb2dd0a09760419a801e80ed6c14d888",
      "End": "295df6c9c6cf404eb12641d602ca41a3",
      "Id": "df44be2970c042ca8899dba9049920f7",
      "IsHidden": "False"
    },
    {
      "Start": "ee42d559c1e149b39d2ef433aa88656a",
      "End": "658e251f02b64893bc96d43803c9e053",
      "Id": "4b565275f3d74a98ab3b9a61e8822e27",
      "IsHidden": "False"
    },
    {
      "Start": "69f7150b2ac84e20a1d85337f910decd",
      "End": "2d148e6d60ab455083e545baecb4ec7b",
      "Id": "4b1f65a9edb64b5f90d57c8a8be776c9",
      "IsHidden": "False"
    },
    {
      "Start": "3375deb3f3064530aeaa633caf9bbb15",
      "End": "d492af17e4d74fe5b96d3fc4ab3b6817",
      "Id": "cae1b3db2b26493693de73a8878b91fc",
      "IsHidden": "False"
    },
    {
      "Start": "ae827a14469d428697868d38e603aae5",
      "End": "13e84a993bb14d57954c3a08b1519e93",
      "Id": "acb376b6135a4323b593b68a0b5b1526",
      "IsHidden": "False"
    },
    {
      "Start": "c7efee3286474172970078a5bb81af27",
      "End": "821c4584bf584e4ab1ac77c094e8473e",
      "Id": "31b6295d42514cc9a889455d078cf0fc",
      "IsHidden": "False"
    },
    {
      "Start": "c7efee3286474172970078a5bb81af27",
      "End": "11774807673f4608a0e5af257bf7570d",
      "Id": "69a2d1f4ca16481fbcf1cd9f11da1e37",
      "IsHidden": "False"
    },
    {
      "Start": "c7efee3286474172970078a5bb81af27",
      "End": "688a55fe4dbe44ff9942cb9c8ffcec6e",
      "Id": "ea58a6f22c744f109f053e41a772f82d",
      "IsHidden": "False"
    },
    {
      "Start": "c7efee3286474172970078a5bb81af27",
      "End": "d6f124f32ed74a468bc9be512550f67e",
      "Id": "23d580ea5d68467fb9768de4fdfddfc2",
      "IsHidden": "False"
    },
    {
      "Start": "e20df1b5b227460bb28acd1a8e1df7a1",
      "End": "2e3465f5011d4213abb86bc80f3973d7",
      "Id": "de1265c265014f818eb35e4cc9d915e4",
      "IsHidden": "False"
    },
    {
      "Start": "e20df1b5b227460bb28acd1a8e1df7a1",
      "End": "7a1e334245554a058c22bb316d833228",
      "Id": "c3509aba2cff49fba5d6100939cb722a",
      "IsHidden": "False"
    },
    {
      "Start": "e20df1b5b227460bb28acd1a8e1df7a1",
      "End": "4de69b56c2a443bdb3a0783d8a0cc026",
      "Id": "f985b01056964032865889eb0b073cb0",
      "IsHidden": "False"
    },
    {
      "Start": "e20df1b5b227460bb28acd1a8e1df7a1",
      "End": "64b089a846294871a97a590abb458642",
      "Id": "f24deb04325c48cfad6d01ca380d4e40",
      "IsHidden": "False"
    },
    {
      "Start": "4b65246366884e3f99a4a644e443e212",
      "End": "8e26c07bd8d9411fb44c574e212f463f",
      "Id": "5c75e10dd4194e9d9a76247af920f19f",
      "IsHidden": "False"
    },
    {
      "Start": "e4167dae3b6840c48a296311945d21f4",
      "End": "25f4f8dd3191495c972921a1bfcc0cab",
      "Id": "01b86a2b67fb4232808b0d98837df861",
      "IsHidden": "False"
    },
    {
      "Start": "5952b0c1c5c14b7b9e09ce3e954f61bb",
      "End": "6ae6d599e8cd4d01b090b2442b7851be",
      "Id": "87efc0f81fec4a71abd0b888bcc8ca5e",
      "IsHidden": "False"
    },
    {
      "Start": "4269f1417088451a93ad09a2a14ead98",
      "End": "a6a6a3bc6a7b4304a7203233104c31e8",
      "Id": "0c20382fbdf1416ea94d5a2b13f5f8e0",
      "IsHidden": "False"
    },
    {
      "Start": "7c0a61f17002430b9a787ceafadd6e00",
      "End": "60ac82f08e03454e8721999beb0df90e",
      "Id": "7bb90419484f42b7876f4217ce445373",
      "IsHidden": "False"
    },
    {
      "Start": "be949f075ab642acb92ce22dc9caa4d0",
      "End": "5aa285f2af6840e9ab5437d8a1013f3c",
      "Id": "9c372e41a4ba4eb2aeb3d257453f084b",
      "IsHidden": "False"
    },
    {
      "Start": "ca618508046c4d8aa2fb071ff690c17f",
      "End": "9db2cd62b5a5475b906586f43e95fd76",
      "Id": "d52e19f0443f44478948eec2cbe3e07b",
      "IsHidden": "False"
    },
    {
      "Start": "d0b00167c0c043ab9780d48ee10a0baa",
      "End": "27c4313588ee4b43a6206c5fc689a311",
      "Id": "f60e71b086734eabba334a8fac5009fa",
      "IsHidden": "False"
    },
    {
      "Start": "3a9a0c3244a14389a50e53d8bb0033e4",
      "End": "b5d1264a2ded4f5db5ab75bb9a69663e",
      "Id": "bab6aa62373b482bad7bb38529367bec",
      "IsHidden": "False"
    },
    {
      "Start": "a1d9d47832474023ae9b6132d3148d42",
      "End": "9a38ae441ec043e1aa9b07dce2c1beba",
      "Id": "9f516a1108e7497e94e5d6ade358f068",
      "IsHidden": "False"
    },
    {
      "Start": "95410e7590264b858d1269f7039440f8",
      "End": "4f0dedf100884d11bf82f61e1e7af676",
      "Id": "6f92bd0226da409a981116c86f9c1ef3",
      "IsHidden": "False"
    },
    {
      "Start": "95410e7590264b858d1269f7039440f8",
      "End": "eee62814356a42aaaaf5d2a5f0de4a63",
      "Id": "356df59a5c10486f92d91c2ab6fa80f1",
      "IsHidden": "False"
    },
    {
      "Start": "8097ab78bcee4f7c85e126f75e199f57",
      "End": "76181ad2da52426a90825be3c7a68317",
      "Id": "298a2f3ee24045b38eb1a0722cd21edf",
      "IsHidden": "False"
    },
    {
      "Start": "81c67ba086e24488be48d19990cb20c6",
      "End": "f35b3c4e9713439abdeee651c941b19e",
      "Id": "cceb92cf95c442cea651585a3eab3546",
      "IsHidden": "False"
    },
    {
      "Start": "79abc82398184115b2028b4b6d7bc005",
      "End": "2f857606c1e3480297157a7d3e752add",
      "Id": "f07b8951cc5443a281696a4b0ff5402d",
      "IsHidden": "False"
    },
    {
      "Start": "46e5ca39c77b4d678f0d5e4fe3d57b77",
      "End": "5b6c7ad5fa2149d597ce0d24bfebc357",
      "Id": "527573a1f30e4ea4b91b39ac6f274191",
      "IsHidden": "False"
    },
    {
      "Start": "7d4e4e8191d546dfa6e59c66c501f74f",
      "End": "1515f17c578d4e839164aef02e9cfb2c",
      "Id": "eb239162bb3b4a138a630cf51686f483",
      "IsHidden": "False"
    },
    {
      "Start": "7d4e4e8191d546dfa6e59c66c501f74f",
      "End": "6af492699490448a92744339b7b15339",
      "Id": "221aa6cb771643acb14e62df0e941b5d",
      "IsHidden": "False"
    },
    {
      "Start": "b4dbaf842f9942a5bd2d84422d243cf3",
      "End": "6e8fc8f4b608444b8035058b910b2ee0",
      "Id": "59b32fa7ad4e4a3eb5b6a7efb2bb82f0",
      "IsHidden": "False"
    },
    {
      "Start": "f8beb3c2c9dc4401b00b4a63b19acccc",
      "End": "34aaa20ef22d4c6f9b96786e6efabc18",
      "Id": "6e0e2478751d46f29b53a20edea1ba18",
      "IsHidden": "False"
    },
    {
      "Start": "79a5a9c7aec3488bad0a04336cd93508",
      "End": "c17d874474d6444cae90d67f46e30c59",
      "Id": "1b264718ceef4f2eb5bd049c95cdbb31",
      "IsHidden": "False"
    },
    {
      "Start": "79a5a9c7aec3488bad0a04336cd93508",
      "End": "02aa4796305347608ff77b89c8287553",
      "Id": "3ef5b730321b48c5b8bdc2b17b15dec5",
      "IsHidden": "False"
    },
    {
      "Start": "79a5a9c7aec3488bad0a04336cd93508",
      "End": "9fdef261ffb24d61880efa6e543723a9",
      "Id": "e859c0aa103e4482bc3b48fe7d6e768d",
      "IsHidden": "False"
    },
    {
      "Start": "87bb41cf05ed44448213e41c5b20f477",
      "End": "6854de32d7b54a9e85f2b2dbc9034170",
      "Id": "659b3c8d02364322870333017716b811",
      "IsHidden": "False"
    },
    {
      "Start": "0a38445ad19849b59c6587ce49c9770d",
      "End": "958509fdd6e34a8aa4d4708bcd16f625",
      "Id": "9643d7b941e4427fb2511de9d0b69295",
      "IsHidden": "False"
    },
    {
      "Start": "d7d8dd669ee4465d8c1e0736c1d269c5",
      "End": "adb3d1fbe3254101998750686164290f",
      "Id": "38eab3d215694c5cbae13b9cca788724",
      "IsHidden": "False"
    },
    {
      "Start": "75cfd59a496b4cb1b8437f7562ad2981",
      "End": "9b7fcb2ce0ee4e54bf13be06b25ed326",
      "Id": "2f789f971b8e42f3af7b9f6063dfc037",
      "IsHidden": "False"
    },
    {
      "Start": "69a8481399a741d084d13dd184d68d8d",
      "End": "e90f0eefb612434195a423fcc50b8f2f",
      "Id": "b773671887a14bc28f2f3e9ba05a6ec1",
      "IsHidden": "False"
    },
    {
      "Start": "893f6fcac4d343eb98e272b1f9e66746",
      "End": "00c56f4a5fdd4ef8ad091bc40610b963",
      "Id": "e97008cce6594941a1cfb3f4e79579d8",
      "IsHidden": "False"
    },
    {
      "Start": "13fe76ede7c14adb9bc177cb7718a13c",
      "End": "0b0f44ad14af4231a36dfa2862045b50",
      "Id": "432f1e8e7b69421cb98817fc981ef478",
      "IsHidden": "False"
    },
    {
      "Start": "5774ce50297143bc8e7da78d5ca502fa",
      "End": "8cabb2d11b614f63b75917419925c9a0",
      "Id": "b93777bc54ff47c9a3d6bfb5e82451c4",
      "IsHidden": "False"
    },
    {
      "Start": "7336db96eb62423ea97cce5a7c8d9c81",
      "End": "acf3ac0f627b41a69fcac3aec539aa30",
      "Id": "5c550618af9f45ff889e94e7d7509671",
      "IsHidden": "False"
    },
    {
      "Start": "2305784422bc47079560a12aad129d8b",
      "End": "c4f17b04226d4a208639b57c6e2adcd6",
      "Id": "897e1c4fd0fc481ea3bfea1ba7f6470a",
      "IsHidden": "False"
    },
    {
      "Start": "5fa2157380c94d2d8cf8f1313516d631",
      "End": "37edc26ee9e746ca8dde80a150d85fee",
      "Id": "ccd675763dfa435e963134be432f7910",
      "IsHidden": "False"
    },
    {
      "Start": "be909f8edcf7435a93478115c63727c9",
      "End": "e4c05e8572424850a02108c38c7dfc23",
      "Id": "d8b463cdc80c479ba111b40dbefac1a1",
      "IsHidden": "False"
    },
    {
      "Start": "86402611cd224d5ab43f418e9b814930",
      "End": "536c5b6b12e4446a904dc570717ce215",
      "Id": "6c350f8a02b64084a5935d81f638d487",
      "IsHidden": "False"
    },
    {
      "Start": "66716721356f4028be45e770715d883d",
      "End": "59bca94488d34cbd8a6882aa329a0e81",
      "Id": "4aabadb92b6341ef8c92522353c086c8",
      "IsHidden": "False"
    },
    {
      "Start": "66716721356f4028be45e770715d883d",
      "End": "1ba6dbfc8ae8440f9d14672ca9112ead",
      "Id": "c91ab909537b4522afd75e3de425cfc0",
      "IsHidden": "False"
    },
    {
      "Start": "66716721356f4028be45e770715d883d",
      "End": "cc83b3f61ec3475cbc9cdb298174c4c8",
      "Id": "0a1ea2e24f0242459bfdc47108cd2980",
      "IsHidden": "False"
    },
    {
      "Start": "abbcfdf826dc45a99bd523ab64dc2f9c",
      "End": "f2c9ee7fa7c44afdbe25ee6650bcbe7b",
      "Id": "99d429e28a0a43b3b8fcf8ee852334aa",
      "IsHidden": "False"
    },
    {
      "Start": "4ee449aa54ae40dbb06b46edc267bf4c",
      "End": "e1496a0b390c49af9e8e748c52d69d2a",
      "Id": "2bf45cdb7d054e3b895f2abcf62db8b6",
      "IsHidden": "False"
    },
    {
      "Start": "4ee449aa54ae40dbb06b46edc267bf4c",
      "End": "1a2ef6935e2f49d3bc0fdba2c81c8f27",
      "Id": "f7406270c72348c2a929b44a539a7775",
      "IsHidden": "False"
    },
    {
      "Start": "7f58f76f6d744f82a517cc54e05d0230",
      "End": "5725799772c44f398103a558471e3685",
      "Id": "c678a95f267d4dcd9a7613a744437602",
      "IsHidden": "False"
    },
    {
      "Start": "4dd64744cd3f4918963c636bed570c74",
      "End": "2fa7f5566fa8448f9713414b1514c44b",
      "Id": "1974e2e3cc934176b1f20cea65bf2aec",
      "IsHidden": "False"
    },
    {
      "Start": "8743aeab2d5b4f5995895b7029ad7e60",
      "End": "48ad422e21d94dd8a1a509a9e03caea1",
      "Id": "dd3af5e81ec24f81bd1cd6663dc13fb1",
      "IsHidden": "False"
    },
    {
      "Start": "8743aeab2d5b4f5995895b7029ad7e60",
      "End": "f9d58e6a11f742588f09677b4cdd1d99",
      "Id": "1ce884a03d5c41c7af4197b517eec0d1",
      "IsHidden": "False"
    },
    {
      "Start": "99419b7c7dd542a0a27e83c3b0015a61",
      "End": "439941e4985e4a35abc06962832768ef",
      "Id": "7bae7377e12d4bf396aa8c391b73365c",
      "IsHidden": "False"
    },
    {
      "Start": "814ff31a1e224e8dbe7f83d023c99633",
      "End": "b61f6f21a08742a99e440eb858036681",
      "Id": "4f435a4744054f4db3555c3949bcdc97",
      "IsHidden": "False"
    },
    {
      "Start": "1e94a07fa4dc4822918344277cc149c5",
      "End": "8f47a540ed2a40f0969938eb62432cbe",
      "Id": "0c89664fb0214d8ea0fd09bd05cc2e10",
      "IsHidden": "False"
    },
    {
      "Start": "b07c8621c3584627803fefdc116e0508",
      "End": "f3b3838976904da99c96df8cf6b96ef2",
      "Id": "78ffa563b5ae4ea096e7e4a0879c0e09",
      "IsHidden": "False"
    },
    {
      "Start": "0b2f4237b4d441468c488a5715096916",
      "End": "ed332408c59645ec8b70802c2c0431f4",
      "Id": "9f25f83ba61446baad66a09a053c3275",
      "IsHidden": "False"
    },
    {
      "Start": "0b2f4237b4d441468c488a5715096916",
      "End": "986f7577139a4608a30cf8027f51b597",
      "Id": "0a780c65ab714754826b18eb47710ea5",
      "IsHidden": "False"
    },
    {
      "Start": "0f7e9d41457e4ce899d0c327645596e5",
      "End": "347eef8a6c05491d8bf1635f8002c870",
      "Id": "519c886bf94a4c678311020c193c681c",
      "IsHidden": "False"
    },
    {
      "Start": "0f7e9d41457e4ce899d0c327645596e5",
      "End": "8c8c4eb273db4809a3527cd2d32a56b3",
      "Id": "fafe93a325e94a9eabecc9816fe4307c",
      "IsHidden": "False"
    },
    {
      "Start": "58dc307251664ad586598d0b972e90ce",
      "End": "ded6642a24f64428a4fb0a76443d10c0",
      "Id": "5f618f72ae894e94a481c6bbdf54311a",
      "IsHidden": "False"
    },
    {
      "Start": "97b94a68b5614469a2f3e9309d5a3a0f",
      "End": "6ac4e8959c5646c98590191ebe754b5a",
      "Id": "9f48f33c0e564632a0e620b9eae85d22",
      "IsHidden": "False"
    },
    {
      "Start": "97b94a68b5614469a2f3e9309d5a3a0f",
      "End": "4d681f19b1204460b22e44d140f54c92",
      "Id": "9151f9a04a5143fe8af5df74b435d9d0",
      "IsHidden": "False"
    },
    {
      "Start": "34135857a7f346ffbe26ba8509084661",
      "End": "564597a1fbda4e6ea0d106e361f9361b",
      "Id": "0db15b0166c84b1698fcf62a8f153a02",
      "IsHidden": "False"
    },
    {
      "Start": "f991cf583f9c4f8ea37039224b488419",
      "End": "3f4fbaa2d459488182c7808544357492",
      "Id": "c5fb56406ee248dd88e10c779d1b1e90",
      "IsHidden": "False"
    },
    {
      "Start": "542074705de245489d48541fb0eaa2d9",
      "End": "baabc69c53374f29ae48968935328972",
      "Id": "7da8f7896f674c2892f69f05a475f99e",
      "IsHidden": "False"
    },
    {
      "Start": "542074705de245489d48541fb0eaa2d9",
      "End": "fc7b14693b9446b48ff8b658a472b915",
      "Id": "1b8e9f5da1df4e3d8cd15b0978ece757",
      "IsHidden": "False"
    },
    {
      "Start": "fa51dd5ed6a04259941fe235d9fda057",
      "End": "c0a473afc26a43d0846de7439ee09842",
      "Id": "b7d50afa06754154a3571360bdcff852",
      "IsHidden": "False"
    },
    {
      "Start": "4c589e62768a4691b333f5e9da8cd2b3",
      "End": "a5c900ff160d424ebd7e68a1ec0ae0f1",
      "Id": "60d369c4bed34412a15bd942f3b7b1cc",
      "IsHidden": "False"
    },
    {
      "Start": "8ff8abb2fda14153b7a1557e25e9ff83",
      "End": "527947ed6a904f7abeb5de0931f905f8",
      "Id": "f9479ebf7f954ea3bd8a1adf2c994769",
      "IsHidden": "False"
    },
    {
      "Start": "7d3e4b108d354e419398caa6f9889d33",
      "End": "c7255eedc3e943f681cc96790ed58531",
      "Id": "bcd748d6d32143f0bac7b111ebf90123",
      "IsHidden": "False"
    },
    {
      "Start": "7d3e4b108d354e419398caa6f9889d33",
      "End": "e1fe7301db6444d3b796fce1d6f3078b",
      "Id": "c48a5131b353440fb93fd08a65b63b0a",
      "IsHidden": "False"
    },
    {
      "Start": "d5807cfd80a4471491dcb468c6962f80",
      "End": "766217ba0e7043ac994072f3d427a092",
      "Id": "ecb3f237039d4d518d7d1798eadbe627",
      "IsHidden": "False"
    },
    {
      "Start": "d5807cfd80a4471491dcb468c6962f80",
      "End": "21c3612c9b41428f9d60dfca4658a522",
      "Id": "83e85412b404418b99be392d76efa1f2",
      "IsHidden": "False"
    },
    {
      "Start": "d5807cfd80a4471491dcb468c6962f80",
      "End": "8daa5be1aa4448f4a5768db06b2a651b",
      "Id": "f4b4f655c2494285afb73cae6b94df08",
      "IsHidden": "False"
    },
    {
      "Start": "d5807cfd80a4471491dcb468c6962f80",
      "End": "eaa55fce086e4024ab0ea69be9ee5e31",
      "Id": "51cc090a45dc4e539930e14ec3f7eea3",
      "IsHidden": "False"
    },
    {
      "Start": "4d0ab7c1059b4835bad0c61f80bdfe37",
      "End": "384294e7cbb94217bdda6a760a767b9a",
      "Id": "11da5651ba294eb390efe19898c0dd7f",
      "IsHidden": "False"
    },
    {
      "Start": "fbcbaf077aba4d76b8bbeb52fd547ac9",
      "End": "c1d2642ec3bf403eb4acea630c111b19",
      "Id": "f6b2bcfcdb7044fca8035a17d4cb6a92",
      "IsHidden": "False"
    },
    {
      "Start": "25963143237d452ab7b898db35db6584",
      "End": "6ef117b4e8724eb4815cb018caa06e66",
      "Id": "1f72eabcec14484da6bda82749d10106",
      "IsHidden": "False"
    },
    {
      "Start": "96d335d71b794174b7f5677b012d3f7b",
      "End": "04cfe43d7f4149e2bc6f59a44ad62335",
      "Id": "9e3c57939daa493b845755dfc45348dd",
      "IsHidden": "False"
    },
    {
      "Start": "96d335d71b794174b7f5677b012d3f7b",
      "End": "f79790f2fa8d4d77a85621858f45f0fd",
      "Id": "bcd707844cd04ad98f0e88660dc60382",
      "IsHidden": "False"
    },
    {
      "Start": "efe3f476440c4e6ba18ffc8c5f1e472d",
      "End": "14a5c57a1e2a484d8f5ccd0e658978f9",
      "Id": "ed6210fcb8d945c1833ba836462e3b63",
      "IsHidden": "False"
    },
    {
      "Start": "0a3597fba87a46799c2408cdd7ae3b39",
      "End": "0af1d3e6f2c040d988ec630be1a87a3a",
      "Id": "96bc5df3d7844cb38693f52b72980e21",
      "IsHidden": "False"
    },
    {
      "Start": "63c796446b974d2ca7007e6bba781d15",
      "End": "f3bc7ec1210b440a957182a8f392c41d",
      "Id": "ccfc446e8ea44a96920a18727ecfc8ab",
      "IsHidden": "False"
    },
    {
      "Start": "15452dc839344aa386e2f43557f48f02",
      "End": "be4bd2c4a45f4dce8b053b7df7bbe5b0",
      "Id": "d5b99556161e4389a3f0046aaad18e46",
      "IsHidden": "False"
    },
    {
      "Start": "8ecb06feaa6d4f49b74c885b484f3f6c",
      "End": "01daa050c3cb408c99e78d476d01f763",
      "Id": "303c40bd462f4cdeb011834ce478c526",
      "IsHidden": "False"
    },
    {
      "Start": "4235f2e249204a3686cf6dd0b4beb0ca",
      "End": "2431b2e487fa4395b479d96c146354c1",
      "Id": "1f36c1f5f746413e826e6f3039fb37db",
      "IsHidden": "False"
    },
    {
      "Start": "a1295fd023204ee8b113f2ff79a4a08f",
      "End": "d17dc5e2778e400ba17b85abdd33a79d",
      "Id": "9cb7bea2d5044bd0bf838cecab9cb673",
      "IsHidden": "False"
    },
    {
      "Start": "a1295fd023204ee8b113f2ff79a4a08f",
      "End": "53f563e3b63b40f4a877ab6cc12755ff",
      "Id": "2732a75315db43a3a4647e8e9f62d778",
      "IsHidden": "False"
    },
    {
      "Start": "3805296371af41439fd774812dc9c1df",
      "End": "b9c6aee7358b421385fdadbf2cee63ff",
      "Id": "18dcae88154d4d0a83bdc01d9680aee9",
      "IsHidden": "False"
    },
    {
      "Start": "3805296371af41439fd774812dc9c1df",
      "End": "8f503a99d3ac4af5a38ee4d2af6c891e",
      "Id": "948d9893631d46ea8808baa7e39d1200",
      "IsHidden": "False"
    },
    {
      "Start": "e6b23585399d4085891b7b755de10a8d",
      "End": "29184f26edbc49dfbd7daa3138c376cb",
      "Id": "9d946e84356940668fffd20a242cc18e",
      "IsHidden": "False"
    },
    {
      "Start": "ed906a0867cb4b8d8dad171f92a38946",
      "End": "31f311cd9d6f4088a92300bfb8c3b036",
      "Id": "c128fc0306c046b3aacf70db6a851c54",
      "IsHidden": "False"
    },
    {
      "Start": "63d7c485c8aa4fc286c7981bc22a3dba",
      "End": "67a038ce9d094dccbaa4eeeec43d838d",
      "Id": "81db2ab6c19445e68e3e555743b28ac5",
      "IsHidden": "False"
    },
    {
      "Start": "442b4d16b64d49b6bbe013388801e4fc",
      "End": "a7a24261bb7c43238bc8a0c20208c35a",
      "Id": "4cfb55c9861344c8bca2be4e380bfa00",
      "IsHidden": "False"
    },
    {
      "Start": "e1b54cbec3684091bafe1b1e0c0926b4",
      "End": "00be7783e90545c59f8b7202ac0776c0",
      "Id": "0e95c79ad2c440d0bfb05f275c4de8a1",
      "IsHidden": "False"
    },
    {
      "Start": "0c391fec31de4d2fb8cfe6c0d42989e9",
      "End": "923de0951e4d44f69c8be23b91294b0f",
      "Id": "2e8564786a1844b6baf75e8966b55641",
      "IsHidden": "False"
    },
    {
      "Start": "c113f84cdf144e59893878095ddf51d8",
      "End": "ee3d5868ac324726b11792816d3ccd60",
      "Id": "72fe47f3e33c4a3285ff5c7f5f9f2520",
      "IsHidden": "False"
    },
    {
      "Start": "c113f84cdf144e59893878095ddf51d8",
      "End": "6e8f44d62c5c47d29cdf9cdbcce17b11",
      "Id": "80e18d1c7c0f4bcb8e57cc1ff1394d10",
      "IsHidden": "False"
    },
    {
      "Start": "0189ddefaabe4532af9873318f4acdf5",
      "End": "c85416c940464d78a8eba8ffa4f9264c",
      "Id": "fc155632e51f4c0798fa427d212ea3cd",
      "IsHidden": "False"
    },
    {
      "Start": "d4c147cbae5b48a6a96737485cca70e6",
      "End": "242b00cdb6dd49a2bf41d612dd34a7d3",
      "Id": "56c64b6b2c77478eb3bf1ae826b1565b",
      "IsHidden": "False"
    },
    {
      "Start": "c5e3b917331e49138327c72000b92987",
      "End": "a14d93ab83b04d698d9a1422ef805e14",
      "Id": "40ccc697a8e44dd783438d37fb4215ce",
      "IsHidden": "False"
    },
    {
      "Start": "83e68e44bba54f8f8cde373dd3909492",
      "End": "d55d361c71ee4760a86c49cf7dedec67",
      "Id": "1fba8820f5454e13ab1fb9043810ff32",
      "IsHidden": "False"
    },
    {
      "Start": "8b52c1ba0c624c4ea4e2c502796e6316",
      "End": "2d8f832e552d4b56898c6bf310fb5d1b",
      "Id": "92143ecc872b40a7924f3ade2e50f95c",
      "IsHidden": "False"
    },
    {
      "Start": "767055d4e3694a178d10cb5d6ff07411",
      "End": "9c711ffadbd84f11bcee0b304ee790d6",
      "Id": "271cfcbe572645b5a6c7633055a4e0b4",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -1583.5146484375,
      "EyeY": 11497.638671875,
      "EyeZ": 966.68359375,
      "LookX": 14186.6259765625,
      "LookY": -19849.173828125,
      "LookZ": -20118.4375,
      "UpX": 0.25714272260665894,
      "UpY": 0.89492911100387573,
      "UpZ": -0.36466366052627563
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Grid.Curve",
        "ShowGeometry": false,
        "Id": "da8910ee65e74768b05cee180ac3630d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2646.8072748203731,
        "Y": 523.49536683180077
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "6ff858a4df3d4590851814caf27869c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5073.9320103231275,
        "Y": 438.49354471554113
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "1782ee80aa8f40cbbb52c4e0ef51fd8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5417.0513278718208,
        "Y": 399.79592763470441
      },
      {
        "Name": "Geometry.Intersect",
        "ShowGeometry": true,
        "Id": "b5a74bc4e07c41e68b364b4beac0f918",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1128.0262756464335,
        "Y": 23.962167053821247
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "f874431b8de64c9d80e1b85ef770a81b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1475.0262756464335,
        "Y": 23.962167053821247
      },
      {
        "Name": "Object.Type",
        "ShowGeometry": true,
        "Id": "2255244388dd4825be39b5826d84e005",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1765.0262756464335,
        "Y": -18.537832946178753
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "65155b78d58e4f7b8486ea9271dfac49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1765.0262756464335,
        "Y": 128.46216705382119
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "1d1bb0772a1b46dcb5332ef1dfc2c61d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2062.0262756464335,
        "Y": 100.46216705382125
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "9ac7a9c137a74e94ae3da47af70b7992",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1765.0262756464335,
        "Y": 276.46216705382119
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "1bbd0373bc0644ffbe08ffc5a003f5dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2378.0262756464335,
        "Y": 100.46216705382125
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "b3c64729b31241769e68693f29d64008",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2673.0262756464335,
        "Y": 66.46216705382119
      },
      {
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": true,
        "Id": "3daac58052cc43ce998337e06a938416",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2996.0262756464335,
        "Y": 66.46216705382119
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "99295404975a4691ab2bea3fa01f158a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1591.1241876198164,
        "Y": -979.16011622501446
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "72feccdc4967423b88bc66771c79a24c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1922.1241876198164,
        "Y": -979.16011622501446
      },
      {
        "Name": "Level.Elevation",
        "ShowGeometry": true,
        "Id": "61521cb278404175ad783d335452726f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2279.1241876198164,
        "Y": -953.66011622501446
      },
      {
        "Name": "List.Sort",
        "ShowGeometry": true,
        "Id": "9cd7a71b5a764557874470f6610e326c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2573.1241876198164,
        "Y": -936.66011622501446
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "5bf77bef596a474baa67c21ef720a5f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2844.1241876198164,
        "Y": -970.66011622501446
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "6dd9d292589849ff814796afd847b48e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3134.1241876198164,
        "Y": -1004.6601162250145
      },
      {
        "Name": "Level.Elevation",
        "ShowGeometry": false,
        "Id": "1e91d149d53b4d538abb4428ae762f8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3802.1273468676427,
        "Y": 261.96743876554717
      },
      {
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Id": "d0eea3d974114ead84bb2c9ce312c3a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4449.1273468676427,
        "Y": 113.96743876554717
      },
      {
        "Name": "Point.Z",
        "ShowGeometry": true,
        "Id": "84e66ea0d2eb4b8dabd6a9628a0a8d80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3505.1273468676427,
        "Y": 26.967438765547172
      },
      {
        "Name": "*",
        "ShowGeometry": false,
        "Id": "73c08f8e05b149919dd0e28c3f50d5dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3802.1273468676427,
        "Y": 83.967438765547172
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "1c9dc30184a84cc9ab6c4aa417424c0f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3505.1273468676427,
        "Y": 174.96743876554714
      },
      {
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Id": "5798cb7700084542b4c58b88172166a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4096.1273468676427,
        "Y": 40.967438765547172
      },
      {
        "Name": "StructuralFraming.ColumnByCurve",
        "ShowGeometry": false,
        "Id": "9ee147d5b20c46739f8f6932c4576dd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5798.1273468676427,
        "Y": 113.96743876554717
      },
      {
        "Name": "5. Select : Structural Column Types",
        "ShowGeometry": false,
        "Id": "6084901b4746495493b4306a7955dd85",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5342.8855031366884,
        "Y": -298.97329044879473
      },
      {
        "Name": "Geometry.Intersect",
        "ShowGeometry": true,
        "Id": "a0cd85bebf504ebc8be14d9c7f6e31a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 971.97118857135592,
        "Y": 1817.7120667950674
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "b7d93e5c60794356808371e6f7cece16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1318.9711885713559,
        "Y": 1817.7120667950674
      },
      {
        "Name": "Curve.ParameterAtPoint",
        "ShowGeometry": true,
        "Id": "b1ce84fe38f54b4db480175a7794e0d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1608.9711885713559,
        "Y": 1818.2912821243051
      },
      {
        "Name": "List.Sort",
        "ShowGeometry": true,
        "Id": "ce311c0e78f7421492691997a137b01f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1960.9711885713559,
        "Y": 1843.2120667950674
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "ab6c1b75886d471bb5e0e128dc051d28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2231.5151170889148,
        "Y": 1809.2120667950674
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "da804ce85beb4ab59400df051859ba30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2509.7609118552582,
        "Y": 1802.6851894062868
      },
      {
        "Name": "PolyCurve.ByPoints",
        "ShowGeometry": true,
        "Id": "b942a61b057d49059f619a15b9bfc6bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2844.9711885713559,
        "Y": 1775.2120667950674
      },
      {
        "Name": "PolyCurve.Curves",
        "ShowGeometry": true,
        "Id": "c9243d2812134870abddc5e5919d2bab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3235.9711885713559,
        "Y": 1775.2120667950674
      },
      {
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Id": "2a38ed02e6814358adb2b9eaa1ccdf4d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6579.3796183105087,
        "Y": 2947.2264615461231
      },
      {
        "Name": "StructuralFraming.BeamByCurve",
        "ShowGeometry": false,
        "Id": "e2f3ae817a254e1794889bfc10756146",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7248.2972417900037,
        "Y": 2688.533521602219
      },
      {
        "Name": "6. Select : Structural Framing Types",
        "ShowGeometry": false,
        "Id": "36e20a3c3078426190f5d59ec14c9317",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6618.4097126385495,
        "Y": 2450.7435973894685
      },
      {
        "Name": "BoundingBox.ToCuboid",
        "ShowGeometry": false,
        "Id": "b3ae9b013ab841da88111bacf4234a80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11216.029606009071,
        "Y": -628.83566512724
      },
      {
        "Name": "Element.Solids",
        "ShowGeometry": false,
        "Id": "e78045b1f0f44fb488929213ab7fef29",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9862.684450062181,
        "Y": -537.35587346754028
      },
      {
        "Name": "Solid.ByUnion",
        "ShowGeometry": false,
        "Id": "ca7f9f4e4a6643fca6681dad7469db35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10426.202291669051,
        "Y": -672.13940162394806
      },
      {
        "Name": "BoundingBox.ByGeometry",
        "ShowGeometry": false,
        "Id": "4f26806c0fe24564a61f25fd3584cc50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10864.368844697194,
        "Y": -622.762671829511
      },
      {
        "Name": "PolySurface.BySolid",
        "ShowGeometry": false,
        "Id": "f9062740ce784015921f3a40b042c284",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11533.022494240657,
        "Y": -601.5022931604758
      },
      {
        "Name": "PolySurface.Surfaces",
        "ShowGeometry": false,
        "Id": "e3065488df334b22a1517159f88333b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11808.261720560075,
        "Y": -697.2831638339685
      },
      {
        "Name": "Number",
        "ShowGeometry": false,
        "Id": "1003838c812044798921b991537ae75b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11859.016613359307,
        "Y": -546.70956455482747
      },
      {
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Id": "c2729205e8a0493a846eda211388eb30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14413.435334887619,
        "Y": -707.89213148339559
      },
      {
        "Name": "Floor.ByOutlineTypeAndLevel",
        "ShowGeometry": false,
        "Id": "1c0fd818c565474fb817abff83207ef0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15032.990778557249,
        "Y": -680.56476349666445
      },
      {
        "Name": "2. Select : Floor Types",
        "ShowGeometry": false,
        "Id": "61d6e073a14341d7a785cec24d2232a1",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14165.909606352227,
        "Y": -1451.8645411073694
      },
      {
        "Name": "Parameter.ParameterByName",
        "ShowGeometry": true,
        "Id": "792c1efe4a98426aac05b81a214f23f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4718.7139171214258,
        "Y": 437.97123491052196
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "a770fd8b664249c6aaa2969a4b4f232b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4988.0341832437316,
        "Y": 609.80267361677249
      },
      {
        "Name": "Parameter.Value",
        "ShowGeometry": true,
        "Id": "3bf3b58e5b124575b892e5b22c3b63eb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4323.4986565967029,
        "Y": 385.13216869236788
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "52753fb9b74846ec8f74065815262d8a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3878.8623388667688,
        "Y": 384.45461749516289
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "f28b17f80fc34f26b290d5d884a12ae7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4115.9526954085177,
        "Y": 566.34566905296526
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "11a833a0335343238f5d9f661ac68ad1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4161.5524746892024,
        "Y": 717.17169062584162
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "d12fdcb5dd0a4b8285525f0ecd162891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4163.63781407849,
        "Y": 854.97834258091632
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "29fbbb99adda45ef8822753dd49bc7a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3873.6073188205551,
        "Y": 609.29695989974084
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "4c46ccd4bc2048d99a6aecc87dbbd481",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3510.0866238577714,
        "Y": 499.44929439273943
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "8beadf428e4a41ec90010f2085c4902e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3290.0319279946712,
        "Y": 510.26570354816585
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "60e04df06dda4ac7a279450b1b1b8e14",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3536.3875673807697,
        "Y": 678.59955040219575
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "2df67dac910d43b0b9e88940256100a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2922.0723470495154,
        "Y": 514.2798080675675
      },
      {
        "Name": "List.RestOfItems",
        "ShowGeometry": false,
        "Id": "369b73fc3a5845e0ac09bb247e7ae9dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4969.7995617645774,
        "Y": -723.37716957622615
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Id": "3245538da2024426bb18b2652ac409d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4096.1273468676427,
        "Y": 288.96743876554717
      },
      {
        "Name": "Number",
        "ShowGeometry": false,
        "Id": "855a488dfe174e15b59470aafe75cbd5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3802.1273468676427,
        "Y": 408.96743876554717
      },
      {
        "Name": "PolyCurve.ByPoints",
        "ShowGeometry": false,
        "Id": "de63d4020d074d7db9193b3758d12e5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4802.1273468676427,
        "Y": 113.96743876554717
      },
      {
        "Name": "Level.Elevation",
        "ShowGeometry": false,
        "Id": "8ea34e35ad584feb83bb1be755529eb2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5954.043965312766,
        "Y": 2698.0435990874653
      },
      {
        "Name": "PolyCurve.Curves",
        "ShowGeometry": false,
        "Id": "1986edb1b90d49a6943370a1ae3470ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5193.1273468676427,
        "Y": 113.96743876554717
      },
      {
        "Name": "List.Count",
        "ShowGeometry": false,
        "Id": "3ab2c157726a434a83af6bffb877022c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4397.1241876198164,
        "Y": -874.7463662250143
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "fdedce942f5d4aae87a21ed6de00c8c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4659.1241876198164,
        "Y": -874.7463662250143
      },
      {
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Id": "d9f3dba8f0d0442e8ac9f8c4f6beca03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4913.1241876198164,
        "Y": -908.57386622501417
      },
      {
        "Name": "Number",
        "ShowGeometry": false,
        "Id": "1469a9de20294afe9315f8eb6424d267",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6029.0272870549,
        "Y": 2905.0701437783887
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Id": "9bc3127c96bd4cb283eb59cf98c79b29",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6219.49173874562,
        "Y": 2784.3385498032608
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "75731dd8e87b4358b21be2ed829e9f0e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6180.47578822957,
        "Y": 3042.796359211045
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Id": "7579fe630c3f4ea8ad3e41429ae7f572",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5519.1273468676427,
        "Y": 113.96743876554717
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": false,
        "Id": "310c8cbfbff544cda273219f0a7f44f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6942.3896831192451,
        "Y": 2894.3308183990962
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "b536b97c4d3e4d45b1c4be97bc6595a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10156.75586466001,
        "Y": -668.05593811301742
      },
      {
        "Name": "Surface.NormalAtParameter",
        "ShowGeometry": false,
        "Id": "175850fd3393491c926a3cfc594e1de1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12092.371725051467,
        "Y": -491.55509803936934
      },
      {
        "Name": "Vector.Z",
        "ShowGeometry": false,
        "Id": "f48adfb865194f26952571d2c044cf0f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12443.317859887777,
        "Y": -430.25501779004344
      },
      {
        "Name": "Number",
        "ShowGeometry": false,
        "Id": "40508acc8ab045448e26d45c37a5508b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12729.145231039378,
        "Y": -323.31567953626313
      },
      {
        "Name": "==",
        "ShowGeometry": false,
        "Id": "887292cd79cb47d38ee7dfd1196a6e22",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12896.201655220702,
        "Y": -458.30309948099966
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Id": "e69a78cbc3364d6eae73c70bb1ff7f76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13097.010578275902,
        "Y": -769.6683675684003
      },
      {
        "Name": "Boolean",
        "ShowGeometry": false,
        "Id": "83bab4e0084e4bd6a7ea42d9ad57cfc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12757.627424342349,
        "Y": -679.00160512490447
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Id": "9af41e5f9c39468981879ce6a82b0ac5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13352.652897415324,
        "Y": -756.51516817327
      },
      {
        "Name": "Categories",
        "ShowGeometry": false,
        "Id": "76dcd9b388a144f3952d11b974901f33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5492.7992615429366,
        "Y": 3638.180678164666
      },
      {
        "Name": "Element.GetLocation",
        "ShowGeometry": false,
        "Id": "153142078d91414f8ea2fa25a61dfa16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6242.0208925805173,
        "Y": 3656.6345815633845
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "6cee43f9ead646b68e92f74d345d7eec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13675.096475368124,
        "Y": -792.56858303445006
      },
      {
        "Name": "Curve.PointAtParameter",
        "ShowGeometry": false,
        "Id": "83164c2d0f074ccea31fd1b329c6cd22",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6568.7992615429366,
        "Y": 3749.180678164666
      },
      {
        "Name": "Number",
        "ShowGeometry": false,
        "Id": "2f7e65a832c5429f943c9a1160f2993d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6239.7992615429366,
        "Y": 3840.180678164666
      },
      {
        "Name": "==",
        "ShowGeometry": false,
        "Id": "e7c1ada31a554865bff43e312c53b52b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12901.984352833735,
        "Y": -226.1741428289647
      },
      {
        "Name": "Number",
        "ShowGeometry": false,
        "Id": "2d8e4c03c86f47de839052fdd0b02f99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12739.528083189418,
        "Y": -103.69645665065036
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Id": "aca9f2dcffee4bffa8f8568f42581155",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13134.186691030329,
        "Y": -263.027914297807
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Id": "45ca057e46184e1e990c9f13142f5ff0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13426.269312344937,
        "Y": -317.46520416424255
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "5219af0d35204b96b49339c70c0caacb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13737.014165138267,
        "Y": -331.096062469775
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Id": "b92c77dbdf404378be53642b4126628c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13994.186622824167,
        "Y": -242.78518041609777
      },
      {
        "Name": "Surface.PerimeterCurves",
        "ShowGeometry": false,
        "Id": "25a474028c514cf995b975d0cf014661",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14292.859134358767,
        "Y": -253.03780085879725
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Id": "aa2237b56bd04676942792045e7a60fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4986.53359357838,
        "Y": -1058.0003992857978
      },
      {
        "Name": "Roof.ByOutlineTypeAndLevel",
        "ShowGeometry": false,
        "Id": "c331ed185d5f479c8bf9bb90d77ca4fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15022.725615902653,
        "Y": -215.48365246587491
      },
      {
        "Name": "1. Select: Roof Types",
        "ShowGeometry": false,
        "Id": "d8cbb69f737d4a1b8942c063512b95b0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14167.937523887282,
        "Y": -1190.7415850813777
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "3d1401e36dba4d708070c2963d4ceec2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16744.188078584135,
        "Y": 243.96252281633883
      },
      {
        "Name": "String",
        "ShowGeometry": false,
        "Id": "fc917cdc61d74705be91efbd8bff1514",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15451.188078584139,
        "Y": 354.96252281633883
      },
      {
        "Name": "Parameter.ParameterByName",
        "ShowGeometry": false,
        "Id": "ad664230ff1f4f92afbb3e2cb9111d0f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15694.188078584139,
        "Y": 320.96252281633883
      },
      {
        "Name": "Parameter.Value",
        "ShowGeometry": false,
        "Id": "3c17e6f220584168b65b9d4be844a568",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16088.18807858414,
        "Y": 320.96252281633883
      },
      {
        "Name": "String",
        "ShowGeometry": false,
        "Id": "e70bbe0e958340bb998e7cccd0d4d301",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16417.188078584142,
        "Y": 211.96252281633883
      },
      {
        "Name": "*",
        "ShowGeometry": false,
        "Id": "7b8122e118134c2d83c474d041c43b45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16417.188078584142,
        "Y": 377.96252281633883
      },
      {
        "Name": "Number",
        "ShowGeometry": false,
        "Id": "cf0eb6964427415586c14fb77457f538",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16088.18807858414,
        "Y": 468.96252281633883
      },
      {
        "Name": "List.Combine",
        "ShowGeometry": false,
        "Id": "27cb04c089484eb9adc003138a94951b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13341.205491058237,
        "Y": -74.910922281484545
      },
      {
        "Name": "List.Join",
        "ShowGeometry": false,
        "Id": "0ea28c3c18f94f01af53cbc3dcc37de5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13117.296206485382,
        "Y": -45.838124186479718
      },
      {
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": false,
        "Id": "1eb6baaf7e04415a8e36d2753680b0c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13664.110439681233,
        "Y": -69.584216092265024
      },
      {
        "Name": "PolySurface.ByJoinedSurfaces",
        "ShowGeometry": false,
        "Id": "424a853753514afbae5a4a2478b4676c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14382.382502027403,
        "Y": 225.31293616384289
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "ba1feab2ab254428b4377c3f3ba6fb24",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13990.499553657864,
        "Y": -56.791418442476015
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Id": "31d0fbfd35b4460eaf0f78bdaed769e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7834.7897531789486,
        "Y": 3732.180678164666
      },
      {
        "Name": "Point.Z",
        "ShowGeometry": false,
        "Id": "19db7c1519e648bb830c8d568a8e80bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6920.7992615429366,
        "Y": 3749.180678164666
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Id": "132158b883754463892a950227203a9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7195.467437153743,
        "Y": 3749.180678164666
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Id": "914be168982d431d92f33f9a875b725a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8112.753701971239,
        "Y": 3835.1898532783216
      },
      {
        "Name": "Curve.EndPoint",
        "ShowGeometry": false,
        "Id": "e0047cc6d66444b583084e9a8cdebb4e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2237.6837560354475,
        "Y": 740.395529045966
      },
      {
        "Name": "Curve.StartPoint",
        "ShowGeometry": false,
        "Id": "65d065a7fce345cc98e43023f991dcf0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2238.4303987375934,
        "Y": 488.97011608999446
      },
      {
        "Name": "Vector.ByTwoPoints",
        "ShowGeometry": true,
        "Id": "83e97889286d47e698a5cbf9af566c8f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1916.7100337891325,
        "Y": 609.1364626006548
      },
      {
        "Name": "Vector.X",
        "ShowGeometry": true,
        "Id": "eb78cd25495644b4ae1cb78f6b4d9bfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1288.7591678263709,
        "Y": 470.00962403405492
      },
      {
        "Name": "Vector.Y",
        "ShowGeometry": true,
        "Id": "7e9e9a06a3cd4893b82b8f401704981a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1309.4401843700548,
        "Y": 876.10958525548165
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": true,
        "Id": "352e1a020efe4f89844842c2ec05ecad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1010.5054906931709,
        "Y": 470.00962403405481
      },
      {
        "Name": "Vector.Normalized",
        "ShowGeometry": true,
        "Id": "52f85e3eb37f4b19ba63a0d20b51c0d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1614.0151552861244,
        "Y": 638.27789500311837
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": true,
        "Id": "c6dd239a8e2b462fae1257d391fb135c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1016.9897416940303,
        "Y": 883.7260273525884
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "99ac2a995dbc49de82fb36b83fbb6056",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -595.6047266816463,
        "Y": 563.07422685992458
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "e82fea75b989448bad7da6042c2af10f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -770.99230061514663,
        "Y": 758.700565530427
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "d398278631ac4d3591a6f32f0782fa2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -594.46718225234736,
        "Y": 947.30103772465077
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "845224a251e1451eb2a7eba60e88dff2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -364.424471660388,
        "Y": 765.90367921675727
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": false,
        "Id": "ac6d40548e6e4da1adeef8b57f6edfc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -119.61659414218911,
        "Y": 786.29232458402475
      },
      {
        "Name": "Curve.Reverse",
        "ShowGeometry": false,
        "Id": "e2e63795e5d84993a7c34967e9fef4c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 173.56777801226826,
        "Y": 866.63959139659
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "4553ae26ffe846abbe6ee27b2f507737",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 458.90272079968418,
        "Y": 799.28549691186186
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": false,
        "Id": "d3c05b59796543ffb7de46d2b0a2935c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5823.9692165259485,
        "Y": 3853.4646944165156
      },
      {
        "Name": "Element.GetIntersectingElementsOfCategory",
        "ShowGeometry": false,
        "Id": "5384ff0501584f0f9fd2339b9a885f44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17114.717932118292,
        "Y": -1764.22973519148
      },
      {
        "Name": "Categories",
        "ShowGeometry": false,
        "Id": "a85cbc288afb4409863f9e2e1c399c45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16783.717932118292,
        "Y": -1730.22973519148
      },
      {
        "Name": "Categories",
        "ShowGeometry": false,
        "Id": "647f78aed64b4ad8a2b326b5320e37a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16783.717932118292,
        "Y": -1553.22973519148
      },
      {
        "Name": "Element.GetIntersectingElementsOfCategory",
        "ShowGeometry": false,
        "Id": "eddad5e65f40438480751ae61b0ee840",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17114.717932118292,
        "Y": -1587.22973519148
      },
      {
        "Name": "Categories",
        "ShowGeometry": false,
        "Id": "e9cf56bff72f4972a3544159d295d294",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16783.717932118292,
        "Y": -1375.22973519148
      },
      {
        "Name": "Element.GetIntersectingElementsOfCategory",
        "ShowGeometry": false,
        "Id": "28de0935ae5e4a49a19994d009234961",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17114.717932118292,
        "Y": -1409.22973519148
      },
      {
        "Name": "List.Combine",
        "ShowGeometry": false,
        "Id": "7784976fc077470aa8de8b71b97c34bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17639.539001025769,
        "Y": -1692.5100676592783
      },
      {
        "Name": "List.Join",
        "ShowGeometry": false,
        "Id": "1a04d6baa6bb43f1a5a7664f35ba538f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 17114.717932118292,
        "Y": -1976.2297351914758
      },
      {
        "Name": "Element.JoinGeometry",
        "ShowGeometry": false,
        "Id": "9fda205130e341a784dbd93a1bf8a6e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18006.717932118292,
        "Y": -1826.2297351914758
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "da908222991845e099221eff7096dec9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7705.091632041,
        "Y": 2713.43884801052
      },
      {
        "Name": "String",
        "ShowGeometry": false,
        "Id": "4acf7c99ba8c416db416047adb4e7f44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7400.6622148340175,
        "Y": 2921.3455640327593
      },
      {
        "Name": "Number",
        "ShowGeometry": false,
        "Id": "8101b24d93aa46998bd8ad2d392db857",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7431.5573864820435,
        "Y": 3041.43389590597
      },
      {
        "Name": "List.Join",
        "ShowGeometry": false,
        "Id": "f0a29c37b9ef45bab5fed609fdd7db47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9387.2646217614019,
        "Y": -385.56652692710895
      },
      {
        "Name": "List.Combine",
        "ShowGeometry": false,
        "Id": "2d3c74e9d94f451fb49ea559d9954d49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9589.44969982775,
        "Y": -479.80549783720971
      },
      {
        "Name": "Level.Elevation",
        "ShowGeometry": false,
        "Id": "5c49b01d052b4f2a91d6508d175a48a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7213.3834486589421,
        "Y": 3889.962843480806
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Id": "eda07881a6b841d495839dfa03ac75e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7520.7947347105182,
        "Y": 3888.283741573699
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": false,
        "Id": "840c577fa2804246adc469b2e124e169",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7511.8665506347634,
        "Y": 3536.4759505602783
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Id": "752dbdb4876042cfb9959dc011fbd135",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7833.8586032420153,
        "Y": 3518.8840440632885
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Id": "f8c8e641399749e3a40f063ac58e3ab1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8104.2091757583185,
        "Y": 3478.0065383511296
      },
      {
        "Name": "Element.JoinGeometry",
        "ShowGeometry": false,
        "Id": "037af4d52c01480997276ce863e7b53b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18383.858715877148,
        "Y": -7.13815468085636
      },
      {
        "Name": "Element.UnjoinAllGeometry",
        "ShowGeometry": false,
        "Id": "dbcf0f5129ad40cb85a4cdc13afb5b09",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 17941.824019790642,
        "Y": -72.734590749380232
      },
      {
        "Name": "Element.UnjoinAllGeometry",
        "ShowGeometry": false,
        "Id": "f6e1a49457754a18851d83af78164783",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 17500.308109229096,
        "Y": -1917.2695442614258
      },
      {
        "Name": "List.Join",
        "ShowGeometry": false,
        "Id": "2427d1d99d1d42e2b917a43a2a40180f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18052.335528017218,
        "Y": 161.00555355940446
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "b781104c9a1d41db8ecbabf3649e5b18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18735.025567533565,
        "Y": -5.5404396202106909
      },
      {
        "Name": "List.RestOfItems",
        "ShowGeometry": false,
        "Id": "c04d0e87ce1740d49fb6e8892a7b7ba2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19029.612604056056,
        "Y": 39.400729298168926
      },
      {
        "Name": "Element.SetGeometryJoinOrder",
        "ShowGeometry": true,
        "Id": "82befbea3b7a46a99a187f21df4683e8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19582.726103179266,
        "Y": -53.354978688372285
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "d5fef0cc89d94fa899b474ab4b0a1758",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19287.069395675433,
        "Y": 62.744962390033152
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Id": "67fdf2f32a9e4a6f9c7923812fad5ab9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4792.56175676899,
        "Y": 656.99733115634228
      },
      {
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Id": "31f2e4542a81436eacd0f06b585d0e8e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5055.721683609102,
        "Y": 822.11364541013666
      },
      {
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Id": "fb353887273e456bb05bbcf113920ed3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5377.6886773096758,
        "Y": 710.25464056447834
      },
      {
        "Name": "StructuralFraming.ColumnByCurve",
        "ShowGeometry": false,
        "Id": "3119e0e5f40d470080fed367e22fcb41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6375.0460687581954,
        "Y": 682.52628631026892
      },
      {
        "Name": "4. Select : Pedestal Types",
        "ShowGeometry": false,
        "Id": "d83febe4f2d34cd0ac2ac08b63083b3b",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4380.0986657213189,
        "Y": 1623.9174154791533
      },
      {
        "Name": "FamilyInstance.ByPointAndLevel",
        "ShowGeometry": false,
        "Id": "bbb453caa31b4791a734c81e08cdcea2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5990.9971744808,
        "Y": 930.110694773643
      },
      {
        "Name": "3. Select : Foundation Types",
        "ShowGeometry": true,
        "Id": "9e781073830943beaebb5ee8440c4675",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2831.4145330174347,
        "Y": 1307.3014224447486
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Id": "b8900da4e1e44fdb858c55e14c064d8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 17664.459166514403,
        "Y": 75.430515129623018
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Id": "40275b744e6041ab9ca92f9e9e4695c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 17681.091376128621,
        "Y": 223.91204488756625
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Id": "9c6117ca51d442a8b1cd2fb5738bda34",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 17722.294033355553,
        "Y": 360.55812422039617
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": false,
        "Id": "b3a323fe85604a658654ec98fc531d19",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3746.1241876198164,
        "Y": -891.66011622501446
      },
      {
        "Name": "Level.Name",
        "ShowGeometry": true,
        "Id": "a01ca22a953a46e0a99fe2b0c84c50db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3457.1241876198164,
        "Y": -1004.6601162250145
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "7906d0f1eb4744c5bf97b1dee50861a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3457.1241876198164,
        "Y": -857.66011622501446
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "f206d9ef332e439b9159fc4a0909233a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3457.1241876198164,
        "Y": -710.66011622501446
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": false,
        "Id": "186f071dc2ce4dcb89eefe567e0765fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4064.2123186900626,
        "Y": -948.62955799772237
      },
      {
        "Name": "Level.Elevation",
        "ShowGeometry": false,
        "Id": "10ace61d2c9e49c8a242fb77509281e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4391.062662748097,
        "Y": 794.74623317600606
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "3464c552e6bc4736b767c8932c417885",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5421.7211619241843,
        "Y": 940.156505360361
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "c671106a09464d70aa90246a0b5824bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5707.4863294730812,
        "Y": 687.17011520869585
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "7129e56cc32240e4b729e0d981615042",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6446.9298715198665,
        "Y": 951.83079308314018
      },
      {
        "Name": "String",
        "ShowGeometry": false,
        "Id": "1a12616e7d394f82b62ba015817b8e2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6114.9081330969011,
        "Y": 1130.2457132323648
      },
      {
        "Name": "Element.Solids",
        "ShowGeometry": false,
        "Id": "a030a637d71a4f9c97df36e0b0befaf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9871.440827575032,
        "Y": -290.53300312349529
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "95469868dcb74a16b9ad8e5e1ef7a51b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10165.512242172861,
        "Y": -421.23306776897243
      },
      {
        "Name": "Solid.ByUnion",
        "ShowGeometry": false,
        "Id": "e223cd3e8fa1450bba3b128892a61ba9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10434.958669181902,
        "Y": -425.3165312799033
      },
      {
        "Name": "List.Join",
        "ShowGeometry": false,
        "Id": "ab46d0e95fae4c94a86eca7922bdaf44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10669.713302968687,
        "Y": -465.60863560761163
      },
      {
        "Name": "List.RestOfItems",
        "ShowGeometry": false,
        "Id": "10385ccc097742468ed2bedcd381f2a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14006.365750084149,
        "Y": -708.55937938909665
      },
      {
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Id": "8760586d830c489a851f0fcc1e0dc4d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6665.8471614171258,
        "Y": 1867.4608191722625
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Id": "938c1803b86a47108aeaf026707a6763",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6180.4477149937975,
        "Y": 1798.4732349930771
      },
      {
        "Name": "Level.Elevation",
        "ShowGeometry": false,
        "Id": "f3980554b30d4d32b689ab29a818c508",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6414.93023378189,
        "Y": 1839.3010366333417
      },
      {
        "Name": "Point.X",
        "ShowGeometry": true,
        "Id": "7aa670deaf0e48e29e70ecef5e9a34c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2937.3777518844317,
        "Y": 2619.8854869884235
      },
      {
        "Name": "Point.Y",
        "ShowGeometry": true,
        "Id": "f6a8c9dd90da4084b4b719408ab5d811",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2927.013286292623,
        "Y": 2894.5441222509835
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "f4dbe9209b8943e4af93d75da8539058",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2611.9389819340295,
        "Y": 2530.7103010987462
      },
      {
        "Name": "List.MinimumItem",
        "ShowGeometry": true,
        "Id": "9b7b83f566db4d05be859e2f034c4b17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3482.4591877662647,
        "Y": 2662.4292915770247
      },
      {
        "Name": "List.MaximumItem",
        "ShowGeometry": true,
        "Id": "e1cf44c374cb4d129e0adf9b9f6bdb68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3469.2161002627445,
        "Y": 2524.1125998735897
      },
      {
        "Name": "List.MinimumItem",
        "ShowGeometry": true,
        "Id": "b60fe23a7ea648ab9bf04f6e1b53f7e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3527.52741688404,
        "Y": 3062.0644666779353
      },
      {
        "Name": "List.MaximumItem",
        "ShowGeometry": true,
        "Id": "7d3f2e481a98475698b39268748063d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3513.4628243838374,
        "Y": 2895.7225049546664
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": true,
        "Id": "8871b6c475e047edbfb4cdae7608f655",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3185.2254460205854,
        "Y": 2610.9283957300013
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": true,
        "Id": "d50be92d12f64eb8a365b1fce01e0c1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3219.3360459642595,
        "Y": 2921.9761416380452
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Id": "d039511114374095b9eea719e5165404",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3774.4242804679111,
        "Y": 2432.4201248144382
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Id": "fbdbefee526248a4a6145948364de351",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3776.0629116899313,
        "Y": 2597.7496377477992
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Id": "7b9bfcc2c82e42b7be3bfbfbc1c83cfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3872.4045185851296,
        "Y": 2905.0662427855127
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": false,
        "Id": "04d6d8697cb54fb28cfb593f828ef6c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3871.0098173241354,
        "Y": 3091.05107337199
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": false,
        "Id": "a11582f0bcee4871b8ac22440451548e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4130.0374519867946,
        "Y": 2427.131906539259
      },
      {
        "Name": "Point.PruneDuplicates",
        "ShowGeometry": false,
        "Id": "846a4ed69ae7486c8cd1abb9c1a446df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4484.8011736210392,
        "Y": 2440.5923690403847
      },
      {
        "Name": "List Create",
        "ShowGeometry": false,
        "Id": "6be47a8aa02a41088bcd5b9f6a962587",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4082.2823744399316,
        "Y": 2686.518291289638
      },
      {
        "Name": "PolyCurve.ByPoints",
        "ShowGeometry": false,
        "Id": "def816e0b48f428eb6ccf3a2b0790750",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4792.9567485442531,
        "Y": 2417.317866593321
      },
      {
        "Name": "PolyCurve.Curves",
        "ShowGeometry": false,
        "Id": "abe825cf7ed04782b9fb0c521f0b0314",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5183.9567485442531,
        "Y": 2417.317866593321
      },
      {
        "Name": "StructuralFraming.BeamByCurve",
        "ShowGeometry": false,
        "Id": "97b1d5393fb64e59afbd3b6ef4b76dea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7167.438153013456,
        "Y": 1927.239953132829
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "f9fb66cc1d67457ab81c5290f63b8f48",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8101.0746807263167,
        "Y": 1857.7928656522877
      },
      {
        "Name": "List Create",
        "ShowGeometry": false,
        "Id": "c05be71868d442f19729c2301e8efff1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17570.229784562747,
        "Y": 2046.4513313143179
      },
      {
        "Name": "Element.GetIntersectingElementsOfCategory",
        "ShowGeometry": false,
        "Id": "1436750309af4a9aaa80b41fc5d589a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10045.435437482842,
        "Y": 1080.956445254089
      },
      {
        "Name": "Element.GetCategory",
        "ShowGeometry": false,
        "Id": "7d003cbb6e8d4a63b916db38561bc8fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9675.0707841693456,
        "Y": 1176.2043999212501
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Id": "216e6aedb2b240ff9f3c5367f5ef6fd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 9326.0504786987731,
        "Y": 1208.0945801165308
      },
      {
        "Name": "Element.JoinGeometry",
        "ShowGeometry": false,
        "Id": "db50459804c5481f86a2fb22671d7d21",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10627.017560220862,
        "Y": 981.49863834473285
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "22bf2334c96d4c168e5b4c11b0e0daf5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 9350.9556672017388,
        "Y": 977.16021014154012
      },
      {
        "Name": "Parameter.ParameterByName",
        "ShowGeometry": false,
        "Id": "0d698200a81041e899fb75f5138adffb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4057.7067251391127,
        "Y": 1083.3333590074919
      },
      {
        "Name": "String",
        "ShowGeometry": false,
        "Id": "7bf74633386b464a9fca4a63052c1cf5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3818.5741931526309,
        "Y": 1099.2407354923682
      },
      {
        "Name": "Parameter.Value",
        "ShowGeometry": false,
        "Id": "1333b269cc294b5dba323dfa8ad93936",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4398.9621389106478,
        "Y": 991.38122038862139
      },
      {
        "Name": "+",
        "ShowGeometry": false,
        "Id": "47904117a1c84c379a624d14d2b8a3ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4682.910424367411,
        "Y": 867.51424599915617
      },
      {
        "Name": "7. Select : Tie Girder Types",
        "ShowGeometry": false,
        "Id": "33b419e9a8b44f89b31274ad2b101314",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6612.737408652114,
        "Y": 2221.8128224682719
      },
      {
        "Name": "Element.SetGeometryJoinOrder",
        "ShowGeometry": false,
        "Id": "5f9be9cf94ef4502bb29d860aa69c072",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18639.284612245916,
        "Y": -1810.9814019354612
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Id": "0943b21ab0764673800c4bcf71e9ec36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18342.266718876795,
        "Y": -1862.4909590432658
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Id": "1e7da67cc4dc498fb4dcc1e6d630f1e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18350.081022677346,
        "Y": -1717.3681741765295
      },
      {
        "Name": "String",
        "ShowGeometry": false,
        "Id": "7693e9a2e73945d29a20783be3249403",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7293.1291637852519,
        "Y": 2326.9884787166361
      },
      {
        "Name": "Number",
        "ShowGeometry": false,
        "Id": "a5a91de174594b269558a6fed559b0ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7324.0243354332715,
        "Y": 2447.076810589846
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "79f35b8a93bd4c43997437c30d10bf4b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7597.5585809922313,
        "Y": 2119.0817626943958
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": false,
        "Id": "2245addbf32548d7b12c9358cd3509f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4880.96178142092,
        "Y": 1204.8819781492223
      },
      {
        "Name": "Number",
        "ShowGeometry": false,
        "Id": "d1eca05a0fc74027878cd0e96aa87c7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4654.4439732874107,
        "Y": 1346.1185018173769
      },
      {
        "Name": "String",
        "ShowGeometry": false,
        "Id": "068e160fd74d4d8a86c0d782a7a39ce8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6808.4024174451115,
        "Y": 904.698319285923
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "c91591f59aba4d3f9c776e1d06c82af0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7074.5225328091756,
        "Y": 874.22764048408442
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "004fd90fcb57406395e82c6c5f995731",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6793.5279070584884,
        "Y": 1109.5621055944598
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "a7455add1fbb4cd991dcf49c202d029a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7433.152060477204,
        "Y": 964.86054229785339
      },
      {
        "Name": "String",
        "ShowGeometry": false,
        "Id": "22dd4fd8dac6483297c6d16a284a5b06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7153.049145904025,
        "Y": 1195.4583289564971
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "57b9526830d640c2ab96d94620868f55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7624.7171272664973,
        "Y": 110.71453146776628
      },
      {
        "Name": "String",
        "ShowGeometry": false,
        "Id": "db1b9c64b28d461498f8d4a104eb5c63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7337.9886134170074,
        "Y": 292.80874536994634
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "dc7bb29d26d6473a916696fe3e594adf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7259.4620003221671,
        "Y": -28.421943102469754
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "558e6ec44cea43b0bb33a8dfc2792369",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6978.4673745714772,
        "Y": 206.91252200790632
      },
      {
        "Name": "String",
        "ShowGeometry": false,
        "Id": "4ae9066ef8fa4988865f2ff514eda7df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6993.3418849580967,
        "Y": 2.0487356993693311
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "33d100d7171f4085b53d8e7a0bbd1d13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8050.3085232984749,
        "Y": 2182.4567322441035
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "dc6be8eb46bb4c01b4f46243464cb30a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7727.15808559881,
        "Y": 2308.2759169189508
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "60ceb677864d47bd9d8eac90259b40ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8517.7495997609112,
        "Y": 3192.2073725211717
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "b107f1572f3a4933b9e5566d1597d3bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8494.03965829316,
        "Y": 2698.9902350793554
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "672deb3b4a0e4b4fa9832e33a3461040",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8153.3626211919927,
        "Y": 2829.1242213461524
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "594519a99dad419ca3439569f5f36a15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5673.0,
        "Y": 2571.0
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "8ec43ee9d1904760ad8290e27a3fd81b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8158.1184803536853,
        "Y": 2546.4431757819289
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "8d9b4f1282a44339ad14be161c86800c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8469.59112803595,
        "Y": 2169.4460454156565
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "9f091a183c724f3bace7478f4d6ea404",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9558.6453052478373,
        "Y": 2840.7628829917371
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "19db9ff2e6244083ac1f04ba8d59dcdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9139.3627005103572,
        "Y": 2853.7735698201768
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "77f8c2b159784a4196f1ce83b8d52cbf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8816.2122628106972,
        "Y": 2979.5927544950268
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": false,
        "Id": "08d126ca56064fe7901e04b537740cb4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16356.862983825575,
        "Y": -677.10392166859037
      },
      {
        "Name": "String",
        "ShowGeometry": false,
        "Id": "ae635f826ddb42c082ea4962a2d3b09b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16029.862983825575,
        "Y": -709.10392166859037
      },
      {
        "Name": "Number",
        "ShowGeometry": false,
        "Id": "91e29cc146694b0892f3bb125fb72902",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15700.862983825575,
        "Y": -452.10392166859037
      },
      {
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": false,
        "Id": "74f6483158bb4433b1701df44dd91821",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4976.2776222202347,
        "Y": -289.27777936647163
      },
      {
        "Name": "Python Script",
        "ShowGeometry": false,
        "Id": "9222a06b17e04dee8805caea52c39340",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4470.9242255598647,
        "Y": -345.76336374520025
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "21ebb93a794047358c68e54ad3604201",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5887.3998502105878,
        "Y": -442.26549335351365
      },
      {
        "Name": "List.SortByKey",
        "ShowGeometry": false,
        "Id": "75d9fed61d66412f90c26ffa56b296fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6392.1521538247152,
        "Y": -440.77278736684474
      },
      {
        "Name": "Level.Elevation",
        "ShowGeometry": false,
        "Id": "fe07b63774d446b0b88c07f710422358",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6155.6015422067594,
        "Y": -328.9851565600469
      },
      {
        "Name": "List.Count",
        "ShowGeometry": false,
        "Id": "81e565518ca345a58cd91f63b90c4941",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6229.4408456623332,
        "Y": -139.09080644904827
      },
      {
        "Name": "List.TakeItems",
        "ShowGeometry": false,
        "Id": "90a2b2db5b0f4d2880f9bfbcec7e3431",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6977.0599280603328,
        "Y": -347.628168233103
      },
      {
        "Name": "List.Reverse",
        "ShowGeometry": false,
        "Id": "8da505d7675b41c6ba298b79271ad6a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6706.4894972822131,
        "Y": -439.22753281944563
      },
      {
        "Name": "List.Reverse",
        "ShowGeometry": false,
        "Id": "7769c93a65bd4d498362ec718248b67d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6270.7579065140753,
        "Y": 72.078360713530586
      },
      {
        "Name": "층별기둥 높이 조정",
        "ShowGeometry": false,
        "Id": "1ca1f1e7413649a08309062ee26f3346",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6561.87753002249,
        "Y": 41.457331826740784
      },
      {
        "Name": "Element.JoinGeometry",
        "ShowGeometry": false,
        "Id": "a06c39ad2a564ee3852846e73718d3cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18164.078842239956,
        "Y": 1887.5112540221148
      },
      {
        "Name": "List.Join",
        "ShowGeometry": false,
        "Id": "dd4fda7f838c4b54a0ce67bed68e3d64",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17848.574331918171,
        "Y": 1749.7379859388673
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "f732b20ceed94078afbcff513afdbf58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17848.947984032209,
        "Y": 2056.4647049660116
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Id": "fd586c31c6124e7eabb6f984e1f92e30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18713.304655328877,
        "Y": 1763.5768458832972
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Id": "79f4d179d65d445eb0c771f72c201833",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18721.118959129479,
        "Y": 1908.6996307500372
      },
      {
        "Name": "Element.SetGeometryJoinOrder",
        "ShowGeometry": false,
        "Id": "be50061c54c54b62b7b50cdfc0d86bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19010.322548697979,
        "Y": 1815.0864029911072
      },
      {
        "Name": "List Create",
        "ShowGeometry": false,
        "Id": "a2dc687612064d2cac267ceb18864b7a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8233.1908941743241,
        "Y": 499.51460090896353
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "9ee2a2160fca4ae09ffebe43807d6a33",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16754.348373873916,
        "Y": 871.03206783323947
      },
      {
        "Name": "Element.JoinGeometry",
        "ShowGeometry": false,
        "Id": "b7e815d1d6d3434ab9aa638f6f8376c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18193.581405550882,
        "Y": 688.44570784937673
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "a244e31ac5064a3291ce1a64ff934d04",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17826.567233788293,
        "Y": 797.56865767106524
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": false,
        "Id": "d971f54755fb49ab93553c1454ce5dc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8117.9416751715553,
        "Y": 766.8464148907733
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Id": "02ba29cf36274d8d8bb02973aef063bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17537.711565206089,
        "Y": 803.0295726538593
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": false,
        "Id": "876011b0eb764496a6bf663ea00facfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18568.076990985064,
        "Y": 647.23915688151476
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": false,
        "Id": "de4e6ba4e85c48e785eaa6280234a77e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18575.891294785659,
        "Y": 792.36194174825471
      },
      {
        "Name": "Element.SetGeometryJoinOrder",
        "ShowGeometry": false,
        "Id": "b1626a794d9f4beaafaf1199aa7dd027",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18865.094884354163,
        "Y": 698.74871398932476
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "3ca29260fa504c8d97a80c31957429f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17318.4344891276,
        "Y": 1154.7126844696238
      }
    ],
    "Annotations": [
      {
        "Id": "ae1baa6c320248f9a6e2129c127104f4",
        "Title": "기둥 패밀리 선택",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6084901b4746495493b4306a7955dd85"
        ],
        "HasNestedGroups": false,
        "Left": 5332.8855031366884,
        "Top": -371.97329044879473,
        "Width": 398.0,
        "Height": 217.0,
        "FontSize": 36.0,
        "InitialTop": -298.97329044879473,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "443ea9a6ab8e41019f64bbe863ab25b3",
        "Title": "보 패밀리 선택",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "36e20a3c3078426190f5d59ec14c9317"
        ],
        "HasNestedGroups": false,
        "Left": 6608.4097126385495,
        "Top": 2377.7435973894685,
        "Width": 435.0,
        "Height": 217.0,
        "FontSize": 36.0,
        "InitialTop": 2450.7435973894685,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "cd0a5aa87fb44de6912b9a78dc17cd43",
        "Title": "기초(바닥) 패밀리 선택",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "61d6e073a14341d7a785cec24d2232a1"
        ],
        "HasNestedGroups": false,
        "Left": 14155.909606352227,
        "Top": -1524.8645411073694,
        "Width": 392.0,
        "Height": 217.0,
        "FontSize": 36.0,
        "InitialTop": -1451.8645411073694,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "3a387be70eef43789aa5f7e382e89838",
        "Title": "그리드 필터",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6ff858a4df3d4590851814caf27869c7",
          "1782ee80aa8f40cbbb52c4e0ef51fd8c",
          "792c1efe4a98426aac05b81a214f23f4",
          "a770fd8b664249c6aaa2969a4b4f232b",
          "3bf3b58e5b124575b892e5b22c3b63eb",
          "52753fb9b74846ec8f74065815262d8a",
          "f28b17f80fc34f26b290d5d884a12ae7",
          "11a833a0335343238f5d9f661ac68ad1",
          "d12fdcb5dd0a4b8285525f0ecd162891",
          "29fbbb99adda45ef8822753dd49bc7a5",
          "4c46ccd4bc2048d99a6aecc87dbbd481",
          "8beadf428e4a41ec90010f2085c4902e",
          "60e04df06dda4ac7a279450b1b1b8e14",
          "2df67dac910d43b0b9e88940256100a2",
          "da8910ee65e74768b05cee180ac3630d"
        ],
        "HasNestedGroups": false,
        "Left": -5427.0513278718208,
        "Top": 311.45461749516289,
        "Width": 2978.2440530514477,
        "Height": 675.52372508575343,
        "FontSize": 36.0,
        "InitialTop": 384.45461749516289,
        "InitialHeight": 615.52372508575343,
        "TextblockHeight": 63.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "672289630a354c298f51d4182d1d7507",
        "Title": "그리드 교차점 추출",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b5a74bc4e07c41e68b364b4beac0f918",
          "f874431b8de64c9d80e1b85ef770a81b",
          "2255244388dd4825be39b5826d84e005",
          "65155b78d58e4f7b8486ea9271dfac49",
          "1d1bb0772a1b46dcb5332ef1dfc2c61d",
          "9ac7a9c137a74e94ae3da47af70b7992",
          "1bbd0373bc0644ffbe08ffc5a003f5dc",
          "b3c64729b31241769e68693f29d64008",
          "3daac58052cc43ce998337e06a938416"
        ],
        "HasNestedGroups": false,
        "Left": 1118.0262756464335,
        "Top": -91.537832946178753,
        "Width": 2127.0,
        "Height": 499.99999999999994,
        "FontSize": 36.0,
        "InitialTop": -18.537832946178753,
        "InitialHeight": 439.99999999999994,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "ccdc066758b249c08ca9d112d1c9aebe",
        "Title": "그리드 간 교차점으로 그리드 분할 => 보 Curve 작성",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a0cd85bebf504ebc8be14d9c7f6e31a5",
          "b7d93e5c60794356808371e6f7cece16",
          "b1ce84fe38f54b4db480175a7794e0d0",
          "ce311c0e78f7421492691997a137b01f",
          "ab6c1b75886d471bb5e0e128dc051d28",
          "da804ce85beb4ab59400df051859ba30",
          "b942a61b057d49059f619a15b9bfc6bd",
          "c9243d2812134870abddc5e5919d2bab"
        ],
        "HasNestedGroups": false,
        "Left": 961.97118857135592,
        "Top": 1702.2120667950674,
        "Width": 2515.0,
        "Height": 278.07921532923774,
        "FontSize": 36.0,
        "InitialTop": 1775.2120667950674,
        "InitialHeight": 213.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "b11e37ca65964bacae84cbd4f568150f",
        "Title": "레벨 데이터 정리",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "99295404975a4691ab2bea3fa01f158a",
          "72feccdc4967423b88bc66771c79a24c",
          "61521cb278404175ad783d335452726f",
          "9cd7a71b5a764557874470f6610e326c",
          "5bf77bef596a474baa67c21ef720a5f1",
          "6dd9d292589849ff814796afd847b48e",
          "369b73fc3a5845e0ac09bb247e7ae9dd",
          "3ab2c157726a434a83af6bffb877022c",
          "fdedce942f5d4aae87a21ed6de00c8c5",
          "d9f3dba8f0d0442e8ac9f8c4f6beca03",
          "aa2237b56bd04676942792045e7a60fb",
          "b3a323fe85604a658654ec98fc531d19",
          "a01ca22a953a46e0a99fe2b0c84c50db",
          "7906d0f1eb4744c5bf97b1dee50861a5",
          "f206d9ef332e439b9159fc4a0909233a",
          "186f071dc2ce4dcb89eefe567e0765fb"
        ],
        "HasNestedGroups": false,
        "Left": 1581.1241876198164,
        "Top": -1131.0003992857978,
        "Width": 3600.0,
        "Height": 552.34028306078335,
        "FontSize": 36.0,
        "InitialTop": -1058.0003992857978,
        "InitialHeight": 492.34028306078335,
        "TextblockHeight": 63.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "998179b4a5db444caf420341accfea83",
        "Title": "기둥 모델링",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1e91d149d53b4d538abb4428ae762f8c",
          "d0eea3d974114ead84bb2c9ce312c3a6",
          "84e66ea0d2eb4b8dabd6a9628a0a8d80",
          "73c08f8e05b149919dd0e28c3f50d5dc",
          "1c9dc30184a84cc9ab6c4aa417424c0f",
          "5798cb7700084542b4c58b88172166a3",
          "9ee147d5b20c46739f8f6932c4576dd3",
          "3245538da2024426bb18b2652ac409d5",
          "855a488dfe174e15b59470aafe75cbd5",
          "de63d4020d074d7db9193b3758d12e5e",
          "1986edb1b90d49a6943370a1ae3470ff",
          "7579fe630c3f4ea8ad3e41429ae7f572"
        ],
        "HasNestedGroups": false,
        "Left": 3495.1273468676427,
        "Top": -46.032561234452828,
        "Width": 2674.0,
        "Height": 599.0,
        "FontSize": 36.0,
        "InitialTop": 26.967438765547172,
        "InitialHeight": 527.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "90d5acea16634005b2cf4cbe4317dbc8",
        "Title": "보 모델링",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2a38ed02e6814358adb2b9eaa1ccdf4d",
          "e2f3ae817a254e1794889bfc10756146",
          "8ea34e35ad584feb83bb1be755529eb2",
          "1469a9de20294afe9315f8eb6424d267",
          "9bc3127c96bd4cb283eb59cf98c79b29",
          "75731dd8e87b4358b21be2ed829e9f0e",
          "310c8cbfbff544cda273219f0a7f44f3",
          "da908222991845e099221eff7096dec9",
          "4acf7c99ba8c416db416047adb4e7f44",
          "8101b24d93aa46998bd8ad2d392db857"
        ],
        "HasNestedGroups": false,
        "Left": 5944.043965312766,
        "Top": 2615.533521602219,
        "Width": 2074.0476667282337,
        "Height": 601.262837608826,
        "FontSize": 36.0,
        "InitialTop": 2688.533521602219,
        "InitialHeight": 499.262837608826,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "23fd009a3e3d476aada8d2a4d22c3b63",
        "Title": "지붕 패밀리 선택",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d8cbb69f737d4a1b8942c063512b95b0"
        ],
        "HasNestedGroups": false,
        "Left": 14157.937523887282,
        "Top": -1263.7415850813777,
        "Width": 532.0,
        "Height": 217.0,
        "FontSize": 36.0,
        "InitialTop": -1190.7415850813777,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "f005cff8fcea4211b3ca5ce2697bc352",
        "Title": "지붕 레벨 조정",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3d1401e36dba4d708070c2963d4ceec2",
          "fc917cdc61d74705be91efbd8bff1514",
          "ad664230ff1f4f92afbb3e2cb9111d0f",
          "3c17e6f220584168b65b9d4be844a568",
          "e70bbe0e958340bb998e7cccd0d4d301",
          "7b8122e118134c2d83c474d041c43b45",
          "cf0eb6964427415586c14fb77457f538"
        ],
        "HasNestedGroups": false,
        "Left": 15441.188078584139,
        "Top": 138.96252281633883,
        "Width": 1615.9999999999964,
        "Height": 474.0,
        "FontSize": 36.0,
        "InitialTop": 211.96252281633883,
        "InitialHeight": 402.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "d1d745ecca974922af400b7609456e31",
        "Title": "그리드 방향 조정 ( + : → ↑ )",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e0047cc6d66444b583084e9a8cdebb4e",
          "65d065a7fce345cc98e43023f991dcf0",
          "83e97889286d47e698a5cbf9af566c8f",
          "eb78cd25495644b4ae1cb78f6b4d9bfd",
          "7e9e9a06a3cd4893b82b8f401704981a",
          "352e1a020efe4f89844842c2ec05ecad",
          "52f85e3eb37f4b19ba63a0d20b51c0d7",
          "c6dd239a8e2b462fae1257d391fb135c",
          "99ac2a995dbc49de82fb36b83fbb6056",
          "e82fea75b989448bad7da6042c2af10f",
          "d398278631ac4d3591a6f32f0782fa2c",
          "845224a251e1451eb2a7eba60e88dff2",
          "ac6d40548e6e4da1adeef8b57f6edfc8",
          "e2e63795e5d84993a7c34967e9fef4c3",
          "4553ae26ffe846abbe6ee27b2f507737"
        ],
        "HasNestedGroups": false,
        "Left": -2248.4303987375934,
        "Top": 397.00962403405481,
        "Width": 2869.3331195372775,
        "Height": 712.291413690596,
        "FontSize": 36.0,
        "InitialTop": 470.00962403405481,
        "InitialHeight": 622.291413690596,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5c5ed474367e474a8e4e0229441c899f",
        "Title": "벽체 정보 불러오기 (레벨 별)",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "76dcd9b388a144f3952d11b974901f33",
          "153142078d91414f8ea2fa25a61dfa16",
          "83164c2d0f074ccea31fd1b329c6cd22",
          "2f7e65a832c5429f943c9a1160f2993d",
          "31d0fbfd35b4460eaf0f78bdaed769e8",
          "19db7c1519e648bb830c8d568a8e80bd",
          "132158b883754463892a950227203a9e",
          "914be168982d431d92f33f9a875b725a",
          "d3c05b59796543ffb7de46d2b0a2935c",
          "5c49b01d052b4f2a91d6508d175a48a6",
          "eda07881a6b841d495839dfa03ac75e6",
          "840c577fa2804246adc469b2e124e169",
          "752dbdb4876042cfb9959dc011fbd135",
          "f8c8e641399749e3a40f063ac58e3ab1",
          "ae1dc9c4033a4597922031ed66fd0b6d",
          "3550685a54ad41289a7ae2742c593c9a"
        ],
        "HasNestedGroups": false,
        "Left": 5482.7992615429366,
        "Top": 3352.6113682159371,
        "Width": 2862.9544404283033,
        "Height": 681.3514752648689,
        "FontSize": 36.0,
        "InitialTop": 3425.6113682159371,
        "InitialHeight": 609.3514752648689,
        "TextblockHeight": 63.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "670ad0b700ce45f594da2fd4a7a05ff7",
        "Title": "객체 우선순위 설정",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5384ff0501584f0f9fd2339b9a885f44",
          "a85cbc288afb4409863f9e2e1c399c45",
          "647f78aed64b4ad8a2b326b5320e37a7",
          "eddad5e65f40438480751ae61b0ee840",
          "e9cf56bff72f4972a3544159d295d294",
          "28de0935ae5e4a49a19994d009234961",
          "7784976fc077470aa8de8b71b97c34bc",
          "1a04d6baa6bb43f1a5a7664f35ba538f",
          "9fda205130e341a784dbd93a1bf8a6e0",
          "f6e1a49457754a18851d83af78164783",
          "5f9be9cf94ef4502bb29d860aa69c072",
          "0943b21ab0764673800c4bcf71e9ec36",
          "1e7da67cc4dc498fb4dcc1e6d630f1e5"
        ],
        "HasNestedGroups": false,
        "Left": 16773.717932118292,
        "Top": -2049.2297351914758,
        "Width": 2186.5666801276238,
        "Height": 817.99999999999591,
        "FontSize": 36.0,
        "InitialTop": -1976.2297351914758,
        "InitialHeight": 745.99999999999591,
        "TextblockHeight": 63.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "c386f55039434825bf2d3b7121fc9774",
        "Title": "객체 우선순위 설정",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "dbcf0f5129ad40cb85a4cdc13afb5b09",
          "037af4d52c01480997276ce863e7b53b",
          "2427d1d99d1d42e2b917a43a2a40180f",
          "b781104c9a1d41db8ecbabf3649e5b18",
          "c04d0e87ce1740d49fb6e8892a7b7ba2",
          "d5fef0cc89d94fa899b474ab4b0a1758",
          "82befbea3b7a46a99a187f21df4683e8",
          "b8900da4e1e44fdb858c55e14c064d8b",
          "40275b744e6041ab9ca92f9e9e4695c7",
          "9c6117ca51d442a8b1cd2fb5738bda34"
        ],
        "HasNestedGroups": false,
        "Left": 17654.459166514403,
        "Top": -145.73459074938023,
        "Width": 2249.2669366648624,
        "Height": 650.2927149697764,
        "FontSize": 36.0,
        "InitialTop": -72.734590749380232,
        "InitialHeight": 578.2927149697764,
        "TextblockHeight": 63.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "3d507194749549eb84b73513d0f22e04",
        "Title": "기둥 패밀리 선택",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d83febe4f2d34cd0ac2ac08b63083b3b"
        ],
        "HasNestedGroups": false,
        "Left": 4370.0986657213189,
        "Top": 1550.9174154791533,
        "Width": 403.0,
        "Height": 217.0,
        "FontSize": 36.0,
        "InitialTop": 1623.9174154791533,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "1897edf0c34a4bf383c065c9d0fc12e3",
        "Title": "Pedestal & 독립기초 모델링",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "67fdf2f32a9e4a6f9c7923812fad5ab9",
          "31f2e4542a81436eacd0f06b585d0e8e",
          "fb353887273e456bb05bbcf113920ed3",
          "3119e0e5f40d470080fed367e22fcb41",
          "10ace61d2c9e49c8a242fb77509281e1",
          "bbb453caa31b4791a734c81e08cdcea2",
          "3464c552e6bc4736b767c8932c417885",
          "c671106a09464d70aa90246a0b5824bc",
          "1a12616e7d394f82b62ba015817b8e2e",
          "7129e56cc32240e4b729e0d981615042",
          "47904117a1c84c379a624d14d2b8a3ae",
          "1333b269cc294b5dba323dfa8ad93936",
          "0d698200a81041e899fb75f5138adffb",
          "7bf74633386b464a9fca4a63052c1cf5"
        ],
        "HasNestedGroups": false,
        "Left": 3808.5741931526309,
        "Top": 583.99733115634228,
        "Width": 2951.3556783672357,
        "Height": 709.24838207602249,
        "FontSize": 36.0,
        "InitialTop": 656.99733115634228,
        "InitialHeight": 618.24838207602249,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "ae866a758e02473c91807830ffefcdd3",
        "Title": "독립기초 패밀리 선택",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9e781073830943beaebb5ee8440c4675"
        ],
        "HasNestedGroups": false,
        "Left": 2821.4145330174347,
        "Top": 1234.3014224447486,
        "Width": 756.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "InitialTop": 1307.3014224447486,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FF848484"
      },
      {
        "Id": "ab2a46addcbc438480c85a1b16b5fe40",
        "Title": "타이거더 Curve 작성",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7aa670deaf0e48e29e70ecef5e9a34c4",
          "f6a8c9dd90da4084b4b719408ab5d811",
          "f4dbe9209b8943e4af93d75da8539058",
          "9b7b83f566db4d05be859e2f034c4b17",
          "e1cf44c374cb4d129e0adf9b9f6bdb68",
          "b60fe23a7ea648ab9bf04f6e1b53f7e0",
          "7d3f2e481a98475698b39268748063d8",
          "8871b6c475e047edbfb4cdae7608f655",
          "d50be92d12f64eb8a365b1fce01e0c1a",
          "d039511114374095b9eea719e5165404",
          "fbdbefee526248a4a6145948364de351",
          "7b9bfcc2c82e42b7be3bfbfbc1c83cfd",
          "04d6d8697cb54fb28cfb593f828ef6c8",
          "a11582f0bcee4871b8ac22440451548e",
          "846a4ed69ae7486c8cd1abb9c1a446df",
          "6be47a8aa02a41088bcd5b9f6a962587",
          "def816e0b48f428eb6ccf3a2b0790750",
          "abe825cf7ed04782b9fb0c521f0b0314"
        ],
        "HasNestedGroups": false,
        "Left": 2601.9389819340295,
        "Top": 2344.317866593321,
        "Width": 2823.0177666102236,
        "Height": 920.73320677866877,
        "FontSize": 36.0,
        "InitialTop": 2417.317866593321,
        "InitialHeight": 818.73320677866877,
        "TextblockHeight": 63.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "36d97a328afe4ae59f0efc366fc29e7e",
        "Title": "타이거더 모델링",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8760586d830c489a851f0fcc1e0dc4d2",
          "938c1803b86a47108aeaf026707a6763",
          "f3980554b30d4d32b689ab29a818c508",
          "97b1d5393fb64e59afbd3b6ef4b76dea",
          "f9fb66cc1d67457ab81c5290f63b8f48"
        ],
        "HasNestedGroups": false,
        "Left": 6170.4477149937975,
        "Top": 1725.4732349930771,
        "Width": 2135.6269657325192,
        "Height": 410.76671813975213,
        "FontSize": 36.0,
        "InitialTop": 1798.4732349930771,
        "InitialHeight": 273.7667181397519,
        "TextblockHeight": 63.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "a73131c00cdb467f87f2feea32c4b8ab",
        "Title": "페데스탈 & 타이거더 형상 결합",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1436750309af4a9aaa80b41fc5d589a1",
          "7d003cbb6e8d4a63b916db38561bc8fe",
          "216e6aedb2b240ff9f3c5367f5ef6fd1",
          "db50459804c5481f86a2fb22671d7d21",
          "22bf2334c96d4c168e5b4c11b0e0daf5"
        ],
        "HasNestedGroups": false,
        "Left": 9316.0504786987731,
        "Top": 904.16021014154012,
        "Width": 1586.9670815220888,
        "Height": 447.93436997499066,
        "FontSize": 36.0,
        "InitialTop": 977.16021014154012,
        "InitialHeight": 375.93436997499066,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7748ca918e9f4c25aad17de46f708ba9",
        "Title": "TG 패밀리 선택",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "33b419e9a8b44f89b31274ad2b101314"
        ],
        "HasNestedGroups": false,
        "Left": 6602.737408652114,
        "Top": 2139.8128224682719,
        "Width": 337.0,
        "Height": 226.0,
        "FontSize": 36.0,
        "InitialTop": 2221.8128224682719,
        "InitialHeight": 145.0,
        "TextblockHeight": 72.0,
        "Background": "#FF848484"
      },
      {
        "Id": "454a4881830f47db9101372eaa0be8b7",
        "Title": "기둥 오프셋값 조정",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "57b9526830d640c2ab96d94620868f55",
          "db1b9c64b28d461498f8d4a104eb5c63",
          "dc7bb29d26d6473a916696fe3e594adf",
          "558e6ec44cea43b0bb33a8dfc2792369",
          "4ae9066ef8fa4988865f2ff514eda7df"
        ],
        "HasNestedGroups": false,
        "Left": 6968.4673745714772,
        "Top": -101.42194310246975,
        "Width": 969.24975269502011,
        "Height": 538.23068847241609,
        "FontSize": 36.0,
        "InitialTop": -28.421943102469754,
        "InitialHeight": 466.23068847241609,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "364dcca248e0435a98759274edb3089d",
        "Title": "Floor 레벨 조정",
        "DescriptionText": "<그룹 설명을 수정하려면 여기를 두 번 클릭하십시오.>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "08d126ca56064fe7901e04b537740cb4",
          "ae635f826ddb42c082ea4962a2d3b09b",
          "91e29cc146694b0892f3bb125fb72902"
        ],
        "HasNestedGroups": false,
        "Left": 15690.862983825575,
        "Top": -782.10392166859037,
        "Width": 978.99999999999818,
        "Height": 474.0,
        "FontSize": 36.0,
        "InitialTop": -709.10392166859037,
        "InitialHeight": 402.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "4669f511a0644c1084fd9530d41b47c7",
        "Title": "floor - beam 결합순서",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c05be71868d442f19729c2301e8efff1",
          "a06c39ad2a564ee3852846e73718d3cd",
          "dd4fda7f838c4b54a0ce67bed68e3d64",
          "f732b20ceed94078afbcff513afdbf58",
          "fd586c31c6124e7eabb6f984e1f92e30",
          "79f4d179d65d445eb0c771f72c201833",
          "be50061c54c54b62b7b50cdfc0d86bdd"
        ],
        "HasNestedGroups": false,
        "Left": 17560.229784562747,
        "Top": 1676.7379859388673,
        "Width": 1771.0927641352318,
        "Height": 553.72671902714433,
        "FontSize": 36.0,
        "InitialTop": 1749.7379859388673,
        "InitialHeight": 451.72671902714433,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "664c8f5da8c2466483546fe8293f398d",
        "Title": "column - roof 결합순서",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b7e815d1d6d3434ab9aa638f6f8376c8",
          "a244e31ac5064a3291ce1a64ff934d04",
          "02ba29cf36274d8d8bb02973aef063bb",
          "876011b0eb764496a6bf663ea00facfd",
          "de4e6ba4e85c48e785eaa6280234a77e",
          "b1626a794d9f4beaafaf1199aa7dd027"
        ],
        "HasNestedGroups": false,
        "Left": 17527.711565206089,
        "Top": 574.23915688151476,
        "Width": 1658.3833191480735,
        "Height": 397.32950078955048,
        "FontSize": 36.0,
        "InitialTop": 647.23915688151476,
        "InitialHeight": 300.79041577234455,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ae1dc9c4033a4597922031ed66fd0b6d",
        "Title": "레벨 별 모든 벽 모델",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 8148.9716939068539,
        "Top": 3433.6113682159371,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3550685a54ad41289a7ae2742c593c9a",
        "Title": "루프층 제외한 벽 모델",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 8164.3070601819063,
        "Top": 3788.9406356658324,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "302ca91de2d54cdcb05e4927728c0bc2",
        "Title": "바닥 및 지붕 모델링",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 9298.0760362777364,
        "Top": -1124.0101691159753,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -384.43484183463181,
    "Y": 52.466281411720388,
    "Zoom": 0.279097162797257
  }
}