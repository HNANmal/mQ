{
  "Uuid": "5632bdbc-ce07-4385-aa0a-3e1065860c21",
  "IsCustomNode": false,
  "Description": "",
  "Name": "ExcelToRevitSchedule(Finish Style)_rA",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright(c) 2015, Konrad Sobon\n# @arch_laboratory, http://archi-lab.net\n\nimport clr\nimport sys\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\nfrom System.Collections.Generic import *\n\n# Import ToDSType(bool) extension method\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\nsys.path.append(pyt_path)\nimport re\n\n#The inputs to this node will be stored as a list in the IN variable.\ndataEnteringNode = IN\n\nkeySchedule = UnwrapElement(IN[0])\ndata = IN[1]\ninputParams = IN[2]\nupper = IN[3]\n\n# \"Start\" the transaction\nTransactionManager.Instance.EnsureInTransaction(doc)\n\ntableData = keySchedule.GetTableData()\nsectionData = tableData.GetSectionData(SectionType.Body)\n\nkeyNames = []\nfor i in range(1,sectionData.NumberOfRows - 1,1):\n\tkeyNames.append(str(int(i)))\n\nallKeys = FilteredElementCollector(doc).WhereElementIsNotElementType()\nparams = [[] for i in range(len(keyNames))]\ntest = []\nfor key in allKeys:\n\ttry:\n\t\tif key.get_Parameter(BuiltInParameter.REF_TABLE_ELEM_NAME).AsString() in keyNames and key.OwnerViewId == keySchedule.Id:\n\t\t\tindexValue = keyNames.index(key.get_Parameter(BuiltInParameter.REF_TABLE_ELEM_NAME).AsString())\n\t\t\tfor i in range(0, len(inputParams),1):\n\t\t\t\tparams[indexValue].extend(key.GetParameters(str(inputParams[i])))\n\texcept:\n\t\tpass\n\nfor i, j in zip(params, data):\n\tfor param, value in zip(i,j):\n\t\tif isinstance(value, str):\n\t\t\t#valueDecoded = value.decode('string_escape')\n\t\t\tvalueDecoded = value.encode('utf-8').decode('unicode-escape')\n\t\telse:\n\t\t\tif value == None:\n\t\t\t\tvalueDecoded = \" \"\n\t\t\telse:\n\t\t\t\t#valueDecoded = str(value).decode('string_escape')\n\t\t\t\tvalueDecoded = str(value).encode('utf-8').decode('unicode-escape')\n\t\tif upper:\n\t\t\tvalueDecoded = valueDecoded.upper()\n\t\t\tparam.Set(valueDecoded)\n\t\telse:\n\t\t\tparam.Set(valueDecoded)\n\n\n# \"End\" the transaction\nTransactionManager.Instance.TransactionTaskDone()\n\n#Assign your output to the OUT variable\nOUT = keySchedule",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "e0ead9087d4a49c4951c05de78b1d8fb",
      "Inputs": [
        {
          "Id": "5d6f1f16cb3947dbbd8eb48b09978c2f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0f2138ca1f04069adc8287a014270bd",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0fa6866baaf4412492083877aaed2f13",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed2cba564fe8405282292e49c7b66322",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6cd92b1a6c754ff792580e28453e46c8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "_viewSchedule;",
      "Id": "3bb0931fdc7547f48a8ecf9ffb870546",
      "Inputs": [
        {
          "Id": "86495c260ea847f086fca3101291c342",
          "Name": "_viewSchedule",
          "Description": "_viewSchedule",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "302196043207457a81c063f174b73b2f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "_upperCase: bool = false;",
      "Id": "8e6630279c124d55b47dbab283ad116b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e305fa9dc524d3a9687f497a098e4cf",
          "Name": "",
          "Description": "_upperCase",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#Copyright(c) 2015, Konrad Sobon\n# @arch_laboratory, http://archi-lab.net\n\nimport clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n\nfrom System.Collections.Generic import *\n\n# Import ToDSType(bool) extension method\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\n\n#The inputs to this node will be stored as a list in the IN variable.\ndataEnteringNode = IN\n\nkeySchedule = UnwrapElement(IN[0])\ndata = IN[1]\ninputParams = IN[2]\n\n# \"Start\" the transaction\nTransactionManager.Instance.EnsureInTransaction(doc)\n\ntest = []\ncount = []\ncellParams = [[] for i in range(len(data))]\nif any(isinstance(item, list) for item in data):\n\t# process list of lists\n\tfor i in data:\n\t\tcount.append(len(i))\n\tcolCount = max(count)\n\tcolAvailable = len(keySchedule.Definition.GetSchedulableFields())\n\tif colCount > colAvailable:\n\t\tmessage = \"Please add/remove parameters to/from schedule so that they match longest data set.\"\n\telse:\n\t\ttableData = keySchedule.GetTableData()\n\t\tsectionData = tableData.GetSectionData(SectionType.Body)\n\t\tif sectionData.NumberOfRows - 2 <= len(data):\n\t\t\t# schedule by default will have 2 rows (A, B, C and Header Names)\n\t\t\trowsToAdd = (len(data) - sectionData.NumberOfRows) + 2\n\t\t\tfor i in range(0, rowsToAdd, 1):\n\t\t\t\tsectionData.InsertRow(0)\n\t\telse:\n\t\t\t# schedule when updating might already have too many rows \n\t\t\trowsToDelete = sectionData.NumberOfRows - 2 - len(data)\n\t\t\tfor i in reversed(range(sectionData.NumberOfRows - rowsToDelete, sectionData.NumberOfRows, 1)):\n\t\t\t\tsectionData.RemoveRow(i)\n\n# \"End\" the transaction\nTransactionManager.Instance.TransactionTaskDone()\n\n#Assign your output to the OUT variable\nOUT = keySchedule",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "329143ff2231436b995e714d39415119",
      "Inputs": [
        {
          "Id": "b1533e000f6b48fb8c719cbd69416053",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27b644116ae24946b1a7b9b72076e700",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c61726bd33344c590ef2d84aae21646",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7764680bb7634363a5e7e3a826bc9c44",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "_viewSchedule: var[]..[];",
      "Id": "5c8ce586dc8a49708213e9ebcabf48b1",
      "Inputs": [
        {
          "Id": "68f4cd2f0b9544c4b6e23103f11dff38",
          "Name": "_viewSchedule",
          "Description": "_viewSchedule",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80523e02e15542c7a8c6f8bbdbdb7e89",
          "Name": "",
          "Description": "_viewSchedule",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "_parameterNames: var[]..[];",
      "Id": "0bd166134ab645ff89ad00d64e93164d",
      "Inputs": [
        {
          "Id": "fe647f73af594a6296f673479d45bbba",
          "Name": "_parameterNames",
          "Description": "_parameterNames",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9267cb520e4424ab4e46a0d55164091",
          "Name": "",
          "Description": "_parameterNames",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "_data: var[]..[];",
      "Id": "bac19085d0ff4cf3b0235e559a4744a7",
      "Inputs": [
        {
          "Id": "8effb300b6ea44c886a3d2eeecd59a7c",
          "Name": "_data",
          "Description": "_data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "736c92e0a29b430cb6bea598944add62",
          "Name": "",
          "Description": "_data",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 505,
      "SelectedString": "OST_Schedules",
      "NodeType": "ExtensionNode",
      "Id": "2cb8366bc3954a00b8320ab6e7b5fb49",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "baa63f1ff2804ea288b570b5ebbcb9b7",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "a0f98937e2e24e8daa06252d62abb091",
      "Inputs": [
        {
          "Id": "3f1cad2d1d354d0fac4d1047b19875be",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91ae16e5c5a9496a96c641646246cb59",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "54a087654f7e4f69870325c09cd2d3b7",
      "Inputs": [
        {
          "Id": "6781894e0e7b46ef9ac129010794f196",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1dca721418b94beca017f67085deab54",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1386b734746249e6906fb09480dcdca2",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e0c4a2617ee424393fa229e07998879",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "071be0b4014c440991b04e749417b12d",
      "Inputs": [
        {
          "Id": "fc586b498dcb4bc0bcd34ec1695ec61f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "36beffa2c82143f391c8e97b18fb4ee0",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nsch_names_list = IN[0]\r\n# Place your code below this line\r\ntgtList = [\"Wall Finish Style\", \"Floor Finish Style\", \"Base Finish Style\", \"Ceiling Finish Style\"]\r\n\r\ndef isInStr(inStr,tgtList):\r\n    tmp = []\r\n    for tgt in tgtList:\r\n        if tgt in inStr:\r\n            tmp.append(True)\r\n        else:\r\n            tmp.append(False)\r\n    return any(tmp)\r\n        \r\n\r\nres = list(map(lambda x: isInStr(x, tgtList) , sch_names_list))\r\n    \r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "945f4de7301c4395a1f6270ba23163b8",
      "Inputs": [
        {
          "Id": "26c7061d16604db1807e164402489ed1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72765b9347434c62892ef495a1fc2c64",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[1];",
      "Id": "ce44aa1bae13450eb5067cd20d443816",
      "Inputs": [
        {
          "Id": "2ff6045617864620910edb61bdb9336c",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "088d14cc58594464a62f94350ac466c4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Views.ScheduleView.Fields",
      "Id": "54354517e23042e0ab5dce4d4d7e50cb",
      "Inputs": [
        {
          "Id": "50c4bedd17384c34a6dc63559d456f50",
          "Name": "scheduleView",
          "Description": "Revit.Elements.Views.ScheduleView",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb11c9b204614cfea2a901d719047c4e",
          "Name": "ScheduleField[]",
          "Description": "ScheduleField[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Schedule Fields.\n\nScheduleView.Fields: ScheduleField[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "0848f41b17f94f6e97f501e47e0a7b5c",
      "Inputs": [
        {
          "Id": "d10b21192f2249228a58192388fefa53",
          "Name": "file",
          "Description": "File representing the Excel workbook\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "943300f29d094d7593ab5f53be68390f",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce104134053246329b80fad0051e77f1",
          "Name": "readAsStrings",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eaf13f4b8a18488c84a08cfdd074359e",
          "Name": "showExcel",
          "Description": "Toggle to show excel's main window\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea818e6146a1418b8d4bb5c2f5ce2ff8",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\mk\\mQ\\hecBidding\\2023\\01 입찰 Tool\\플랜트건축팀_BIM_팀 표준 Building List_박기범_2023.10.19.xlsx",
      "InputValue": ".\\플랜트건축팀_BIM_팀 표준 Building List_박기범_2023.10.19.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "7b92e55138f3489ca52142fcca7f7512",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "818a6f8f2c164d3996720baffca5af82",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f84d9778f3254f23ae93ec758002d1e1",
      "Inputs": [
        {
          "Id": "4d160f3cbd334f4bae4e976b7474afc6",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c042e63ff41544b18ba680d77993fcff",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"팀 표준 Finish Style No 체계\";",
      "Id": "e228c77fcb0945b9ba0086dd9bb5e61c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a07a6a77102749f4affe61d3c3483fd8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "a8f7622ce2014a429a795d51a87760da",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d14489675e024f95a7046bcb5aa4f952",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\n\r\nimport re\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nwholeDatas = IN[0]\r\ndataStartRowIdx = IN[2]\r\nsheet = wholeDatas[dataStartRowIdx:]\r\nrow_sep_criteria = IN[1]\r\nheaders = IN[3]\r\n\r\n# Place your code below this line\r\n\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\n\r\ndef find_IsIn_list(target, lst):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in lst\r\n        return res\r\n\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n\r\ndef find_range_by_columnItem_Eq(db, col_idx, row_sep_criteria):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsIn_list(x[1], row_sep_criteria), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n    \r\ndef find_headersAtSheet(sheet):\r\n    headers_sheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(sheet[1])))\r\n    \r\n    return dict(headers_sheet)\r\n\r\ndef find_rangesAtSheet(sheet, hdrs_withIdx, trgt_hdr, trgt_str):\r\n    return find_range_by_columnItem(sheet, hdrs_withIdx[trgt_hdr], trgt_str)\r\n\r\ndef find_rangesAtSheet_eq(sheet, hdrs_withIdx, trgt_hdr, row_sep_criteria):\r\n    res = find_range_by_columnItem_Eq(sheet, hdrs_withIdx[trgt_hdr], row_sep_criteria)\r\n    \r\n    return res\r\n\r\ndef get_DataOnRangesAtSheet(sheet, row_sep_criteria):\r\n    hdrs_withIdx = find_headersAtSheet(sheet)\r\n    rangesATSheet = find_rangesAtSheet_eq(sheet, hdrs_withIdx, \"Floor\", row_sep_criteria)\r\n    title_idx = map(lambda x: x[0], rangesATSheet.values())\r\n    catType_colDatas = list(map(lambda x: x[hdrs_withIdx[\"Floor\"]], sheet))\r\n    catTypes = list(map(lambda x: catType_colDatas[x], title_idx))\r\n    rgs_v = list(map(lambda x: x[1], rangesATSheet.values()))\r\n    rgs_k = list(map(lambda x: x, rangesATSheet.keys()))\r\n    \r\n    hdrs_v = list(hdrs_withIdx.values())\r\n    hdrs_k = list(hdrs_withIdx.keys())\r\n    eff_hdrs_v = hdrs_v[2:]\r\n    eff_hdrs_k = hdrs_k[2:]\r\n    \r\n    datas_allCatType = list(map(lambda x: sheet[x[0]:x[1]], rgs_v))\r\n    \r\n    def setDict_OnEachCatType(data_catType):\r\n        res = {}\r\n    \r\n        ## 문자 1~2자리 + 숫자 2자리\r\n        p = re.compile('[A-Z]{1,2}\\d{2}')\r\n        \r\n        \r\n        data_catType_noneless = list(filter(lambda x: x[hdrs_withIdx[\"Finish Style Number\"]] != None, data_catType))\r\n        data_catType_onlyStyleNo = list(filter(lambda x: p.match(str(x[hdrs_withIdx[\"Finish Style Number\"]])), data_catType))\r\n        catTypeName = list(map(lambda x: x[hdrs_withIdx[\"Finish Style Number\"]], data_catType_onlyStyleNo))\r\n        ### WM row 별 header명 과 짝짓기\r\n        data_withHdrsIdx = list(map(lambda y: list(map(lambda x: y[x], eff_hdrs_v)), data_catType_onlyStyleNo))\r\n        dict_ = list(map(lambda x: dict(zip(eff_hdrs_k, x)), data_withHdrsIdx))\r\n        dicts_final = list(map(lambda y: dict(filter(lambda x: x[1]!=None, y.items())),dict_))\r\n        \r\n        \r\n        #for i,k in enumerate(catTypeName):\r\n        #    res[k] = dicts_noneless[i]\r\n        \r\n        return dict(zip(catTypeName,dicts_final))\r\n    \r\n    return dict(zip(row_sep_criteria, map(setDict_OnEachCatType, datas_allCatType)))\r\n\r\ndictsAIO = get_DataOnRangesAtSheet(sheet, row_sep_criteria)\r\n\r\n\r\n# Assign your output to the OUT variable.\r\n\r\nOUT = dictsAIO\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "b086e8d76b414c1caaf11d7580cb6b89",
      "Inputs": [
        {
          "Id": "654081bb7dee41f7b6aff6665968dce2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6cf900cd36649749ef01b41fbf39f81",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ad2cd7c45f149d5b90ae4b5a92a0066",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f6cca8dfca84197b8ecae891d34fd71",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a16d7d0e78c841f19bc6c29604601bbe",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Floor\", \"Skirting\", \"Wall\", \"Ceiling\"];\n2;\n[\n\"Finish Style Name(Key Name)\",\n\"Finish Style Number\",\n\"Base Material\",\n\"Finish 1(Work Master)\",\n\"Finish 2(Work Master)\",\n\"Finish 3(Work Master)\",\n\"Finish 4(Work Master)\",\n\"Remark\"\n];",
      "Id": "03967341f0cc4b7bbe7e0e359af81e06",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "791abcc63a50483e89057f8a6be645f8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe2483f9b17248f29bb864baaa97373a",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2fa103ac9d34c99817d990ebaefc6c9",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\n\r\nimport re\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nwholeDatas = IN[0]\r\ndataStartRowIdx = IN[2]\r\nsheet = wholeDatas[dataStartRowIdx:]\r\nrow_sep_criteria = IN[1]\r\nheaders = IN[3]\r\n\r\n# Place your code below this line\r\n\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\n\r\ndef find_IsIn_list(target, lst):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in lst\r\n        return res\r\n\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n\r\ndef find_range_by_columnItem_Eq(db, col_idx, row_sep_criteria):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsIn_list(x[1], row_sep_criteria), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n    \r\ndef find_headersAtSheet(sheet):\r\n    headers_sheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(sheet[1])))\r\n    \r\n    return dict(headers_sheet)\r\n\r\ndef find_rangesAtSheet(sheet, hdrs_withIdx, trgt_hdr, trgt_str):\r\n    return find_range_by_columnItem(sheet, hdrs_withIdx[trgt_hdr], trgt_str)\r\n\r\ndef find_rangesAtSheet_eq(sheet, hdrs_withIdx, trgt_hdr, row_sep_criteria):\r\n    res = find_range_by_columnItem_Eq(sheet, hdrs_withIdx[trgt_hdr], row_sep_criteria)\r\n    \r\n    return res\r\n\r\ndef get_DataOnRangesAtSheet(sheet, row_sep_criteria):\r\n    hdrs_withIdx = find_headersAtSheet(sheet)\r\n    rangesATSheet = find_rangesAtSheet_eq(sheet, hdrs_withIdx, \"Floor\", row_sep_criteria)\r\n    title_idx = map(lambda x: x[0], rangesATSheet.values())\r\n    catType_colDatas = list(map(lambda x: x[hdrs_withIdx[\"Floor\"]], sheet))\r\n    catTypes = list(map(lambda x: catType_colDatas[x], title_idx))\r\n    rgs_v = list(map(lambda x: x[1], rangesATSheet.values()))\r\n    rgs_k = list(map(lambda x: x, rangesATSheet.keys()))\r\n    \r\n    hdrs_v = list(hdrs_withIdx.values())\r\n    hdrs_k = list(hdrs_withIdx.keys())\r\n    eff_hdrs_v = hdrs_v[2:]\r\n    eff_hdrs_k = hdrs_k[2:]\r\n    \r\n    datas_allCatType = list(map(lambda x: sheet[x[0]:x[1]], rgs_v))\r\n    \r\n    def setDict_OnEachCatType(data_catType):\r\n        res = {}\r\n    \r\n        ## 문자 1~2자리 + 숫자 2자리\r\n        p = re.compile('[A-Z]{1,2}\\d{2}')\r\n        \r\n        \r\n        data_catType_noneless = list(filter(lambda x: x[hdrs_withIdx[\"Finish Style Number\"]] != None, data_catType))\r\n        data_catType_onlyStyleNo = list(filter(lambda x: p.match(str(x[hdrs_withIdx[\"Finish Style Number\"]])), data_catType))\r\n        catTypeName = list(map(lambda x: x[hdrs_withIdx[\"Finish Style Number\"]], data_catType_onlyStyleNo))\r\n        ### WM row 별 header명 과 짝짓기\r\n        data_withHdrsIdx = list(map(lambda y: list(map(lambda x: y[x], eff_hdrs_v)), data_catType_onlyStyleNo))\r\n        dict_ = list(map(lambda x: dict(zip(eff_hdrs_k, x)), data_withHdrsIdx))\r\n        dicts_final = list(map(lambda y: dict(filter(lambda x: x[1]!=None, y.items())),dict_))\r\n        \r\n        \r\n        #for i,k in enumerate(catTypeName):\r\n        #    res[k] = dicts_noneless[i]\r\n        \r\n        return dict(zip(catTypeName,dicts_final))\r\n    \r\n    return dict(zip(row_sep_criteria, map(setDict_OnEachCatType, datas_allCatType)))\r\n\r\ndictsAIO = get_DataOnRangesAtSheet(sheet, row_sep_criteria)\r\n\r\ndef fill_missing(oneCatDicts):\r\n    res = {}\r\n    \r\n    #items_ = oneCatDicts.items()\r\n    for k,v in oneCatDicts.items():\r\n        v[\"Finish Style Number\"] = k\r\n        \r\n        for i in headers:\r\n            if i not in v.keys():\r\n                v[i] = \"\"\r\n    \r\n    return oneCatDicts\r\n# Assign your output to the OUT variable.\r\n\r\nOUT = dict(zip(dictsAIO.keys(),map(fill_missing, dictsAIO.values())))\r\n\r\n",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "398dc926cbcd4741ad46de9c290528f6",
      "Inputs": [
        {
          "Id": "f1ffb368896b4e4aba8c2f696211a543",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "542eb09efe434f7b8cb373dfc0b974e7",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0c125f37eff4f228b8dfb83bcb2f70b",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5cfec5f13a6745cb9f6a7751d3e735a9",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "043ef96c3ce14d62b119b45c6842c4ae",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "51647d04f52c43d18787ac7d15e4e399",
      "Inputs": [
        {
          "Id": "b60b25513b094c5ca4b86b028e7bfebd",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14e4f034feea4be4af3004ea088880e8",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4a9fbf85dd5644c0a59adcdb327937e3",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];\ni[1];\ni[2];\ni[3];",
      "Id": "8a9691477a60473fa7914405999f407c",
      "Inputs": [
        {
          "Id": "1a9cef5cb71744b2a15d077741e03517",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "808cb92e1a9443c5814577221e3d2523",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e042146fbc9481590e39faacbf9b373",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6629a27becd9423781cca8e12e4d4c87",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6273f5198994911863755bac346ee1d",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Keys",
      "Id": "e338db54762d45f69f57e914469b8473",
      "Inputs": [
        {
          "Id": "bf5ecf8a2111486b98559921499a54ba",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b12e7317fe048e0b89648fca041c9e5",
          "Name": "keys",
          "Description": "Keys of the Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the keys in a Dictionary.\n\nDictionary.Keys: string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "0933de45536242a08144eb92cd558dd6",
      "Inputs": [
        {
          "Id": "fe3405e1c331442680fd9af114be653c",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c95e0dcf8574217a645493f2f0899b3",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "fcf28f9a72954b0a9df5dbfb7cb52d97",
      "Inputs": [
        {
          "Id": "c1899f2d3ecd413995f3bcff0664ee53",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c3cea78a19e4079949c16fa3cb1deb4",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d04521f6f98e45c39cfd337c1607491d",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "63b5e279417a4bc99a46cec32781e187",
      "Inputs": [
        {
          "Id": "535c25207f1048adb69e932092505d24",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "94d9a480c295475eb03a61eeff34a8b0",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df937d4be48647a2ab795227125d5d8d",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[2];",
      "Id": "fcd446a859c54ce4a490c083f17d9099",
      "Inputs": [
        {
          "Id": "b7e2476a6a0d4e52b3ab8448776262c9",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a15573aca774fa19e853b2615a77fe0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "0325dab7336a43f3bc8bd8af19c6bee8",
      "Inputs": [
        {
          "Id": "9d8f20d7cba64c54bb79c33db826269a",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35776af1ef804a8bb3927884bc2cd670",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[3];",
      "Id": "f4751f9c43c348a09dec4758e6090253",
      "Inputs": [
        {
          "Id": "7c401ae94efb46f5bfb1dcc0d9b2f914",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45421ec7c01945679c3c298468d836a8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;\nj;",
      "Id": "c64d131535d84a1dafde69e67d73e0c2",
      "Inputs": [
        {
          "Id": "4c8bec764def452aa69b772f65ea3aae",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2cfabec82f7847f19ac810496f3b48e6",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4faa18b1233e4c008e4d42996166eacc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e94ff85435f4364a04e865f13201acd",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "6ee2e89e1f594c479fcf8a5822348ae6",
      "Inputs": [
        {
          "Id": "13b5c34ff69d46c08f095b9cd207a6a4",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d00b96138374708ba622cf195298bc7",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1d2c7531871440abc5dacac58722fae",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74c5e58370c3472bad1386c7ce113e28",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5be380d700dc456bb39f63b99e236450",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "09cb6857dbf041689cc5701a93c554fb",
      "Inputs": [
        {
          "Id": "0c06f83add944ba3b745dfe51a197dee",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "05c835a7ac854a4eae4aeddd627e688f",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5608cb7a16e4f2b89711d5dfe395847",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "007dcb34a1d34d638f8938a9f8cd7469",
      "Inputs": [
        {
          "Id": "a1db28989ddc49b694e87bc8bca70bce",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7555e05dd1e84575a7f4fdace14fcc54",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee8b939d88854f3d9767cf8cc3043815",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.CustomSelection, CoreNodeModels",
      "SerializedItems": [
        {
          "Name": "Floor",
          "Item": "0"
        },
        {
          "Name": "Base",
          "Item": "1"
        },
        {
          "Name": "Wall",
          "Item": "2"
        },
        {
          "Name": "Ceiling",
          "Item": "3"
        }
      ],
      "SelectedIndex": 3,
      "SelectedString": "Ceiling",
      "NodeType": "ExtensionNode",
      "Id": "8c98f24029a4497aac14423d93e3fb15",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f53f9fb5fd2c4648a06c67e2ace1ba70",
          "Name": "Value",
          "Description": "The selected Value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A dropdown menu with customizable values."
    }
  ],
  "Connectors": [
    {
      "Start": "6cd92b1a6c754ff792580e28453e46c8",
      "End": "86495c260ea847f086fca3101291c342",
      "Id": "9fcbb0afaa0c47108931654dfe5ed49d",
      "IsHidden": "False"
    },
    {
      "Start": "5e305fa9dc524d3a9687f497a098e4cf",
      "End": "ed2cba564fe8405282292e49c7b66322",
      "Id": "b880533fde3b497d9c7ccdb53a82c4a6",
      "IsHidden": "False"
    },
    {
      "Start": "7764680bb7634363a5e7e3a826bc9c44",
      "End": "5d6f1f16cb3947dbbd8eb48b09978c2f",
      "Id": "bc51bbc820164b578f796d363b55c036",
      "IsHidden": "False"
    },
    {
      "Start": "80523e02e15542c7a8c6f8bbdbdb7e89",
      "End": "b1533e000f6b48fb8c719cbd69416053",
      "Id": "49eaf8240fa649f58c04fc997c4b345d",
      "IsHidden": "False"
    },
    {
      "Start": "b9267cb520e4424ab4e46a0d55164091",
      "End": "0fa6866baaf4412492083877aaed2f13",
      "Id": "6ddfe712fd8e4b83903c5c3980b82586",
      "IsHidden": "False"
    },
    {
      "Start": "b9267cb520e4424ab4e46a0d55164091",
      "End": "9c61726bd33344c590ef2d84aae21646",
      "Id": "0486967e10664427a0e05625f5af3b1f",
      "IsHidden": "False"
    },
    {
      "Start": "736c92e0a29b430cb6bea598944add62",
      "End": "b0f2138ca1f04069adc8287a014270bd",
      "Id": "1ec209ff46514a34851fd4731bc18c74",
      "IsHidden": "False"
    },
    {
      "Start": "736c92e0a29b430cb6bea598944add62",
      "End": "27b644116ae24946b1a7b9b72076e700",
      "Id": "fe0ba4092f9c4230bf82cc408649b459",
      "IsHidden": "False"
    },
    {
      "Start": "baa63f1ff2804ea288b570b5ebbcb9b7",
      "End": "3f1cad2d1d354d0fac4d1047b19875be",
      "Id": "a565b18a16a44d68a75a914e0568944c",
      "IsHidden": "False"
    },
    {
      "Start": "91ae16e5c5a9496a96c641646246cb59",
      "End": "6781894e0e7b46ef9ac129010794f196",
      "Id": "6e715791f9174e488550607afb11610e",
      "IsHidden": "False"
    },
    {
      "Start": "91ae16e5c5a9496a96c641646246cb59",
      "End": "fc586b498dcb4bc0bcd34ec1695ec61f",
      "Id": "8191ff728d77479b9d1fb0e2c655db78",
      "IsHidden": "False"
    },
    {
      "Start": "1386b734746249e6906fb09480dcdca2",
      "End": "2ff6045617864620910edb61bdb9336c",
      "Id": "6a27ec2b77f242c1b0dd8932789c30cd",
      "IsHidden": "False"
    },
    {
      "Start": "1386b734746249e6906fb09480dcdca2",
      "End": "b7e2476a6a0d4e52b3ab8448776262c9",
      "Id": "ff4251cc1a104ca7bdcc994091e68fb6",
      "IsHidden": "False"
    },
    {
      "Start": "1386b734746249e6906fb09480dcdca2",
      "End": "7c401ae94efb46f5bfb1dcc0d9b2f914",
      "Id": "39ae08a8d02542a09577200f568a0a06",
      "IsHidden": "False"
    },
    {
      "Start": "1386b734746249e6906fb09480dcdca2",
      "End": "9d8f20d7cba64c54bb79c33db826269a",
      "Id": "b0e8c5d39d5e476aa8fb75d2126f9750",
      "IsHidden": "False"
    },
    {
      "Start": "36beffa2c82143f391c8e97b18fb4ee0",
      "End": "26c7061d16604db1807e164402489ed1",
      "Id": "750ab08f520c40f896c41625a5415f3e",
      "IsHidden": "False"
    },
    {
      "Start": "72765b9347434c62892ef495a1fc2c64",
      "End": "1dca721418b94beca017f67085deab54",
      "Id": "5cbd1552de864ee6b9511f073a6d9374",
      "IsHidden": "False"
    },
    {
      "Start": "088d14cc58594464a62f94350ac466c4",
      "End": "13b5c34ff69d46c08f095b9cd207a6a4",
      "Id": "95c9183f75854cb28db35e12cab74fa6",
      "IsHidden": "False"
    },
    {
      "Start": "cb11c9b204614cfea2a901d719047c4e",
      "End": "fe647f73af594a6296f673479d45bbba",
      "Id": "53ceb629e7ed401abf4d5b7219e9f47d",
      "IsHidden": "False"
    },
    {
      "Start": "ea818e6146a1418b8d4bb5c2f5ce2ff8",
      "End": "654081bb7dee41f7b6aff6665968dce2",
      "Id": "3e77b695103841b4ba597b96cba6aadb",
      "IsHidden": "False"
    },
    {
      "Start": "ea818e6146a1418b8d4bb5c2f5ce2ff8",
      "End": "f1ffb368896b4e4aba8c2f696211a543",
      "Id": "646e22a3c6d94c458081cd4612999bce",
      "IsHidden": "False"
    },
    {
      "Start": "818a6f8f2c164d3996720baffca5af82",
      "End": "4d160f3cbd334f4bae4e976b7474afc6",
      "Id": "fa612eafb5bd4314bc3543aae7294b9d",
      "IsHidden": "False"
    },
    {
      "Start": "c042e63ff41544b18ba680d77993fcff",
      "End": "d10b21192f2249228a58192388fefa53",
      "Id": "88ca1da460fb485da9cb9074997e0cbe",
      "IsHidden": "False"
    },
    {
      "Start": "a07a6a77102749f4affe61d3c3483fd8",
      "End": "943300f29d094d7593ab5f53be68390f",
      "Id": "65a9b4fc43c945539e9856f28bb11459",
      "IsHidden": "False"
    },
    {
      "Start": "d14489675e024f95a7046bcb5aa4f952",
      "End": "eaf13f4b8a18488c84a08cfdd074359e",
      "Id": "d3c70c488e6b45c7999090ad9e6a70c5",
      "IsHidden": "False"
    },
    {
      "Start": "791abcc63a50483e89057f8a6be645f8",
      "End": "a6cf900cd36649749ef01b41fbf39f81",
      "Id": "135e48ea2aab44e5bed8186870bbee57",
      "IsHidden": "False"
    },
    {
      "Start": "791abcc63a50483e89057f8a6be645f8",
      "End": "542eb09efe434f7b8cb373dfc0b974e7",
      "Id": "15c609f93c8d43caa0223f1c2ccb6342",
      "IsHidden": "False"
    },
    {
      "Start": "791abcc63a50483e89057f8a6be645f8",
      "End": "14e4f034feea4be4af3004ea088880e8",
      "Id": "e5f5166960b04624ad23658fa92a481c",
      "IsHidden": "False"
    },
    {
      "Start": "fe2483f9b17248f29bb864baaa97373a",
      "End": "6ad2cd7c45f149d5b90ae4b5a92a0066",
      "Id": "13bc61b71b2d48179d307088ac4cd4ac",
      "IsHidden": "False"
    },
    {
      "Start": "fe2483f9b17248f29bb864baaa97373a",
      "End": "e0c125f37eff4f228b8dfb83bcb2f70b",
      "Id": "50bb64085a8f4672a38f3b105146b16b",
      "IsHidden": "False"
    },
    {
      "Start": "f2fa103ac9d34c99817d990ebaefc6c9",
      "End": "9f6cca8dfca84197b8ecae891d34fd71",
      "Id": "ae5f3d66e969491f870ecd09261360a9",
      "IsHidden": "False"
    },
    {
      "Start": "f2fa103ac9d34c99817d990ebaefc6c9",
      "End": "5cfec5f13a6745cb9f6a7751d3e735a9",
      "Id": "9ec3e67b86f243c3b64a9342f51f23d2",
      "IsHidden": "False"
    },
    {
      "Start": "f2fa103ac9d34c99817d990ebaefc6c9",
      "End": "2cfabec82f7847f19ac810496f3b48e6",
      "Id": "4cd9a138f3ce4f768df15ea282f5ddc2",
      "IsHidden": "False"
    },
    {
      "Start": "043ef96c3ce14d62b119b45c6842c4ae",
      "End": "b60b25513b094c5ca4b86b028e7bfebd",
      "Id": "0e82538c32174f56a3b87896522208b1",
      "IsHidden": "False"
    },
    {
      "Start": "4a9fbf85dd5644c0a59adcdb327937e3",
      "End": "1a9cef5cb71744b2a15d077741e03517",
      "Id": "affd4f7a94c14454b5dfff143af90430",
      "IsHidden": "False"
    },
    {
      "Start": "4a9fbf85dd5644c0a59adcdb327937e3",
      "End": "0c06f83add944ba3b745dfe51a197dee",
      "Id": "4cc5504ef3314e958ddf914f9405849c",
      "IsHidden": "False"
    },
    {
      "Start": "5b12e7317fe048e0b89648fca041c9e5",
      "End": "fe3405e1c331442680fd9af114be653c",
      "Id": "abdc71834f8d4f58ae7e556be211b8f4",
      "IsHidden": "False"
    },
    {
      "Start": "3c95e0dcf8574217a645493f2f0899b3",
      "End": "5c3cea78a19e4079949c16fa3cb1deb4",
      "Id": "e9f0425897494b5f9c21f2c8fafdcefc",
      "IsHidden": "False"
    },
    {
      "Start": "d04521f6f98e45c39cfd337c1607491d",
      "End": "535c25207f1048adb69e932092505d24",
      "Id": "33e5588f372e43b7a865e28719cd547d",
      "IsHidden": "False"
    },
    {
      "Start": "df937d4be48647a2ab795227125d5d8d",
      "End": "8effb300b6ea44c886a3d2eeecd59a7c",
      "Id": "0e90343183084ff298157a7f0b2bbf70",
      "IsHidden": "False"
    },
    {
      "Start": "7a15573aca774fa19e853b2615a77fe0",
      "End": "1d00b96138374708ba622cf195298bc7",
      "Id": "97f4a99fef31415cba71bb9123dc8ffa",
      "IsHidden": "False"
    },
    {
      "Start": "35776af1ef804a8bb3927884bc2cd670",
      "End": "c1d2c7531871440abc5dacac58722fae",
      "Id": "56bc4c992ca24e1b95931fbe12a4732c",
      "IsHidden": "False"
    },
    {
      "Start": "45421ec7c01945679c3c298468d836a8",
      "End": "74c5e58370c3472bad1386c7ce113e28",
      "Id": "8357de1b08a64458a45d78666f550805",
      "IsHidden": "False"
    },
    {
      "Start": "4faa18b1233e4c008e4d42996166eacc",
      "End": "bf5ecf8a2111486b98559921499a54ba",
      "Id": "f7283e363bf14f6a9dbc066f335574d9",
      "IsHidden": "False"
    },
    {
      "Start": "4faa18b1233e4c008e4d42996166eacc",
      "End": "c1899f2d3ecd413995f3bcff0664ee53",
      "Id": "00a81b512e764eb5a7ece4e0f2977f85",
      "IsHidden": "False"
    },
    {
      "Start": "3e94ff85435f4364a04e865f13201acd",
      "End": "94d9a480c295475eb03a61eeff34a8b0",
      "Id": "64950207a7c144449eec6e33df45e8a5",
      "IsHidden": "False"
    },
    {
      "Start": "5be380d700dc456bb39f63b99e236450",
      "End": "a1db28989ddc49b694e87bc8bca70bce",
      "Id": "a633d66a3410421da64adb366330526a",
      "IsHidden": "False"
    },
    {
      "Start": "b5608cb7a16e4f2b89711d5dfe395847",
      "End": "4c8bec764def452aa69b772f65ea3aae",
      "Id": "d4a3cf738e59495db884283754fc8c9c",
      "IsHidden": "False"
    },
    {
      "Start": "ee8b939d88854f3d9767cf8cc3043815",
      "End": "50c4bedd17384c34a6dc63559d456f50",
      "Id": "4360344abbe34ac8ad4be2590a40a268",
      "IsHidden": "False"
    },
    {
      "Start": "ee8b939d88854f3d9767cf8cc3043815",
      "End": "68f4cd2f0b9544c4b6e23103f11dff38",
      "Id": "6db94b6fcda3491ca902815bf0098db8",
      "IsHidden": "False"
    },
    {
      "Start": "f53f9fb5fd2c4648a06c67e2ace1ba70",
      "End": "05c835a7ac854a4eae4aeddd627e688f",
      "Id": "35a8f516b7c747829d19f8b0e678503f",
      "IsHidden": "False"
    },
    {
      "Start": "f53f9fb5fd2c4648a06c67e2ace1ba70",
      "End": "7555e05dd1e84575a7f4fdace14fcc54",
      "Id": "4642efb029884144b476844783db36ab",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "플랜트건축팀_BIM_팀 표준 Building List_박기범_2023.10.19.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "7b92e55138f3489ca52142fcca7f7512"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "e0ead9087d4a49c4951c05de78b1d8fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4701.0776923526355,
        "Y": 800.28326262923906
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3bb0931fdc7547f48a8ecf9ffb870546",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4975.0776923526364,
        "Y": 800.28326262923929
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8e6630279c124d55b47dbab283ad116b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3878.5917852870493,
        "Y": 1125.8765863630235
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "329143ff2231436b995e714d39415119",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4320.0776923526355,
        "Y": 745.28326262923929
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5c8ce586dc8a49708213e9ebcabf48b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3830.2084886009748,
        "Y": 650.28326262923929
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0bd166134ab645ff89ad00d64e93164d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3775.9157233307733,
        "Y": 957.64207545639238
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "bac19085d0ff4cf3b0235e559a4744a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3861.6411421784596,
        "Y": 802.06953357162365
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "2cb8366bc3954a00b8320ab6e7b5fb49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -875.59206840154775,
        "Y": 1754.5781985134577
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "a0f98937e2e24e8daa06252d62abb091",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -542.49638851186592,
        "Y": 1749.5781985134577
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "54a087654f7e4f69870325c09cd2d3b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 353.10185277158826,
        "Y": 1748.9725159434436
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "071be0b4014c440991b04e749417b12d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -226.414480182822,
        "Y": 1879.9002800553717
      },
      {
        "Name": "IsWallFloorBaseCeilingStyle?",
        "ShowGeometry": true,
        "Id": "945f4de7301c4395a1f6270ba23163b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 45.0996535902641,
        "Y": 1921.7542374354116
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ce44aa1bae13450eb5067cd20d443816",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1052.710434383102,
        "Y": 1050.9305638113585
      },
      {
        "Name": "ScheduleView.Fields",
        "ShowGeometry": true,
        "Id": "54354517e23042e0ab5dce4d4d7e50cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2825.1908082327873,
        "Y": 966.37540271035516
      },
      {
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Id": "0848f41b17f94f6e97f501e47e0a7b5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1150.76623498413,
        "Y": 174.02078531430811
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "7b92e55138f3489ca52142fcca7f7512",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2120.8550819166267,
        "Y": -13.472902095315362
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "f84d9778f3254f23ae93ec758002d1e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1493.7468695361936,
        "Y": 153.02324521407536
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e228c77fcb0945b9ba0086dd9bb5e61c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1687.7796534478293,
        "Y": 295.13497803102769
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "a8f7622ce2014a429a795d51a87760da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1548.7132789313105,
        "Y": 433.43321725625447
      },
      {
        "Name": "Parse_Finish Style No 시트_old",
        "ShowGeometry": true,
        "Id": "b086e8d76b414c1caaf11d7580cb6b89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -634.80634662574892,
        "Y": -481.68292844513178
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "03967341f0cc4b7bbe7e0e359af81e06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1413.0786443284178,
        "Y": 617.99924580411982
      },
      {
        "Name": "Parse_Finish Style No 시트(as dict)",
        "ShowGeometry": true,
        "Id": "398dc926cbcd4741ad46de9c290528f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -564.34396071337994,
        "Y": 172.83250261380465
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "51647d04f52c43d18787ac7d15e4e399",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 55.064394812341334,
        "Y": 458.06367034502762
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8a9691477a60473fa7914405999f407c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 262.65356504929719,
        "Y": -520.031905866346
      },
      {
        "Name": "Dictionary.Keys",
        "ShowGeometry": true,
        "Id": "e338db54762d45f69f57e914469b8473",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1807.0959443481447,
        "Y": -362.20262857057622
      },
      {
        "Name": "List.Sort",
        "ShowGeometry": true,
        "Id": "0933de45536242a08144eb92cd558dd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2122.0959443481447,
        "Y": -362.20262857057622
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "fcf28f9a72954b0a9df5dbfb7cb52d97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2398.0959443481447,
        "Y": -396.20262857057628
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "63b5e279417a4bc99a46cec32781e187",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2736.0959443481447,
        "Y": -396.20262857057628
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "fcd446a859c54ce4a490c083f17d9099",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1052.710434383102,
        "Y": 1197.9305638113585
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0325dab7336a43f3bc8bd8af19c6bee8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1052.710434383102,
        "Y": 1344.9305638113585
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f4751f9c43c348a09dec4758e6090253",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1052.710434383102,
        "Y": 1493.9305638113583
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c64d131535d84a1dafde69e67d73e0c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1553.0959443481447,
        "Y": -362.37512857057635
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "6ee2e89e1f594c479fcf8a5822348ae6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1306.710434383102,
        "Y": 1221.1030638113584
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "09cb6857dbf041689cc5701a93c554fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1160.0493859324092,
        "Y": 95.5949610546835
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "007dcb34a1d34d638f8938a9f8cd7469",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1921.3190159946155,
        "Y": 720.75850110332772
      },
      {
        "Name": "Custom Selection",
        "ShowGeometry": true,
        "Id": "8c98f24029a4497aac14423d93e3fb15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 243.71711453628154,
        "Y": 776.56715137516812
      }
    ],
    "Annotations": [
      {
        "Id": "f224315256674a709f46a31b432d1b93",
        "Title": "Key Schedule",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e0ead9087d4a49c4951c05de78b1d8fb",
          "3bb0931fdc7547f48a8ecf9ffb870546",
          "8e6630279c124d55b47dbab283ad116b",
          "329143ff2231436b995e714d39415119",
          "5c8ce586dc8a49708213e9ebcabf48b1",
          "0bd166134ab645ff89ad00d64e93164d",
          "bac19085d0ff4cf3b0235e559a4744a7"
        ],
        "HasNestedGroups": false,
        "Left": 3765.9157233307733,
        "Top": 577.28326262923929,
        "Width": 1520.1619690218631,
        "Height": 680.59332373378425,
        "FontSize": 36.0,
        "InitialTop": 650.28326262923929,
        "InitialHeight": 620.59332373378425,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ade330351dfc455b92e3860b9a33526a",
        "Title": "Filtering Finish Style Schedule",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2cb8366bc3954a00b8320ab6e7b5fb49",
          "a0f98937e2e24e8daa06252d62abb091",
          "54a087654f7e4f69870325c09cd2d3b7",
          "071be0b4014c440991b04e749417b12d",
          "945f4de7301c4395a1f6270ba23163b8"
        ],
        "HasNestedGroups": false,
        "Left": -885.59206840154775,
        "Top": 1603.9725159434436,
        "Width": 1483.693921173136,
        "Height": 449.781721491968,
        "FontSize": 96.0,
        "InitialTop": 1748.9725159434436,
        "InitialHeight": 317.781721491968,
        "TextblockHeight": 135.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b7c7bcf3e3db42e8969e26f4e0cdb3e0",
        "Title": "Import From Excel",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0848f41b17f94f6e97f501e47e0a7b5c",
          "7b92e55138f3489ca52142fcca7f7512",
          "f84d9778f3254f23ae93ec758002d1e1",
          "e228c77fcb0945b9ba0086dd9bb5e61c",
          "a8f7622ce2014a429a795d51a87760da"
        ],
        "HasNestedGroups": false,
        "Left": -2130.8550819166267,
        "Top": -158.47290209531536,
        "Width": 1228.0888469324966,
        "Height": 723.90611935156983,
        "FontSize": 96.0,
        "InitialTop": -13.472902095315362,
        "InitialHeight": 591.90611935156983,
        "TextblockHeight": 135.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "54d9ff391e994f469de88d4480467d69",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e338db54762d45f69f57e914469b8473",
          "0933de45536242a08144eb92cd558dd6",
          "fcf28f9a72954b0a9df5dbfb7cb52d97",
          "63b5e279417a4bc99a46cec32781e187",
          "c64d131535d84a1dafde69e67d73e0c2"
        ],
        "HasNestedGroups": false,
        "Left": 1543.0959443481447,
        "Top": -469.20262857057628,
        "Width": 1441.0,
        "Height": 268.82749999999993,
        "FontSize": 36.0,
        "InitialTop": -396.20262857057628,
        "InitialHeight": 179.00000000000006,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 469.583495856222,
    "Y": 226.29912695286166,
    "Zoom": 0.32734116715529427
  }
}