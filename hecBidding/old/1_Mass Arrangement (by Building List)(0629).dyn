{
  "Uuid": "3c9d0464-8643-5ffe-96e5-ab1769818209",
  "IsCustomNode": false,
  "Description": "",
  "Name": "1_Mass Arrangement (by Building List)(0629)",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "Vector": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      },
      "DSCore.Color": {
        "Key": "DSCore.Color",
        "Value": "DSCoreNodes.dll"
      },
      "Color": {
        "Key": "DSCore.Color",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "c2778885e5fb4968ac28126bf6ea1ef3",
      "Name": "File Path",
      "Type": "string",
      "Value": ".\\mk_Space Planning_sample Program.xlsx",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "Id": "34d3202f7809461ba524bb917c6e7b0f",
      "Name": "Number",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number."
    },
    {
      "Id": "917a08a33a3d4f11a7aa61c9a3103171",
      "Name": "Number",
      "Type": "number",
      "Value": "2",
      "NumberType": "Double",
      "Description": "Creates a number."
    },
    {
      "Id": "d664bed9bf5d4985b1f4d243f3ff797c",
      "Name": "Number",
      "Type": "number",
      "Value": "7",
      "NumberType": "Double",
      "Description": "Creates a number."
    },
    {
      "Id": "e268818ee5b0423d94351f47f90efb66",
      "Name": "Number",
      "Type": "number",
      "Value": "0",
      "NumberType": "Double",
      "Description": "Creates a number."
    },
    {
      "Id": "5abe7d33e3c744cca70c5b5d0613dcb5",
      "Name": "Number",
      "Type": "number",
      "Value": "8",
      "NumberType": "Double",
      "Description": "Creates a number."
    },
    {
      "Id": "79235264d4c148a68dec43a4be48ca79",
      "Name": "Number",
      "Type": "number",
      "Value": "5",
      "NumberType": "Double",
      "Description": "Creates a number."
    },
    {
      "Id": "8f6331593f72424c9bd3d2b45510a4d2",
      "Name": "Number",
      "Type": "number",
      "Value": "6",
      "NumberType": "Double",
      "Description": "Creates a number."
    },
    {
      "Id": "46ba160399c5449e983d27ddf25781f0",
      "Name": "Integer Slider - Spacer",
      "Type": "number",
      "Value": "20000",
      "MaximumValue": 20000.0,
      "MinimumValue": 0.0,
      "StepValue": 5.0,
      "NumberType": "Integer",
      "Description": "A slider that produces integer values."
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\mk\\mQ\\hecBidding\\mk_Space Planning_sample Program.xlsx",
      "InputValue": ".\\mk_Space Planning_sample Program.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "c2778885e5fb4968ac28126bf6ea1ef3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bc6ae0be021949ea83cf73ff71d4dea6",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "363ed6e4ff214b02b77c99bc10999f03",
      "Inputs": [
        {
          "Id": "149a176fce5e4201b10c286ad849eac9",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "272015a82ac047489cf137890ba1bbe4",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "950d2035e24a44a6a20fa219d25fe502",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "96b726190e5c4abb81f2ee100a7dcb63",
      "Inputs": [
        {
          "Id": "c7a6d76e2f4b4e7db1287ce366cd4899",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4feb6117725d440ca3c0bc827d01b90d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f96287f07fd4f518559869959ef62fd",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Room Name\";",
      "Id": "2aff5692de834177a0eaf748b3519a3e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d3cdb693d4d3407bb862c9642a0561c9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Width\";",
      "Id": "6e677c2e025a47a8811743ceb7042598",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4bce2b73c834430c85b9f84846e1bbb9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Length\";",
      "Id": "fdb27070cdd2412c9b90dfb28ece056e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cb1acca6ae7c4a7a8d656dfd60cf6345",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Department\";",
      "Id": "bea671811cf4445e8209a086ab143e1d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9e49c1e98b5c4fb381f7da4383a0d4ce",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "056f97c1930e48f187a75e00cc8dcb78",
      "Inputs": [
        {
          "Id": "a92d946583de4b1f8a88e2df99997e8c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4665f435fb347339352ba33b52050ea",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "183cab4866474b728b50f52f8d91bd33",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "34d3202f7809461ba524bb917c6e7b0f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f1e9ae8a89c54d45a11a37f5cd51bc6a",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 2.0,
      "Id": "917a08a33a3d4f11a7aa61c9a3103171",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2682aecb1b654116ac0301ba01fdbfca",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 7.0,
      "Id": "d664bed9bf5d4985b1f4d243f3ff797c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "45b57fec73ee4dd1a289c9ca84a3f311",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.0,
      "Id": "e268818ee5b0423d94351f47f90efb66",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "314684e212e74c7a800f56bf5de71169",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "30348b3412d745e89368dc8281cba186",
      "Inputs": [
        {
          "Id": "5f0818b1c74b4b219033bb8e644dbef5",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11a1f6f34ecb431dbe32874360bb56ee",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cfecbdf8ba094616bba3fc65926023d4",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Program Area\";",
      "Id": "8f65ecd0d32143a0869ebde8cd78ec1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d03de4593e23483db1b2ee88068edcf7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "5728a002b41845c5bd6996a116275f13",
      "Inputs": [
        {
          "Id": "94e9e8aaec9b4d18aec5f7ee8131b88b",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ef2a7729ff1447ab5dc1d692a93b004",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "3682428619854be69d62ec68a2c9c770",
      "Inputs": [
        {
          "Id": "ee0557681b6343848ebb841c81c957af",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38ae13b7322a4eb69929cde390250e0e",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x-1;",
      "Id": "0750cb806b8c4b7984074c5d5c73ebf1",
      "Inputs": [
        {
          "Id": "e30f3a8f459b4ef8adbe60b4e1b6be0e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "062f1048ca7845a4b67ce9e2026d53ce",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x..y;",
      "Id": "db67c76591f44498bead43ef1a2ab647",
      "Inputs": [
        {
          "Id": "736b5a8922f64a909a5531127a99362f",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57bc3bfa5db64d0f96d943c2ff3d307f",
          "Name": "y",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d633e029970949dfaa1363552fcb38eb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "12288277ecae4ff0861ca982c0e2933e",
      "Inputs": [
        {
          "Id": "6202494da1d142c588b6c3b3617586a3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "447903d94e4043e6972e51ef47a04d27",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "deddf5a22bd04869ac0bec23d63d1643",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Levels, DSRevitNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "1st",
      "NodeType": "ExtensionNode",
      "Id": "df6b469477a848b5aa3e7a0be2f416e6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "60b9bd2237a04465a053e14866421bac",
          "Name": "Levels",
          "Description": "The selected Levels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a level in the active document"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FamilyTypes, DSRevitNodesUI",
      "SelectedIndex": 174,
      "SelectedString": "Space Planning Box:Space Planning Box",
      "NodeType": "ExtensionNode",
      "Id": "d51ef53eb2ad4940a33fa21d8504710a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e665f4cfdaad4035b721a0f102c74094",
          "Name": "Family Type",
          "Description": "The selected Family Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All family types available in the document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "23849dfabf56472a9eb3ac37bc3da414",
      "Inputs": [
        {
          "Id": "c188cc67eb5f40169f2d5c3e82e0c4f2",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed6b1ba476914b059a8dfffa59f78bb4",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a6775fcd9234a6ca6df20343fcd7a67",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1ae11344841a499b89043b025542ef4b",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "3ee2d9d289bd414fb8b105f0573ee035",
      "Inputs": [
        {
          "Id": "1704e119bfde472b89fe52e7ab588c2b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f190ab41da554d83a507fca57bcbd927",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48bf004389774eea97f8185bde42e54d",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57b4f80761ba461dbd984fe82a8201d1",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "a94c7bbdd4084f0d893cc9e4db96cfd5",
      "Inputs": [
        {
          "Id": "39e2a1b639c343d18a4b8475f2998248",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "93d7b8e1dc7e4ce2bbece706ab09688f",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e62603b4299449fe8e79d6a74ce18ebf",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6f5c2b2454b414b90413f5609a8fb8a",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "31963dbf9d5842d18fbb43b504a01376",
      "Inputs": [
        {
          "Id": "7dcf71afef22458da368b3ca06df6359",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f42424fb847435ebd4c1f5ed4335cdb",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72a5c326a0364bc880529396ec2ee2c4",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c96d704adc8b4f83bee185cd8bcc0ba8",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "205f52b0eede403e8d657c2f0523228c",
      "Inputs": [
        {
          "Id": "b814413cac1047e595756bec87ea2f1e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1daaab35f7fd417e83fa4c1b89b28f29",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0fae902c95bb4845b9c4d5dd4574fe20",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42d48d8fab314c46be175659b429b2c0",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 8.0,
      "Id": "5abe7d33e3c744cca70c5b5d0613dcb5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d46833d16f8e46a8b8ff67af420f8e78",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "66068bef36964807b1c2d7e0d0b6c1c4",
      "Inputs": [
        {
          "Id": "c377988a5bf74ae88ba17cdbd8773050",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d830fdb437f249778c7d7f0eab8a9dee",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c5642d83756498db1aeda9bd1783248",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RestOfItems@var[]..[]",
      "Id": "743cc0320ca046e6bb37e330623f1854",
      "Inputs": [
        {
          "Id": "a09af2ba7d774451b8a1c77118a180e7",
          "Name": "list",
          "Description": "List to get the rest of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d7d59decfa84501b9687018c61b5b26",
          "Name": "rest",
          "Description": "Rest of the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes the first item from the given list.\n\nList.RestOfItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "3158f6a275b84b6d860e618342ff8b72",
      "Inputs": [
        {
          "Id": "5b8623f6f0054ae5bdb7f4b9bac65557",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae0b107e920342cbb6069bb659c95dc5",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da61cd329e114479aed194ad94982bc6",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 5.0,
      "Id": "79235264d4c148a68dec43a4be48ca79",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "945676a4b7da47dc8e00c4ccb2f39c0a",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "5dacb0ecf5254106af10f086f0e8f11a",
      "Inputs": [
        {
          "Id": "0c5f7b70fe364d189718bf839574a79b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0982a8350896451ca75afab69636a88a",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90a84deefa4f4acc85a3dc9c0c77c7d7",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e831bd2d6474f6c88b2a0798f08756f",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Height\";",
      "Id": "38d9f2512e98424cb294195c56809cf3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5072cf5a4bd64e25ac3d1520c82d2b10",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "8bfbe7569a974b3dbaa51eb1723bc6c5",
      "Inputs": [
        {
          "Id": "a5cf45ba8e5b48a2add855ac22eee20c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf378312820c40589845830dd1af4d44",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dbd4fdbdca684ffb9e231ef578492c08",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 6.0,
      "Id": "8f6331593f72424c9bd3d2b45510a4d2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "245e2506a0e44e5babe13bd7a4bd0c97",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "83f83042774b4ccfa53f4bb458a4eb58",
      "Inputs": [
        {
          "Id": "57fd683190ab4c0a9716fb3ffbb4b21e",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59968d186e6b470194b3fb8147914c77",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "b85cb794d1b04f1e94d6cfeafd3d2d18",
      "Inputs": [
        {
          "Id": "02a5bcc9a6874fcb8bffa93fec73f214",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc552365d8b74c6ba49cd865a86f0cb1",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb4f08c9a64c434f8aa44f7094b9cdff",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "037f4c7ea2184a3a9753ea8205e05615",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2ffc3dca09e4dbfb0ab363d26e7ea57",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Sheet1\";",
      "Id": "280ec82a23134bd58293a7ccb286ec45",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "851b8f256dfb495eb12d19a03d43bad7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "e25aa21849d1482e87c5dea6bd7a46c8",
      "Inputs": [
        {
          "Id": "851fc31a6553426cbb1efbfe32c207e2",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21539a8cb7e741778c9e36c1ba51df4e",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c88be71f175d4f6f949142f7536ec750",
          "Name": "list",
          "Description": "New list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "2020fc03a2d443c897a31fabb77b140f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "68c1338dae244c698e0310531b6bf5c7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByCoordinates@double,double,double",
      "Id": "02fc5c87b3a64893a5b928b275c7d755",
      "Inputs": [
        {
          "Id": "80d9dcd01b9a44dba11b8518f7ea70bd",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "751bc134f8054ae7956b7d17a8c9974b",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04b49c38939344a88230c4d941e416ce",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc4dcfca780b4f06b8682a5ad8cd6e33",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by 3 Euclidean coordinates\n\nVector.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "dbd3bf45241d4ea1a67a586e7ef460cb",
      "Inputs": [
        {
          "Id": "58338938571847eeb156b8b60e8214a6",
          "Name": "x",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c52eab0019e4612802ff1d150581424",
          "Name": "y",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3955f2049b754b00a76682b00f3e37e3",
          "Name": "z",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70805252a3bf4009bd09f4a021982980",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "a40d74daed5049c38d99d6471d218c9b",
      "Inputs": [
        {
          "Id": "9f45d46e5219462082f8950416e6d623",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6372f74449ca468d9cf9f7831df70ce8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Gray\";\n\"Pink\";\n\"Magenta\";\n\"Purple\";\n\"Lavender\";\n\"Blue\";\n\"Cyan\";\n\"Teal\";\n\"Green\";\n\"Lime\";\n\"Yellow\";\n\"Orange\";\n\"Red\";",
      "Id": "2d95e38f1e3044d6a9ec5c10c48795e4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e687d1c7bb2f45a7a019d6018d626ecd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20e2f3e39ad0405da88b4aa53c9efcb8",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a633c797ba304e9bab5e140f6788f986",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ce47066ab2942559c2f6111c97b02a0",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e1ca0d2e06a4c00accfb3b6d84c73b0",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87b5d5d84db1493c88426d64b9859c3b",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a7ecd9b6b074e5b8fd7a720c42d60c5",
          "Name": "",
          "Description": "Value of expression at line 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe1874449a564e7cb04734006566f2e1",
          "Name": "",
          "Description": "Value of expression at line 8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00aee9cd19d34365a0b8ce1e1a1cbd0a",
          "Name": "",
          "Description": "Value of expression at line 9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "389f335acd5c4254bf7bcbb442aafddd",
          "Name": "",
          "Description": "Value of expression at line 10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b966b8d53fb456db23e93c7388140c9",
          "Name": "",
          "Description": "Value of expression at line 11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62d7a26f9dbe441a804013b5ebd03e14",
          "Name": "",
          "Description": "Value of expression at line 12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "246a8c281eee448a972a3dcc4406de5d",
          "Name": "",
          "Description": "Value of expression at line 13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "694ac3ca65544c44bee23635e7c08ab7",
      "Inputs": [
        {
          "Id": "524e1b8bed7441f0859eb7899d77ad19",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b88ae905d714d6fbe6457dc94773f90",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0e88778c81548989ef65ed2116819f7",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49dae91d260c48acbcc4130472e36fc5",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "764723d1741f4cc4928b92524e68b79f",
          "Name": "item4",
          "Description": "Item Index #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42ad431c77f747359405ef32081e6f2d",
          "Name": "item5",
          "Description": "Item Index #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0fe06442e784d508c15e281ec6f06f3",
          "Name": "item6",
          "Description": "Item Index #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0beb51b66b14c5c85c22d733d7a5634",
          "Name": "item7",
          "Description": "Item Index #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "315f6239237f4f9a86a82b625446f454",
          "Name": "item8",
          "Description": "Item Index #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eea53b0f43c44bf1ae860afe02842487",
          "Name": "item9",
          "Description": "Item Index #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae7ace04b46b43fcb361f0ea24abcddb",
          "Name": "item10",
          "Description": "Item Index #10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2eca777130a44e64be7ff5ed2d41fb24",
          "Name": "item11",
          "Description": "Item Index #11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1e764485b194ae89dac5877e930b25a",
          "Name": "item12",
          "Description": "Item Index #12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9859243cd5e8461aab273d7601d1a757",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "97d14756-c7df-44dc-90f2-6db28e143e3a",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "eab128cf49414d12b472c3815eaf899d",
      "Inputs": [
        {
          "Id": "59f4cfeaff584ad8a1c0af59e89a4c8c",
          "Name": "seq",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95bf1499628c43ceb2b842699d62f862",
          "Name": "keys",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e26af4519c74ecbbc149abb0f08d877",
          "Name": "values",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3bf4f90c7c744e784c1318815d6091b",
          "Name": "seq",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Matches a list with a given set of keys and returns the values corresponding to the keys"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1099eb11f7ef44c395a75b14a997ca7d",
      "Inputs": [
        {
          "Id": "fb346c61162c41259c379a021af38557",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0741c6a0c7aa4663b4d98b8b31280ff4",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89198ffde8c346cfa1cb6d13606a96c1",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.ByPointAndLevel@Revit.Elements.FamilyType,Autodesk.DesignScript.Geometry.Point,Revit.Elements.Level",
      "Id": "099057377cd147829ffcf3ce5c0eb5fa",
      "Inputs": [
        {
          "Id": "416f41663eb447e7a14171c158ed3bf0",
          "Name": "familyType",
          "Description": "Family Type. Also called Family Symbol.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d60a90647e3249769109bf69223c5bf0",
          "Name": "point",
          "Description": "Point in meters.\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4c98657a8a84d6f902f070363a6c179",
          "Name": "level",
          "Description": "Level to host Family Instance.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1bebf1db59b24d05acf06e78d1ce447a",
          "Name": "FamilyInstance",
          "Description": "FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Place a Revit FamilyInstance given the FamilyType (also known as the FamilySymbol in the Revit API), it's coordinates in world space, and the Level\n\nFamilyInstance.ByPointAndLevel (familyType: FamilyType, point: Point, level: Level): FamilyInstance"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "fd942ff945024017919589cc786a258f",
      "Inputs": [
        {
          "Id": "2aca84b6df504d90bb0d89bccdd92045",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e0502e9cfb4b43e8a1a40aedff527696",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "93354b6ec3a348eb91c2cc0e0acde8a3",
      "Inputs": [
        {
          "Id": "2f48f7d7704e4ef193550803e2e710c7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "103c31702c184700988872bd49dcfaa5",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d479ff0238a34ed1ba6265d543b726c1",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a37a8e0be0ee4a7d9c95a076f97af234",
      "Inputs": [
        {
          "Id": "4a8cce3cb89b4145923e49a51fb9f16f",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3feb5a9ef7e54403848b280b332450b6",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "46662ced2dd94d16a8c76c5595b55b29",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "898e5b55e93c4271afbe2fae3efc2710",
      "Inputs": [
        {
          "Id": "048198d2a9c84babb92c3b3635d60130",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64f85ab870ac4adf8f727bd09f0e8452",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5178d39742c045c59c1adc04e06b06b6",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3d825d9343df4015aa67319ba6c856c2",
      "Inputs": [
        {
          "Id": "c006cb17cd4546479e0badec7b5adc52",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2ba37bd5609475292d7998dc5cce674",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc95f6b491044063a8e7183c8577c70c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f8ccb72936ff48bd92d78960d66e8c47",
      "Inputs": [
        {
          "Id": "b19447fe558b485eb47c4def1b7df101",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "23f4e5fed54b4c01a6b4fb6ab078b93c",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4c154eb306b4203896fd2aec125a03e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "0779d2d26e5b452998cdabaffe927e2c",
      "Inputs": [
        {
          "Id": "21c51fd14b8e4afa9806b5662482006b",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4cf5447c0d94b799ac97925e11e381a",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "feafdd94d89843269fa0cd916e528065",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "c2793a4b66054f91bb9b18804302414a",
      "Inputs": [
        {
          "Id": "76ed70e6169c4b0d8def1f8f8ee11140",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4637e03d26447c9bdf7e2b92e46e42a",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "4fb29d5779044f3fa531287e6cca1d90",
      "Inputs": [
        {
          "Id": "b520c04aee1043d4831dc85380ee6baa",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e0db5359a3a4188853664b1c9dd4cab",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bf8148d23dd4d40802b26e1b53167b9",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2cc414c608ab416c93a288f904d3b12c",
      "Inputs": [
        {
          "Id": "4a3a6120d08a46c7bd71eeb868e8963d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a644da006ea445b3a17ef484bbf052af",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71cd70a322874a0a9adfcb5ec6c49644",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "d97d57328efe480ba2c3d69b60491cd7",
      "Inputs": [
        {
          "Id": "4b1b0ad4cc8d48459dace1738243195a",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f525f0f170cb4854913d2d9b9b5c7e09",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6c29d67246b42fca057bb3a8bef0d65",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "511f15cd5a544e34a9a9eea359bdde49",
      "Inputs": [
        {
          "Id": "a8626c1c23934264818fc2d17aeb721d",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2888cfbc77d74201849190ccf91f12bd",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "8c837cab-46ce-4976-8ae0-2e6158103945",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "a493804eb93b4a0bbae1117e1ce19258",
      "Inputs": [
        {
          "Id": "f3f576fb2905435abc7eb8bd887fe6ed",
          "Name": "seq",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b632e05a0dc34c3fa9289448e3104179",
          "Name": "uniqueElements",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b5b41707533467ba0332f55d7af1188",
          "Name": "count",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Counts the number of occurences of each unique element in a given list"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "e3e3af0c9e3c434b8b5ce5c2261e410a",
      "Inputs": [
        {
          "Id": "7bc745b0868841e2944c9759730f9687",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bea016ae9cf941cc9f7e43aa7a3d43c0",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "bddf33165dce44bd96589217c7b305b7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "44657b37838c466aa5a01d3b144259fb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "2ec3204300c5497e84fffc12a0b26a2a",
      "Inputs": [
        {
          "Id": "1c2a0de992bf4bb999b298c408bc387a",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd1d54b22bb64113a7dc42a1f04d9729",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "a84e679b39664039a32c48f164a403b9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "707d0bfcfbba4deb95ec4adbd8c2de69",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[a/2];",
      "Id": "c1bf7130c2e44f40929a4e56113baee9",
      "Inputs": [
        {
          "Id": "fc9b31ac05df47ab8734f2ebb49c7cdc",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c9bae33b712e4ff987de0fc6b404248f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "n-1;",
      "Id": "9838c7e577d44a6baee980c9c66e48b7",
      "Inputs": [
        {
          "Id": "9d2c9b44bfd14f149cba7a2c5bdf0b78",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "323ef962b7254123be046eeb15f6906e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.ShiftIndices@var[]..[],int",
      "Id": "25c9db6233444a0c872c30dda9cd845f",
      "Inputs": [
        {
          "Id": "c5561aa14b2a4449a5a168df0ebc6a23",
          "Name": "list",
          "Description": "List to be shifted.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8266d9cdf3ec4fc0ada141fb5ac31c9f",
          "Name": "amount",
          "Description": "Amount to shift indices by. If negative, indices will be shifted to the left.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6db5fd1f95064e41a352cfe78615bee7",
          "Name": "list",
          "Description": "Shifted list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Shifts indices in the list to the right by the given amount.\n\nList.ShiftIndices (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "3f6d10df1dd84a37bde428132e9b4014",
      "Inputs": [
        {
          "Id": "89c4842306214f68aecd39f4306738c5",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c58db7ee626b46c882b6240c01f029f1",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad3eaf81f2884b0590aa471b70fcf99c",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "80c7de38910e4e66bb7d5c3af7a75887",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "47abca3198174e0383a3d6db861af699",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Insert@var[]..[],var[]..[],int",
      "Id": "b68f8b92468a4acb9cafd0aecfc5412c",
      "Inputs": [
        {
          "Id": "0b63805742804e10b61984428c28e4eb",
          "Name": "list",
          "Description": "The list the element will be inserted to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e18dceec0dc484b9450e580effc3505",
          "Name": "element",
          "Description": "The element to be inserted.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44a560b0b45b4696bcf48a9d7ce571e9",
          "Name": "index",
          "Description": "Specifies the location in the list of the element to be inserted.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a4ae4f180e64258af732738f5bb7b52",
          "Name": "list",
          "Description": "The list with the element inserted.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Inserts an element into a list at specified index.\n\nList.Insert (list: var[]..[], element: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.ReplaceItemAtIndex@var[]..[],int,var[]..[]",
      "Id": "12bc78be42f64212942fa157db67e48d",
      "Inputs": [
        {
          "Id": "1a3dfdc5fecc4d77be8b3685f851ef0b",
          "Name": "list",
          "Description": "List to replace an item in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "973b1b40be554af4a4aa626dfd31a629",
          "Name": "index",
          "Description": "Index of the item to be replaced.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8e7860c393240eda8c561da046cab55",
          "Name": "item",
          "Description": "The item to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29bd2e21c2654c07b81272de1b8b9dfc",
          "Name": "list",
          "Description": "A new list with the item replaced.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replace an item from the given list that's located at the specified index.\n\nList.ReplaceItemAtIndex (list: var[]..[], index: int, item: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "69c6edb8f8694fd8bf01f410c36872bc",
      "Inputs": [
        {
          "Id": "18b5de8e09894863b775426864ef1b58",
          "Name": "values",
          "Description": "The numbers to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd698a4193a14e02a62e1b9fda93b503",
          "Name": "sum",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "4f7990584279498a8d5116f9e57f57d1",
      "Inputs": [
        {
          "Id": "6360b952af2243cfaba74ac75c9a3a0e",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18471faad5f54dada6fd7be107ecdd77",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[a,b,c];",
      "Id": "2e06a60734c4460a8db9255669026336",
      "Inputs": [
        {
          "Id": "50549dfa514d4b55ac0391ed92ba4dc6",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "150874b6f2e0418dbf462af416da90cd",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c717f9769c814ccb9489b9caaa788705",
          "Name": "c",
          "Description": "c",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23860443b1d34e4cb93fcf2306180af5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.MaximumItem@var[]",
      "Id": "e601abc265db45f482f2ef721f43884d",
      "Inputs": [
        {
          "Id": "3bc5608246ce4610a4e1e58c31f21bcf",
          "Name": "list",
          "Description": "List to take the maximum value from.\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "906085b36861454996a238f1e80ca7dd",
          "Name": "max",
          "Description": "Maximum value from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the maximum value from a list.\n\nList.MaximumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "0dfa8af4fbb241f3abccc88716f8e495",
      "Inputs": [
        {
          "Id": "906facf950744c048d1fc5a302948f1b",
          "Name": "values",
          "Description": "The numbers to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "60b2bdcc0d584b1087e21268a0e7600d",
          "Name": "sum",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[a,b,c];",
      "Id": "42b6ba055dbc40f9aacfdb361b4f7596",
      "Inputs": [
        {
          "Id": "147a7ac22f224c03b9582f9a44b287de",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc81df3eac4849299960ff2cf204d1fb",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e4c72d19f8c34c269447b145cf432977",
          "Name": "c",
          "Description": "c",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee9a157a673445a380bb6a611a407c67",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x;",
      "Id": "f064c16779e642e6b783a95d203f55c8",
      "Inputs": [
        {
          "Id": "c0ad375e5a6d474f95e2c3c15b31cd62",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f8c136251f9456aac50b4889c3ecfd6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "list;",
      "Id": "c5bcdc4bfe444ff29220198d57e38f5e",
      "Inputs": [
        {
          "Id": "cf04d7702c6a419495bb2ca14464489e",
          "Name": "list",
          "Description": "list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fbb46fadbca9425287b268ec6c57f60c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a/2;",
      "Id": "cde37a3d0563495b841420c2ce627b5d",
      "Inputs": [
        {
          "Id": "ed088a7b6b964723bb15c04130d4a5d4",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64412248f3e6409d991444ecacc064f8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "98ac8c460dc040969169180ff58d2257",
      "Inputs": [
        {
          "Id": "02c3e547c67a4897b87d5ada40ba1b91",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2231dca7877b458fa575ac538d747a36",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "e82821a6e62d4e20bd6ca6a3a9e4c394",
      "Inputs": [
        {
          "Id": "cf080bfc91e24d46b72859b46e90a11b",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1ba26ec832845789ce02015dd458cce",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b963a26847d4c13a853a83b6afdf59d",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Insert@var[]..[],var[]..[],int",
      "Id": "0dc9ec6431944089baa94f2ab30655e4",
      "Inputs": [
        {
          "Id": "e1b6f8a5e08f4fc29773cc128f9bbef7",
          "Name": "list",
          "Description": "The list the element will be inserted to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "13054d26723e4c7cbd24d9e22f6d78f8",
          "Name": "element",
          "Description": "The element to be inserted.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17519e56a8ed43ef958e173b23e36b78",
          "Name": "index",
          "Description": "Specifies the location in the list of the element to be inserted.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a4e477afcc3c4fa8bd414d4db5093a52",
          "Name": "list",
          "Description": "The list with the element inserted.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Inserts an element into a list at specified index.\n\nList.Insert (list: var[]..[], element: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "n-1;",
      "Id": "cec8ef75f5dc4959aab0733f5bca6ac6",
      "Inputs": [
        {
          "Id": "c9bf5fb027864571bce53cb94e2828c3",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "366d19984c6f4874bfc8f12f41995836",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "d06c58211d0d48e69817e8cae4fcd50c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0f250654273c4a079cfa32985b092d8f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "e1ee076613de48559314e5fcc557482e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3195e9e78c174b9ab5b8b470fef57593",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.ReplaceItemAtIndex@var[]..[],int,var[]..[]",
      "Id": "9ab5bc8359244cbb9659959fce2541f5",
      "Inputs": [
        {
          "Id": "4d0d8f1ec9d24a15acaa76ef7b3c31a9",
          "Name": "list",
          "Description": "List to replace an item in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "09728abb205e44b7a10265acdceacb49",
          "Name": "index",
          "Description": "Index of the item to be replaced.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c64652702874257932af28054238a9b",
          "Name": "item",
          "Description": "The item to insert.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa74c1371bfc4d098669329c1a589f00",
          "Name": "list",
          "Description": "A new list with the item replaced.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replace an item from the given list that's located at the specified index.\n\nList.ReplaceItemAtIndex (list: var[]..[], index: int, item: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.ShiftIndices@var[]..[],int",
      "Id": "f1ed2b2644d743e39fd7826f8c18d6ae",
      "Inputs": [
        {
          "Id": "e3542328957b4f95b24a4e92f7db7036",
          "Name": "list",
          "Description": "List to be shifted.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "08d413c45ca749b6836b1e28cd8c0281",
          "Name": "amount",
          "Description": "Amount to shift indices by. If negative, indices will be shifted to the left.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f34adb65b40465b99242da96bbc6675",
          "Name": "list",
          "Description": "Shifted list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Shifts indices in the list to the right by the given amount.\n\nList.ShiftIndices (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "f681deee4fdf4a0583ffe64775ba9799",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "996fdb0e058a4577a6a7262a465df95d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 20000,
      "MaximumValue": 20000,
      "MinimumValue": 0,
      "StepValue": 5,
      "Id": "46ba160399c5449e983d27ddf25781f0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e60034c5f0e64e22a0320d06e68ce778",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f89aa3b58b234e33bec0da6e525904a9",
      "Inputs": [
        {
          "Id": "1699b2cfbc494f2186a91f359297c28d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5633a840d0a1411c9459cd47a7cc312e",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c573d2d64ea4b3b9bce451b3aa01706",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Material.ByName@string",
      "Id": "6caadde57a334118a056e5a4b8c47e44",
      "Inputs": [
        {
          "Id": "7c9de49c122c4afba8c7c4770319f365",
          "Name": "name",
          "Description": "The name of the material\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b67ec73909ef4deb9f95dfa3ed8c3a32",
          "Name": "Material",
          "Description": "Material",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Select a material from the current document by the name\n\nMaterial.ByName (name: string): Material"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "e813961b35dd47e3b8bba71537eb8bc1",
      "Inputs": [
        {
          "Id": "5a772ceb16594002b0c7f3b19175617f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a3b206d18d045e994fa4372b47edaf1",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0fa24198fda24d1c9bc650fcde30540d",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3291e6c9ca6c497e8d24e2aab13f2a24",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Fill Color\";",
      "Id": "f03498f8068e4d449ba9b141ec6b2c00",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d89f35e8c6dd477b935c1e371252bf19",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "8c837cab-46ce-4976-8ae0-2e6158103945",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "a4bce4c463a04ec39d77cf604c17a62d",
      "Inputs": [
        {
          "Id": "eed3979f6770493f84e1d681d2286ae3",
          "Name": "seq",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a862b3278d7b4559bccd86e142c52321",
          "Name": "uniqueElements",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80fee5415f2943a7b330c7a39edf59d6",
          "Name": "count",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Counts the number of occurences of each unique element in a given list"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "f695a341c75b4964bc88abb4aa8cb842",
      "Inputs": [
        {
          "Id": "df29ef23308d499b8b52ce2e34f47859",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f3d52c647124f0ab34246caae059f0d",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "712e02373fd14b0b8f821e9938e4f093",
      "Inputs": [
        {
          "Id": "fbbbd821649b486189857d59aecbfc7f",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1ba54fa06dfa43c9a2f19a27dc2c8afc",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c400217ac364e19a40de9d356690882",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "IN[3];",
      "Id": "388fdebae19a4842a31fd392f0dd9cfd",
      "Inputs": [
        {
          "Id": "27b956de4ff244a5983c1a7d91ee6bf9",
          "Name": "IN",
          "Description": "IN",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "419e7518213a42ecad169a29fa1518bf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "78caea435ac4440ba22cd43fb2b8d7d9",
      "Inputs": [
        {
          "Id": "69aef49ea0d0411b81d46788bd39c7da",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e37fde87bfc54e90b7b1a59c45995577",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ddeaa685c9e444ec90bfafe141f03b8e",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "IN[7];",
      "Id": "6703d187b881404e8fbc6de21a24634b",
      "Inputs": [
        {
          "Id": "9ae85d5b5e53451691301db0da65ac76",
          "Name": "IN",
          "Description": "IN",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82109a5d1b61488cb995dafa4cbc55ad",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "IN[9];",
      "Id": "bc37c39fb4eb43d891c9d2fec765efa6",
      "Inputs": [
        {
          "Id": "72c0c7be471f455881243447d8e7b25e",
          "Name": "IN",
          "Description": "IN",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09a84577aa29433d88e4b00371db286c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "IN[6];",
      "Id": "a5b76ad0f3d44aa0aa3317aa91a54a22",
      "Inputs": [
        {
          "Id": "8c22a9ef076548eab75305327272d529",
          "Name": "IN",
          "Description": "IN",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef8ae89b85364990a76426e877002f97",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "9249e761dc39425baee8f0a1bdab9454",
      "Inputs": [
        {
          "Id": "7fe03d2145b24a45a240d0e7d3aa6798",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "8d26867e42a54ace946781b35eb6f09a",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe427f3725a142a390649fb7f8de222a",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "fbeb07e0ae65441abb648d17b7c4bc47",
      "Inputs": [
        {
          "Id": "754e7b0c4b2e42dca98f9d9ddb18d304",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6dbd25ca49fa48f0b4a777f5a54b96bb",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "670dd57f336e45a5ac5740e68fead4bb",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "IN[9];",
      "Id": "d44345ccbaf3444398ed52df83f7173b",
      "Inputs": [
        {
          "Id": "a6253b4a947643e282adf7992d35e209",
          "Name": "IN",
          "Description": "IN",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e64f70188574d24a3fc690ca8dc9a67",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "f24465ea-e323-444e-81de-8ea9a03debce",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "4d51960e44c14c628c2178f5c8c638c7",
      "Inputs": [
        {
          "Id": "098425a65bca47a1acacb09dbe2394b5",
          "Name": "list",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5e0da02079384e90873413d979aed733",
          "Name": "lengths",
          "Description": "int[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4427d9eaeb5f47faa7d16e31ac49fc0d",
          "Name": "groups",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": ""
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "SPACER;",
      "Id": "54b235fe0c4e407f9a28acd763f18596",
      "Inputs": [
        {
          "Id": "80152050ff324855acfd04ec02bb864e",
          "Name": "SPACER",
          "Description": "SPACER",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ef35fa711624d368b1691bbbe4953c7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "3de7f25190804a5ab052d0da20df1808",
      "Inputs": [
        {
          "Id": "7e0611875840497dbc416d1e3d7c3dba",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21d4deca48dd42e08df87255a9c3ce19",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Add@Autodesk.DesignScript.Geometry.Vector",
      "Id": "133a2f94dfc64f5e93638539caafe0e9",
      "Inputs": [
        {
          "Id": "3c33f45cca1f4a70bff19597b80f3054",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5cf28b4dcc844c478e58cc2701a456e1",
          "Name": "vectorToAdd",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebc9b43663cb47ebb9074e11121a6903",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Add a vector to a point. The same as Translate(Vector).\n\nPoint.Add (vectorToAdd: Vector): Point"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninList = IN[0]\r\noutList = []\r\n\r\n# Place your code below this line\r\nacc = 0\r\nfor i in inList:\r\n\tacc = acc + i\r\n\toutList.append(acc)\r\n\t\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = outList",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "c0ad9a16860a4510a877a5d63ef4e403",
      "Inputs": [
        {
          "Id": "dac8a833f3f0472dbfc31b17f7498b08",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6339ea58b41436a851ef25a411ca683",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "8ff04b599a2b4a3a9d1e112c1a58495e",
      "Inputs": [
        {
          "Id": "251af8fb4411486ba6cfc41031360824",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c70c4966034941e1ba0fc8283344415a",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninList = IN[0]\r\noutList = []\r\n\r\n# Place your code below this line\r\nacc = 0\r\nfor i in inList:\r\n\tacc = acc + i\r\n\toutList.append(acc)\r\n\t\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = outList",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "3cc796b7931b410e8eb31b83257c3083",
      "Inputs": [
        {
          "Id": "695fedeab7154bf9bc38fb6cb9058fc8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54df4064bdcb40b599e73ee8dbef772a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninList = IN[0]\r\noutList = []\r\n\r\n# Place your code below this line\r\n\r\n\r\nfor i in inList:\r\n\tacc = 0\r\n\tfor j in i:\r\n\t\tacc = acc + j\r\n\t\toutList.append(acc)\r\n#\tfor j in i:\r\n#\t\tacc = acc + j\r\n#\t\toutList.append([acc])\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = outList",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "c036eb51f2af48c89e27e91b19746368",
      "Inputs": [
        {
          "Id": "06cb5229c4a14b47b082058e91a8f89b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eef87ae32aba4c84b10c5d6c5c4750dd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "47eb06ff97e54a4898b6342553fb69ea",
      "Inputs": [
        {
          "Id": "0954ac6adcfd42edaf32ab5656e92efc",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59dd57b8370a445ab90883f867a65acb",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "538f53d218a345a4b900e4ffa54868d4",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "343299a493a0495dadc011df79e98feb",
      "Inputs": [
        {
          "Id": "bea7659cf2ec4a78997996d50af609c2",
          "Name": "element type",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8dfa38c10f834a3183c99e4fe8b65201",
          "Name": "elements",
          "Description": "All elements in the active document of a given type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All elements in the active document of a given type."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementTypes, DSRevitNodesUI",
      "SelectedIndex": 178,
      "SelectedString": "Level",
      "NodeType": "ExtensionNode",
      "Id": "c90ea9dbffe149ce8f066886eec0610c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "150013032f974c4e84ba741d6f1ec3bd",
          "Name": "Types",
          "Description": "The selected Types",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All element subtypes."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "a8ccdb73a21f4f1187ed27b0d07f9953",
      "Inputs": [
        {
          "Id": "2a583ac726504792aeb67b59bb195cac",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a0bb51c848942d5b9f66bac42b8dc14",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c8cb6c386fc46d4958ce1cc6486676c",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "02ddd431de874a7bb98f9d077df31ef5",
      "Inputs": [
        {
          "Id": "68192f9811f0467cb30ca38e897bc16f",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9df3f8252f03436a8e5b7459e60d5075",
          "Name": "count",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Elevation",
      "Id": "29ee8c6893494277b9e80330c80cfa82",
      "Inputs": [
        {
          "Id": "cb992bcbf289475db7c4d0e25bbf3197",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "514b3f621a3744388fc42e8da3ccac18",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The elevation of the level above ground level\n\nLevel.Elevation: double"
    }
  ],
  "Connectors": [
    {
      "Start": "bc6ae0be021949ea83cf73ff71d4dea6",
      "End": "57fd683190ab4c0a9716fb3ffbb4b21e",
      "Id": "ed75cf783bc64187ba285bff2c8bda69"
    },
    {
      "Start": "950d2035e24a44a6a20fa219d25fe502",
      "End": "0fae902c95bb4845b9c4d5dd4574fe20",
      "Id": "7224ed43bfb54f79aa091be4539bf099"
    },
    {
      "Start": "2f96287f07fd4f518559869959ef62fd",
      "End": "72a5c326a0364bc880529396ec2ee2c4",
      "Id": "2c4ae78cf8354b60adb0f29c806f2e5d"
    },
    {
      "Start": "d3cdb693d4d3407bb862c9642a0561c9",
      "End": "1daaab35f7fd417e83fa4c1b89b28f29",
      "Id": "188a0be7a87647d5bf18dd2d2f66cceb"
    },
    {
      "Start": "4bce2b73c834430c85b9f84846e1bbb9",
      "End": "ed6b1ba476914b059a8dfffa59f78bb4",
      "Id": "e2bf5a983a484b5fb3e1f84290fd0016"
    },
    {
      "Start": "cb1acca6ae7c4a7a8d656dfd60cf6345",
      "End": "f190ab41da554d83a507fca57bcbd927",
      "Id": "f51e77e807b64f7ab00ad4bb72887bfd"
    },
    {
      "Start": "9e49c1e98b5c4fb381f7da4383a0d4ce",
      "End": "93d7b8e1dc7e4ce2bbece706ab09688f",
      "Id": "2297abff90ad4ac58d964b84ddd2b2bf"
    },
    {
      "Start": "183cab4866474b728b50f52f8d91bd33",
      "End": "e62603b4299449fe8e79d6a74ce18ebf",
      "Id": "acdd5583b55d4be6b0d14cd881c4f610"
    },
    {
      "Start": "f1e9ae8a89c54d45a11a37f5cd51bc6a",
      "End": "272015a82ac047489cf137890ba1bbe4",
      "Id": "8e25aaef9f6344559a321033b1e8b381"
    },
    {
      "Start": "2682aecb1b654116ac0301ba01fdbfca",
      "End": "4feb6117725d440ca3c0bc827d01b90d",
      "Id": "4b576acfaac747eebca0b715b5925549"
    },
    {
      "Start": "45b57fec73ee4dd1a289c9ca84a3f311",
      "End": "11a1f6f34ecb431dbe32874360bb56ee",
      "Id": "5a1bc823194e4eda98d1da574bd80dcb"
    },
    {
      "Start": "314684e212e74c7a800f56bf5de71169",
      "End": "c4665f435fb347339352ba33b52050ea",
      "Id": "79598fe5662c4792bba6ac58eca4210f"
    },
    {
      "Start": "cfecbdf8ba094616bba3fc65926023d4",
      "End": "0a6775fcd9234a6ca6df20343fcd7a67",
      "Id": "5f9b36417110468686ccf7b5c05e98b9"
    },
    {
      "Start": "d03de4593e23483db1b2ee88068edcf7",
      "End": "2f42424fb847435ebd4c1f5ed4335cdb",
      "Id": "6db2b452350c442faa09ffb6975c82ed"
    },
    {
      "Start": "7ef2a7729ff1447ab5dc1d692a93b004",
      "End": "72c0c7be471f455881243447d8e7b25e",
      "Id": "a8d78cc9b6844a31a8da81d8bf56844b"
    },
    {
      "Start": "38ae13b7322a4eb69929cde390250e0e",
      "End": "9ae85d5b5e53451691301db0da65ac76",
      "Id": "2308af8e08684f179367eb218f61557c"
    },
    {
      "Start": "062f1048ca7845a4b67ce9e2026d53ce",
      "End": "57bc3bfa5db64d0f96d943c2ff3d307f",
      "Id": "daff101ab34b4234bf18c00cdbaa0566"
    },
    {
      "Start": "d633e029970949dfaa1363552fcb38eb",
      "End": "447903d94e4043e6972e51ef47a04d27",
      "Id": "2347559b81074d3880fc7b48cfd16a3a"
    },
    {
      "Start": "d633e029970949dfaa1363552fcb38eb",
      "End": "103c31702c184700988872bd49dcfaa5",
      "Id": "fc0d3f376d6f4c24a57b2ec880690d72"
    },
    {
      "Start": "deddf5a22bd04869ac0bec23d63d1643",
      "End": "cf04d7702c6a419495bb2ca14464489e",
      "Id": "65c19aee093149eb872239dc8808e53e"
    },
    {
      "Start": "e665f4cfdaad4035b721a0f102c74094",
      "End": "416f41663eb447e7a14171c158ed3bf0",
      "Id": "9543bdd3098c474a95ec8dfa9621cfca"
    },
    {
      "Start": "d46833d16f8e46a8b8ff67af420f8e78",
      "End": "d830fdb437f249778c7d7f0eab8a9dee",
      "Id": "3c4be28d42a14221813707c1ac02095a"
    },
    {
      "Start": "2c5642d83756498db1aeda9bd1783248",
      "End": "59f4cfeaff584ad8a1c0af59e89a4c8c",
      "Id": "e1e30ba494fe475785d2e860c20964cb"
    },
    {
      "Start": "5d7d59decfa84501b9687018c61b5b26",
      "End": "94e9e8aaec9b4d18aec5f7ee8131b88b",
      "Id": "5723a920b946497ba6a1769d4db9a07a"
    },
    {
      "Start": "5d7d59decfa84501b9687018c61b5b26",
      "End": "ee0557681b6343848ebb841c81c957af",
      "Id": "aef6be3b60c846078d8350971b37d3eb"
    },
    {
      "Start": "5d7d59decfa84501b9687018c61b5b26",
      "End": "2aca84b6df504d90bb0d89bccdd92045",
      "Id": "dc526048caaf4c1eaba8f19e5601d3d8"
    },
    {
      "Start": "5d7d59decfa84501b9687018c61b5b26",
      "End": "df29ef23308d499b8b52ce2e34f47859",
      "Id": "3879bfabb8454f82ab03cc31458acd56"
    },
    {
      "Start": "da61cd329e114479aed194ad94982bc6",
      "End": "90a84deefa4f4acc85a3dc9c0c77c7d7",
      "Id": "a69ddcb8a09f4e17b0de65561fb40c0a"
    },
    {
      "Start": "945676a4b7da47dc8e00c4ccb2f39c0a",
      "End": "ae0b107e920342cbb6069bb659c95dc5",
      "Id": "a598727dfbf64575ab7ba4f7f57ee2d5"
    },
    {
      "Start": "5072cf5a4bd64e25ac3d1520c82d2b10",
      "End": "0982a8350896451ca75afab69636a88a",
      "Id": "e0169ee63b004f3e8213e720a0cbbe0f"
    },
    {
      "Start": "dbd4fdbdca684ffb9e231ef578492c08",
      "End": "48bf004389774eea97f8185bde42e54d",
      "Id": "dc0693d92d664957bbe8eb7c64ca69b3"
    },
    {
      "Start": "245e2506a0e44e5babe13bd7a4bd0c97",
      "End": "cf378312820c40589845830dd1af4d44",
      "Id": "db0423cbc19e47c8a5d5b38752300d14"
    },
    {
      "Start": "59968d186e6b470194b3fb8147914c77",
      "End": "02a5bcc9a6874fcb8bffa93fec73f214",
      "Id": "d8a8cf443e1f4132889f21b9c549b8a8"
    },
    {
      "Start": "f2ffc3dca09e4dbfb0ab363d26e7ea57",
      "End": "a09af2ba7d774451b8a1c77118a180e7",
      "Id": "1da3297f431f43a9bec54f1369b81947"
    },
    {
      "Start": "851b8f256dfb495eb12d19a03d43bad7",
      "End": "dc552365d8b74c6ba49cd865a86f0cb1",
      "Id": "9cf050abcc054bfc927abd6f2389e37d"
    },
    {
      "Start": "c88be71f175d4f6f949142f7536ec750",
      "End": "736b5a8922f64a909a5531127a99362f",
      "Id": "551539fe98634442b157350134e9560c"
    },
    {
      "Start": "68c1338dae244c698e0310531b6bf5c7",
      "End": "851fc31a6553426cbb1efbfe32c207e2",
      "Id": "7c2fb96ce2a846f6929f447a1205d7af"
    },
    {
      "Start": "cc4dcfca780b4f06b8682a5ad8cd6e33",
      "End": "5cf28b4dcc844c478e58cc2701a456e1",
      "Id": "56621e8defbd4e94a4ba83ddb91ce2f9"
    },
    {
      "Start": "70805252a3bf4009bd09f4a021982980",
      "End": "3c33f45cca1f4a70bff19597b80f3054",
      "Id": "079c010683154c029c671eb2db8ba453"
    },
    {
      "Start": "6372f74449ca468d9cf9f7831df70ce8",
      "End": "a92d946583de4b1f8a88e2df99997e8c",
      "Id": "29a951a9d63b4099b5b99b52b00de885"
    },
    {
      "Start": "6372f74449ca468d9cf9f7831df70ce8",
      "End": "149a176fce5e4201b10c286ad849eac9",
      "Id": "d9b471964b6b4f14ba72e9e16f8e82de"
    },
    {
      "Start": "6372f74449ca468d9cf9f7831df70ce8",
      "End": "c7a6d76e2f4b4e7db1287ce366cd4899",
      "Id": "10bdb0043d5b44448ae7136333f68a4f"
    },
    {
      "Start": "6372f74449ca468d9cf9f7831df70ce8",
      "End": "c377988a5bf74ae88ba17cdbd8773050",
      "Id": "667f0de158874a448e4478cd940cba6a"
    },
    {
      "Start": "6372f74449ca468d9cf9f7831df70ce8",
      "End": "5b8623f6f0054ae5bdb7f4b9bac65557",
      "Id": "7598bed7e54b417dabde5ee78a73b93b"
    },
    {
      "Start": "6372f74449ca468d9cf9f7831df70ce8",
      "End": "a5cf45ba8e5b48a2add855ac22eee20c",
      "Id": "b0c087a6f15a4cea9bc9ae43fc3eb260"
    },
    {
      "Start": "6372f74449ca468d9cf9f7831df70ce8",
      "End": "5f0818b1c74b4b219033bb8e644dbef5",
      "Id": "d5cb9df18e2c4ae889f82e08640a4122"
    },
    {
      "Start": "e687d1c7bb2f45a7a019d6018d626ecd",
      "End": "524e1b8bed7441f0859eb7899d77ad19",
      "Id": "2ddc9c059bae46d080ad38fcf193b462"
    },
    {
      "Start": "20e2f3e39ad0405da88b4aa53c9efcb8",
      "End": "1b88ae905d714d6fbe6457dc94773f90",
      "Id": "f5e47c7400a04c47af590ca2eea652e9"
    },
    {
      "Start": "a633c797ba304e9bab5e140f6788f986",
      "End": "f0e88778c81548989ef65ed2116819f7",
      "Id": "f3698ff4dc3545f5919835680388108e"
    },
    {
      "Start": "2ce47066ab2942559c2f6111c97b02a0",
      "End": "49dae91d260c48acbcc4130472e36fc5",
      "Id": "c453069c7aca4508b4134e673c049391"
    },
    {
      "Start": "9e1ca0d2e06a4c00accfb3b6d84c73b0",
      "End": "764723d1741f4cc4928b92524e68b79f",
      "Id": "e26f322db5b248049ec6b739c3a80c6b"
    },
    {
      "Start": "87b5d5d84db1493c88426d64b9859c3b",
      "End": "42ad431c77f747359405ef32081e6f2d",
      "Id": "205a714a0f5d4b3cb32d522a0bdb2eef"
    },
    {
      "Start": "1a7ecd9b6b074e5b8fd7a720c42d60c5",
      "End": "c0fe06442e784d508c15e281ec6f06f3",
      "Id": "c39edfef83fd4487b483d1668f83d46c"
    },
    {
      "Start": "fe1874449a564e7cb04734006566f2e1",
      "End": "f0beb51b66b14c5c85c22d733d7a5634",
      "Id": "e989f7c2f6a84d718dce427ac3703a44"
    },
    {
      "Start": "00aee9cd19d34365a0b8ce1e1a1cbd0a",
      "End": "315f6239237f4f9a86a82b625446f454",
      "Id": "19f21e8c7d6f4872b5cb1595e24cef2b"
    },
    {
      "Start": "389f335acd5c4254bf7bcbb442aafddd",
      "End": "eea53b0f43c44bf1ae860afe02842487",
      "Id": "e400e12631d74605b48872de5cf7abb5"
    },
    {
      "Start": "9b966b8d53fb456db23e93c7388140c9",
      "End": "ae7ace04b46b43fcb361f0ea24abcddb",
      "Id": "325627bd4b5d4edb924d6423617419a9"
    },
    {
      "Start": "62d7a26f9dbe441a804013b5ebd03e14",
      "End": "2eca777130a44e64be7ff5ed2d41fb24",
      "Id": "a992738e7c2f4c758f522b38ccd10c8d"
    },
    {
      "Start": "246a8c281eee448a972a3dcc4406de5d",
      "End": "f1e764485b194ae89dac5877e930b25a",
      "Id": "d376dcdd6fcf4988bebb5df9213dd558"
    },
    {
      "Start": "9859243cd5e8461aab273d7601d1a757",
      "End": "95bf1499628c43ceb2b842699d62f862",
      "Id": "2d670c8d75914d9b8e22586d700171d0"
    },
    {
      "Start": "9859243cd5e8461aab273d7601d1a757",
      "End": "4e26af4519c74ecbbc149abb0f08d877",
      "Id": "6fbe5867ecbd4347be7412c0e15a0f1e"
    },
    {
      "Start": "d3bf4f90c7c744e784c1318815d6091b",
      "End": "7c9de49c122c4afba8c7c4770319f365",
      "Id": "a7dea5cf3fc941c990882b5f1ec40a51"
    },
    {
      "Start": "89198ffde8c346cfa1cb6d13606a96c1",
      "End": "5a772ceb16594002b0c7f3b19175617f",
      "Id": "6892b2365063448d95ede85fd4953200"
    },
    {
      "Start": "1bebf1db59b24d05acf06e78d1ce447a",
      "End": "39e2a1b639c343d18a4b8475f2998248",
      "Id": "1e9c6b052f3f48608560dfe38ddcc24f"
    },
    {
      "Start": "1bebf1db59b24d05acf06e78d1ce447a",
      "End": "b814413cac1047e595756bec87ea2f1e",
      "Id": "c7bd6ba5b67a443394c5910190ff3b87"
    },
    {
      "Start": "1bebf1db59b24d05acf06e78d1ce447a",
      "End": "7dcf71afef22458da368b3ca06df6359",
      "Id": "09dd73f75937448da22bdb9e726df370"
    },
    {
      "Start": "1bebf1db59b24d05acf06e78d1ce447a",
      "End": "0c5f7b70fe364d189718bf839574a79b",
      "Id": "64e9ceba20634461bb4036549f535bb3"
    },
    {
      "Start": "1bebf1db59b24d05acf06e78d1ce447a",
      "End": "1704e119bfde472b89fe52e7ab588c2b",
      "Id": "1da33252a2904fcdb91ff43a1a48156d"
    },
    {
      "Start": "1bebf1db59b24d05acf06e78d1ce447a",
      "End": "c188cc67eb5f40169f2d5c3e82e0c4f2",
      "Id": "9cfdff2259174b2f9d3af20a20adf4fd"
    },
    {
      "Start": "1bebf1db59b24d05acf06e78d1ce447a",
      "End": "fb346c61162c41259c379a021af38557",
      "Id": "197c6a37d0dc4337916c658f7cbbb50d"
    },
    {
      "Start": "e0502e9cfb4b43e8a1a40aedff527696",
      "End": "8c22a9ef076548eab75305327272d529",
      "Id": "31603c6cc77a472cade74ab2e56bb8ac"
    },
    {
      "Start": "d479ff0238a34ed1ba6265d543b726c1",
      "End": "3bc5608246ce4610a4e1e58c31f21bcf",
      "Id": "6cfe9f2ae71c4a199253e2674e37f6a8"
    },
    {
      "Start": "46662ced2dd94d16a8c76c5595b55b29",
      "End": "a8626c1c23934264818fc2d17aeb721d",
      "Id": "6d6dc8f323224ac2b64a205f1c9a72f1"
    },
    {
      "Start": "46662ced2dd94d16a8c76c5595b55b29",
      "End": "eed3979f6770493f84e1d681d2286ae3",
      "Id": "100e29ee899d4a798511d861f017fc15"
    },
    {
      "Start": "5178d39742c045c59c1adc04e06b06b6",
      "End": "6202494da1d142c588b6c3b3617586a3",
      "Id": "f8ed9d1c92cd42f5b1f864be29b675fa"
    },
    {
      "Start": "dc95f6b491044063a8e7183c8577c70c",
      "End": "2f48f7d7704e4ef193550803e2e710c7",
      "Id": "8373228ee35a45dbae1de97097806d00"
    },
    {
      "Start": "e4c154eb306b4203896fd2aec125a03e",
      "End": "4b1b0ad4cc8d48459dace1738243195a",
      "Id": "eb2472bed5fc49e2996e296ee7c47f35"
    },
    {
      "Start": "feafdd94d89843269fa0cd916e528065",
      "End": "4a3a6120d08a46c7bd71eeb868e8963d",
      "Id": "bceebbee596749ad8cce2c14f781d14e"
    },
    {
      "Start": "f4637e03d26447c9bdf7e2b92e46e42a",
      "End": "e4cf5447c0d94b799ac97925e11e381a",
      "Id": "380065e486674bc68e690dfb12d2f9b0"
    },
    {
      "Start": "0bf8148d23dd4d40802b26e1b53167b9",
      "End": "754e7b0c4b2e42dca98f9d9ddb18d304",
      "Id": "8916630672bd4ed6bcf10ee66722d207"
    },
    {
      "Start": "71cd70a322874a0a9adfcb5ec6c49644",
      "End": "6dbd25ca49fa48f0b4a777f5a54b96bb",
      "Id": "635c3ff2f07444f6be330fd5458d5a93"
    },
    {
      "Start": "c6c29d67246b42fca057bb3a8bef0d65",
      "End": "098425a65bca47a1acacb09dbe2394b5",
      "Id": "ef9823ca14c0426c876162a0b2af0710"
    },
    {
      "Start": "c6c29d67246b42fca057bb3a8bef0d65",
      "End": "a6253b4a947643e282adf7992d35e209",
      "Id": "0b429502e551488bb41cf2637a590da0"
    },
    {
      "Start": "2888cfbc77d74201849190ccf91f12bd",
      "End": "f525f0f170cb4854913d2d9b9b5c7e09",
      "Id": "23eabc3de35b4b25b341a1062a7e7389"
    },
    {
      "Start": "6b5b41707533467ba0332f55d7af1188",
      "End": "5e0da02079384e90873413d979aed733",
      "Id": "b24ee92c4c81432f9ba8e746ba547b1f"
    },
    {
      "Start": "bea016ae9cf941cc9f7e43aa7a3d43c0",
      "End": "7e0611875840497dbc416d1e3d7c3dba",
      "Id": "e09d7965657844208b4e1cec8229d724"
    },
    {
      "Start": "44657b37838c466aa5a01d3b144259fb",
      "End": "f8e7860c393240eda8c561da046cab55",
      "Id": "de625feb436945f1a21e5494fc992c46"
    },
    {
      "Start": "44657b37838c466aa5a01d3b144259fb",
      "End": "973b1b40be554af4a4aa626dfd31a629",
      "Id": "d7df912ace944de0a45e0f926bc4cfe2"
    },
    {
      "Start": "dd1d54b22bb64113a7dc42a1f04d9729",
      "End": "9d2c9b44bfd14f149cba7a2c5bdf0b78",
      "Id": "b2b7a28c9a374f7b8f8c76fc911b44a4"
    },
    {
      "Start": "707d0bfcfbba4deb95ec4adbd8c2de69",
      "End": "8266d9cdf3ec4fc0ada141fb5ac31c9f",
      "Id": "93e9644e40974a5aaf24f3dea905b697"
    },
    {
      "Start": "c9bae33b712e4ff987de0fc6b404248f",
      "End": "1699b2cfbc494f2186a91f359297c28d",
      "Id": "1ba6edda221249d190ae6aafaf417a1e"
    },
    {
      "Start": "323ef962b7254123be046eeb15f6906e",
      "End": "c58db7ee626b46c882b6240c01f029f1",
      "Id": "17ebdebe373f4fd988720b03d8fe3b08"
    },
    {
      "Start": "6db5fd1f95064e41a352cfe78615bee7",
      "End": "1a3dfdc5fecc4d77be8b3685f851ef0b",
      "Id": "7f5fe7fa12f74888b431f965fe873b01"
    },
    {
      "Start": "ad3eaf81f2884b0590aa471b70fcf99c",
      "End": "0b63805742804e10b61984428c28e4eb",
      "Id": "ddac3b69df9545e78cf026922d3ff844"
    },
    {
      "Start": "47abca3198174e0383a3d6db861af699",
      "End": "44a560b0b45b4696bcf48a9d7ce571e9",
      "Id": "1a3095743a80458481fa80650931fd4b"
    },
    {
      "Start": "47abca3198174e0383a3d6db861af699",
      "End": "0e18dceec0dc484b9450e580effc3505",
      "Id": "c5ce6f834fb347d990adef1990dbf3ef"
    },
    {
      "Start": "0a4ae4f180e64258af732738f5bb7b52",
      "End": "c717f9769c814ccb9489b9caaa788705",
      "Id": "617c8973f9af4fc3b9dbd51ffa7c11a3"
    },
    {
      "Start": "29bd2e21c2654c07b81272de1b8b9dfc",
      "End": "150874b6f2e0418dbf462af416da90cd",
      "Id": "bf6778ac8ceb43c786c5011f57c671b3"
    },
    {
      "Start": "dd698a4193a14e02a62e1b9fda93b503",
      "End": "695fedeab7154bf9bc38fb6cb9058fc8",
      "Id": "4532e340da144716858f36ab00a8a2ff"
    },
    {
      "Start": "18471faad5f54dada6fd7be107ecdd77",
      "End": "18b5de8e09894863b775426864ef1b58",
      "Id": "640f851ffc724d3ca97f84b6c1903a55"
    },
    {
      "Start": "23860443b1d34e4cb93fcf2306180af5",
      "End": "6360b952af2243cfaba74ac75c9a3a0e",
      "Id": "65842d415d674f878c07bd1b36d50d3f"
    },
    {
      "Start": "906085b36861454996a238f1e80ca7dd",
      "End": "fc9b31ac05df47ab8734f2ebb49c7cdc",
      "Id": "58d9e8b5c2974b009145fe0f1cafb9ff"
    },
    {
      "Start": "906085b36861454996a238f1e80ca7dd",
      "End": "1c2a0de992bf4bb999b298c408bc387a",
      "Id": "0c63c93b95e0405e90493d39fb507fb2"
    },
    {
      "Start": "60b2bdcc0d584b1087e21268a0e7600d",
      "End": "251af8fb4411486ba6cfc41031360824",
      "Id": "dcc305fc2328407abb03e16871114168"
    },
    {
      "Start": "60b2bdcc0d584b1087e21268a0e7600d",
      "End": "06cb5229c4a14b47b082058e91a8f89b",
      "Id": "48db956031fa41009c34f75d50b551d1"
    },
    {
      "Start": "ee9a157a673445a380bb6a611a407c67",
      "End": "7bc745b0868841e2944c9759730f9687",
      "Id": "39e67fb02b8d40aab055451307980e5d"
    },
    {
      "Start": "2f8c136251f9456aac50b4889c3ecfd6",
      "End": "4d0d8f1ec9d24a15acaa76ef7b3c31a9",
      "Id": "9c78398d05dc420c89ec1eddadd680fa"
    },
    {
      "Start": "fbb46fadbca9425287b268ec6c57f60c",
      "End": "ed088a7b6b964723bb15c04130d4a5d4",
      "Id": "5e90333744fc45748c6d3997cb615f98"
    },
    {
      "Start": "fbb46fadbca9425287b268ec6c57f60c",
      "End": "02c3e547c67a4897b87d5ada40ba1b91",
      "Id": "d73273aff2a543c3ba5a59b49d1c235d"
    },
    {
      "Start": "64412248f3e6409d991444ecacc064f8",
      "End": "147a7ac22f224c03b9582f9a44b287de",
      "Id": "18d235adbbca48f889e5e265870870f7"
    },
    {
      "Start": "64412248f3e6409d991444ecacc064f8",
      "End": "e3542328957b4f95b24a4e92f7db7036",
      "Id": "208ebf70c8f34a2194577afd20e30186"
    },
    {
      "Start": "2231dca7877b458fa575ac538d747a36",
      "End": "c9bf5fb027864571bce53cb94e2828c3",
      "Id": "56021e8b2d5840ee91aa09ac848a041c"
    },
    {
      "Start": "8b963a26847d4c13a853a83b6afdf59d",
      "End": "e1b6f8a5e08f4fc29773cc128f9bbef7",
      "Id": "09af43b81a164f27a1a417c70c17d939"
    },
    {
      "Start": "a4e477afcc3c4fa8bd414d4db5093a52",
      "End": "e4c72d19f8c34c269447b145cf432977",
      "Id": "5d9b2f105ff54f6f9a005b39463f37c6"
    },
    {
      "Start": "366d19984c6f4874bfc8f12f41995836",
      "End": "a1ba26ec832845789ce02015dd458cce",
      "Id": "e960b5f1c5414f268c67f32d6d03a700"
    },
    {
      "Start": "0f250654273c4a079cfa32985b092d8f",
      "End": "13054d26723e4c7cbd24d9e22f6d78f8",
      "Id": "ec0b717dc6464259baa40e07bf3a2781"
    },
    {
      "Start": "0f250654273c4a079cfa32985b092d8f",
      "End": "17519e56a8ed43ef958e173b23e36b78",
      "Id": "33633a13bc024a97abd8a8cbec824e36"
    },
    {
      "Start": "3195e9e78c174b9ab5b8b470fef57593",
      "End": "08d413c45ca749b6836b1e28cd8c0281",
      "Id": "87cf8d23df544bf5b5e269cbd60d0b2e"
    },
    {
      "Start": "fa74c1371bfc4d098669329c1a589f00",
      "End": "fc81df3eac4849299960ff2cf204d1fb",
      "Id": "ee31b34733b9454a85bda6725fa839c4"
    },
    {
      "Start": "1f34adb65b40465b99242da96bbc6675",
      "End": "c0ad375e5a6d474f95e2c3c15b31cd62",
      "Id": "72ddfff5307e4085ac721f600aa69d48"
    },
    {
      "Start": "996fdb0e058a4577a6a7262a465df95d",
      "End": "09728abb205e44b7a10265acdceacb49",
      "Id": "2fcb7f5e80274429a970227e64224061"
    },
    {
      "Start": "996fdb0e058a4577a6a7262a465df95d",
      "End": "5c64652702874257932af28054238a9b",
      "Id": "573e3405c22b4388945b8ea6f3197fa3"
    },
    {
      "Start": "e60034c5f0e64e22a0320d06e68ce778",
      "End": "80152050ff324855acfd04ec02bb864e",
      "Id": "0aba97175f0149e0beaa16278aadb330"
    },
    {
      "Start": "0c573d2d64ea4b3b9bce451b3aa01706",
      "End": "c5561aa14b2a4449a5a168df0ebc6a23",
      "Id": "d965fb305076465eba29e666532a58ea"
    },
    {
      "Start": "0c573d2d64ea4b3b9bce451b3aa01706",
      "End": "50549dfa514d4b55ac0391ed92ba4dc6",
      "Id": "b0b0af90859340638cdd05442aad414a"
    },
    {
      "Start": "b67ec73909ef4deb9f95dfa3ed8c3a32",
      "End": "0fa24198fda24d1c9bc650fcde30540d",
      "Id": "7b17267497a140be917971a0284a6f7e"
    },
    {
      "Start": "d89f35e8c6dd477b935c1e371252bf19",
      "End": "6a3b206d18d045e994fa4372b47edaf1",
      "Id": "ae5a6f13ea894d70942b88a1a4db44df"
    },
    {
      "Start": "80fee5415f2943a7b330c7a39edf59d6",
      "End": "dac8a833f3f0472dbfc31b17f7498b08",
      "Id": "f2f6b4973f9743078a24cfc1fca66e37"
    },
    {
      "Start": "5f3d52c647124f0ab34246caae059f0d",
      "End": "27b956de4ff244a5983c1a7d91ee6bf9",
      "Id": "223bf3c086e34f6592474da0ec181996"
    },
    {
      "Start": "5f3d52c647124f0ab34246caae059f0d",
      "End": "76ed70e6169c4b0d8def1f8f8ee11140",
      "Id": "6e804d039e2f4a1b96ef5fd5595a7dfe"
    },
    {
      "Start": "5f3d52c647124f0ab34246caae059f0d",
      "End": "b520c04aee1043d4831dc85380ee6baa",
      "Id": "f6c0b774bc0f40e98e8fd47e9d9d0d89"
    },
    {
      "Start": "6c400217ac364e19a40de9d356690882",
      "End": "4a8cce3cb89b4145923e49a51fb9f16f",
      "Id": "6eebb160951744d29ae9ba1fef5a48aa"
    },
    {
      "Start": "419e7518213a42ecad169a29fa1518bf",
      "End": "1ba54fa06dfa43c9a2f19a27dc2c8afc",
      "Id": "d848a0a416fe41478429e77425a484d8"
    },
    {
      "Start": "419e7518213a42ecad169a29fa1518bf",
      "End": "21c51fd14b8e4afa9806b5662482006b",
      "Id": "d280caa54b8a49d6b496e04e9c9f5143"
    },
    {
      "Start": "419e7518213a42ecad169a29fa1518bf",
      "End": "e37fde87bfc54e90b7b1a59c45995577",
      "Id": "d022e70efbbc4e03a6260ff25b26f424"
    },
    {
      "Start": "419e7518213a42ecad169a29fa1518bf",
      "End": "8d26867e42a54ace946781b35eb6f09a",
      "Id": "f017a2969591491ea350f9597d93f059"
    },
    {
      "Start": "ddeaa685c9e444ec90bfafe141f03b8e",
      "End": "048198d2a9c84babb92c3b3635d60130",
      "Id": "3abb6139540a474a905da40f6993f5e0"
    },
    {
      "Start": "82109a5d1b61488cb995dafa4cbc55ad",
      "End": "69aef49ea0d0411b81d46788bd39c7da",
      "Id": "21aa0c9d15e54c5bb6f8b1f2d067e545"
    },
    {
      "Start": "09a84577aa29433d88e4b00371db286c",
      "End": "fbbbd821649b486189857d59aecbfc7f",
      "Id": "16803d7bd6814ce0b7366211c95cc35d"
    },
    {
      "Start": "ef8ae89b85364990a76426e877002f97",
      "End": "7fe03d2145b24a45a240d0e7d3aa6798",
      "Id": "917b66b4b65b4ea782cd65a84e1dba5f"
    },
    {
      "Start": "fe427f3725a142a390649fb7f8de222a",
      "End": "c006cb17cd4546479e0badec7b5adc52",
      "Id": "d0d8c4e7c3a24592a000e99afbe88a7d"
    },
    {
      "Start": "670dd57f336e45a5ac5740e68fead4bb",
      "End": "b19447fe558b485eb47c4def1b7df101",
      "Id": "c9cc73ad1ede4212b4c8443f231d60d9"
    },
    {
      "Start": "5e64f70188574d24a3fc690ca8dc9a67",
      "End": "f3f576fb2905435abc7eb8bd887fe6ed",
      "Id": "769248acdfb442568cd230722172f6cd"
    },
    {
      "Start": "4427d9eaeb5f47faa7d16e31ac49fc0d",
      "End": "9f45d46e5219462082f8950416e6d623",
      "Id": "a9de2b50f37544a28717b01574a96471"
    },
    {
      "Start": "4ef35fa711624d368b1691bbbe4953c7",
      "End": "cf080bfc91e24d46b72859b46e90a11b",
      "Id": "8209a94ec3294619a406603ca6bc9fbb"
    },
    {
      "Start": "4ef35fa711624d368b1691bbbe4953c7",
      "End": "89c4842306214f68aecd39f4306738c5",
      "Id": "3794ca15d4f9421ebef55a00dd6d68d4"
    },
    {
      "Start": "21d4deca48dd42e08df87255a9c3ce19",
      "End": "906facf950744c048d1fc5a302948f1b",
      "Id": "dcf6f5648e1c4e708e5944e9f684eede"
    },
    {
      "Start": "ebc9b43663cb47ebb9074e11121a6903",
      "End": "d60a90647e3249769109bf69223c5bf0",
      "Id": "d45c90c9bf2647cd886642c7d0c37273"
    },
    {
      "Start": "f6339ea58b41436a851ef25a411ca683",
      "End": "e30f3a8f459b4ef8adbe60b4e1b6be0e",
      "Id": "5bb3e386e4d643b28b75ebe3c2816854"
    },
    {
      "Start": "f6339ea58b41436a851ef25a411ca683",
      "End": "21539a8cb7e741778c9e36c1ba51df4e",
      "Id": "c63f4dd933f44ff982a3533e61691896"
    },
    {
      "Start": "c70c4966034941e1ba0fc8283344415a",
      "End": "59dd57b8370a445ab90883f867a65acb",
      "Id": "303d219e15254c57ac30f0e36c7fbf37"
    },
    {
      "Start": "54df4064bdcb40b599e73ee8dbef772a",
      "End": "751bc134f8054ae7956b7d17a8c9974b",
      "Id": "8cda113f05be4bca9d55e3fcaa97e861"
    },
    {
      "Start": "eef87ae32aba4c84b10c5d6c5c4750dd",
      "End": "0954ac6adcfd42edaf32ab5656e92efc",
      "Id": "b86d2ed1c75b4e7684b746a4874c5d94"
    },
    {
      "Start": "538f53d218a345a4b900e4ffa54868d4",
      "End": "58338938571847eeb156b8b60e8214a6",
      "Id": "4428d4987d124a27a383b6de9bfc5a43"
    },
    {
      "Start": "538f53d218a345a4b900e4ffa54868d4",
      "End": "68192f9811f0467cb30ca38e897bc16f",
      "Id": "54dc2fc4d1c04713aa84e36306d8c3b7"
    },
    {
      "Start": "8dfa38c10f834a3183c99e4fe8b65201",
      "End": "2a583ac726504792aeb67b59bb195cac",
      "Id": "495bf80eb2ba432a93ab164b3d3dc159"
    },
    {
      "Start": "150013032f974c4e84ba741d6f1ec3bd",
      "End": "bea7659cf2ec4a78997996d50af609c2",
      "Id": "57db48ffe72d4f1caee8f25620b9513d"
    },
    {
      "Start": "0c8cb6c386fc46d4958ce1cc6486676c",
      "End": "f4c98657a8a84d6f902f070363a6c179",
      "Id": "99dc834485ba4b269bd6cf997b480f03"
    },
    {
      "Start": "0c8cb6c386fc46d4958ce1cc6486676c",
      "End": "cb992bcbf289475db7c4d0e25bbf3197",
      "Id": "d0e24055df734514ba40d8bd2df5013d"
    },
    {
      "Start": "9df3f8252f03436a8e5b7459e60d5075",
      "End": "8a0bb51c848942d5b9f66bac42b8dc14",
      "Id": "b3fa53eeb55346c09091be62a13b99f3"
    }
  ],
  "Dependencies": [
    "97d14756-c7df-44dc-90f2-6db28e143e3a",
    "8c837cab-46ce-4976-8ae0-2e6158103945",
    "f24465ea-e323-444e-81de-8ea9a03debce"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.3.0",
      "ReferenceType": "Package",
      "Nodes": [
        "eab128cf49414d12b472c3815eaf899d",
        "a493804eb93b4a0bbae1117e1ce19258",
        "a4bce4c463a04ec39d77cf604c17a62d"
      ]
    },
    {
      "Name": "Ampersand",
      "Version": "2019.12.31",
      "ReferenceType": "Package",
      "Nodes": [
        "4d51960e44c14c628c2178f5c8c638c7"
      ]
    }
  ],
  "Bindings": [
    {
      "NodeId": "09905737-7cd1-4782-9ffc-f3ce5c0eb5fa",
      "Binding": {
        "ByPointAndLevel_InClassDecl-1_InFunctionScope-1_Instance0_09905737-7cd1-4782-9ffc-f3ce5c0eb5fa": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 10000.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.1.3976",
      "RunType": "Manual",
      "RunPeriod": "100"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -34336.695231617872,
      "EyeY": 177061.90218247424,
      "EyeZ": 24018.703328487958,
      "LookX": 68580.445497477442,
      "LookY": -218341.67471038192,
      "LookZ": -127958.98377894551,
      "UpX": 0.32814777052093025,
      "UpY": 0.71933981645107159,
      "UpZ": -0.61226570257101331
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "c2778885e5fb4968ac28126bf6ea1ef3",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2073.72607346397,
        "Y": -702.904873836411
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex - SPACE(ROOM)",
        "Id": "363ed6e4ff214b02b77c99bc10999f03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7121.4448042034355,
        "Y": -426.72033154705338
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex - PROG. AREA",
        "Id": "96b726190e5c4abb81f2ee100a7dcb63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7121.350553934245,
        "Y": -276.17668705894238
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2aff5692de834177a0eaf748b3519a3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7766.3882271483053,
        "Y": -448.0175024456114
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6e677c2e025a47a8811743ceb7042598",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7793.861335960125,
        "Y": 158.27754379999965
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fdb27070cdd2412c9b90dfb28ece056e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7788.1813234547553,
        "Y": 7.3132253270362071
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "bea671811cf4445e8209a086ab143e1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7759.1538377120951,
        "Y": -595.67821205348037
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex - DEPARTMENT",
        "Id": "056f97c1930e48f187a75e00cc8dcb78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7120.4108586259954,
        "Y": -574.45230423210739
      },
      {
        "ShowGeometry": true,
        "Name": "Number",
        "Id": "34d3202f7809461ba524bb917c6e7b0f",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7024.671447820715,
        "Y": -400.59744864323636
      },
      {
        "ShowGeometry": true,
        "Name": "Number",
        "Id": "917a08a33a3d4f11a7aa61c9a3103171",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7020.3769423454251,
        "Y": -249.82892849932341
      },
      {
        "ShowGeometry": true,
        "Name": "Number",
        "Id": "d664bed9bf5d4985b1f4d243f3ff797c",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7023.4999341702951,
        "Y": 209.64334580629964
      },
      {
        "ShowGeometry": true,
        "Name": "Number",
        "Id": "e268818ee5b0423d94351f47f90efb66",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7025.6823095048849,
        "Y": -548.21560593551033
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex - WIDTH",
        "Id": "30348b3412d745e89368dc8281cba186",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7121.1845943171347,
        "Y": 183.11508606091866
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8f65ecd0d32143a0869ebde8cd78ec1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7739.4553541804653,
        "Y": -295.37065282932838
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "5728a002b41845c5bd6996a116275f13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -440.947630873163,
        "Y": -1385.10995711666
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "3682428619854be69d62ec68a2c9c770",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -440.129873827181,
        "Y": -894.574875224785
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0750cb806b8c4b7984074c5d5c73ebf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1111.77731140526,
        "Y": -1227.66586937963
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "db67c76591f44498bead43ef1a2ab647",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1325.31745691074,
        "Y": -1335.21224591517
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "12288277ecae4ff0861ca982c0e2933e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1791.85291521754,
        "Y": -898.744969169206
      },
      {
        "ShowGeometry": true,
        "Name": "Levels",
        "Id": "df6b469477a848b5aa3e7a0be2f416e6",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2137.16076456646,
        "Y": 36.3152962922467
      },
      {
        "ShowGeometry": true,
        "Name": "Family Types",
        "Id": "d51ef53eb2ad4940a33fa21d8504710a",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2151.1599865105,
        "Y": -163.936238213727
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "23849dfabf56472a9eb3ac37bc3da414",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7956.1913745004849,
        "Y": 128.9438115161646
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "3ee2d9d289bd414fb8b105f0573ee035",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7956.7426591484655,
        "Y": -23.334335640830886
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "a94c7bbdd4084f0d893cc9e4db96cfd5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7953.9974555666849,
        "Y": -629.46081360534936
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "31963dbf9d5842d18fbb43b504a01376",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7953.1242794678155,
        "Y": -326.59927817148736
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "205f52b0eede403e8d657c2f0523228c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7955.1949673058052,
        "Y": -478.00982601820135
      },
      {
        "ShowGeometry": true,
        "Name": "Number",
        "Id": "5abe7d33e3c744cca70c5b5d0613dcb5",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7025.5382377749147,
        "Y": 372.86533618275666
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex - FILL COLOR",
        "Id": "66068bef36964807b1c2d7e0d0b6c1c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7121.1583940175551,
        "Y": 346.64093912117369
      },
      {
        "ShowGeometry": true,
        "Name": "List.RestOfItems",
        "Id": "743cc0320ca046e6bb37e330623f1854",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1254.16697185097,
        "Y": -705.304286681615
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex - HEIGHT",
        "Id": "3158f6a275b84b6d860e618342ff8b72",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7123.4061305222749,
        "Y": -122.00047264741488
      },
      {
        "ShowGeometry": true,
        "Name": "Number",
        "Id": "79235264d4c148a68dec43a4be48ca79",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7024.5518412119554,
        "Y": -95.871706516689869
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "5dacb0ecf5254106af10f086f0e8f11a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7956.2906576865553,
        "Y": -174.93131366601733
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "38d9f2512e98424cb294195c56809cf3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7790.1247463882655,
        "Y": -143.85627844835636
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex - LENGTH",
        "Id": "8bfbe7569a974b3dbaa51eb1723bc6c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7120.3621817264848,
        "Y": 28.396870667437838
      },
      {
        "ShowGeometry": true,
        "Name": "Number",
        "Id": "8f6331593f72424c9bd3d2b45510a4d2",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7023.5610014890653,
        "Y": 53.45023746247773
      },
      {
        "ShowGeometry": true,
        "Name": "File.FromPath",
        "Id": "83f83042774b4ccfa53f4bb458a4eb58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1705.02650204053,
        "Y": -704.984828322737
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "b85cb794d1b04f1e94d6cfeafd3d2d18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1534.31789893533,
        "Y": -705.136411099445
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "280ec82a23134bd58293a7ccb286ec45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1705.32844665538,
        "Y": -602.746032489993
      },
      {
        "ShowGeometry": true,
        "Name": "List.AddItemToFront",
        "Id": "e25aa21849d1482e87c5dea6bd7a46c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1073.82381635834,
        "Y": -1454.97027706395
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2020fc03a2d443c897a31fabb77b140f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 951.969721820953,
        "Y": -1450.96753752245
      },
      {
        "ShowGeometry": false,
        "Name": "Vector.ByCoordinates",
        "Id": "02fc5c87b3a64893a5b928b275c7d755",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4974.54496759611,
        "Y": -991.785780169369
      },
      {
        "ShowGeometry": false,
        "Name": "Point.ByCoordinates",
        "Id": "dbd3bf45241d4ea1a67a586e7ef460cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4975.81406383425,
        "Y": -1136.39203237948
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a40d74daed5049c38d99d6471d218c9b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6484.5356713472947,
        "Y": -113.86922735145367
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2d95e38f1e3044d6a9ec5c10c48795e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6999.168410025045,
        "Y": 524.25574370533559
      },
      {
        "ShowGeometry": true,
        "Name": "List.Create",
        "Id": "694ac3ca65544c44bee23635e7c08ab7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7207.6648935519752,
        "Y": 469.86356016020363
      },
      {
        "ShowGeometry": true,
        "Name": "List.MatchWithKeyValues",
        "Id": "eab128cf49414d12b472c3815eaf899d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7434.971325581605,
        "Y": 432.72825946775265
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "1099eb11f7ef44c395a75b14a997ca7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7673.8187622545347,
        "Y": 315.84189155537069
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyInstance.ByPointAndLevel",
        "Id": "099057377cd147829ffcf3ce5c0eb5fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5881.4098367865408,
        "Y": -931.224216195474
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "fd942ff945024017919589cc786a258f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -441.341369989636,
        "Y": -508.70905616175
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "93354b6ec3a348eb91c2cc0e0acde8a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1793.00863862938,
        "Y": -509.039832564445
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a37a8e0be0ee4a7d9c95a076f97af234",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 159.924869054209,
        "Y": -1385.37614213165
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "898e5b55e93c4271afbe2fae3efc2710",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 170.330353083539,
        "Y": -894.916929319443
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "3d825d9343df4015aa67319ba6c856c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 170.351706199882,
        "Y": -509.803422949935
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "f8ccb72936ff48bd92d78960d66e8c47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 475.72382815463,
        "Y": 11.5774181416733
      },
      {
        "ShowGeometry": true,
        "Name": "List.OfRepeatedItem",
        "Id": "0779d2d26e5b452998cdabaffe927e2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -200.475891862368,
        "Y": 75.9493934048899
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "c2793a4b66054f91bb9b18804302414a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -408.516449393386,
        "Y": 168.614319747469
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "4fb29d5779044f3fa531287e6cca1d90",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 24.5715106360306,
        "Y": -28.1456486244203
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "2cc414c608ab416c93a288f904d3b12c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 22.2457381029441,
        "Y": 76.2605120928295
      },
      {
        "ShowGeometry": true,
        "Name": "List.Chop",
        "Id": "d97d57328efe480ba2c3d69b60491cd7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 731.073182649634,
        "Y": -97.3155532116359
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "511f15cd5a544e34a9a9eea359bdde49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 498.129949607469,
        "Y": -163.808904090526
      },
      {
        "ShowGeometry": true,
        "Name": "List.CountOccurences",
        "Id": "a493804eb93b4a0bbae1117e1ce19258",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1177.36000269435,
        "Y": 54.8137877623637
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "e3e3af0c9e3c434b8b5ce5c2261e410a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3971.31503070754,
        "Y": -1266.76548692475
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "bddf33165dce44bd96589217c7b305b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3363.96432493516,
        "Y": -563.636245900198
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "2ec3204300c5497e84fffc12a0b26a2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2755.4344223999,
        "Y": -205.71542289670697
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a84e679b39664039a32c48f164a403b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3136.21674576177,
        "Y": -654.422339714289
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c1bf7130c2e44f40929a4e56113baee9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2779.47500943645,
        "Y": -509.01073927723496
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9838c7e577d44a6baee980c9c66e48b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2976.7530525453,
        "Y": -201.71787583404603
      },
      {
        "ShowGeometry": true,
        "Name": "List.ShiftIndices",
        "Id": "25c9db6233444a0c872c30dda9cd845f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3260.80607633878,
        "Y": -684.550465674629
      },
      {
        "ShowGeometry": true,
        "Name": "List.OfRepeatedItem",
        "Id": "3f6d10df1dd84a37bde428132e9b4014",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3219.4727689679,
        "Y": -327.68654186408594
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "80c7de38910e4e66bb7d5c3af7a75887",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3323.47454116065,
        "Y": -203.52256581046095
      },
      {
        "ShowGeometry": true,
        "Name": "List.Insert",
        "Id": "b68f8b92468a4acb9cafd0aecfc5412c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3452.9099506911,
        "Y": -328.35994842838
      },
      {
        "ShowGeometry": true,
        "Name": "List.ReplaceItemAtIndex",
        "Id": "12bc78be42f64212942fa157db67e48d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3487.53469642101,
        "Y": -684.363746916382
      },
      {
        "ShowGeometry": true,
        "Name": "Math.Sum",
        "Id": "69c6edb8f8694fd8bf01f410c36872bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4358.61368308422,
        "Y": -515.306102918762
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "4f7990584279498a8d5116f9e57f57d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4056.05579561215,
        "Y": -515.414832252519
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2e06a60734c4460a8db9255669026336",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3776.08282566383,
        "Y": -511.59826518924
      },
      {
        "ShowGeometry": true,
        "Name": "List.MaximumItem",
        "Id": "e601abc265db45f482f2ef721f43884d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2481.28447357654,
        "Y": -351.43146858398495
      },
      {
        "ShowGeometry": true,
        "Name": "Math.Sum",
        "Id": "0dfa8af4fbb241f3abccc88716f8e495",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4363.22353421004,
        "Y": -1266.78519783686
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "42b6ba055dbc40f9aacfdb361b4f7596",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3793.91050165367,
        "Y": -1262.94891986147
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f064c16779e642e6b783a95d203f55c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3349.34816995904,
        "Y": -1414.76271906548
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c5bcdc4bfe444ff29220198d57e38f5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2484.25350299807,
        "Y": -1265.69247107414
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "cde37a3d0563495b841420c2ce627b5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2688.64423895671,
        "Y": -1265.06247308791
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "98ac8c460dc040969169180ff58d2257",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2751.13605844561,
        "Y": -924.735440443894
      },
      {
        "ShowGeometry": true,
        "Name": "List.OfRepeatedItem",
        "Id": "e82821a6e62d4e20bd6ca6a3a9e4c394",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3214.53726505843,
        "Y": -1084.82892034842
      },
      {
        "ShowGeometry": true,
        "Name": "List.Insert",
        "Id": "0dc9ec6431944089baa94f2ab30655e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3448.37580905171,
        "Y": -1085.83877337267
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "cec8ef75f5dc4959aab0733f5bca6ac6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2983.13567229917,
        "Y": -920.281570398154
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d06c58211d0d48e69817e8cae4fcd50c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3317.29917945017,
        "Y": -958.439753554697
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e1ee076613de48559314e5fcc557482e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3004.67351011544,
        "Y": -1388.76932353026
      },
      {
        "ShowGeometry": true,
        "Name": "List.ReplaceItemAtIndex",
        "Id": "9ab5bc8359244cbb9659959fce2541f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3483.92975006462,
        "Y": -1419.38826570563
      },
      {
        "ShowGeometry": true,
        "Name": "List.ShiftIndices",
        "Id": "f1ed2b2644d743e39fd7826f8c18d6ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3111.78125527567,
        "Y": -1418.8974494906
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f681deee4fdf4a0583ffe64775ba9799",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3353.16471775505,
        "Y": -1320.70229474877
      },
      {
        "ShowGeometry": true,
        "Name": "Integer Slider - Spacer",
        "Id": "46ba160399c5449e983d27ddf25781f0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2209.9342175344,
        "Y": -398.122027507416
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "f89aa3b58b234e33bec0da6e525904a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2930.72359599259,
        "Y": -513.681977156835
      },
      {
        "ShowGeometry": true,
        "Name": "Material.ByName",
        "Id": "6caadde57a334118a056e5a4b8c47e44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7649.9274691755754,
        "Y": 431.90680407416664
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "e813961b35dd47e3b8bba71537eb8bc1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7957.352825119955,
        "Y": 378.76941881189168
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f03498f8068e4d449ba9b141ec6b2c00",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7707.5921840548353,
        "Y": 545.58025022590164
      },
      {
        "ShowGeometry": true,
        "Name": "List.CountOccurences",
        "Id": "a4bce4c463a04ec39d77cf604c17a62d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 442.616709850873,
        "Y": -1384.63326117468
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "f695a341c75b4964bc88abb4aa8cb842",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -965.92634640493,
        "Y": -448.648359177884
      },
      {
        "ShowGeometry": true,
        "Name": "List.OfRepeatedItem",
        "Id": "712e02373fd14b0b8f821e9938e4f093",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -54.71788874565101,
        "Y": -1385.38139947634
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "388fdebae19a4842a31fd392f0dd9cfd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -751.16799104022,
        "Y": -444.829214726529
      },
      {
        "ShowGeometry": true,
        "Name": "List.OfRepeatedItem",
        "Id": "78caea435ac4440ba22cd43fb2b8d7d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -41.349806468042516,
        "Y": -895.158174920123
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6703d187b881404e8fbc6de21a24634b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -231.442880709972,
        "Y": -890.872867905825
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "bc37c39fb4eb43d891c9d2fec765efa6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -229.13363843687102,
        "Y": -1381.44246520821
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a5b76ad0f3d44aa0aa3317aa91a54a22",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -231.194367876934,
        "Y": -505.05293856969
      },
      {
        "ShowGeometry": true,
        "Name": "List.OfRepeatedItem",
        "Id": "9249e761dc39425baee8f0a1bdab9454",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -39.190923435645914,
        "Y": -509.236448370952
      },
      {
        "ShowGeometry": true,
        "Name": "List.OfRepeatedItem",
        "Id": "fbeb07e0ae65441abb648d17b7c4bc47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 249.657679671598,
        "Y": 11.6619386514271
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d44345ccbaf3444398ed52df83f7173b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1022.0186589922,
        "Y": 58.7752330506439
      },
      {
        "ShowGeometry": true,
        "Name": "[&] List.ChopByLengths",
        "Id": "4d51960e44c14c628c2178f5c8c638c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1481.72750303458,
        "Y": -97.6822830787419
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "54b235fe0c4e407f9a28acd763f18596",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2151.8591676457395,
        "Y": -374.89494884001579
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "3de7f25190804a5ab052d0da20df1808",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4165.05112426816,
        "Y": -1266.65353669346
      },
      {
        "ShowGeometry": true,
        "Name": "Point.Add",
        "Id": "133a2f94dfc64f5e93638539caafe0e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5250.9921734987065,
        "Y": -1081.1508320865428
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "c0ad9a16860a4510a877a5d63ef4e403",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 760.76853919396478,
        "Y": -1365.3432069178766
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "8ff04b599a2b4a3a9d1e112c1a58495e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4574.9221974026295,
        "Y": -1181.8318302853447
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "3cc796b7931b410e8eb31b83257c3083",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4680.8200463629637,
        "Y": -517.40918489337037
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "c036eb51f2af48c89e27e91b19746368",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4601.2155567273712,
        "Y": -1262.935336430508
      },
      {
        "ShowGeometry": true,
        "Name": "List.Chop",
        "Id": "47eb06ff97e54a4898b6342553fb69ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4765.6153285429955,
        "Y": -1215.5354382599294
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Type",
        "Id": "343299a493a0495dadc011df79e98feb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5053.853139666393,
        "Y": -421.19156549838056
      },
      {
        "ShowGeometry": true,
        "Name": "Element Types",
        "Id": "c90ea9dbffe149ce8f066886eec0610c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4832.94340654134,
        "Y": -435.91898388563175
      },
      {
        "ShowGeometry": true,
        "Name": "List.OfRepeatedItem",
        "Id": "a8ccdb73a21f4f1187ed27b0d07f9953",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5391.1985359968348,
        "Y": -551.06961818122625
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "02ddd431de874a7bb98f9d077df31ef5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5035.3597771658433,
        "Y": -625.66227579349936
      },
      {
        "ShowGeometry": true,
        "Name": "Level.Elevation",
        "Id": "29ee8c6893494277b9e80330c80cfa82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5280.7757685674842,
        "Y": -747.7247492959774
      }
    ],
    "Annotations": [
      {
        "Id": "55328e0bb611466d82d6c0bef8dae947",
        "Title": "INPUT - EXCEL:\r\n\r\nchange file path to programming .xls file",
        "Nodes": [
          "c2778885e5fb4968ac28126bf6ea1ef3",
          "e4b38edddeb74c9a91d72c9fdc200ea1"
        ],
        "Left": -2219.97138374819,
        "Top": -827.904873836411,
        "Width": 417.24531028422007,
        "Height": 219.0,
        "FontSize": 24.0,
        "InitialTop": -702.904873836411,
        "InitialHeight": 171.67818326734891,
        "TextblockHeight": 115.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b0c6825180ac4eee9a5f780f3ad4d1ec",
        "Title": "SORTING: This sequence of nodes extracts the values from the WIDTH column in the Excel file",
        "Nodes": [
          "3682428619854be69d62ec68a2c9c770",
          "6703d187b881404e8fbc6de21a24634b",
          "28b081095340478caaf2fa72d4ab4e41",
          "9445d2c504ca4eaba6344526fff2f7d0"
        ],
        "Left": -450.129873827181,
        "Top": -1050.0540938837451,
        "Width": 360.287603144946,
        "Height": 252.18122597792,
        "FontSize": 24.0,
        "InitialTop": -954.054093883745,
        "InitialHeight": 208.18122597792,
        "TextblockHeight": 86.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "6adf48f9232f4e2692aed933698b604c",
        "Title": "SORTING: This sequence of creates a new list of sequential unique index number to later be paired with all Department values from the Excel spreadsheet",
        "Nodes": [
          "5728a002b41845c5bd6996a116275f13",
          "0750cb806b8c4b7984074c5d5c73ebf1",
          "db67c76591f44498bead43ef1a2ab647",
          "e25aa21849d1482e87c5dea6bd7a46c8",
          "2020fc03a2d443c897a31fabb77b140f",
          "bc37c39fb4eb43d891c9d2fec765efa6",
          "c9e90e3f19d64841a01119109205dd2c",
          "d547974fb10b4312b4a4776d09444500",
          "89a82525b72649e18b5bb2013b6cbb05",
          "3d0ea69351ea427a9dadfe41c1efc953",
          "0456189cc54445aa90888189a5032007",
          "6ec42a9ed92b4ec884b4b8671b9cd6e8",
          "eebaf16343d2431096e47e4a53bba01c"
        ],
        "Left": -450.947630873163,
        "Top": -1567.17264853295,
        "Width": 1906.2573983156331,
        "Height": 432.50677915331994,
        "FontSize": 24.0,
        "InitialTop": -1528.17264853295,
        "InitialHeight": 445.50677915331994,
        "TextblockHeight": 29.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "cb2c02ead92741319dbd7373168cd2db",
        "Title": "INSTANTIATION: Placing Space Planning family at centroid coordinates.",
        "Nodes": [
          "02fc5c87b3a64893a5b928b275c7d755",
          "dbd3bf45241d4ea1a67a586e7ef460cb",
          "099057377cd147829ffcf3ce5c0eb5fa",
          "133a2f94dfc64f5e93638539caafe0e9",
          "37916c5789ab44f2ac1d015a1cd6a2e9",
          "93ea351956a34c92b715f59af7ad0755"
        ],
        "Left": 4964.54496759611,
        "Top": -1241.53899330777,
        "Width": 1201.8648691904309,
        "Height": 455.31477711229593,
        "FontSize": 24.0,
        "InitialTop": -1202.53899330777,
        "InitialHeight": 416.31477711229593,
        "TextblockHeight": 29.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "a196c228ba68483ca0031ef0c4e05478",
        "Title": "PARAMETERS & COLOR:\r\nSetting the parameter values in the space planning families.\r\nChanging color of each family instance by associated Department.",
        "Nodes": [
          "363ed6e4ff214b02b77c99bc10999f03",
          "96b726190e5c4abb81f2ee100a7dcb63",
          "2aff5692de834177a0eaf748b3519a3e",
          "6e677c2e025a47a8811743ceb7042598",
          "fdb27070cdd2412c9b90dfb28ece056e",
          "bea671811cf4445e8209a086ab143e1d",
          "056f97c1930e48f187a75e00cc8dcb78",
          "34d3202f7809461ba524bb917c6e7b0f",
          "917a08a33a3d4f11a7aa61c9a3103171",
          "d664bed9bf5d4985b1f4d243f3ff797c",
          "e268818ee5b0423d94351f47f90efb66",
          "30348b3412d745e89368dc8281cba186",
          "8f65ecd0d32143a0869ebde8cd78ec1f",
          "23849dfabf56472a9eb3ac37bc3da414",
          "3ee2d9d289bd414fb8b105f0573ee035",
          "a94c7bbdd4084f0d893cc9e4db96cfd5",
          "31963dbf9d5842d18fbb43b504a01376",
          "205f52b0eede403e8d657c2f0523228c",
          "5abe7d33e3c744cca70c5b5d0613dcb5",
          "66068bef36964807b1c2d7e0d0b6c1c4",
          "3158f6a275b84b6d860e618342ff8b72",
          "79235264d4c148a68dec43a4be48ca79",
          "5dacb0ecf5254106af10f086f0e8f11a",
          "38d9f2512e98424cb294195c56809cf3",
          "8bfbe7569a974b3dbaa51eb1723bc6c5",
          "8f6331593f72424c9bd3d2b45510a4d2",
          "a40d74daed5049c38d99d6471d218c9b",
          "2d95e38f1e3044d6a9ec5c10c48795e4",
          "694ac3ca65544c44bee23635e7c08ab7",
          "eab128cf49414d12b472c3815eaf899d",
          "1099eb11f7ef44c395a75b14a997ca7d",
          "f03498f8068e4d449ba9b141ec6b2c00",
          "6caadde57a334118a056e5a4b8c47e44",
          "e813961b35dd47e3b8bba71537eb8bc1",
          "ae70f457ee5a431ebff2df22fb4443c3",
          "3d50ccfad7154e90a0a5798c5803ee1c",
          "ffb52c10e30646f79f36d97335ac4395",
          "7b0cc05832d64e0bbc81a43b1d545fb2"
        ],
        "Left": 6474.5356713472947,
        "Top": -852.542182182144,
        "Width": 1762.8171537726603,
        "Height": 1727.4057423423476,
        "FontSize": 24.0,
        "InitialTop": -756.542182182144,
        "InitialHeight": 1535.3064075679924,
        "TextblockHeight": 86.0,
        "Background": "#FF71C6A8"
      },
      {
        "Id": "1cfb3763aba241989bd7267e21b4100e",
        "Title": "SORTING: This sequence of nodes extracts the values from the LENGTH column in the Excel file",
        "Nodes": [
          "fd942ff945024017919589cc786a258f",
          "a5b76ad0f3d44aa0aa3317aa91a54a22",
          "ae4a7545e1bb4c07a3dabc6f13957f2b",
          "04a2d80a9e814aa7b8475114a01f4987"
        ],
        "Left": -451.341369989636,
        "Top": -664.470361033697,
        "Width": 363.184390560493,
        "Height": 252.41742246400702,
        "FontSize": 24.0,
        "InitialTop": -568.470361033697,
        "InitialHeight": 208.41742246400702,
        "TextblockHeight": 86.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "f6dcececc4d94293aa2c6f3abd9110e4",
        "Title": "Accounting for QUANTITY column from spreadsheet",
        "Nodes": [
          "a37a8e0be0ee4a7d9c95a076f97af234",
          "712e02373fd14b0b8f821e9938e4f093",
          "469c6dcc62e04d8db59b63af27eb2305",
          "2811b8349baa455d933fed42c8efbc46"
        ],
        "Left": -64.71788874565101,
        "Top": -1501.42108443942,
        "Width": 419.64275779986,
        "Height": 235.04494230776982,
        "FontSize": 14.0,
        "InitialTop": -1471.42108443942,
        "InitialHeight": 231.04494230776982,
        "TextblockHeight": 20.0,
        "Background": "#FF848484"
      },
      {
        "Id": "4fbc536a76c54a7190f3165ac2812b76",
        "Title": "Multiplying instances of WIDTH by the QUANTITY column from spreadsheet",
        "Nodes": [
          "898e5b55e93c4271afbe2fae3efc2710",
          "78caea435ac4440ba22cd43fb2b8d7d9",
          "0c95f6d322ea416ab09a7a6dfac549ad",
          "0cb7f2dad13944beb07daf15802c0a58"
        ],
        "Left": -51.349806468042516,
        "Top": -1050.9801098268831,
        "Width": 416.68015955158148,
        "Height": 275.06318050744005,
        "FontSize": 24.0,
        "InitialTop": -982.980109826883,
        "InitialHeight": 233.06318050743994,
        "TextblockHeight": 58.0,
        "Background": "#FF848484"
      },
      {
        "Id": "0bb865251b4543ef9db9c440ca9b72c4",
        "Title": "Multiplying instances of LENGTH by the QUANTITY column from spreadsheet",
        "Nodes": [
          "3d825d9343df4015aa67319ba6c856c2",
          "9249e761dc39425baee8f0a1bdab9454",
          "1bc61cc6da214edaa011c0a33a175592",
          "e01d73af4158473e8ce14dd42ec5d2ab"
        ],
        "Left": -49.190923435645914,
        "Top": -694.375195427488,
        "Width": 414.54262963552787,
        "Height": 304.13874705653603,
        "FontSize": 24.0,
        "InitialTop": -598.375195427488,
        "InitialHeight": 234.13874705653603,
        "TextblockHeight": 86.0,
        "Background": "#FF848484"
      },
      {
        "Id": "c54c06616dbc4fb99f764846714f88f6",
        "Title": "This group of nodes accounts for the increase of all columns in the Excel spreadsheet according to values in the QUANTITY column",
        "Nodes": [
          "f8ccb72936ff48bd92d78960d66e8c47",
          "0779d2d26e5b452998cdabaffe927e2c",
          "c2793a4b66054f91bb9b18804302414a",
          "4fb29d5779044f3fa531287e6cca1d90",
          "2cc414c608ab416c93a288f904d3b12c",
          "d97d57328efe480ba2c3d69b60491cd7",
          "511f15cd5a544e34a9a9eea359bdde49",
          "fbeb07e0ae65441abb648d17b7c4bc47",
          "3cc48792a46e4805aa4fe88fac6b927f",
          "9e1c37e20c6e48ac9462510f803564c6",
          "14b9383f3e1d4a0695feec2a9e0434ab",
          "c7e51981e1b24d799958793e95e133a2",
          "91aa961a174e44a0bca3b5ef531d0213",
          "67e94605ed854e6e8fe320b89e59196e",
          "adedce8b34a04a0b8a943eb99664ff10"
        ],
        "Left": -449.931380485825,
        "Top": -309.668073881935,
        "Width": 1378.004563135459,
        "Height": 571.282393629404,
        "FontSize": 24.0,
        "InitialTop": -241.668073881935,
        "InitialHeight": 555.282393629404,
        "TextblockHeight": 58.0,
        "Background": "#FF848484"
      },
      {
        "Id": "cdb2fa7ad2ce40ebb8fc821497bf38b7",
        "Title": "SORTING: Re-sorting all categories from the spreadsheet into sublists according to unique Departments",
        "Nodes": [
          "a493804eb93b4a0bbae1117e1ce19258",
          "4d51960e44c14c628c2178f5c8c638c7",
          "6d7a7f57fceb4c1992df60f7a61b8eb6",
          "70a59bcc4b734be1886923fc9209330f",
          "4a15ef9888504085ab7c1d8c24f6aa3c"
        ],
        "Left": 982.988592518976,
        "Top": -272.99883026740497,
        "Width": 713.738910515604,
        "Height": 446.81261802976866,
        "FontSize": 24.0,
        "InitialTop": -204.998830267405,
        "InitialHeight": 404.81261802976871,
        "TextblockHeight": 58.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "27060f8af3bb4406bee1428030f00c00",
        "Title": "INPUT - SPACER:\r\n\r\nthis number sets the even distance between all space planning families for both Width AND Height",
        "Nodes": [
          "46ba160399c5449e983d27ddf25781f0"
        ],
        "Left": -2219.9342175344,
        "Top": -581.12202750741608,
        "Width": 319.0,
        "Height": 251.00000000000006,
        "FontSize": 24.0,
        "InitialTop": -398.122027507416,
        "InitialHeight": 145.0,
        "TextblockHeight": 173.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "86c8fe5bf3354be6b1c813d474e9e468",
        "Title": "SPACING: Using Recursive function to evenly space centroid coordinates based on program widths from spreadsheet.",
        "Nodes": [
          "f681deee4fdf4a0583ffe64775ba9799",
          "f1ed2b2644d743e39fd7826f8c18d6ae",
          "9ab5bc8359244cbb9659959fce2541f5",
          "e1ee076613de48559314e5fcc557482e",
          "d06c58211d0d48e69817e8cae4fcd50c",
          "cec8ef75f5dc4959aab0733f5bca6ac6",
          "0dc9ec6431944089baa94f2ab30655e4",
          "e82821a6e62d4e20bd6ca6a3a9e4c394",
          "98ac8c460dc040969169180ff58d2257",
          "cde37a3d0563495b841420c2ce627b5d",
          "c5bcdc4bfe444ff29220198d57e38f5e",
          "f064c16779e642e6b783a95d203f55c8",
          "42b6ba055dbc40f9aacfdb361b4f7596",
          "0dfa8af4fbb241f3abccc88716f8e495",
          "e601abc265db45f482f2ef721f43884d",
          "2e06a60734c4460a8db9255669026336",
          "4f7990584279498a8d5116f9e57f57d1",
          "69c6edb8f8694fd8bf01f410c36872bc",
          "12bc78be42f64212942fa157db67e48d",
          "b68f8b92468a4acb9cafd0aecfc5412c",
          "80c7de38910e4e66bb7d5c3af7a75887",
          "3f6d10df1dd84a37bde428132e9b4014",
          "25c9db6233444a0c872c30dda9cd845f",
          "9838c7e577d44a6baee980c9c66e48b7",
          "c1bf7130c2e44f40929a4e56113baee9",
          "a84e679b39664039a32c48f164a403b9",
          "2ec3204300c5497e84fffc12a0b26a2a",
          "bddf33165dce44bd96589217c7b305b7",
          "e3e3af0c9e3c434b8b5ce5c2261e410a",
          "f89aa3b58b234e33bec0da6e525904a9",
          "3de7f25190804a5ab052d0da20df1808",
          "360dca55ef654e92bed13b0007a78655",
          "fa0d194532c2474da6b6d641cb4a9c10",
          "50d941d93a1e482582ddd2ab295a4574",
          "fb2485fc699240948fa5a1f46600ceec",
          "8c3b3ea773a04d638d4b6c42d630ec8d",
          "163ceb8c9ce74c37bf93467319f42e33",
          "dd34d0477902492281edca082be4f84d",
          "ce4aa36806a1437fbb1a09aa2a1f623d",
          "552c464a0e494cb4818d1d7a74977eb8",
          "6d4d2facaa1b458db1f3acc745910642",
          "b7e3e914185340ec87ff886c253742db",
          "d6480d6562b04d2faff22189b5bc23fc",
          "e787317dfe1a4a81a364f4377c80e6a0",
          "d772995eb9d048e79e14c4fc4370237f",
          "8d6fa8498fb94540bf0c044525e48e21",
          "19393023ea754a6aacbad0373beb9a8c",
          "481f0bc4968041f199547ac1d0771105",
          "5002b16e2ee94b4b90bd567bc933f88e",
          "7fc1d63ad8224dff936e7f67c68d43ec",
          "f8f993bc1f1d445b8911dbb5ad60894d",
          "d74d706e57c14676912b0a30d7859317",
          "7a31c487ba5743788bf59ea35d736246",
          "f82b88a504f047d2be323cfa4360639d",
          "a9bd5d12f8a24a2abb2319f3cac856f8",
          "d36676847ac54780a22da761a6a4d6ec",
          "75a58d1ee82d4491b2db64ff2d5c6920"
        ],
        "Left": 2457.40665658227,
        "Top": -1558.98523380302,
        "Width": 2344.0685608214903,
        "Height": 1450.267357968974,
        "FontSize": 24.0,
        "InitialTop": -1519.98523380302,
        "InitialHeight": 1463.267357968974,
        "TextblockHeight": 29.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "a9b26ce991594b58a562970410edd25c",
        "Title": "START BY DOWNLOADING THE FOLLOWING PACKAGES:\r\n\r\n- LunchBox for Dynamo\r\n- Clockwork for Dynamo 1.x\r\n- Ampersand\r\n",
        "Nodes": [
          "2cb0abdaa60b412a8b23389f7a5aa17c",
          "d0f850fd564c40dea0e3ce2b29586fd1"
        ],
        "Left": -2218.98396953135,
        "Top": -1110.6166357592579,
        "Width": 320.65479471262984,
        "Height": 261.45161582454386,
        "FontSize": 24.0,
        "InitialTop": -898.616635759258,
        "InitialHeight": 145.45161582454398,
        "TextblockHeight": 202.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0762819b995d454db7a1d52ce6ce55c4",
        "Title": "<Click here to edit the group title>",
        "Nodes": [
          "343299a493a0495dadc011df79e98feb",
          "c90ea9dbffe149ce8f066886eec0610c",
          "a8ccdb73a21f4f1187ed27b0d07f9953",
          "02ddd431de874a7bb98f9d077df31ef5"
        ],
        "Left": 4822.94340654134,
        "Top": -678.66227579349936,
        "Width": 762.25512945549508,
        "Height": 350.47071029511881,
        "FontSize": 36.0,
        "InitialTop": -625.66227579349936,
        "InitialHeight": 349.47071029511881,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e4b38edddeb74c9a91d72c9fdc200ea1",
        "Title": "",
        "Nodes": [],
        "Left": -2209.97138374819,
        "Top": -676.226690569062,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c9e90e3f19d64841a01119109205dd2c",
        "Title": "From Clockwork package:\r\n\r\nCounts number of times each\r\nunique item (department) occurs.\r\nOutput:\r\n1. list of unique items\r\n2. number of occurences",
        "Nodes": [],
        "Left": 460.953801299953,
        "Top": -1522.64271565791,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d547974fb10b4312b4a4776d09444500",
        "Title": "Assigns a unique number\r\n to each Department\r\noccurence",
        "Nodes": [],
        "Left": 1291.30976744247,
        "Top": -1407.21774761479,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "89a82525b72649e18b5bb2013b6cbb05",
        "Title": "Since 0 is included as an index,\r\nneed to reduce the list by 1 to\r\nmaintain the actual number of\r\nitems",
        "Nodes": [],
        "Left": 1060.17770919525,
        "Top": -1316.72859124925,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "93e16f53bcb9429baa00f53600605763",
        "Title": "read excel file, pull\r\nfrom sheet in string",
        "Nodes": [],
        "Left": -1487.46186746007,
        "Top": -764.806530976469,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "696e1301a07b4761bf78994263ea6100",
        "Title": "skip first row,\r\ncolumn headers",
        "Nodes": [],
        "Left": -1228.54514589687,
        "Top": -766.763993860653,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3d0ea69351ea427a9dadfe41c1efc953",
        "Title": "flips data to be grouped\r\nby column not row",
        "Nodes": [],
        "Left": -430.973582878334,
        "Top": -1445.62132103448,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0456189cc54445aa90888189a5032007",
        "Title": "select only items in index 1\r\n(DEPARTMENT column)",
        "Nodes": [],
        "Left": -256.92223298021,
        "Top": -1445.80998475683,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "28b081095340478caaf2fa72d4ab4e41",
        "Title": "flip data to be grouped\r\nby column not row",
        "Nodes": [],
        "Left": -429.097407858284,
        "Top": -954.054093883745,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3d1829f54f1b4eafbfa1f57e73988549",
        "Title": "regroups the Width values\r\nby Department count",
        "Nodes": [],
        "Left": 1800.02787170178,
        "Top": -958.533282849686,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ae70f457ee5a431ebff2df22fb4443c3",
        "Title": "these nodes are querying specific\r\nsublist in order to populate\r\nparameters in the space planning\r\nfamilies\r\n",
        "Nodes": [],
        "Left": 7133.9173298017849,
        "Top": -698.54039830026636,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3d50ccfad7154e90a0a5798c5803ee1c",
        "Title": "this series of nodes assigns\r\nthe selected sublists to certain\r\nparameters in the space planning\r\nfamily",
        "Nodes": [],
        "Left": 7967.2563695676463,
        "Top": -756.542182182144,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6ec42a9ed92b4ec884b4b8671b9cd6e8",
        "Title": "From LunchBox package:\r\n\r\nRecursive Function -\r\nadds each item in the list\r\nto the sum of the values\r\nbefore it until the list is\r\nexhausted.",
        "Nodes": [],
        "Left": 745.491488457313,
        "Top": -1502.23224716018,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "eebaf16343d2431096e47e4a53bba01c",
        "Title": "Adds 0 to the front\r\nof the list so every\r\ncount starts at 0",
        "Nodes": [],
        "Left": 1095.23389333152,
        "Top": -1528.17264853295,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ae4a7545e1bb4c07a3dabc6f13957f2b",
        "Title": "flip data to be grouped\r\nby column not row",
        "Nodes": [],
        "Left": -428.970723062313,
        "Top": -568.470361033697,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "469c6dcc62e04d8db59b63af27eb2305",
        "Title": "multiplies each Department\r\nby the associated value in the\r\nQUANTITY column from the\r\nExcel file",
        "Nodes": [],
        "Left": -54.162763149129,
        "Top": -1471.42108443942,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2811b8349baa455d933fed42c8efbc46",
        "Title": "consolidate all sublist\r\ngroups into one seamless list",
        "Nodes": [],
        "Left": 159.860368705688,
        "Top": -1455.61854163721,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0c95f6d322ea416ab09a7a6dfac549ad",
        "Title": "multiplies each Department\r\nby the associated value in the\r\nQUANTITY column from the\r\nExcel file",
        "Nodes": [],
        "Left": -39.1454541906825,
        "Top": -982.980109826883,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0cb7f2dad13944beb07daf15802c0a58",
        "Title": "consolidate all sublist\r\ngroups into one seamless list",
        "Nodes": [],
        "Left": 171.99490963647,
        "Top": -953.118201456133,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1bc61cc6da214edaa011c0a33a175592",
        "Title": "multiplies each Department\r\nby the associated value in the\r\nQUANTITY column from the\r\nExcel file",
        "Nodes": [],
        "Left": -36.3791913311379,
        "Top": -598.375195427488,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e01d73af4158473e8ce14dd42ec5d2ab",
        "Title": "consolidate all sublist\r\ngroups into one seamless list",
        "Nodes": [],
        "Left": 168.488667368624,
        "Top": -570.457901168501,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9445d2c504ca4eaba6344526fff2f7d0",
        "Title": "select only items in index 7\r\n(WIDTH column)",
        "Nodes": [],
        "Left": -262.842270682235,
        "Top": -953.624824330935,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "04a2d80a9e814aa7b8475114a01f4987",
        "Title": "select only items in index 6\r\n(LENGTH column)",
        "Nodes": [],
        "Left": -261.156979429143,
        "Top": -567.813936194613,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3cc48792a46e4805aa4fe88fac6b927f",
        "Title": "counts the total number of columns\r\nfrom the Excel spreadsheet",
        "Nodes": [],
        "Left": -439.931380485825,
        "Top": 112.449929555447,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9e1c37e20c6e48ac9462510f803564c6",
        "Title": "creates copies of the\r\nQUANTITY list based on\r\nthe total number of columns",
        "Nodes": [],
        "Left": -196.211980185635,
        "Top": 0.302693695033213,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "14b9383f3e1d4a0695feec2a9e0434ab",
        "Title": "consolidate all columns from\r\nthe Excel spreadsheet into\r\none seamless list",
        "Nodes": [],
        "Left": 26.6638835976776,
        "Top": -104.535405434846,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c7e51981e1b24d799958793e95e133a2",
        "Title": "multiplies each column in the\r\nExcel file by the same number\r\nfrom the QUANTITY column",
        "Nodes": [],
        "Left": 250.047551157304,
        "Top": -61.5292358793082,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "91aa961a174e44a0bca3b5ef531d0213",
        "Title": "consolidate all sublist\r\ngroups into one seamless list",
        "Nodes": [],
        "Left": 480.358759683987,
        "Top": -47.5758402041826,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "67e94605ed854e6e8fe320b89e59196e",
        "Title": "counts the total number of\r\nitems in each column after \r\nrecalculating for quanity",
        "Nodes": [],
        "Left": 490.832923389653,
        "Top": -241.668073881935,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "adedce8b34a04a0b8a943eb99664ff10",
        "Title": "breaks the list back into separate\r\nsublists based on each column\r\ncategory",
        "Nodes": [],
        "Left": 723.602819646119,
        "Top": -172.183799301426,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "70a59bcc4b734be1886923fc9209330f",
        "Title": "From the Clockwork package:\r\n\r\ncount all unique Departments",
        "Nodes": [],
        "Left": 1206.21008031695,
        "Top": -22.7682367152523,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6d7a7f57fceb4c1992df60f7a61b8eb6",
        "Title": "select only items in index 1\r\n(DEPARTMENT column)",
        "Nodes": [],
        "Left": 992.988592518976,
        "Top": -15.3669992376624,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4a15ef9888504085ab7c1d8c24f6aa3c",
        "Title": "From Ampersand package:\r\n\r\nresort each column by the\r\nnumber of items in each\r\nunique Department",
        "Nodes": [],
        "Left": 1502.24645295535,
        "Top": -204.998830267405,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "09d57324ff4f4db0b8740392a14486ee",
        "Title": "regroups the Length values\r\nby Department count",
        "Nodes": [],
        "Left": 1796.55535248793,
        "Top": -570.32819117411,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8d6fa8498fb94540bf0c044525e48e21",
        "Title": "\"helper node\":\r\nre-positioning for\r\ncleaning up canvas",
        "Nodes": [],
        "Left": 2472.82125830733,
        "Top": -1338.29111036701,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d772995eb9d048e79e14c4fc4370237f",
        "Title": "cut all Width values in half",
        "Nodes": [],
        "Left": 2651.19198357603,
        "Top": -1308.47130163774,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e787317dfe1a4a81a364f4377c80e6a0",
        "Title": "rotate all values in list\r\nby one position...\r\nend comes front,\r\neverything else moves\r\ndown one index",
        "Nodes": [],
        "Left": 3136.95220345545,
        "Top": -1519.98523380302,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "19393023ea754a6aacbad0373beb9a8c",
        "Title": "replace the first item in\r\neach sublist with 0 as\r\nstarting position for the\r\nfirst point",
        "Nodes": [],
        "Left": 3496.03189938625,
        "Top": -1516.64265691902,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6d4d2facaa1b458db1f3acc745910642",
        "Title": "count the number of\r\nitems in every sublist",
        "Nodes": [],
        "Left": 2772.35143650523,
        "Top": -984.803399798054,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "552c464a0e494cb4818d1d7a74977eb8",
        "Title": "Since 0 is included as an index,\r\nneed to reduce the list by 1 to\r\nmaintain the actual number of\r\nitems",
        "Nodes": [],
        "Left": 2929.20949436141,
        "Top": -1008.23287381684,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "360dca55ef654e92bed13b0007a78655",
        "Title": "buffer: two mapped nodes\r\nin a row made the second\r\nfunction replace an additional\r\nindex... this fixes glitch",
        "Nodes": [],
        "Left": 3296.50337045784,
        "Top": -1513.34747227158,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b7e3e914185340ec87ff886c253742db",
        "Title": "copy the spacer value\r\nas many times as the\r\nnumber of items in\r\nevery sublist",
        "Nodes": [],
        "Left": 3237.75052603177,
        "Top": -1171.51745574376,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d6480d6562b04d2faff22189b5bc23fc",
        "Title": "replace the first item in\r\neach sublist with 0 so the\r\nspacing occurs after the\r\nfirst instance",
        "Nodes": [],
        "Left": 3475.72505277648,
        "Top": -1173.93573668078,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "481f0bc4968041f199547ac1d0771105",
        "Title": "pair the three lists together:\r\n1. half the width values from the first item\r\n2. half the width values from the next item\r\n3. the space value between points",
        "Nodes": [],
        "Left": 3726.05260249434,
        "Top": -1370.87677143287,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5002b16e2ee94b4b90bd567bc933f88e",
        "Title": "these Transpose functions re-sort the sublist so that the values are grouped by individual width values for each point",
        "Nodes": [],
        "Left": 3996.32057744657,
        "Top": -1363.71006733031,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7fc1d63ad8224dff936e7f67c68d43ec",
        "Title": "sum each with sublist\r\nto get total point distance",
        "Nodes": [],
        "Left": 4374.13826065736,
        "Top": -1356.28862919406,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f8f993bc1f1d445b8911dbb5ad60894d",
        "Title": "From LunchBox package:\r\n\r\nRecursive Function -\r\nadds each item in the list\r\nto the sum of the values\r\nbefore it until the list is\r\nexhausted...\r\nSpaces each point along the X Axis",
        "Nodes": [],
        "Left": 4583.65888343374,
        "Top": -1417.72968270213,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "fa0d194532c2474da6b6d641cb4a9c10",
        "Title": "Collect the largest Length value",
        "Nodes": [],
        "Left": 2467.40665658227,
        "Top": -396.45875811838505,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "50d941d93a1e482582ddd2ab295a4574",
        "Title": "cut all Length values in half",
        "Nodes": [],
        "Left": 2739.63910199437,
        "Top": -558.438498417767,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "fb2485fc699240948fa5a1f46600ceec",
        "Title": "rotate all values in list\r\nby one position...\r\nend comes front,\r\neverything else moves\r\ndown one index",
        "Nodes": [],
        "Left": 3280.33352845706,
        "Top": -787.281404919998,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8c3b3ea773a04d638d4b6c42d630ec8d",
        "Title": "replace with 0 as\r\nstarting position for\r\nthe first point",
        "Nodes": [],
        "Left": 3510.30018074972,
        "Top": -767.310210491698,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "163ceb8c9ce74c37bf93467319f42e33",
        "Title": "pair the three lists together:\r\n1. half the length values from the first item\r\n2. half the length values from the next item\r\n3. the space value between points",
        "Nodes": [],
        "Left": 3714.67595167567,
        "Top": -606.438594392575,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "dd34d0477902492281edca082be4f84d",
        "Title": "this Transpose function re-sorts the sublist so that the values are grouped by individual width values for each point",
        "Nodes": [],
        "Left": 3987.86021434073,
        "Top": -598.721833410521,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ce4aa36806a1437fbb1a09aa2a1f623d",
        "Title": "sum each with sublist\r\nto get total point distance",
        "Nodes": [],
        "Left": 4373.18535952248,
        "Top": -604.389104728913,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "37916c5789ab44f2ac1d015a1cd6a2e9",
        "Title": "Create points according to the\r\ncalculated Width values along\r\nthe X Axis...\r\nLocate the points along the\r\nY Axis according to the calculated\r\nLength values",
        "Nodes": [],
        "Left": 5205.70853468048,
        "Top": -1202.53899330777,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b133165f062641e0a722c847d76840fc",
        "Title": "pick the level the families\r\nshould populate on",
        "Nodes": [],
        "Left": -2138.49123965693,
        "Top": -32.3965177575053,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "03818f6de2494a678e17d9543d6a8560",
        "Title": "select the space planning family with the corresponding parameters to be overwritten by Dynamo",
        "Nodes": [],
        "Left": -2201.02001008006,
        "Top": -228.972260952146,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "93ea351956a34c92b715f59af7ad0755",
        "Title": "places an instance of the family\r\nat each point location",
        "Nodes": [],
        "Left": 5623.6975030232843,
        "Top": -1080.8500769454322,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7b0cc05832d64e0bbc81a43b1d545fb2",
        "Title": "this node colorizes each box\r\naccording to the Deparment\r\nlist by replacing the material\r\n(\"Fill Color\")",
        "Nodes": [],
        "Left": 8005.9141913511648,
        "Top": 285.77425609424165,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ffb52c10e30646f79f36d97335ac4395",
        "Title": "This list assigns a name to the RGB\r\ncolor values in the Code Block below.\r\nThese color names also correspond to\r\nthe colors from the COLOR column in\r\nthe Excel spreadsheet.",
        "Nodes": [],
        "Left": 6749.0211787182452,
        "Top": 633.76422538584848,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "13a7b88c79644a6c8cd9d3542b011270",
        "Title": "flips data to be grouped\r\nby column not row",
        "Nodes": [],
        "Left": -959.89560281267,
        "Top": -512.319364647329,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2e3d1c0646604fefa15920fbcdb9a875",
        "Title": "selects only items in index 3\r\n(QUANTITY column) ",
        "Nodes": [],
        "Left": -783.17710917213,
        "Top": -513.369681764471,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2cb0abdaa60b412a8b23389f7a5aa17c",
        "Title": "",
        "Nodes": [],
        "Left": -2208.98396953135,
        "Top": -898.165019934714,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d0f850fd564c40dea0e3ce2b29586fd1",
        "Title": "",
        "Nodes": [],
        "Left": -1958.32917481872,
        "Top": -898.616635759258,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d36676847ac54780a22da761a6a4d6ec",
        "Title": "From LunchBox package:\r\n\r\nRecursive Function -\r\nadds each item in the list\r\nto the sum of the values\r\nbefore it until the list is\r\nexhausted...\r\nSpaces each point along the X Axis",
        "Nodes": [],
        "Left": 4587.47521740376,
        "Top": -673.739830345349,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d74d706e57c14676912b0a30d7859317",
        "Title": "count the number of\r\nitems in every sublist",
        "Nodes": [],
        "Left": 2770.20583460997,
        "Top": -267.083264498994,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7a31c487ba5743788bf59ea35d736246",
        "Title": "Since 0 is included as an index,\r\nneed to reduce the list by 1 to\r\nmaintain the actual number of\r\nitems",
        "Nodes": [],
        "Left": 2927.06389246615,
        "Top": -290.512738517785,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f82b88a504f047d2be323cfa4360639d",
        "Title": "replace the first item in\r\neach sublist with 0 so the\r\nspacing occurs after the\r\nfirst instance",
        "Nodes": [],
        "Left": 3487.70708220587,
        "Top": -416.86700850828106,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a9bd5d12f8a24a2abb2319f3cac856f8",
        "Title": "copy the spacer value\r\nas many times as the\r\nnumber of items in\r\nevery sublist",
        "Nodes": [],
        "Left": 3249.73255546116,
        "Top": -414.448727571266,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "75a58d1ee82d4491b2db64ff2d5c6920",
        "Title": "consolidate all sublist\r\ngroups into one seamless list",
        "Nodes": [],
        "Left": 2932.11443183372,
        "Top": -571.001762541375,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 2958.0071166831235,
    "Y": 1002.7408134329999,
    "Zoom": 1.2242698205510283
  }
}