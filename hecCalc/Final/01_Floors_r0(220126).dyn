{
  "Uuid": "de1ef780-9ab7-46fa-acef-be9b9362e1b7",
  "IsCustomNode": false,
  "Description": "",
  "Name": "01_Floors_r0(220126)",
  "ElementResolver": {
    "ResolutionMap": {
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "7b4f8f19efab4a2fa529e2bcd25c4024",
      "Name": "File Path",
      "Type": "string",
      "Value": ".\\DMS(Data Matching Schedule)_R0(Seq2)_STB_220121.xlsx",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "01f61211fc9347de9fe859b748b96f38",
      "Name": "슬라브철근비",
      "Type": "number",
      "Value": "0.15",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "5fe52eddd736445585f229e29c93cd8c",
      "Name": "독립기초철근비",
      "Type": "number",
      "Value": "0.1",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "66637725087f4b598e5b76b093ad3008",
      "Name": "패드철근비",
      "Type": "number",
      "Value": "0.1",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "9ecbcfba49cd471ca820c3e5abb7f21d",
      "Name": "Excel로 Export 하시겠습니까?",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    },
    {
      "Id": "aeb66b23601e4a748d0c1fdaed99ee16",
      "Name": "매스콘크리트철근비",
      "Type": "number",
      "Value": "0.2",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDict = IN[0]\r\n\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nelement = inputDict[\"AllElement\"]\r\nelementType = []\r\nfor i in element:\r\n    elementType.append(i.Name)\r\nfamilyCode = []\r\nfor i in elementType:\r\n    familyCode.append(i.split(\"_\")[0])\r\nfullWMCodeDescriptionPerElement = inputDict[\"FullWMCodeDescriptionPerElement\"]\r\n\r\nresultDict = {\r\n\"Element\": element,\r\n\"ElementType\": elementType,\r\n\"FamilyCode\": familyCode,\r\n\"FullWMCodeDescriptionPerElement\": fullWMCodeDescriptionPerElement\r\n}\r\n\r\n\r\n\r\nresult = resultDict\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e0427ef06d504db89b14c0fecc5c717d",
      "Inputs": [
        {
          "Id": "fba4f28d4fd64af1852fde8002439ab8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2dd5e372e9c6418b857dbf32b92c5b3c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputElements = IN[0]\r\ninputData = IN[1]\r\n#inputSheetName = IN[2]\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nusedFamilyTypeOfModeling = getUsedFamilyTypeOfModeling(inputElements)\r\nexcelWholeDataSet = inputData#importExcel(inputFilePath, inputSheetName)\r\ntrExcelWholeDataSet = list(zip(*excelWholeDataSet))\r\nexcelColumnDataSet = createExcelDataDictionary(trExcelWholeDataSet)\r\nexcelRowDataSet = createExcelDataDictionary(excelWholeDataSet)\r\nColumnIndexOfUsedFamilyType = findTargetIndex(usedFamilyTypeOfModeling, trExcelWholeDataSet)\r\nColDataSetOfUsedFamilyType = GetValueAtKeys(ColumnIndexOfUsedFamilyType, excelColumnDataSet)\r\nmaterialPerElementFromModeling = []\r\nfor i in inputElements:\r\n    materialPerElementFromModeling.append(i.GetMaterials())\r\n#list(map(lambda x: x.GetMaterials, inputElements)) \"맵함수로 처리하면 리스트화 할 때 타입 변환 오류 남\"\r\n\r\ntargetWMRowIndex = []\r\nfor i in ColDataSetOfUsedFamilyType:\r\n    targetWMRowIndex.append(findTargetIndex(['000'], i))\r\n\r\nrowDataSetOfUsedWM = []\r\nfor i in targetWMRowIndex:\r\n    rowDataSetOfUsedWM.append(GetValueAtKeys(i, excelRowDataSet))\r\n\r\nworkGroup = []\r\nfor i in rowDataSetOfUsedWM:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(j[0])\r\n    workGroup.append(tmp)\r\n    \r\nworkMaster = []\r\nfor i in range(len(ColDataSetOfUsedFamilyType)):\r\n    tmp=[]\r\n    for k in targetWMRowIndex[i]:\r\n        tmp.append(ColDataSetOfUsedFamilyType[i][k])\r\n    workMaster.append(tmp)\r\n\r\nmatchedWM = []\r\nfor i in range(len(workGroup)):\r\n    tmp = []\r\n    for j in range(len(workGroup[i])):\r\n        fullWM = workGroup[i][j] +\"-\"+ workMaster[i][j]\r\n        tmp.append(fullWM)\r\n    matchedWM.append(tmp)\r\n\r\nmatchedWorkGruopAndMasterCode = []\r\nfor i in matchedWM:\r\n    if len(i) > 0:\r\n        matchedWorkGruopAndMasterCode.append(i)\r\n    else:\r\n        pass\r\n\r\nmatchedWMDescription = []\r\nfor i in rowDataSetOfUsedWM:\r\n    tmp=[]\r\n    for j in i:\r\n        tmp.append(j[1] +\" \"+ j[2] +\" \"+ j[3] +\" \"+ \"(\"+ j[4] +\")\")\r\n    if len(tmp) > 0:\r\n        matchedWMDescription.append(tmp)\r\n    else:\r\n        pass\r\n\r\nmatchedWMUnit = []\r\nfor i in rowDataSetOfUsedWM:\r\n    tmp=[]\r\n    for j in i:\r\n        tmp.append(j[4])\r\n    if len(tmp) > 0:\r\n        matchedWMUnit.append(tmp)\r\n    else:\r\n        pass\r\n\r\nmatchedWorkGruopAndMasterCode_flat = list(itertools.chain(*matchedWorkGruopAndMasterCode))\r\nmatchedWMDescription_flat = list(itertools.chain(*matchedWMDescription))\r\n\r\ndic_WMandDescription_Excel = {}\r\nfor i in range(len(matchedWorkGruopAndMasterCode_flat)):\r\n    dic_WMandDescription_Excel[matchedWorkGruopAndMasterCode_flat[i]] = matchedWMDescription_flat[i]\r\n\r\nusedFamilyTypeInExcelOrder = list(map(lambda x: x[3], ColDataSetOfUsedFamilyType))\r\nusedFamilyCodeInExcelOrder = findUnique(list(map(lambda x: x.split('_')[0], usedFamilyTypeInExcelOrder)))\r\n\r\ndic_FamilyCodeandWM = {}\r\nfor i in range(len(usedFamilyCodeInExcelOrder)):\r\n    dic_FamilyCodeandWM[usedFamilyCodeInExcelOrder[i]] = matchedWorkGruopAndMasterCode[i]\r\n\r\nworkMasterCodePerElement = []\r\nfamilyCodePerElem = list(map(lambda x: x.Name.split('_')[0], inputElements))\r\nfor i in familyCodePerElem:\r\n    workMasterCodePerElement.append(dic_FamilyCodeandWM[i])\r\n\r\nmaterialNamePerElem = []\r\nfor i in materialPerElementFromModeling:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(j.Name)\r\n    materialNamePerElem.append(tmp)\r\n\r\nWMPerElementFromModeling = []\r\nfor i in materialNamePerElem:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(j.split('_')[0])\r\n    WMPerElementFromModeling.append(tmp)\r\n\r\nspecPerElementFromModeling = []\r\nfor i in materialNamePerElem:\r\n    tmp = []\r\n    for j in i:\r\n        a = j.split('_')\r\n        del a[0]\r\n        b = \" \".join(a)\r\n        tmp.append(b)\r\n    specPerElementFromModeling.append(tmp)\r\n\r\nWMPerElementFromModeling_flat = list(itertools.chain(*WMPerElementFromModeling))\r\nspecPerElementFromModeling_flat = list(itertools.chain(*specPerElementFromModeling))\r\n\r\ndic_WMandDescription_Model = {}\r\nfor i in range(len(WMPerElementFromModeling_flat)):\r\n    dic_WMandDescription_Model[WMPerElementFromModeling_flat[i]] = specPerElementFromModeling_flat[i]\r\n\r\ndef findAllKeys(dict):\r\n    result = []\r\n    for key in dict.keys():\r\n        result.append(key)\r\n    return result\r\n\r\ndef findAllValues(dict):\r\n    result = []\r\n    for key in dict.keys():\r\n        result.append(dict[key])\r\n    return result\r\n\r\nkeys_WMandDescription_Model = findAllKeys(dic_WMandDescription_Model)\r\nkeys_WMandDescription_Excel = findAllKeys(dic_WMandDescription_Excel)\r\n\r\nkeys_WMandDescription_Both = list(set(keys_WMandDescription_Model + keys_WMandDescription_Excel))\r\nvalues_WMandDescription_Both = []\r\nfor i in keys_WMandDescription_Both:\r\n    if i in keys_WMandDescription_Model:\r\n        values_WMandDescription_Both.append(dic_WMandDescription_Model[i])\r\n    else:\r\n        values_WMandDescription_Both.append(dic_WMandDescription_Excel[i])\r\n\r\ndic_WMandDescription_Both = {}\r\nfor i in range(len(keys_WMandDescription_Both)):\r\n    dic_WMandDescription_Both[keys_WMandDescription_Both[i]] = values_WMandDescription_Both[i]\r\n\r\nworkMasterCodePerElementFromBoth = []\r\nfor i in range(len(workMasterCodePerElement)):\r\n    #tmp = []\r\n    a = WMPerElementFromModeling[i] + workMasterCodePerElement[i]\r\n    b = findUnique(a)\r\n    workMasterCodePerElementFromBoth.append(b)\r\n\r\nspecPerElement = []\r\nfor i in workMasterCodePerElementFromBoth:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(dic_WMandDescription_Both[j])\r\n    specPerElement.append(tmp)\r\n\r\nfullWMCodeDescriptionPerElement = []\r\nfor i in range(len(workMasterCodePerElementFromBoth)):\r\n    tmp = []\r\n    for j in range(len(workMasterCodePerElementFromBoth[i])):\r\n        a = workMasterCodePerElementFromBoth[i][j] +\": \"+ specPerElement[i][j]\r\n        tmp.append(a)\r\n    fullWMCodeDescriptionPerElement.append(tmp)\r\n\r\nfullWMinfo = {\r\n\"AllElement\": inputElements,\r\n\"WorkMasterCodePerFamilyType\": dic_FamilyCodeandWM,\r\n\"WorkMasterCodePerElementBoth\": workMasterCodePerElementFromBoth,\r\n\"FullWMCodeDescriptionPerElement\": fullWMCodeDescriptionPerElement\r\n}\r\n\r\n\r\n\r\nresult = fullWMinfo\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "09731e78949f4760b876c8a956469a3f",
      "Inputs": [
        {
          "Id": "1061c5e9b16a4a679789613a4d0aa20e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fac9c76ea1784feb95ad9393d205fbc3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "865e031ace064d779d73f193184532f3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "_InputElement;\n_InputData;",
      "Id": "5000a2bea8e64651ab45f16fae6e4191",
      "Inputs": [
        {
          "Id": "9cb0158d106f4917aa791e01be1ff2c9",
          "Name": "_InputElement",
          "Description": "_InputElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22b4aea715fc47ee91ed8d0f8cce9e9d",
          "Name": "_InputData",
          "Description": "_InputData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3eb98f36825f498199fa7eb7a328ef3d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45c95dbb85524c3e9768442fbae65035",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "d6a04655d8504043b972c31b54888ec5",
      "Inputs": [
        {
          "Id": "8d1613109372460487afd80f2897ed6a",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "706ae462ad994c67ad60659a97ae1c4b",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 241,
      "SelectedString": "OST_Floors",
      "NodeType": "ExtensionNode",
      "Id": "9bae5aaf9bf34b83b811b6478f215564",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "af2194ae75604909b856abac2ed9e960",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Floors\";",
      "Id": "2b55deec8d4646b896bbdbbbab022bda",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dd939473ade044e19a2fdd4fa5ceaa65",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\mk\\mQ\\hecCalc\\Final\\DMS(Data Matching Schedule)_R0(Seq2)_STB_220121.xlsx",
      "InputValue": ".\\DMS(Data Matching Schedule)_R0(Seq2)_STB_220121.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "7b4f8f19efab4a2fa529e2bcd25c4024",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ea97a5cc1b1e447197dfd8a82b3b2712",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "b4336991a32b46e1bfa26f2d00f265a5",
      "Inputs": [
        {
          "Id": "f7aa06c790134ff68946d61adb1c585f",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53c612b3a0d247e68bef0f1ccd07c139",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aeb999a5316a41de89d0326057c17a5f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f81924c69b7147f8aa9c662029870a5a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a Python script from a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport urllib.request\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputURL = \"https://raw.githubusercontent.com/HNANmal/mQ/master/Hdynlib/General/ImportExcel.py\"\r\n\r\n# Place your code below this line\r\nreq = urllib.request\r\ndata = req.urlopen(inputURL)\r\n\r\nresult = data.read().decode(\"utf-8\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "cfb9f670cc884514938ce524046c0014",
      "Inputs": [
        {
          "Id": "be8fb4c8955246979362c350cb2dc1df",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89567a601cc646c7bb7df3be1f854fd6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "a83a98f993dd4a04a274e36e0da9fab0",
      "Inputs": [
        {
          "Id": "feafaa7d776a4f1cb10c8861f253f682",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae945c84931b4d06a53fc2f95b42ab79",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[\"ElementType\"];",
      "Id": "65c844a6fc4342d0a5b889df13a34c32",
      "Inputs": [
        {
          "Id": "ab6e967096914d64a15d8823d7abe8b2",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "162498c3b9954009bcf1704288003350",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDics = IN[0]\r\nelems = elemDics[\"Element\"]\r\nelemTypes = elemDics[\"ElementType\"]\r\nWMperElems = elemDics[\"FullWMCodeDescriptionPerElement\"]\r\nidx = range(len(elems))\r\n# Place your code below this line\r\ndef ElemDS(i, elems, elemTypes, WMperElems):\r\n    elem = elems[i]\r\n    elemType = elemTypes[i]\r\n    familyCode = elemType.split('_')[0]\r\n    WMperElem = WMperElems[i]\r\n    familyClass = elem.ElementType.GetParameterValueByName(\"Family Name\")\r\n    \r\n    def findLevel():\r\n        if \"Wall\" in familyClass:\r\n            level = elem.GetParameterValueByName(\"Base Constraint\")\r\n        elif \"Column\" in familyClass:\r\n            level = elem.GetParameterValueByName(\"Base Level\")\r\n        elif \"Stair\" in familyClass:\r\n            level = elem.GetParameterValueByName(\"Base Level\")\r\n        elif \"Beam\" in familyClass:\r\n            level = elem.GetParameterValueByName(\"Reference Level\")\r\n        else:\r\n            level = elem.GetParameterValueByName(\"Level\")\r\n        return level\r\n    level = findLevel()\r\n    \r\n    result = {\r\n        \"elem\": elem,\r\n        \"elemType\": elemType,\r\n        \"level\": level,\r\n        \"familyCode\": familyCode,\r\n        \"WMperElem\": WMperElem,\r\n    }\r\n    \r\n    return result\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = [ElemDS(i, elems, elemTypes, WMperElems) for i in idx]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "67f330b11f0741f989c850c8112de991",
      "Inputs": [
        {
          "Id": "03fca15be0d040a7a67c8675a66ab51f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38938187921f43e0b2e70dda71f73e69",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDSs = IN[0]\r\nfuncSets = IN[1]\r\n#func = IN[1][0]\r\n#funcfamilyTag = IN[1][1]\r\n#funcWmTag = IN[1][2]\r\n#funcUnitTag = IN[1][3]\r\n# Place your code below this line\r\n\r\n\r\ndef getTarget(elemDS, funcSets):\r\n    elem = elemDS[\"elem\"]\r\n    etype = elemDS[\"elemType\"]\r\n    familyCode = elemDS[\"familyCode\"]\r\n    wms = elemDS[\"WMperElem\"]\r\n    result = []\r\n    \r\n#    def matchWM_func(wms, funcSet):\r\n#        result = []\r\n#        func = funcSet[0]\r\n#        for wm in wms:\r\n#            tmp1 = []\r\n#            tmp2 = []\r\n#            wmbln = []\r\n#            for i in funcSet[1]:\r\n#                if i in etype:#element type 비교\r\n#                    tmp1.append(True)\r\n#                else:\r\n#                    tmp1.append(False)\r\n#            for i in funcSet[2]:#work type 비교\r\n#                if i in wm:\r\n#                    tmp2.append(True)\r\n#                else:\r\n#                    tmp2.append(False)\r\n#            if any(tmp1) and any(tmp2):\r\n#                result.append([etype, wm, func, func(elem)])\r\n#\r\n#        return result\r\n    \r\n    def matchWM_func(wm, funcSets):\r\n        result = []\r\n        \r\n        for funcSet in funcSets:\r\n            func = funcSet[0]\r\n            tmp1 = []\r\n            tmp2 = []\r\n\r\n            for i in funcSet[1]:\r\n                if i in etype:#element type 비교\r\n                    tmp1.append(True)\r\n                else:\r\n                    tmp1.append(False)\r\n            for i in funcSet[2]:#work type 비교\r\n                if i in wm:\r\n                    tmp2.append(True)\r\n                else:\r\n                    tmp2.append(False)\r\n            if any(tmp1) and any(tmp2):\r\n                result.append([etype, wm, func, func(elem)])\r\n\r\n        return result\r\n\r\n#    result = [matchWM_func(wm, funcSets) for wm in wms]\r\n    result = []\r\n    for wm in wms:\r\n        if matchWM_func(wm, funcSets):\r\n            result.append(matchWM_func(wm, funcSets))\r\n        else:\r\n            result.append([[etype, wm, \"-----!!funcSets내, 해당 부재와 해당 공정\"+f'({wm.split(\": \")[0]})'+\"에 대응하는 함수 없음!!-----\",[\"!산출타겟 미지정!\",\"!산출결과 없음!\",\"!산출단위 없음!\"]]])\r\n\r\n    return list(chain(*result))\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = [getTarget(elemDS, funcSets) for elemDS in elemDSs]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "66979d5642e3486f9b28e6440bf1bb52",
      "Inputs": [
        {
          "Id": "86c9b747715f425893eb44b8600e7597",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f888c5c6467640ef90b6487ab5478664",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f56d685ccbb4d3a9e0c72f01ac521e5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a4a606cb1846452abefe5992339ded29",
      "Inputs": [
        {
          "Id": "f2aa2735415546789c8edd83fccabe66",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dbf5d3fd3e2c479092dc272fdb15c3f5",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "00b5c3ab9e324c7f84a2a39d4ac0a4c3",
      "Inputs": [
        {
          "Id": "c696f9afd5054f9195631b17c444cb15",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae3d473204f34b959d8e5fb87e6ef81d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "344c3f70f1114cfcbf9e36fa8ddfbc2b",
      "Inputs": [
        {
          "Id": "0c8c1ddac5554a9bb5ecc18fdf787db3",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e664abf67c854d9185e14353cbd8fd58",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n산출결과세트리스트 = IN[0]\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\nresult = 공종목록\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "cdf0366fda164fbc850df62921673738",
      "Inputs": [
        {
          "Id": "8732d34612b348cebadef5cb3b6fcbd1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8685a8ca012a46f3918ea92ad144831d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.15,
      "Id": "01f61211fc9347de9fe859b748b96f38",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e49e445fa86e47eb91f75751102933a4",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i = {\n\"독립기초철근비\": 독립기초철근비,\n\"슬라브철근비\": 슬라브철근비,\n\"패드철근비\": 패드철근비,\n\"매스콘크리트철근비\": 매스콘크리트철근비\n};",
      "Id": "e41dcedb9d134272b0a88d64f987a4c0",
      "Inputs": [
        {
          "Id": "b4abe532107847a0af1efb006e77f6e1",
          "Name": "독립기초철근비",
          "Description": "독립기초철근비",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fed4071b84d545acb2797ad1b07ba82e",
          "Name": "슬라브철근비",
          "Description": "슬라브철근비",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73286cb162db4586a0e798288f27f228",
          "Name": "패드철근비",
          "Description": "패드철근비",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7d85dd9d5764fab9c601d835ed0f68c",
          "Name": "매스콘크리트철근비",
          "Description": "매스콘크리트철근비",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "345ff44ed6d84a68ad1f429d807c83db",
          "Name": "",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.1,
      "Id": "5fe52eddd736445585f229e29c93cd8c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "96dc0758cd004d36954b0b810b74785a",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Join([[i],[j]]);\n\ntest;\nr;",
      "Id": "52a0b7a201a4415e85ee54be190d18ef",
      "Inputs": [
        {
          "Id": "a9d4ff0f8c5c4546a85e44a0398f7fb1",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6eac47cc3c764c32b4cca852365d4e0a",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "56cd0039e3494c668f0751b258ce7996",
          "Name": "test",
          "Description": "test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5276e476cab1474fbeb2d363943eafc0",
          "Name": "r",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2154927e3924c2ebbbbf6d6d7f39da1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c37e725be7b94d2c805e4d56de13d609",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa42abe5beb347868a502c8594408ab3",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.1,
      "Id": "66637725087f4b598e5b76b093ad3008",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "42927a69ab514db4a835533807c43a4d",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nresult = [i for i in IN if i]\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "84b440e7d26440af9d6065a58f7f80d2",
      "Inputs": [
        {
          "Id": "d5c6ce50f8354ea5ac25624c032d7f44",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a404f545131248c881818f1be2852323",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0a7198383874fcd9283cf981fd1a2e1",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb7f95d4243643fc898766da6ea3b98e",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b937f4c4f2e46e188fe24e413f7ddae",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86dd09de362f4fe8ac5c224c3ad57d66",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nresult = [i for i in IN if i]\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "41c7e9b5ebd04cc0aeeca60b53e6d80a",
      "Inputs": [
        {
          "Id": "2a6b3bcc09074df982f2899c50a549cd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c95999ed95d41d48dbb3624ab84dfe1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08c91228d5524278977d74e4cbca107b",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94280f7622c04efcaa7a548c8c304eb5",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ba3ce45060a452795632f6064b84227",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nresult = [i for i in IN if i]\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "634d11753936403eae4ed29861dfbc83",
      "Inputs": [
        {
          "Id": "02514341744942d1a8499b13ab05246c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b35b069041d7410e92ff8727556108b0",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2caf7d9036a84be49b8bf120805b6eba",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5d20d2fe7a64877bc38ee94721933e2",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c82f9fbc4b0c4280bbc5bf124694b368",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nresult = [i for i in IN if i]\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "4773042274a04b27ac50414012205036",
      "Inputs": [
        {
          "Id": "6a202666af3942fb85105c48b1a015ff",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3e4be4efd3b4573bcd72e91f736b1cf",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47fbd1a44d7b432392c4ca5acd7dd26e",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6aab9703b2f04298a400a59935ca047b",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58b2934af91849979458cdfe29588ff6",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68652dba9fd64f1192507cdaeaf0bb85",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "0b818663ec4d4138b9172b5d59510aad",
      "Inputs": [
        {
          "Id": "5321e529ad2f48f683741491cf0d45b0",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "378f1bb625d74a6c8560758a399a69dc",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\ncollector5 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n_allEdges = collector5.OfCategory(BuiltInCategory.OST_EdgeSlab).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"UG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\nallEdges = [i.ToDSType(False) for i in _allEdges] + [i.ToDSType(False) for i in allFdns if \"HAUNCH\" in i.Name and \"GS\" in i.Name]\r\nallEdgesGeo = [i.Geometry()[0] for i in allEdges]\r\nallFdnAndHaunch = [i.ToDSType(False) for i in allFdns+_allEdges]\r\nallFdnAndHaunchGeo = list(chain(*[i.Geometry() for i in allFdnAndHaunch]))\r\n#allFdnAndHaunchGeo = [i.Geometry()[0] for i in allFdnAndHaunch]\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nrefFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]\r\n\r\n# Place your code below this line\r\ndef 콘크리트물량산출함수(input):\r\n    if \"Footing-Rectangular\" in input.Name:\r\n        target = input\r\n        targetGeo = target.Geometry()[0]\r\n        targetValue = target.GetParameterValueByName(\"Volume\")\r\n        \r\n    elif \"CL\" in input.Name:\r\n        target = input\r\n        targetGeo = target.Geometry()[0]\r\n        targetValue = target.GetParameterValueByName(\"Volume\")\r\n\r\n    else:\r\n        inputGeo = input.Geometry()[0]\r\n        분해요소들 = inputGeo.Explode()\r\n        접촉판별면 = [i for i in 분해요소들 if round(i.NormalAtParameter(0.5,0.5).Z)==-1][0]\r\n        접촉대상 = [i for i in allEdgesGeo + allFdnAndHaunchGeo if 접촉판별면.DoesIntersect(i)]\r\n        산출대상 = [inputGeo] + 접촉대상\r\n        \r\n        target = Solid.ByUnion(산출대상)\r\n        targetGeo = target\r\n        targetValue = target.Volume/1000000000\r\n        \r\n    return (targetGeo, targetValue, \"M3\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = (콘크리트물량산출함수,tag[0],tag[1],[\"M3\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "65a784a720ed43d1af0834f0d353e91c",
      "Inputs": [
        {
          "Id": "6b47e4e138354f56b2e758a98e9f79c5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d1adf9abe8f42f390b1d483dc33d4bb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24bf0443a9b54a7795c9599ec04a9314",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12e88d93ec174eab9c69dbd7c83b9550",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i.Name;",
      "Id": "3e7e1c7985ff4e07b9833c060ad566e6",
      "Inputs": [
        {
          "Id": "0673b29e9e344789b5ed3a8ef03a693c",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "714f7044eefd431a9bd0e9921ff1b5e4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"SL\",\"MASS\",\"MAT\",\n\"TOP DECK\"\n];",
      "Id": "80f6896f477342d7b3a68cfcddcf82e6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3319dec934a5498ba3989b8e99113f32",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"A03AC032\",\n\"A03AD032\",\n\"A03AF032\",\n\"A03AG032\"\n];",
      "Id": "3c9f3ce8c3fe4df4a15f2dc2e16812ab",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "654b62116fc447d4b637aa7d6fba6426",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Join([[i],[j]]);\n\ntest;\nr;\nr[\"독립기초철근비\"];\nr[\"슬라브철근비\"];\nr[\"패드철근비\"];\nr[\"매스콘크리트철근비\"];",
      "Id": "c6e1f160c7634b3a9b61e8564f1d333d",
      "Inputs": [
        {
          "Id": "51fb7e87623a45f5926fc72724d4b2c0",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47408f3ec8c649f58c16caedecd9d5cb",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f75cfdce96ab4bee8dd686f5cddf5f8c",
          "Name": "test",
          "Description": "test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f9cd2ab791948f3a428d3097f5ecdd9",
          "Name": "r",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6228f54cf544ffb8db1cf903bdb071e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d25fe1327934477aea03987bf2ca847",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02f7ab3f42e3460f81fc4e1269805ed9",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58f44fe07e5e4c1583cc77175dff9bd7",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a40e4f404e4c4914966fead789d94062",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8f5c9dea09b42779ac4d0f19c3f4513",
          "Name": "",
          "Description": "Value of expression at line 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "014ba6d97cfa4e5ea6dca94f2e7a0e02",
          "Name": "",
          "Description": "Value of expression at line 8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"SL\",\"MASS\",\"MAT\",\n\"TOP DECK\"\n];",
      "Id": "509641664cd04a1da862cd90578050ad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d385d433f684efdbd45b5f73d39b54e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"A03AC037\",\n\"A03AD037\",\n\"A03AF037\",\n\"A03AG037\"\n];",
      "Id": "bafee0825e9b4dd9ae697af73010879c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c61fc40b87bc412383b5093773dab421",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\ncollector5 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n_allEdges = collector5.OfCategory(BuiltInCategory.OST_EdgeSlab).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"TG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\nallEdges = [i.ToDSType(False) for i in _allEdges]\r\nallEdgesGeo = [i.Geometry()[0] for i in allEdges]\r\nallFdnAndHaunch = [i.ToDSType(False) for i in allFdns+_allEdges]\r\nallFdnAndHaunchGeo = list(chain(*[i.Geometry() for i in allFdnAndHaunch]))\r\n#allFdnAndHaunchGeo = [i.Geometry()[0] for i in allFdnAndHaunch]\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nrefFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]\r\n\r\n독립기초철근비 = IN[3]\r\n슬라브철근비 = IN[4]\r\n패드철근비 = IN[5]\r\n매스콘크리트철근비 = IN[6]\r\n\r\n# Place your code below this line\r\ndef 철근물량산출함수(input):\r\n    콘크리트물량산출함수 = refFunc[0]\r\n    if \"Footing-Rectangular\" in input.Name:\r\n        ratio = 독립기초철근비\r\n        \r\n        target = 콘크리트물량산출함수(input)[0]\r\n        targetGeo = \"형상정보 미제공\"\r\n        targetValue = target.Volume*ratio/1000000000\r\n    \r\n    elif \"SOG\" in input.Name or \"SL\" in input.Name:\r\n        ratio = 슬라브철근비\r\n        \r\n        target = 콘크리트물량산출함수(input)[0]\r\n        targetGeo = \"형상정보 미제공\"\r\n        targetValue = target.Volume*ratio/1000000000\r\n        \r\n    elif \"PAD\" in input.Name or \"EF\" in input.Name:\r\n        ratio = 패드철근비\r\n        \r\n        target = 콘크리트물량산출함수(input)[0]\r\n        targetGeo = \"형상정보 미제공\"\r\n        targetValue = target.Volume*ratio/1000000000\r\n        \r\n    elif \"MASS\" in input.Name or \"MAT\" in input.Name:\r\n        ratio = 매스콘크리트철근비\r\n        \r\n        target = 콘크리트물량산출함수(input)[0]\r\n        targetGeo = \"형상정보 미제공\"\r\n        targetValue = target.Volume*ratio/1000000000\r\n\r\n    else:\r\n        ratio = 패드철근비\r\n        \r\n        target = 콘크리트물량산출함수(input)[0]\r\n        targetGeo = \"형상정보 미제공\"\r\n        targetValue = target.Volume*ratio/1000000000\r\n    \r\n    return (targetGeo, targetValue, \"TON\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = (철근물량산출함수,tag[0],tag[1],[\"TON\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5aa73238c8fc49a2b9c83e34983a531b",
      "Inputs": [
        {
          "Id": "e2e5e39402544646a1ea8f9b5c45f8aa",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a4c5f13bc3b431b8d0bbff12486ef5b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "34bf59cae65045ba92e6635784729d92",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c7e4f8045c08483992cc183f52665c8f",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b813581a8a849b49023824656703e2d",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c8d951324c24ffcb81e9743eab7137c",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b53435928514970a6d7e6241b834a70",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ceb01c4c4284fd19b07d21453da0937",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nresult = [i for i in IN if i]\r\n# Assign your output to the OUT variable.\r\nOUT = list(chain(*result))",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "13a78727268b43ffb7ee3ef088e13674",
      "Inputs": [
        {
          "Id": "fd1e2e66e75b429b88397e486dd8c2f0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "524191d720da469cb0d896fa6d46c3ef",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a22772bde7a34c8f919cf5ca672a9a61",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee04d25ee4cb4104a1ea76376cd2fcf6",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "954c400a2d894da697c0b666656741e3",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2ccf0d803fb48d8a418109faa676a98",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Join([[i],[j]]);\n\ntest;\nr;",
      "Id": "241da9707fdd4e0e90e56ee63c420b44",
      "Inputs": [
        {
          "Id": "86ef249d94ff411aa065f1058705fbcd",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e3d9a98e2e847ceb85aa0c734c246ac",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b930baca44df4b4abaaa038d3f501b8a",
          "Name": "test",
          "Description": "test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f74f33cb50c34514b750f98b78dc5308",
          "Name": "r",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebddfab19aa24e59834d1026178facaf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "46405361b57a49d896508e9d38c80316",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0addec3ded8746e99aa0c569e729eb94",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\ncollector5 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n_allEdges = collector5.OfCategory(BuiltInCategory.OST_EdgeSlab).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"UG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\nallEdges = [i.ToDSType(False) for i in _allEdges] + [i.ToDSType(False) for i in allFdns if \"HAUNCH\" in i.Name and \"GS\" in i.Name]\r\nallEdgesGeo = [i.Geometry()[0] for i in allEdges]\r\nallFdnAndHaunch = [i.ToDSType(False) for i in allFdns+_allEdges]\r\nallFdnAndHaunchGeo = list(chain(*[i.Geometry() for i in allFdnAndHaunch]))\r\n#allFdnAndHaunchGeo = [i.Geometry()[0] for i in allFdnAndHaunch]\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nrefFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]\r\n\r\n# Place your code below this line\r\ndef 바닥마감물량산출함수(input):\r\n    target = input\r\n    targetGeo = target.Geometry()[0]\r\n    targetValue = target.GetParameterValueByName(\"Area\")\r\n    \r\n    return (targetGeo, targetValue, \"M2\")\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = (바닥마감물량산출함수,tag[0],tag[1],[\"M2\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "a1f18105be1b4e1d940aeca67ab042c2",
      "Inputs": [
        {
          "Id": "dfdb37a8bb03412689cbf6324466e1eb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "170ded00268349d7b55cb6244c7d8084",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c1399e1660f43f3b32bbe757cec6918",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ee3fe2b40034209a220b8a7bad958f2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"SL\"\n];",
      "Id": "392311f42d494af3987627e54858995d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2834c39a39dc4082b07556e9f792b786",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"A04AR133\",\n\"A04AR138\",\n\"A04AR140\",\n\"A04AL080\",\n\"A04AM083\",\n\"A04AN085\",\n\"A04AP000\",\n\"A04AP088\",\n\"A04AP012\",\n\"A04AP089\",\n\"A04AP038\",\n\"S04AA024\",\n\"S02AA024\",\n\"S02AA018\",\n\"S04AA024\"\n];",
      "Id": "b9bbbce4747645be9542370b214edf3c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "242d9db582884d14a5ea79fdb12aaa29",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Join([[i],[j]]);\n\ntest;\nr;",
      "Id": "4ec6038093b64c7db5561abf0daa278d",
      "Inputs": [
        {
          "Id": "d4de7a319c824730a3488b65e8a400cb",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d05042e62cc44ed8bb4f1f26f1a301ed",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "550f207832404223a539720c531d9a21",
          "Name": "test",
          "Description": "test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "95bb190a612544f8be141f1531611613",
          "Name": "r",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85e2e132e7ca4b4385680d4d2957a8a5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b17681aed1f6477e83c3246da503e3b5",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "56062983806d47d5a28cdfdd2e8d7a66",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"SL\",\"MASS\",\"MAT\",\n\"TOP DECK\"\n];",
      "Id": "5dfaedb1f25e4358bd0cec3820e64e1c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9e56a219ef4447e6a9d5d30fa89d6aaa",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"A03AC035\",\n\"A03AD035\",\n\"A03AF035\",\n\"A03AC036\",\n\"A03AD036\",\n\"A03AF036\"\n//\"A03AG035\"\n//\"A03AG054\"\n];",
      "Id": "3f392633b50643bdbac52a77b0251116",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7a7a9bcedd19488eb2d7780c7e8484f0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\ncollector5 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\n_allCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\n_allBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\n_allFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n\r\nallAGBeams = [i.ToDSType(False) for i in _allBeams if \"AG\" in i.Name]\r\n#allAGBeamsGeo = [i.Faces for i in allAGBeams]\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nrefFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]\r\n\r\n# Place your code below this line\r\ndef 거푸집산출함수_슬라브(input):\r\n    inputGeo = input.Geometry()[0]\r\n#    접촉대상 = [i for i in allAGBeamsGeo if inputGeo.DoesIntersect(i)]\r\n    접촉대상 = input.GetJoinedElements()\r\n    슬라브면적 = input.GetParameterValueByName(\"Area\")\r\n    슬라브두께 = input.ElementType.GetParameterValueByName(\"Default Thickness\")\r\n    접촉보 = [i for i in 접촉대상 if \"BMS\" in i.Name]\r\n    \r\n    def 보측면너비산출(슬라브두께, 보):\r\n        보높이 = 보.ElementType.GetParameterValueByName(\"h\")\r\n        보유효높이 = 보높이 - 슬라브두께\r\n        보길이 = 보.GetParameterValueByName(\"Length\")\r\n        보측면면적 = (보유효높이 * 보길이)*2/1000000\r\n        \r\n        return 보측면면적\r\n        \r\n    접촉보측면면적 = sum([보측면너비산출(슬라브두께, i) for i in 접촉보])\r\n\r\n    target = 슬라브면적 + 접촉보측면면적\r\n    targetGeo = \"형상정보 미제공\"\r\n    targetValue = target\r\n    \r\n    return (targetGeo, targetValue, \"M2\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = (거푸집산출함수_슬라브,tag[0],tag[1],[\"M2\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "dad3ced19c8b43d69714c0f5b7d8c0fd",
      "Inputs": [
        {
          "Id": "7735664338e64fe5953054f10b93cdb1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5dd6b32b89204e6bbc7c532b1dfda9e2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2522f7084c8546d087e7f63b7ad62e45",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c62ab52c3c88463b80ad3f1b565217e8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[1];",
      "Id": "6a820a7b25e6489c9b8ccdce87f37530",
      "Inputs": [
        {
          "Id": "a4301f99c64d4c54a3ab04a4f972e3e5",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90232bbdb0f1482ab88bf9f7e089bd3f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "5da78d90-141d-41fe-b18e-520c9e6d400a Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "NodeType": "ExtensionNode",
      "Id": "5da78d90141d41feb18e520c9e6d400a",
      "Inputs": [
        {
          "Id": "55c0c469e27a4a7bbffff27371a5fe91",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "624ba38cdf5745289ca2450e022930e7",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nresult = [i for i in IN if i]\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3289a7c14acd421fb7b7b94ea3b6aba5",
      "Inputs": [
        {
          "Id": "6a01e5e5a4054cdfafe57086a6eeb4a6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ab3e3f54b054ec28f23ac15a6769544",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ac241a315bd42e495bd7f1b1e9d5ffb",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "264e7b5b89464075bea459373d3e095e",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "408e0c484ae9492db6c1475f48d131bb",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b19cc05f874485d8e531175e1d6dabc",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Join([[i],[j]]);\n\ntest;\nr;",
      "Id": "a4dd99cd75084293badb3a07547e05e6",
      "Inputs": [
        {
          "Id": "8b869a2c1bf446fdaad90c71baa60207",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbd07aebd7394838bfeaa24debcebe3e",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7e7044adfc54cacb921b78bb0860f8e",
          "Name": "test",
          "Description": "test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bffc67fd4214689b845465680a2d0d3",
          "Name": "r",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b732c038294e472eb23b67b908c13db7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0eff424d50ed4072a5e0b2040e4a005a",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e69a04b3ee9a4df285fd039f5930d5c3",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"SL\",\"MASS\",\"MAT\",\n\"TOP DECK\"\n];",
      "Id": "11268ec8619e4df18405ae4ede355eb3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f23df43ca11d4d2a87b701ddad2476e7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"A03AG054\"\n];",
      "Id": "98960c6380804bcaafb3cad07754e536",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ce936df1bd5f4514b61eef7ae335ff03",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\ncollector5 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\n_allCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\n_allBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\n_allFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n\r\nallAGBeams = [i.ToDSType(False) for i in _allBeams if \"AG\" in i.Name]\r\n#allAGBeamsGeo = [i.Faces for i in allAGBeams]\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nrefFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]\r\n\r\n# Place your code below this line\r\ndef 거푸집산출함수_매스시스템폼(input):\r\n    inputGeo = input.Geometry()[0]\r\n    슬라브표면들 = inputGeo.Explode()\r\n    슬라브측면들 = [i for i in 슬라브표면들 if round(i.NormalAtParameter(0.5,0.5).Z, 2) == 0]\r\n\r\n    target = 슬라브측면들\r\n    targetGeo = target\r\n    targetValue = sum([i.Area for i in target])/1000000\r\n    \r\n    return (targetGeo, targetValue, \"M2\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = (거푸집산출함수_매스시스템폼,tag[0],tag[1],[\"M2\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5692eb90b03046d59cab445a6eb6cebe",
      "Inputs": [
        {
          "Id": "ccd5b7ac5aa84cddbb38d3ad90cfaa5a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "013ef187c3d2465c9b759fb9cddb7ee8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a605d8b5ef794e0dab81ce40ddffde5b",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "022ccdf032f34f15a0b7eec3537eb9d2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Join([[i],[j]]);\n\ntest;\nr;",
      "Id": "93bd38c3e7334aa3953120c07d32ab31",
      "Inputs": [
        {
          "Id": "9f8dec1981ea42a380374a2a4221d07a",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98e7dfec79e94de6a092f914dfe4714f",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7fc7bfb3631471983d4e69baf210c24",
          "Name": "test",
          "Description": "test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7ae763980e44f5ab46f48cfebbc7451",
          "Name": "r",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c08b499071114d8ba01c130a81f23998",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b7b40d5abc44ecf962e68371f4b26d7",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a3841c5ffa94288aa7b2234002ffba7",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"SL\",\"MASS\",\"MAT\",\n\"TOP DECK\"\n];",
      "Id": "8f948548e13f428d98767d20a62fd56f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0268243cf9264b0c9ea0a40cbab695c9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"A03AG035\"\n];",
      "Id": "c36092c0eee94fbe94db6c3cf21b0562",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e1cdfad3587e421994ec4f15135b9a2b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\ncollector5 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\n_allCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\n_allBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\n_allFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n\r\nallAGBeams = [i.ToDSType(False) for i in _allBeams if \"AG\" in i.Name]\r\n#allAGBeamsGeo = [i.Faces for i in allAGBeams]\r\nallCols = [i.ToDSType(False) for i in _allCols]\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nrefFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]\r\n\r\n# Place your code below this line\r\ndef 거푸집산출함수_매스하부(input):\r\n    inputGeo = input.Geometry()[0]\r\n    슬라브표면들 = inputGeo.Explode()\r\n    하부면 = [i for i in 슬라브표면들 if round(i.NormalAtParameter(0.5,0.5).Z, 2) == -1][0]\r\n    접촉대상 = input.GetJoinedElements()\r\n    접촉보 = [i for i in 접촉대상 if \"BMS\" in i.Name]\r\n    접촉기둥 = [i for i in 접촉대상 if \"CLS\" in i.Name]\r\n    유효접촉대상 = 접촉보 + 접촉기둥\r\n    유효접촉형상 = Solid.ByUnion([i.Geometry()[0] for i in 유효접촉대상])\r\n    하부거푸집적용면 = 하부면.SubtractFrom(유효접촉형상)\r\n\r\n    target = 하부거푸집적용면\r\n    targetGeo = target\r\n    targetValue = sum([i.Area/1000000 for i in target])\r\n    \r\n    return (targetGeo, targetValue, \"M2\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = (거푸집산출함수_매스하부,tag[0],tag[1],[\"M2\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "dfc8957ff20b46149d11c569c5771b0e",
      "Inputs": [
        {
          "Id": "426145d2a6ac45feadffb0eee6130b5f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4ed938de776416ba9709ac2cee2ef92",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6bb778d80f9841f388a6caa454f4d658",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f72e289cb2e844478e0b2b640435be65",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Join([[i],[j]]);\n\ntest;\nr;",
      "Id": "dea0ba1e7e344cf28b7cf77a8afb14b7",
      "Inputs": [
        {
          "Id": "ef8b3157845841258f1849d8caaf0e03",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6815daa374b4218b125d178245a55f5",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5741c32cbee84e488819d7a960ce7560",
          "Name": "test",
          "Description": "test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d4a7d1599b64f52999b6e5115a90e64",
          "Name": "r",
          "Description": "r",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d31b1c2dcc54dfea0e851f9b5494432",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a76cdc9bde2424eb9d47f994d2e30ca",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52ec98b6cef6442297c05b2ae04f3a9b",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"SL\",\"MASS\",\"MAT\",\n\"TOP DECK\"\n];",
      "Id": "844aca2ab56a4c44b2fe3c93f75829b7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2b034b589523454690c034302ea0afcd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"A03AG055\"\n];",
      "Id": "abedb68407564a62acb4cc54e705ec92",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7ed2e040fe604f009f50bd157a89bd9f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\ncollector5 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\n_allCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\n_allBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\n_allFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n\r\nallAGBeams = [i.ToDSType(False) for i in _allBeams if \"AG\" in i.Name]\r\n#allAGBeamsGeo = [i.Faces for i in allAGBeams]\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nrefFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]\r\n시스템동바리기준레벨 = IN[3]\r\n\r\n# Place your code below this line\r\ndef 시스템동바리산출함수(input):\r\n    inputGeo = input.Geometry()[0]\r\n    슬라브표면들 = inputGeo.Explode()\r\n    하부면 = [i for i in 슬라브표면들 if round(i.NormalAtParameter(0.5,0.5).Z, 2) == -1][0]\r\n    접촉대상 = input.GetJoinedElements()\r\n    접촉보 = [i for i in 접촉대상 if \"BMS\" in i.Name]\r\n    접촉기둥 = [i for i in 접촉대상 if \"CLS\" in i.Name]\r\n    유효접촉대상 = 접촉보 + 접촉기둥\r\n    유효접촉형상 = Solid.ByUnion([i.Geometry()[0] for i in 유효접촉대상])\r\n    동바리적용면 = 하부면.SubtractFrom(유효접촉형상)[0]\r\n    동바리적용면적 = 동바리적용면.Area\r\n    if 시스템동바리기준레벨 == None:\r\n        기준레벨 = 0\r\n    else:\r\n        기준레벨 = 시스템동바리기준레벨\r\n    동바리높이 = 동바리적용면.PointAtParameter(0.5,0.5).Z - 기준레벨\r\n\r\n    target = 동바리적용면\r\n    targetGeo = target\r\n    targetValue = 동바리적용면적*동바리높이/1000000000\r\n    \r\n    return (targetGeo, targetValue, \"M2\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = (시스템동바리산출함수,tag[0],tag[1],[\"M2\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "2229c356a6e944f58e65a2049aff0a80",
      "Inputs": [
        {
          "Id": "124e2c07df464a92a04e2c6ef2eb6797",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7fc995165be54d54bdf4fd79234bdac6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad6f8413c3df4d9f9ddb9437c3c5c207",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f00b49bdb3c646f0ad61091628140ea1",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41b7b502ae21435fac718011aa41b090",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport os\r\n#sys.path.append(r'C:\\Users\\HEC\\AppData\\Local\\Programs\\Python\\Python39\\Lib\\site-packages')\r\n#sys.path.append(r'C:\\Users\\pjmk0\\AppData\\Local\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom collections import Iterable\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nexportBln = IN[0]\r\npjtinfo = IN[1][0]\r\nPjtName = pjtinfo[0]\r\nBldgName = pjtinfo[1]\r\nSheetName = IN[1][1]\r\nListIn = IN[2]\r\n\r\n# Place your code below this line\r\nimport datetime\r\nfrom datetime import date, timedelta\r\nToday = date.today()\r\nimport openpyxl\r\nfrom openpyxl.styles import Border, Side, PatternFill, Font, GradientFill, Alignment, Color, numbers\r\n\r\nsample_items = ListIn\r\n\r\n\r\ndef write_to_file(filepath):\r\n    wb = openpyxl.Workbook()\r\n    for sheet in wb.sheetnames:\r\n        wb.remove(wb[sheet])\r\n\r\n    thin = Side(border_style=\"thin\", color=\"000000\")\r\n    double = Side(border_style=\"double\", color=\"000000\")\r\n\r\n    ws = wb.create_sheet(title= f'{SheetName}', index=0)\r\n\r\n    ws.merge_cells('A1:L1')\r\n    ws['A1'] = f'{SheetName} Category Calculation Sheet ({PjtName}_{BldgName})'\r\n    cell = ws['A1']\r\n    cell.font = openpyxl.styles.Font(color='000000', size=20)\r\n    cell.fill = openpyxl.styles.fills.PatternFill(patternType='solid',\r\n                                                  fgColor=openpyxl.styles.colors.Color(rgb='fff3b0'))\r\n\r\n    ws['A2'] = 'Item Number'\r\n    ws['A2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    #ws['B2'] = 'Member Name'\r\n    #ws['B2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    #ws['C2'] = 'Category'\r\n    #ws['C2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['B2'] = 'Family Type'\r\n    ws['B2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['C2'] = 'WorkMaster Code'\r\n    ws['C2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['D2'] = 'Description'\r\n    ws['D2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    #ws['F2'] = 'WorkMaster Description'\r\n    #ws['F2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    #ws['G2'] = 'Unit'\r\n    #ws['G2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    #ws['H2'] = '계수'\r\n    #ws['H2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    #ws['I2'] = '계산 참조값'\r\n    #ws['I2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['E2'] = 'Quantities'\r\n    ws['E2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['F2'] = 'Unit'\r\n    ws['F2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['G2'] = 'Unit Price'\r\n    ws['G2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['H2'] = 'Total Price'\r\n    ws['H2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n\r\n\r\n## 칼럼별 너비 조정 구간\r\n#    for col in range(ws.max_column):\r\n#        ws.column_dimensions[chr(ord('A') + col)].width = 15\r\n    ws.column_dimensions['A'].width = 15\r\n    ws.column_dimensions['B'].width = 45\r\n    ws.column_dimensions['C'].width = 25\r\n    ws.column_dimensions['D'].width = 60\r\n    ws.column_dimensions['E'].width = 15\r\n    ws.column_dimensions['F'].width = 20\r\n    ws.column_dimensions['G'].width = 20\r\n    ws.column_dimensions['H'].width = 20\r\n    #ws.column_dimensions['G'].width = 9\r\n    #ws.column_dimensions['H'].width = 9\r\n    #ws.column_dimensions['H'].hidden = True\r\n    #ws.column_dimensions['I'].width = 12\r\n    #ws.column_dimensions['I'].hidden = True\r\n    #ws.column_dimensions['J'].width = 12\r\n    #ws.column_dimensions['K'].width = 12\r\n    #ws.column_dimensions['L'].width = 12\r\n\r\n###\r\n    start_row = 3\r\n    for (row, item) in enumerate(sample_items, start_row):\r\n        cell = ws.cell(row=row, column=1, value=row - 2)\r\n        #cell.number_format = openpyxl.styles.numbers.builtin_format_code(0)\r\n        cell.alignment = openpyxl.styles.Alignment(horizontal='center', vertical='center')\r\n\r\n#        cell = ws.cell(row=row, column=2, value=item[0])\r\n#        cell.number_format = openpyxl.styles.numbers.FORMAT_DATE_YYYYMMDD2  # 'yyyy-mm-dd'\r\n        ws.cell(row=row, column=2, value=item[0]) ## Family Type 칼럼\r\n\r\n        ws.cell(row=row, column=3, value=item[1]) ## WorkMaster Code 칼럼\r\n        \r\n        ws.cell(row=row, column=4, value=item[2]) ## WorkMaster Code 칼럼\r\n        \r\n        ws.cell(row=row, column=5, value=item[3]) ## Quantities 칼럼\r\n        cell.number_format = '#,##0.00'\r\n        \r\n        ws.cell(row=row, column=6, value=item[4]) ## Unit 칼럼\r\n        \r\n        #cell = ws.cell(row=row, column=8, value=item[6]) ## 계수 칼럼\r\n        #cell.number_format = openpyxl.styles.numbers.builtin_format_code(3)  # '#,##0'\r\n        \r\n        #cell = ws.cell(row=row, column=9, value=item[7]) ## 계산 참조값 칼럼\r\n        #cell.number_format = openpyxl.styles.numbers.builtin_format_code(3)  # '#,##0'\r\n        \r\n        #cell = ws.cell(row=row, column=10, value=item[8]) ## Quantities 칼럼\r\n        #cell.number_format = openpyxl.styles.numbers.builtin_format_code(3)  # '#,##0'\r\n        #cell.font = openpyxl.styles.Font(b=True, color='000000', size=11)\r\n\r\n        cell = ws.cell(row=row, column=8, value='= E{current_row}*G{current_row}'.format(current_row=cell.row))\r\n        cell.number_format = '#,##0.00'\r\n\r\n#        cell = ws.cell(row=row, column=6, value='= D{current_row} * E{current_row}'.format(current_row=cell.row))\r\n#        cell.number_format = openpyxl.styles.numbers.builtin_format_code(3)\r\n\r\n    total_row = ws.max_row + 1\r\n    if total_row > start_row:\r\n        cell1 = ws.cell(row=total_row, column=7, value='Total')\r\n        cell1.font = openpyxl.styles.Font(b=True, color='000000', size=15)\r\n        \r\n        cell2 = ws.cell(row=total_row, column=8, value='= SUM(H{}:H{})'.format(start_row, total_row - 1))\r\n        cell2.number_format = openpyxl.styles.numbers.builtin_format_code(3)\r\n        cell2.border = Border(top=double, left=double, right=double, bottom=double)\r\n        cell2.font = openpyxl.styles.Font(b=True, color='ff03ce', size=15)\r\n    \r\n\r\n    wb.save(filepath)\r\n    wb.close()\r\n\r\n\r\n##if __name__ == '__main__':\r\n#write_to_file('C:\\\\Users\\\\pjmk0\\\\AppData\\\\Roaming\\\\test.xlsx')\r\nif exportBln:\r\n    save_name = f'{SheetName} CalcSheet({PjtName}_{BldgName})_' + Today.strftime(\"%Y-%m-%d\")+'.xlsx'\r\n    path = os.getenv('APPDATA').replace('\\\\','\\\\\\\\')\r\n    filePath = path + '\\\\' + save_name\r\n    \r\n    write_to_file(filePath)\r\nelse:\r\n    pass\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = os.getenv('APPDATA')",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "34b7057217be4ff3b14855f3b64dcd96",
      "Inputs": [
        {
          "Id": "de33f2de3b0248b0a5ebdcc90b5494eb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be0f2e54e5f74e7c85cd006902675001",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f77d195ccd594e458532d3105bf4d533",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31a1a1f06bcb460c9d2f787b9f215e2f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nlists = IN[0]\r\n# Place your code below this line\r\n\r\ndef arrangeDataForExcel(lists):\r\n    result = []\r\n    for elem in lists:\r\n        for wm in elem:\r\n            tmp1 = []\r\n            if \"-!!\" in str(wm[2]) or \"!\" in str(wm[3][0]):\r\n                pass\r\n            else:\r\n                tmp1 = []\r\n                tmp1.append(wm[0])\r\n                tmp1.append(wm[1].split(': ')[0])\r\n                tmp1.append(wm[1].split(': ')[1])\r\n                tmp1.append(round(wm[3][1],2))\r\n                tmp1.append(wm[3][2])\r\n            if tmp1:\r\n                result.append(tmp1)\r\n            else:\r\n                pass\r\n    return result\r\n\r\nresult = arrangeDataForExcel(lists)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "216fea2f2f9a40e9adaa40f2d1a8154b",
      "Inputs": [
        {
          "Id": "d78f654f47704a428253996101e2bc4f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b007666b5034742809f1c56146e8c6b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[pjtinfo,\nsheetname];",
      "Id": "c2b8362daa004a37810fde2bb627c80f",
      "Inputs": [
        {
          "Id": "8c0ad7312974492089ec1b91a5c485f5",
          "Name": "pjtinfo",
          "Description": "pjtinfo",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "caf2480129db4915b679fd7a5434c775",
          "Name": "sheetname",
          "Description": "sheetname",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "916c7b7d83954ac9b1e08e28d685de61",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "9ecbcfba49cd471ca820c3e5abb7f21d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab4816da905d454ca6086c853a3a2fdf",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 428,
      "SelectedString": "OST_ProjectInformation",
      "NodeType": "ExtensionNode",
      "Id": "1d2693e6923940cf8b15e50b0a35b114",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d1e382652f24b2d874bcbe694662a74",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "a8b8d907b88e40308dd890410a8f0de7",
      "Inputs": [
        {
          "Id": "f9ffbb9be1154b92b09f23d338f2fb1d",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e24ff1490d3845f58de9c5070de2f81f",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\ni.GetParameterValueByName(\"Project Name\")[0],\ni.GetParameterValueByName(\"Building Name\")[0]\n];",
      "Id": "85177a0847a24da69a83038c6fa1f69d",
      "Inputs": [
        {
          "Id": "8a4c48864f7c4a3b965477334921c9a0",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4c4844672c648a2a2bc46ed4c2341ca",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToLower@string",
      "Id": "0cae2ddf4e1a42c9ade6fdb841ea81cb",
      "Inputs": [
        {
          "Id": "ada014d5b62e49d983bc33dd3ad0f370",
          "Name": "string",
          "Description": "String to be made lowercase\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69a806e801f54cabb0ff12ed32c63237",
          "Name": "string",
          "Description": "Lowercase string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts the given string to all lowercase characters.\n\nString.ToLower (string: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToTitle@string",
      "Id": "ed6fce2c988a47c28b2ed3c32b8d5399",
      "Inputs": [
        {
          "Id": "bc827529d3594457948f59918c391f97",
          "Name": "str",
          "Description": "String to be made title case\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "209acd5d79614310afebcf643dc4f8dd",
          "Name": "str",
          "Description": "Title case string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts the given string to title case.\n\nString.ToTitle (str: string): string"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n산출결과세트리스트 = IN[0]\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\nresult = 공종목록\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "bda053f1a8e6465187c69061f92a2770",
      "Inputs": [
        {
          "Id": "45716045764a49d79de263279b6008ae",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86980da43ce1478e8b83f7e2b6951175",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 0,
      "MaximumValue": 18,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "2ce1482a1f6c4f2d8d3425c201d88d52",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6ece5a04b0b14ecca83d16dfca8297bc",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "64f1d65d20214011b0be40fe5983889d",
      "Inputs": [
        {
          "Id": "4372e3d5c33546b895106205bee9994e",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39fd459e18de40d1af022c783a7b2f7e",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "input;",
      "Id": "6a797ebbf17248eba625d07d1373ddf6",
      "Inputs": [
        {
          "Id": "25cde265039d4545a5a63f68ae8c382b",
          "Name": "input",
          "Description": "input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "248d8a450aa147dba560f90331c6dc0d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "e04241b8bf384b2a86ee383afd71add6",
      "Inputs": [
        {
          "Id": "827ac87152314f9b92411dc1975032de",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb1bbd75e4644b659600ba40e6dff1a7",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 184,
        "G": 134,
        "B": 11,
        "A": 143
      },
      "NodeType": "ColorInputNode",
      "Id": "1b352f432dc74dc0a544ee5302cc0dc9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fbc1bfdee7bf4d36879a0455abdca0cf",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n선보기여부 = IN[0]\r\n지정색상 = IN[1]\r\n산출결과세트리스트 = IN[2]\r\n공종코드 = IN[3].split(': ')[0]\r\n\r\ndef listFlatten(inlist):\r\n    result = []\r\n    for i in inlist:\r\n        if isinstance(i, list):\r\n            result += (listFlatten(i))\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1].split(': ')[0]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\ndef 색상준비(공종목록):\r\n    log = []\r\n    result = {}\r\n    for i in range(len(공종목록)):\r\n        난수1 = random.randint(0,255)\r\n        난수2 = random.randint(0,255)\r\n        난수3 = random.randint(0,255)\r\n        난수4 = random.randint(0,255)\r\n        색상 = Color.ByARGB(난수1,난수2,난수3,난수4)\r\n        if not 색상 in log:\r\n            log.append(색상)\r\n            result[공종목록[i]] = 색상\r\n    return result\r\n    \r\n색상들 = 색상준비(공종목록)\r\n# Place your code below this line\r\ndef 시각화(산출결과세트, 색상들, 공종코드):\r\n    result = []\r\n    for 공종결과 in 산출결과세트:\r\n        tmp1 = []\r\n        target = 공종결과[3][0]\r\n        공종 = 공종결과[1].split(': ')[0]\r\n        색상 = 지정색상\r\n        if 공종 == 공종코드:\r\n            if isinstance(target, Revit.Elements.FamilyInstance):\r\n                visual = GeometryColor.ByGeometryColor(target.Geometry()[0], 색상)[0]\r\n                tmp1.append(visual)\r\n            elif isinstance(target, str):\r\n                pass\r\n            else:\r\n                if not isinstance(target, list):\r\n                    visual = GeometryColor.ByGeometryColor(target, 색상)\r\n                    tmp1.append(visual)\r\n                else:\r\n                    for i in target:\r\n                        tmp1.append(GeometryColor.ByGeometryColor(i, 색상))\r\n            result.append(tmp1)\r\n        else:\r\n            pass\r\n    return result\r\n\r\ndef 시각화_선보기(산출결과세트, 공종코드):\r\n    result = []\r\n    for 공종결과 in 산출결과세트:\r\n        tmp1 = []\r\n        target = 공종결과[3][0]\r\n        공종 = 공종결과[1].split(': ')[0]\r\n        색상 = 지정색상\r\n        if 공종 == 공종코드:\r\n            if isinstance(target, Revit.Elements.FamilyInstance):\r\n                mass = target.Geometry()[0].Explode()\r\n                lines = list(chain(*listFlatten([i.PerimeterCurves() for i in mass])))\r\n                visual = [GeometryColor.ByGeometryColor(i, 색상) for i in lines]\r\n                tmp1.append(visual)\r\n            elif isinstance(target, str):\r\n                pass\r\n            else:\r\n                if not isinstance(target, list):\r\n                    mass = target.Explode()\r\n                    lines = list(chain(*listFlatten([i.PerimeterCurves() for i in mass])))\r\n                    visual = [GeometryColor.ByGeometryColor(i, 색상) for i in lines]\r\n                    tmp1.append(visual)\r\n                else:\r\n                    for i in target:\r\n                        mass = i.Explode()\r\n                        lines = list(chain(*listFlatten([i.PerimeterCurves() for i in mass])))\r\n                        visual = [GeometryColor.ByGeometryColor(i, 색상) for i in lines]\r\n                        tmp1.append(visual)\r\n\r\n            result.append(tmp1)\r\n        else:\r\n            pass\r\n    return result\r\n\r\n\r\n\r\nif 선보기여부:\r\n    result = [시각화_선보기(산출결과세트, 공종코드) for 산출결과세트 in 산출결과세트리스트]\r\nelse:\r\n    result = [시각화(산출결과세트, 색상들, 공종코드) for 산출결과세트 in 산출결과세트리스트]\r\n# Assign your output to the OUT variable.\r\nOUT = [list(chain(*result))]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5dde24a1e9f14dcd95d449b2504f21da",
      "Inputs": [
        {
          "Id": "364af70b229a4e70889b349c173860d5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16eb25d4b2f748a29664c7c1f31d2da7",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7085f9a17da94a18ac6f3e54a2eacb2e",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b369ec5fe21c436aa3112b2cb30a5bc6",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75fbdce37e784239a675eacca2efc5db",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "631ed5ca7dd241a6a622eb6e4e6e8bce",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "59a10c808b204323964fef0ff0d9a631",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "String.Split(i, \": \")[1];",
      "Id": "bc2794a742354974b4de8968ede6e4db",
      "Inputs": [
        {
          "Id": "ee12580708014dd0895eafdd81dd75c9",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3513248e1484478e9fd6dcb519ef074b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nWMs = IN[0]\r\nidxs = IN[1]\r\n# Place your code below this line\r\n\r\ndef findWM(WMs,idxs):\r\n    result = []\r\n    if isinstance(idxs, list):\r\n        for idx in idxs:\r\n            if idx > len(WMs):\r\n                result.append(WMs[-1])\r\n            else:\r\n                result.append(WMs[idx])\r\n    else:\r\n        idx = idxs\r\n        if idx > len(WMs):\r\n            result.append(WMs[-1])\r\n        else:\r\n            result.append(WMs[idx])\r\n    return result[0]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = findWM(WMs,idxs)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "f3cce97ce84a4c628b088105de6b2e10",
      "Inputs": [
        {
          "Id": "bd26259e213f4713a89d46e90a454aa0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ffc1ae20c4d49d1af409a6026afef2a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd8e3fba011b483682c293eaca56be46",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n산출결과세트리스트 = IN[0]\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\nresult = 공종목록\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "f01fbe2cc66145a8a956af463fe5ac16",
      "Inputs": [
        {
          "Id": "9ac76fdfbc7045e485e70d67ec094050",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0471aa09def24e66b829ca8c9c490dcf",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 9,
      "MaximumValue": 18,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "d6bf71ea61264152bd651b46c8ded705",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "968b92aa6ee14855898a961d58374496",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "1cd2893763a5485185a309063a49cd3e",
      "Inputs": [
        {
          "Id": "851a289648634739b1fb27ecfd4c17e9",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4560b23c03f9491aa1923ae757578c92",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "input;",
      "Id": "e855455f31354deb8ef6fd4b5a30a73f",
      "Inputs": [
        {
          "Id": "9256356a2e1c4dcaab8b5f5bc7990202",
          "Name": "input",
          "Description": "input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97e3a0167f8a4a1ebef810cfe9ae426f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f55912daebd94ec39bdc4222738413c1",
      "Inputs": [
        {
          "Id": "117f06399219455589f9cc572abe9ae6",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7161e796c4c34e7388e42d3f8476023a",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 255,
        "G": 0,
        "B": 255,
        "A": 125
      },
      "NodeType": "ColorInputNode",
      "Id": "b38e920369d048d38c29ceb972772374",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4acde427cb384391a87766614290adef",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n선보기여부 = IN[0]\r\n지정색상 = IN[1]\r\n산출결과세트리스트 = IN[2]\r\n공종코드 = IN[3].split(': ')[0]\r\n\r\ndef listFlatten(inlist):\r\n    result = []\r\n    for i in inlist:\r\n        if isinstance(i, list):\r\n            result += (listFlatten(i))\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1].split(': ')[0]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\ndef 색상준비(공종목록):\r\n    log = []\r\n    result = {}\r\n    for i in range(len(공종목록)):\r\n        난수1 = random.randint(0,255)\r\n        난수2 = random.randint(0,255)\r\n        난수3 = random.randint(0,255)\r\n        난수4 = random.randint(0,255)\r\n        색상 = Color.ByARGB(난수1,난수2,난수3,난수4)\r\n        if not 색상 in log:\r\n            log.append(색상)\r\n            result[공종목록[i]] = 색상\r\n    return result\r\n    \r\n색상들 = 색상준비(공종목록)\r\n# Place your code below this line\r\ndef 시각화(산출결과세트, 색상들, 공종코드):\r\n    result = []\r\n    for 공종결과 in 산출결과세트:\r\n        tmp1 = []\r\n        target = 공종결과[3][0]\r\n        공종 = 공종결과[1].split(': ')[0]\r\n        색상 = 지정색상\r\n        if 공종 == 공종코드:\r\n            if isinstance(target, Revit.Elements.FamilyInstance):\r\n                visual = GeometryColor.ByGeometryColor(target.Geometry()[0], 색상)[0]\r\n                tmp1.append(visual)\r\n            elif isinstance(target, str):\r\n                pass\r\n            else:\r\n                if not isinstance(target, list):\r\n                    visual = GeometryColor.ByGeometryColor(target, 색상)\r\n                    tmp1.append(visual)\r\n                else:\r\n                    for i in target:\r\n                        tmp1.append(GeometryColor.ByGeometryColor(i, 색상))\r\n            result.append(tmp1)\r\n        else:\r\n            pass\r\n    return result\r\n\r\ndef 시각화_선보기(산출결과세트, 공종코드):\r\n    result = []\r\n    for 공종결과 in 산출결과세트:\r\n        tmp1 = []\r\n        target = 공종결과[3][0]\r\n        공종 = 공종결과[1].split(': ')[0]\r\n        색상 = 지정색상\r\n        if 공종 == 공종코드:\r\n            if isinstance(target, Revit.Elements.FamilyInstance):\r\n                mass = target.Geometry()[0].Explode()\r\n                lines = list(chain(*listFlatten([i.PerimeterCurves() for i in mass])))\r\n                visual = [GeometryColor.ByGeometryColor(i, 색상) for i in lines]\r\n                tmp1.append(visual)\r\n            elif isinstance(target, str):\r\n                pass\r\n            else:\r\n                if not isinstance(target, list):\r\n                    mass = target.Explode()\r\n                    lines = list(chain(*listFlatten([i.PerimeterCurves() for i in mass])))\r\n                    visual = [GeometryColor.ByGeometryColor(i, 색상) for i in lines]\r\n                    tmp1.append(visual)\r\n                else:\r\n                    for i in target:\r\n                        mass = i.Explode()\r\n                        lines = list(chain(*listFlatten([i.PerimeterCurves() for i in mass])))\r\n                        visual = [GeometryColor.ByGeometryColor(i, 색상) for i in lines]\r\n                        tmp1.append(visual)\r\n\r\n            result.append(tmp1)\r\n        else:\r\n            pass\r\n    return result\r\n\r\n\r\n\r\nif 선보기여부:\r\n    result = [시각화_선보기(산출결과세트, 공종코드) for 산출결과세트 in 산출결과세트리스트]\r\nelse:\r\n    result = [시각화(산출결과세트, 색상들, 공종코드) for 산출결과세트 in 산출결과세트리스트]\r\n# Assign your output to the OUT variable.\r\nOUT = [list(chain(*result))]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "7514efd0d88b40cfa9f6073f8ff8eccf",
      "Inputs": [
        {
          "Id": "e8ad6e97de484f1f9656fdd6506b10a2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7fbf86b61e8442a7a1af2f6793be85dc",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73f86841baf449e089e3c5d4d1bdd431",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "614beeaa6bbe4888b920cde0d29340cd",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f01091717694f1c8144009259a5b341",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "c6b2c76eea1c41db8f575aa31f89d273",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "010a3f80a2fd409a984ec316ecf9e3c1",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "String.Split(i, \": \")[1];",
      "Id": "c1eb22e87d8a49cd9a611994799ce90b",
      "Inputs": [
        {
          "Id": "a8fa3ce7149a4d9486794edd1e988c72",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "336a801b223f494e98131645154633c7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nWMs = IN[0]\r\nidxs = IN[1]\r\n# Place your code below this line\r\n\r\ndef findWM(WMs,idxs):\r\n    result = []\r\n    if isinstance(idxs, list):\r\n        for idx in idxs:\r\n            if idx > len(WMs):\r\n                result.append(WMs[-1])\r\n            else:\r\n                result.append(WMs[idx])\r\n    else:\r\n        idx = idxs\r\n        if idx > len(WMs):\r\n            result.append(WMs[-1])\r\n        else:\r\n            result.append(WMs[idx])\r\n    return result[0]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = findWM(WMs,idxs)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "64d1c760e3d9403582f293ba4841ddbe",
      "Inputs": [
        {
          "Id": "f96b27905684422aaeee67b4b73034cf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee0095d6f07e48e989c79375b4837e3d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7362c0c5efaf47729baa926f42cb26bd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n산출결과세트리스트 = IN[0]\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\nresult = 공종목록\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "537639d5dd7347679b6d05907fedb0c0",
      "Inputs": [
        {
          "Id": "57f1431859534fa4b979442f07762edf",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95191fc7af4c41aba80af8c41ca1e9dc",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 10,
      "MaximumValue": 18,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "5812a16c324d430f93ebbd9cf04be4ec",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "95faebf9245a44199f9efd6decd26352",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6cdd2919d4e345b8a966c877235979cb",
      "Inputs": [
        {
          "Id": "36bdae12dc3f4e279d0a7b080e7c8c36",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1264b44633c64b1ab915f490456df1dc",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "input;",
      "Id": "f8a22fde439242b6b46da910653bd2b0",
      "Inputs": [
        {
          "Id": "9791eb147b0a490ca82c7797527df196",
          "Name": "input",
          "Description": "input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23bdcf9b1c454e3587874e4970e8209d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "fc03c6713b1748a78441be9b5430d8fc",
      "Inputs": [
        {
          "Id": "419c7ad978fb4c8fa42d2d01f854bdb8",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e7394cb8295142e98e6b9d4c98cec509",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 173,
        "G": 255,
        "B": 47,
        "A": 124
      },
      "NodeType": "ColorInputNode",
      "Id": "d33ca8952e594833b227feadd4645e81",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7722dfaa852c44c099aae78c1e0d922c",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n선보기여부 = IN[0]\r\n지정색상 = IN[1]\r\n산출결과세트리스트 = IN[2]\r\n공종코드 = IN[3].split(': ')[0]\r\n\r\ndef listFlatten(inlist):\r\n    result = []\r\n    for i in inlist:\r\n        if isinstance(i, list):\r\n            result += (listFlatten(i))\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1].split(': ')[0]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\ndef 색상준비(공종목록):\r\n    log = []\r\n    result = {}\r\n    for i in range(len(공종목록)):\r\n        난수1 = random.randint(0,255)\r\n        난수2 = random.randint(0,255)\r\n        난수3 = random.randint(0,255)\r\n        난수4 = random.randint(0,255)\r\n        색상 = Color.ByARGB(난수1,난수2,난수3,난수4)\r\n        if not 색상 in log:\r\n            log.append(색상)\r\n            result[공종목록[i]] = 색상\r\n    return result\r\n    \r\n색상들 = 색상준비(공종목록)\r\n# Place your code below this line\r\ndef 시각화(산출결과세트, 색상들, 공종코드):\r\n    result = []\r\n    for 공종결과 in 산출결과세트:\r\n        tmp1 = []\r\n        target = 공종결과[3][0]\r\n        공종 = 공종결과[1].split(': ')[0]\r\n        색상 = 지정색상\r\n        if 공종 == 공종코드:\r\n            if isinstance(target, Revit.Elements.FamilyInstance):\r\n                visual = GeometryColor.ByGeometryColor(target.Geometry()[0], 색상)[0]\r\n                tmp1.append(visual)\r\n            elif isinstance(target, str):\r\n                pass\r\n            else:\r\n                if not isinstance(target, list):\r\n                    visual = GeometryColor.ByGeometryColor(target, 색상)\r\n                    tmp1.append(visual)\r\n                else:\r\n                    for i in target:\r\n                        tmp1.append(GeometryColor.ByGeometryColor(i, 색상))\r\n            result.append(tmp1)\r\n        else:\r\n            pass\r\n    return result\r\n\r\ndef 시각화_선보기(산출결과세트, 공종코드):\r\n    result = []\r\n    for 공종결과 in 산출결과세트:\r\n        tmp1 = []\r\n        target = 공종결과[3][0]\r\n        공종 = 공종결과[1].split(': ')[0]\r\n        색상 = 지정색상\r\n        if 공종 == 공종코드:\r\n            if isinstance(target, Revit.Elements.FamilyInstance):\r\n                mass = target.Geometry()[0].Explode()\r\n                lines = list(chain(*listFlatten([i.PerimeterCurves() for i in mass])))\r\n                visual = [GeometryColor.ByGeometryColor(i, 색상) for i in lines]\r\n                tmp1.append(visual)\r\n            elif isinstance(target, str):\r\n                pass\r\n            else:\r\n                if not isinstance(target, list):\r\n                    mass = target.Explode()\r\n                    lines = list(chain(*listFlatten([i.PerimeterCurves() for i in mass])))\r\n                    visual = [GeometryColor.ByGeometryColor(i, 색상) for i in lines]\r\n                    tmp1.append(visual)\r\n                else:\r\n                    for i in target:\r\n                        mass = i.Explode()\r\n                        lines = list(chain(*listFlatten([i.PerimeterCurves() for i in mass])))\r\n                        visual = [GeometryColor.ByGeometryColor(i, 색상) for i in lines]\r\n                        tmp1.append(visual)\r\n\r\n            result.append(tmp1)\r\n        else:\r\n            pass\r\n    return result\r\n\r\n\r\n\r\nif 선보기여부:\r\n    result = [시각화_선보기(산출결과세트, 공종코드) for 산출결과세트 in 산출결과세트리스트]\r\nelse:\r\n    result = [시각화(산출결과세트, 색상들, 공종코드) for 산출결과세트 in 산출결과세트리스트]\r\n# Assign your output to the OUT variable.\r\nOUT = [list(chain(*result))]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "91973f6c4da9404192bf21d40682d5af",
      "Inputs": [
        {
          "Id": "0133965e4f0242afba472893efa8bbdb",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "594918df233f49eaba643ec18e76475e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "056363f29e1649ac93cfa902c586cced",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4c2d264fa754de6927f8d0d26b9b120",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b0bbd3649e04e79bc9fb5e199943cd7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "a868af41947c41ee8d279f46501596b4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "13cba441721142cd84f659bba49be3cf",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "String.Split(i, \": \")[1];",
      "Id": "d811220e64d44d6e9fdc61b79d7ea575",
      "Inputs": [
        {
          "Id": "a3b5162a82194b70a944fc38ed9aa516",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edfe0e0b37264fcd8d8a9ff6c6336f7e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nWMs = IN[0]\r\nidxs = IN[1]\r\n# Place your code below this line\r\n\r\ndef findWM(WMs,idxs):\r\n    result = []\r\n    if isinstance(idxs, list):\r\n        for idx in idxs:\r\n            if idx > len(WMs):\r\n                result.append(WMs[-1])\r\n            else:\r\n                result.append(WMs[idx])\r\n    else:\r\n        idx = idxs\r\n        if idx > len(WMs):\r\n            result.append(WMs[-1])\r\n        else:\r\n            result.append(WMs[idx])\r\n    return result[0]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = findWM(WMs,idxs)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "ddc6e69eea5a4069a63ce589734f2cb5",
      "Inputs": [
        {
          "Id": "c267df2731a04691b42b9b78e7e6e9e7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0076ea9610694b35a239ebb7ff118405",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6fd2235ae1a440383880bd9e41d55ad",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n산출결과세트리스트 = IN[0]\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\nresult = 공종목록\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "26b3ce1d402e46ee9797e5939aa4caf7",
      "Inputs": [
        {
          "Id": "58cc243f07a44a319a25f71370468fc3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1021dda424864cc7a0043810bbe2c69b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 10,
      "MaximumValue": 18,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "4f0e1ba592964096b70626029c9136ed",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b12afe709ce541e8934b9baab7590e32",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "925ed21660474844a8501dc5e2c9583c",
      "Inputs": [
        {
          "Id": "0d268d3c8b434f57be9847550c6fb383",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "135a3947d99549d6b809d2dff56abe26",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "input;",
      "Id": "9432477cfe1e4361ac4b92398a815293",
      "Inputs": [
        {
          "Id": "b48db7ebd2a5440ea1fd762d33c067a8",
          "Name": "input",
          "Description": "input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c37c843628f4627b07cc69a8776c22b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "75f6bf54cde54ab7b32a78cf3d23ef6d",
      "Inputs": [
        {
          "Id": "535e2da94aee4b809caa0131eab04bbf",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b3b6220a4c54a6fa821feddd1edcc53",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 0,
        "G": 0,
        "B": 0,
        "A": 106
      },
      "NodeType": "ColorInputNode",
      "Id": "17c3c26bee134726871bde9ccb813986",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "27b192a415c74fc192f686054b6efc0b",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n선보기여부 = IN[0]\r\n지정색상 = IN[1]\r\n산출결과세트리스트 = IN[2]\r\n공종코드 = IN[3].split(': ')[0]\r\n\r\ndef listFlatten(inlist):\r\n    result = []\r\n    for i in inlist:\r\n        if isinstance(i, list):\r\n            result += (listFlatten(i))\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1].split(': ')[0]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\ndef 색상준비(공종목록):\r\n    log = []\r\n    result = {}\r\n    for i in range(len(공종목록)):\r\n        난수1 = random.randint(0,255)\r\n        난수2 = random.randint(0,255)\r\n        난수3 = random.randint(0,255)\r\n        난수4 = random.randint(0,255)\r\n        색상 = Color.ByARGB(난수1,난수2,난수3,난수4)\r\n        if not 색상 in log:\r\n            log.append(색상)\r\n            result[공종목록[i]] = 색상\r\n    return result\r\n    \r\n색상들 = 색상준비(공종목록)\r\n# Place your code below this line\r\ndef 시각화(산출결과세트, 색상들, 공종코드):\r\n    result = []\r\n    for 공종결과 in 산출결과세트:\r\n        tmp1 = []\r\n        target = 공종결과[3][0]\r\n        공종 = 공종결과[1].split(': ')[0]\r\n        색상 = 지정색상\r\n        if 공종 == 공종코드:\r\n            if isinstance(target, Revit.Elements.FamilyInstance):\r\n                visual = GeometryColor.ByGeometryColor(target.Geometry()[0], 색상)[0]\r\n                tmp1.append(visual)\r\n            elif isinstance(target, str):\r\n                pass\r\n            else:\r\n                if not isinstance(target, list):\r\n                    visual = GeometryColor.ByGeometryColor(target, 색상)\r\n                    tmp1.append(visual)\r\n                else:\r\n                    for i in target:\r\n                        tmp1.append(GeometryColor.ByGeometryColor(i, 색상))\r\n            result.append(tmp1)\r\n        else:\r\n            pass\r\n    return result\r\n\r\ndef 시각화_선보기(산출결과세트, 공종코드):\r\n    result = []\r\n    for 공종결과 in 산출결과세트:\r\n        tmp1 = []\r\n        target = 공종결과[3][0]\r\n        공종 = 공종결과[1].split(': ')[0]\r\n        색상 = 지정색상\r\n        if 공종 == 공종코드:\r\n            if isinstance(target, Revit.Elements.FamilyInstance):\r\n                mass = target.Geometry()[0].Explode()\r\n                lines = list(chain(*listFlatten([i.PerimeterCurves() for i in mass])))\r\n                visual = [GeometryColor.ByGeometryColor(i, 색상) for i in lines]\r\n                tmp1.append(visual)\r\n            elif isinstance(target, str):\r\n                pass\r\n            else:\r\n                if not isinstance(target, list):\r\n                    mass = target.Explode()\r\n                    lines = list(chain(*listFlatten([i.PerimeterCurves() for i in mass])))\r\n                    visual = [GeometryColor.ByGeometryColor(i, 색상) for i in lines]\r\n                    tmp1.append(visual)\r\n                else:\r\n                    for i in target:\r\n                        mass = i.Explode()\r\n                        lines = list(chain(*listFlatten([i.PerimeterCurves() for i in mass])))\r\n                        visual = [GeometryColor.ByGeometryColor(i, 색상) for i in lines]\r\n                        tmp1.append(visual)\r\n\r\n            result.append(tmp1)\r\n        else:\r\n            pass\r\n    return result\r\n\r\n\r\n\r\nif 선보기여부:\r\n    result = [시각화_선보기(산출결과세트, 공종코드) for 산출결과세트 in 산출결과세트리스트]\r\nelse:\r\n    result = [시각화(산출결과세트, 색상들, 공종코드) for 산출결과세트 in 산출결과세트리스트]\r\n# Assign your output to the OUT variable.\r\nOUT = [list(chain(*result))]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "553adaf8695a4321af596fc17b109b93",
      "Inputs": [
        {
          "Id": "3150c1b4e3504282a5805c8b29455e2e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f8a641f7ef040a5805b480ea704205c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "676f98592e99414bb528448107db0062",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e3c96d2d5bc42c1924f4d653f58c4c4",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f4e8f0f8e1c480eb2ab63781bbe30ac",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "c5be62025a8d4238afc050589cc39874",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f853ae7b073a4992a11d7a93fc748077",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "String.Split(i, \": \")[1];",
      "Id": "4b6c80a640104405b25a836986738e30",
      "Inputs": [
        {
          "Id": "7303671c8d6a41aeac889cf360f430b4",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1e46edc31354bf097fb0fff581eeac3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nWMs = IN[0]\r\nidxs = IN[1]\r\n# Place your code below this line\r\n\r\ndef findWM(WMs,idxs):\r\n    result = []\r\n    if isinstance(idxs, list):\r\n        for idx in idxs:\r\n            if idx > len(WMs):\r\n                result.append(WMs[-1])\r\n            else:\r\n                result.append(WMs[idx])\r\n    else:\r\n        idx = idxs\r\n        if idx > len(WMs):\r\n            result.append(WMs[-1])\r\n        else:\r\n            result.append(WMs[idx])\r\n    return result[0]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = findWM(WMs,idxs)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "02676eec466e4e288b7b4c0311b0c65e",
      "Inputs": [
        {
          "Id": "3134d9e7f4b34926bbc31e0e26cd07c1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a0467e5c00d84c16b024cc34f19b6de1",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42e6a05a874d450aad9810491c486bf9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.2,
      "Id": "aeb66b23601e4a748d0c1fdaed99ee16",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "95257d7f94da4799a65120e2c16b7427",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    }
  ],
  "Connectors": [
    {
      "Start": "2dd5e372e9c6418b857dbf32b92c5b3c",
      "End": "ab6e967096914d64a15d8823d7abe8b2",
      "Id": "488d00be58954f26875bdac8dbecbe5a"
    },
    {
      "Start": "2dd5e372e9c6418b857dbf32b92c5b3c",
      "End": "03fca15be0d040a7a67c8675a66ab51f",
      "Id": "a8d1181ffc0f4889b0ac513fb7bc5d9d"
    },
    {
      "Start": "865e031ace064d779d73f193184532f3",
      "End": "fba4f28d4fd64af1852fde8002439ab8",
      "Id": "7865de55417c4fb58850e0eeae2ff1db"
    },
    {
      "Start": "3eb98f36825f498199fa7eb7a328ef3d",
      "End": "1061c5e9b16a4a679789613a4d0aa20e",
      "Id": "77d3f3546c69402784cebbf10acb0440"
    },
    {
      "Start": "3eb98f36825f498199fa7eb7a328ef3d",
      "End": "c696f9afd5054f9195631b17c444cb15",
      "Id": "4ed8468e65654696a3d69aa8e3674cf4"
    },
    {
      "Start": "45c95dbb85524c3e9768442fbae65035",
      "End": "fac9c76ea1784feb95ad9393d205fbc3",
      "Id": "0039207e4c9844729cc913316d819ecb"
    },
    {
      "Start": "706ae462ad994c67ad60659a97ae1c4b",
      "End": "0673b29e9e344789b5ed3a8ef03a693c",
      "Id": "3d199da2a3bb4f92b1164b890f833b90"
    },
    {
      "Start": "706ae462ad994c67ad60659a97ae1c4b",
      "End": "9cb0158d106f4917aa791e01be1ff2c9",
      "Id": "4e26bd21cd0e41e89944bfa250ef6d81"
    },
    {
      "Start": "af2194ae75604909b856abac2ed9e960",
      "End": "8d1613109372460487afd80f2897ed6a",
      "Id": "61c09809972f4acf989e01a41037e036"
    },
    {
      "Start": "dd939473ade044e19a2fdd4fa5ceaa65",
      "End": "aeb999a5316a41de89d0326057c17a5f",
      "Id": "e403dcc1ed404142914952419dca8d54"
    },
    {
      "Start": "dd939473ade044e19a2fdd4fa5ceaa65",
      "End": "caf2480129db4915b679fd7a5434c775",
      "Id": "e825ce9ce6ec4a9694aefc9f92c3f31a"
    },
    {
      "Start": "ea97a5cc1b1e447197dfd8a82b3b2712",
      "End": "53c612b3a0d247e68bef0f1ccd07c139",
      "Id": "42849ebbc06a4f3ebc26b75335e6bb6d"
    },
    {
      "Start": "f81924c69b7147f8aa9c662029870a5a",
      "End": "22b4aea715fc47ee91ed8d0f8cce9e9d",
      "Id": "5a80263544e040e8be370c1a8e059f7f"
    },
    {
      "Start": "89567a601cc646c7bb7df3be1f854fd6",
      "End": "f7aa06c790134ff68946d61adb1c585f",
      "Id": "d167dc42cd1e4448bc360462b4cffe70"
    },
    {
      "Start": "162498c3b9954009bcf1704288003350",
      "End": "feafaa7d776a4f1cb10c8861f253f682",
      "Id": "65f0bbb9300741e09d719d1e81d616e4"
    },
    {
      "Start": "38938187921f43e0b2e70dda71f73e69",
      "End": "86c9b747715f425893eb44b8600e7597",
      "Id": "20f1600ae23d4f31aef6bc365ea27600"
    },
    {
      "Start": "0f56d685ccbb4d3a9e0c72f01ac521e5",
      "End": "f2aa2735415546789c8edd83fccabe66",
      "Id": "fb3c25545e0442678f1da2e90c752c39"
    },
    {
      "Start": "0f56d685ccbb4d3a9e0c72f01ac521e5",
      "End": "8732d34612b348cebadef5cb3b6fcbd1",
      "Id": "738354070f834e4f9df19b08df7a5b2d"
    },
    {
      "Start": "0f56d685ccbb4d3a9e0c72f01ac521e5",
      "End": "25cde265039d4545a5a63f68ae8c382b",
      "Id": "bece42e3901545d8a9544c02eaf115a6"
    },
    {
      "Start": "0f56d685ccbb4d3a9e0c72f01ac521e5",
      "End": "9256356a2e1c4dcaab8b5f5bc7990202",
      "Id": "88976238cdc14562afc676a25e87d6b3"
    },
    {
      "Start": "0f56d685ccbb4d3a9e0c72f01ac521e5",
      "End": "9791eb147b0a490ca82c7797527df196",
      "Id": "db799c2d2d034f2ba5d2f439835b1c55"
    },
    {
      "Start": "0f56d685ccbb4d3a9e0c72f01ac521e5",
      "End": "b48db7ebd2a5440ea1fd762d33c067a8",
      "Id": "05b3275dafab4c84a5769c0eae278096"
    },
    {
      "Start": "dbf5d3fd3e2c479092dc272fdb15c3f5",
      "End": "d78f654f47704a428253996101e2bc4f",
      "Id": "b01da0b8ef1241bfa36ba12ba500b9c5"
    },
    {
      "Start": "ae3d473204f34b959d8e5fb87e6ef81d",
      "End": "5321e529ad2f48f683741491cf0d45b0",
      "Id": "93ea9af00cf44926b126a4ff80b8a9ba"
    },
    {
      "Start": "ae3d473204f34b959d8e5fb87e6ef81d",
      "End": "a4301f99c64d4c54a3ab04a4f972e3e5",
      "Id": "65a7cc9d504b4868bb72b7d14fe506fd"
    },
    {
      "Start": "8685a8ca012a46f3918ea92ad144831d",
      "End": "0c8c1ddac5554a9bb5ecc18fdf787db3",
      "Id": "3aeca740ff7c41bab73e491c67e53635"
    },
    {
      "Start": "e49e445fa86e47eb91f75751102933a4",
      "End": "fed4071b84d545acb2797ad1b07ba82e",
      "Id": "4b6a338d0e6c4e569909453bf42b51c5"
    },
    {
      "Start": "345ff44ed6d84a68ad1f429d807c83db",
      "End": "5276e476cab1474fbeb2d363943eafc0",
      "Id": "0e263dab56cc4ceba9c3dd18648353fb"
    },
    {
      "Start": "345ff44ed6d84a68ad1f429d807c83db",
      "End": "f74f33cb50c34514b750f98b78dc5308",
      "Id": "60fb960695804d01aaf12ff3aeea2fc5"
    },
    {
      "Start": "345ff44ed6d84a68ad1f429d807c83db",
      "End": "1f9cd2ab791948f3a428d3097f5ecdd9",
      "Id": "f7099a23f74341db86f7494e54ec4e6c"
    },
    {
      "Start": "96dc0758cd004d36954b0b810b74785a",
      "End": "b4abe532107847a0af1efb006e77f6e1",
      "Id": "2c617eddc12045439305a33e050f1e8f"
    },
    {
      "Start": "a2154927e3924c2ebbbbf6d6d7f39da1",
      "End": "1d1adf9abe8f42f390b1d483dc33d4bb",
      "Id": "02b47d98ccb547198da56d0e67c58aee"
    },
    {
      "Start": "c37e725be7b94d2c805e4d56de13d609",
      "End": "24bf0443a9b54a7795c9599ec04a9314",
      "Id": "8d26d0e08c884be8981e009d66c62da8"
    },
    {
      "Start": "aa42abe5beb347868a502c8594408ab3",
      "End": "95bb190a612544f8be141f1531611613",
      "Id": "94c424e6e3f0412683a6b382e2db8bf6"
    },
    {
      "Start": "42927a69ab514db4a835533807c43a4d",
      "End": "73286cb162db4586a0e798288f27f228",
      "Id": "d46a38c7a589401fa5b7226a2d3a1439"
    },
    {
      "Start": "86dd09de362f4fe8ac5c224c3ad57d66",
      "End": "fd1e2e66e75b429b88397e486dd8c2f0",
      "Id": "c3a5b6cb9114476d82ba4b7232bdbd96"
    },
    {
      "Start": "5ba3ce45060a452795632f6064b84227",
      "End": "524191d720da469cb0d896fa6d46c3ef",
      "Id": "ced9bfab6d304f4797e7150da929adf3"
    },
    {
      "Start": "c82f9fbc4b0c4280bbc5bf124694b368",
      "End": "a22772bde7a34c8f919cf5ca672a9a61",
      "Id": "8de3e5e66d1842b4a4ae60833b8162e9"
    },
    {
      "Start": "68652dba9fd64f1192507cdaeaf0bb85",
      "End": "ee04d25ee4cb4104a1ea76376cd2fcf6",
      "Id": "80f870a9db6c44168880e89e66fb1f97"
    },
    {
      "Start": "12e88d93ec174eab9c69dbd7c83b9550",
      "End": "d5c6ce50f8354ea5ac25624c032d7f44",
      "Id": "4f2b7c823d9946e68323abb4bc261d1f"
    },
    {
      "Start": "12e88d93ec174eab9c69dbd7c83b9550",
      "End": "e2e5e39402544646a1ea8f9b5c45f8aa",
      "Id": "f350184043ce4cccb3098f092bb667fb"
    },
    {
      "Start": "3319dec934a5498ba3989b8e99113f32",
      "End": "a9d4ff0f8c5c4546a85e44a0398f7fb1",
      "Id": "4d755febce27453c968cb1886949ca07"
    },
    {
      "Start": "654b62116fc447d4b637aa7d6fba6426",
      "End": "6eac47cc3c764c32b4cca852365d4e0a",
      "Id": "188b6b35fb04458bbdcc8d52a0745206"
    },
    {
      "Start": "c6228f54cf544ffb8db1cf903bdb071e",
      "End": "0a4c5f13bc3b431b8d0bbff12486ef5b",
      "Id": "b374ff88e6e64b09a13a21293221a066"
    },
    {
      "Start": "6d25fe1327934477aea03987bf2ca847",
      "End": "34bf59cae65045ba92e6635784729d92",
      "Id": "1c97facdc76a4f64a886fcf546b43892"
    },
    {
      "Start": "02f7ab3f42e3460f81fc4e1269805ed9",
      "End": "d7ae763980e44f5ab46f48cfebbc7451",
      "Id": "7095efb99a754a84baf4718d99dd011f"
    },
    {
      "Start": "58f44fe07e5e4c1583cc77175dff9bd7",
      "End": "c7e4f8045c08483992cc183f52665c8f",
      "Id": "1231d0589da64235a9cbf63182893b7d"
    },
    {
      "Start": "a40e4f404e4c4914966fead789d94062",
      "End": "1b813581a8a849b49023824656703e2d",
      "Id": "a44af885673645168507e046f53f1124"
    },
    {
      "Start": "a8f5c9dea09b42779ac4d0f19c3f4513",
      "End": "9c8d951324c24ffcb81e9743eab7137c",
      "Id": "bb15c0a7007b4b0599ca3f1df85f70e9"
    },
    {
      "Start": "014ba6d97cfa4e5ea6dca94f2e7a0e02",
      "End": "0b53435928514970a6d7e6241b834a70",
      "Id": "52a1620f59ae4da499ec1ff1a99b52b9"
    },
    {
      "Start": "0d385d433f684efdbd45b5f73d39b54e",
      "End": "51fb7e87623a45f5926fc72724d4b2c0",
      "Id": "baad4158004a42dc852192ba9fd055b3"
    },
    {
      "Start": "c61fc40b87bc412383b5093773dab421",
      "End": "47408f3ec8c649f58c16caedecd9d5cb",
      "Id": "41eb6eca4a30444c92e3000c07fc7874"
    },
    {
      "Start": "4ceb01c4c4284fd19b07d21453da0937",
      "End": "a404f545131248c881818f1be2852323",
      "Id": "c7c831e26bf64f338d6539b2b084b2e2"
    },
    {
      "Start": "e2ccf0d803fb48d8a418109faa676a98",
      "End": "f888c5c6467640ef90b6487ab5478664",
      "Id": "3d7c55bb43f14b02aef6408e4b82fcef"
    },
    {
      "Start": "ebddfab19aa24e59834d1026178facaf",
      "End": "170ded00268349d7b55cb6244c7d8084",
      "Id": "bd8d435402fd45f789f5e096339dbba1"
    },
    {
      "Start": "46405361b57a49d896508e9d38c80316",
      "End": "6c1399e1660f43f3b32bbe757cec6918",
      "Id": "dec10875221847599cb07bafb7020803"
    },
    {
      "Start": "0addec3ded8746e99aa0c569e729eb94",
      "End": "1bffc67fd4214689b845465680a2d0d3",
      "Id": "cc51defb02874c35a8a32758cf691d99"
    },
    {
      "Start": "0addec3ded8746e99aa0c569e729eb94",
      "End": "6d4a7d1599b64f52999b6e5115a90e64",
      "Id": "a3d785717a90452abd0a138ad0b44bcf"
    },
    {
      "Start": "2ee3fe2b40034209a220b8a7bad958f2",
      "End": "f0a7198383874fcd9283cf981fd1a2e1",
      "Id": "e357942b76c7430bbc2632e3de01b950"
    },
    {
      "Start": "2834c39a39dc4082b07556e9f792b786",
      "End": "86ef249d94ff411aa065f1058705fbcd",
      "Id": "bde32b50374b4615a9be46ab1c9f43f8"
    },
    {
      "Start": "242d9db582884d14a5ea79fdb12aaa29",
      "End": "3e3d9a98e2e847ceb85aa0c734c246ac",
      "Id": "33716bc28f8a431db67a8fa5613b4e3d"
    },
    {
      "Start": "85e2e132e7ca4b4385680d4d2957a8a5",
      "End": "5dd6b32b89204e6bbc7c532b1dfda9e2",
      "Id": "c128f297777f407eaeef7864eb4dbe0c"
    },
    {
      "Start": "b17681aed1f6477e83c3246da503e3b5",
      "End": "2522f7084c8546d087e7f63b7ad62e45",
      "Id": "d7f93983cba941539c4b13a1e2c13611"
    },
    {
      "Start": "9e56a219ef4447e6a9d5d30fa89d6aaa",
      "End": "d4de7a319c824730a3488b65e8a400cb",
      "Id": "1562a522810447d795c7bee407414022"
    },
    {
      "Start": "7a7a9bcedd19488eb2d7780c7e8484f0",
      "End": "d05042e62cc44ed8bb4f1f26f1a301ed",
      "Id": "ba24eb23f6bf4aa6bf959f8760169562"
    },
    {
      "Start": "c62ab52c3c88463b80ad3f1b565217e8",
      "End": "2a6b3bcc09074df982f2899c50a549cd",
      "Id": "b03f70e31b364f1da6a47fe0c4c55c65"
    },
    {
      "Start": "0b19cc05f874485d8e531175e1d6dabc",
      "End": "55c0c469e27a4a7bbffff27371a5fe91",
      "Id": "d21214a2116d485fbbf417453f2cd202"
    },
    {
      "Start": "b732c038294e472eb23b67b908c13db7",
      "End": "013ef187c3d2465c9b759fb9cddb7ee8",
      "Id": "f938c2ca0b8c48d6974fc8350b63762d"
    },
    {
      "Start": "0eff424d50ed4072a5e0b2040e4a005a",
      "End": "a605d8b5ef794e0dab81ce40ddffde5b",
      "Id": "60fec8c4c77a471a83a919c61b0bedeb"
    },
    {
      "Start": "f23df43ca11d4d2a87b701ddad2476e7",
      "End": "8b869a2c1bf446fdaad90c71baa60207",
      "Id": "ad33ccb6781c43b8be5c3f9218d64e0c"
    },
    {
      "Start": "ce936df1bd5f4514b61eef7ae335ff03",
      "End": "cbd07aebd7394838bfeaa24debcebe3e",
      "Id": "d6c8043feb8e422c81b637c7c3364c03"
    },
    {
      "Start": "022ccdf032f34f15a0b7eec3537eb9d2",
      "End": "08c91228d5524278977d74e4cbca107b",
      "Id": "f1eaaa7504ac4a5ba8c95c32c072024f"
    },
    {
      "Start": "c08b499071114d8ba01c130a81f23998",
      "End": "c4ed938de776416ba9709ac2cee2ef92",
      "Id": "9a19ddd3f44e40baa3144ea435844274"
    },
    {
      "Start": "2b7b40d5abc44ecf962e68371f4b26d7",
      "End": "6bb778d80f9841f388a6caa454f4d658",
      "Id": "1df0912fdc4642338148f45915c72072"
    },
    {
      "Start": "0268243cf9264b0c9ea0a40cbab695c9",
      "End": "9f8dec1981ea42a380374a2a4221d07a",
      "Id": "a9b0066169b0410393beff4997a7e3cc"
    },
    {
      "Start": "e1cdfad3587e421994ec4f15135b9a2b",
      "End": "98e7dfec79e94de6a092f914dfe4714f",
      "Id": "68a8eaded14f4aa8a33dfe88ca3515d1"
    },
    {
      "Start": "f72e289cb2e844478e0b2b640435be65",
      "End": "9c95999ed95d41d48dbb3624ab84dfe1",
      "Id": "1d174354d903427b9a2193c3a15826b4"
    },
    {
      "Start": "1d31b1c2dcc54dfea0e851f9b5494432",
      "End": "7fc995165be54d54bdf4fd79234bdac6",
      "Id": "2b7b5e9de3b24f17aa01d3c313b1cec3"
    },
    {
      "Start": "0a76cdc9bde2424eb9d47f994d2e30ca",
      "End": "ad6f8413c3df4d9f9ddb9437c3c5c207",
      "Id": "9c2232e144294b8fbc8f6d2345f99bf8"
    },
    {
      "Start": "2b034b589523454690c034302ea0afcd",
      "End": "ef8b3157845841258f1849d8caaf0e03",
      "Id": "c133112e87d54b0daa75d8094cad02bd"
    },
    {
      "Start": "7ed2e040fe604f009f50bd157a89bd9f",
      "End": "d6815daa374b4218b125d178245a55f5",
      "Id": "aeeb9c7b884d4c76a8ab2b093c759fac"
    },
    {
      "Start": "41b7b502ae21435fac718011aa41b090",
      "End": "94280f7622c04efcaa7a548c8c304eb5",
      "Id": "94dc2f5d0d474e83b830f786457c1d63"
    },
    {
      "Start": "1b007666b5034742809f1c56146e8c6b",
      "End": "f77d195ccd594e458532d3105bf4d533",
      "Id": "28755a83de124dceab8fcd4bf2226c22"
    },
    {
      "Start": "916c7b7d83954ac9b1e08e28d685de61",
      "End": "be0f2e54e5f74e7c85cd006902675001",
      "Id": "17c0062285e94dea9e9038ca9b2d7e2d"
    },
    {
      "Start": "ab4816da905d454ca6086c853a3a2fdf",
      "End": "de33f2de3b0248b0a5ebdcc90b5494eb",
      "Id": "4a3cd59628a54addbf536bc992fdac16"
    },
    {
      "Start": "0d1e382652f24b2d874bcbe694662a74",
      "End": "f9ffbb9be1154b92b09f23d338f2fb1d",
      "Id": "e2adbf9cc4c147a5ae26295ab64975b8"
    },
    {
      "Start": "e24ff1490d3845f58de9c5070de2f81f",
      "End": "8a4c48864f7c4a3b965477334921c9a0",
      "Id": "220031b41bcc437b8799dcddef8257f5"
    },
    {
      "Start": "d4c4844672c648a2a2bc46ed4c2341ca",
      "End": "ada014d5b62e49d983bc33dd3ad0f370",
      "Id": "2c9602118a064ae1bd4be5007d535118"
    },
    {
      "Start": "69a806e801f54cabb0ff12ed32c63237",
      "End": "bc827529d3594457948f59918c391f97",
      "Id": "2c54725c82da4c4bbe3c27df78dd9f25"
    },
    {
      "Start": "209acd5d79614310afebcf643dc4f8dd",
      "End": "8c0ad7312974492089ec1b91a5c485f5",
      "Id": "f608c044beec4d87815dd8ba9d4baa39"
    },
    {
      "Start": "86980da43ce1478e8b83f7e2b6951175",
      "End": "827ac87152314f9b92411dc1975032de",
      "Id": "44486431fabb45faa7d558338589838c"
    },
    {
      "Start": "6ece5a04b0b14ecca83d16dfca8297bc",
      "End": "2ffc1ae20c4d49d1af409a6026afef2a",
      "Id": "7657fdd0d2c74ddbafda9b590bb0f978"
    },
    {
      "Start": "248d8a450aa147dba560f90331c6dc0d",
      "End": "45716045764a49d79de263279b6008ae",
      "Id": "5be19c8cf62f40be8526079e7961da44"
    },
    {
      "Start": "248d8a450aa147dba560f90331c6dc0d",
      "End": "7085f9a17da94a18ac6f3e54a2eacb2e",
      "Id": "727411160d4744db84733606bf76ed0c"
    },
    {
      "Start": "bb1bbd75e4644b659600ba40e6dff1a7",
      "End": "bd26259e213f4713a89d46e90a454aa0",
      "Id": "47eaffc913e54e05ade18dee56ed3475"
    },
    {
      "Start": "fbc1bfdee7bf4d36879a0455abdca0cf",
      "End": "16eb25d4b2f748a29664c7c1f31d2da7",
      "Id": "98ca834f24df4a32934128eb1165dafe"
    },
    {
      "Start": "75fbdce37e784239a675eacca2efc5db",
      "End": "6a01e5e5a4054cdfafe57086a6eeb4a6",
      "Id": "f870d31ad0a64ee9a374abdbb3123daf"
    },
    {
      "Start": "59a10c808b204323964fef0ff0d9a631",
      "End": "364af70b229a4e70889b349c173860d5",
      "Id": "d5fc0b021ca04cc89507adfe78ff7335"
    },
    {
      "Start": "3513248e1484478e9fd6dcb519ef074b",
      "End": "4372e3d5c33546b895106205bee9994e",
      "Id": "45a551d1d05f41a1884411a43b73d184"
    },
    {
      "Start": "bd8e3fba011b483682c293eaca56be46",
      "End": "b369ec5fe21c436aa3112b2cb30a5bc6",
      "Id": "cd4af0f53ddd495f9f0812e519d22678"
    },
    {
      "Start": "bd8e3fba011b483682c293eaca56be46",
      "End": "ee12580708014dd0895eafdd81dd75c9",
      "Id": "f4e78e18b376438a8d021025f20b48a3"
    },
    {
      "Start": "0471aa09def24e66b829ca8c9c490dcf",
      "End": "117f06399219455589f9cc572abe9ae6",
      "Id": "07c379686bc44b7490943451f484694e"
    },
    {
      "Start": "968b92aa6ee14855898a961d58374496",
      "End": "ee0095d6f07e48e989c79375b4837e3d",
      "Id": "6f1029831eac4762ab187214c61149f4"
    },
    {
      "Start": "97e3a0167f8a4a1ebef810cfe9ae426f",
      "End": "9ac76fdfbc7045e485e70d67ec094050",
      "Id": "3c558e74cd00443b99eadb258eff0d5c"
    },
    {
      "Start": "97e3a0167f8a4a1ebef810cfe9ae426f",
      "End": "73f86841baf449e089e3c5d4d1bdd431",
      "Id": "0f3ed7ee9e364e1589ea7e00c38c2026"
    },
    {
      "Start": "7161e796c4c34e7388e42d3f8476023a",
      "End": "f96b27905684422aaeee67b4b73034cf",
      "Id": "be5db9bd5c544b73a6ee4549a91f9c79"
    },
    {
      "Start": "4acde427cb384391a87766614290adef",
      "End": "7fbf86b61e8442a7a1af2f6793be85dc",
      "Id": "a1d74ca285f84821bc5ae1c92e18e882"
    },
    {
      "Start": "010a3f80a2fd409a984ec316ecf9e3c1",
      "End": "e8ad6e97de484f1f9656fdd6506b10a2",
      "Id": "50750e876f4541a0aed3d8258d635ad3"
    },
    {
      "Start": "336a801b223f494e98131645154633c7",
      "End": "851a289648634739b1fb27ecfd4c17e9",
      "Id": "72a1966099ae4350ad4f6e75eab2e9a6"
    },
    {
      "Start": "7362c0c5efaf47729baa926f42cb26bd",
      "End": "614beeaa6bbe4888b920cde0d29340cd",
      "Id": "bb0c01dd327d4b1daf72fcf5e2e5a180"
    },
    {
      "Start": "7362c0c5efaf47729baa926f42cb26bd",
      "End": "a8fa3ce7149a4d9486794edd1e988c72",
      "Id": "58b5b8ad02f441a88d429f41c80deefb"
    },
    {
      "Start": "95191fc7af4c41aba80af8c41ca1e9dc",
      "End": "419c7ad978fb4c8fa42d2d01f854bdb8",
      "Id": "323020f316884d06a2fe635d80827ddb"
    },
    {
      "Start": "95faebf9245a44199f9efd6decd26352",
      "End": "0076ea9610694b35a239ebb7ff118405",
      "Id": "7e8e57e89acd4921a8d5841f5c827313"
    },
    {
      "Start": "23bdcf9b1c454e3587874e4970e8209d",
      "End": "57f1431859534fa4b979442f07762edf",
      "Id": "78e72f0b426f422386e252c4b0da802f"
    },
    {
      "Start": "23bdcf9b1c454e3587874e4970e8209d",
      "End": "056363f29e1649ac93cfa902c586cced",
      "Id": "f7e1fca278f74554b56f8fbd0fd0cfda"
    },
    {
      "Start": "e7394cb8295142e98e6b9d4c98cec509",
      "End": "c267df2731a04691b42b9b78e7e6e9e7",
      "Id": "5e1d5e19151344a5b2d66ab3979b983d"
    },
    {
      "Start": "7722dfaa852c44c099aae78c1e0d922c",
      "End": "594918df233f49eaba643ec18e76475e",
      "Id": "55899adc9f15413bb2f2eb39772ef3fc"
    },
    {
      "Start": "13cba441721142cd84f659bba49be3cf",
      "End": "0133965e4f0242afba472893efa8bbdb",
      "Id": "2d9b2b3f43ae469ebb40ffd094901b0e"
    },
    {
      "Start": "edfe0e0b37264fcd8d8a9ff6c6336f7e",
      "End": "36bdae12dc3f4e279d0a7b080e7c8c36",
      "Id": "2e4333d87ccf4b60b88b7f5b99cc9ca5"
    },
    {
      "Start": "c6fd2235ae1a440383880bd9e41d55ad",
      "End": "d4c2d264fa754de6927f8d0d26b9b120",
      "Id": "849de422346043a89045b092c85012ba"
    },
    {
      "Start": "c6fd2235ae1a440383880bd9e41d55ad",
      "End": "a3b5162a82194b70a944fc38ed9aa516",
      "Id": "baa161886ddb453ca613140362ed4274"
    },
    {
      "Start": "1021dda424864cc7a0043810bbe2c69b",
      "End": "535e2da94aee4b809caa0131eab04bbf",
      "Id": "c3aa9cace69e41118e980d0f2b4c90f0"
    },
    {
      "Start": "b12afe709ce541e8934b9baab7590e32",
      "End": "a0467e5c00d84c16b024cc34f19b6de1",
      "Id": "36e2d7e39d7341d4b61215fe6f179180"
    },
    {
      "Start": "4c37c843628f4627b07cc69a8776c22b",
      "End": "58cc243f07a44a319a25f71370468fc3",
      "Id": "9fc976782960431d82405b5711eee87c"
    },
    {
      "Start": "4c37c843628f4627b07cc69a8776c22b",
      "End": "676f98592e99414bb528448107db0062",
      "Id": "653b1795fa4844888cf59370a66aa3fe"
    },
    {
      "Start": "2b3b6220a4c54a6fa821feddd1edcc53",
      "End": "3134d9e7f4b34926bbc31e0e26cd07c1",
      "Id": "7a277f6943c4425389b0a3e98da1375e"
    },
    {
      "Start": "27b192a415c74fc192f686054b6efc0b",
      "End": "8f8a641f7ef040a5805b480ea704205c",
      "Id": "b1596a9ae96640e48dfab86e3a915933"
    },
    {
      "Start": "5f4e8f0f8e1c480eb2ab63781bbe30ac",
      "End": "408e0c484ae9492db6c1475f48d131bb",
      "Id": "fd3a4bd25a854d85b99250a6d76e40e1"
    },
    {
      "Start": "f853ae7b073a4992a11d7a93fc748077",
      "End": "3150c1b4e3504282a5805c8b29455e2e",
      "Id": "6ce65f3a41914123aa5d53218d5e16cb"
    },
    {
      "Start": "e1e46edc31354bf097fb0fff581eeac3",
      "End": "0d268d3c8b434f57be9847550c6fb383",
      "Id": "84e0f313abf84563a48b637f4d6a5baf"
    },
    {
      "Start": "42e6a05a874d450aad9810491c486bf9",
      "End": "6e3c96d2d5bc42c1924f4d653f58c4c4",
      "Id": "eaac4d3447594177b89c7078d734abd8"
    },
    {
      "Start": "42e6a05a874d450aad9810491c486bf9",
      "End": "7303671c8d6a41aeac889cf360f430b4",
      "Id": "ec48a51987034e1aac0307cf97c0697c"
    },
    {
      "Start": "95257d7f94da4799a65120e2c16b7427",
      "End": "f7d85dd9d5764fab9c601d835ed0f68c",
      "Id": "7c0adf4c4895429388f7743ca761239b"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 63777.30078125,
      "EyeY": 61068.5390625,
      "EyeZ": 19753.94140625,
      "LookX": -47797.52734375,
      "LookY": -79004.7421875,
      "LookZ": -61596.203125,
      "UpX": -0.33389371633529663,
      "UpY": 0.83866888284683228,
      "UpZ": -0.43029019236564636
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Set Up All Element Inform as Dictionary",
        "Id": "e0427ef06d504db89b14c0fecc5c717d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10631.336012479816,
        "Y": 7404.9079076515227
      },
      {
        "ShowGeometry": true,
        "Name": "ExcelDataManagerNode",
        "Id": "09731e78949f4760b876c8a956469a3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9551.59227583536,
        "Y": 7387.0890684363412
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5000a2bea8e64651ab45f16fae6e4191",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7998.7760358149453,
        "Y": 6404.0236013894537
      },
      {
        "ShowGeometry": false,
        "Name": "All Elements of Category",
        "Id": "d6a04655d8504043b972c31b54888ec5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7653.7989249937045,
        "Y": 6081.0644956294536
      },
      {
        "ShowGeometry": false,
        "Name": "Categories",
        "Id": "9bae5aaf9bf34b83b811b6478f215564",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7363.0932570139948,
        "Y": 6079.8127223486536
      },
      {
        "ShowGeometry": true,
        "Name": "Sheet Name",
        "Id": "2b55deec8d4646b896bbdbbbab022bda",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7377.7107934511851,
        "Y": 6605.9555692558533
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "7b4f8f19efab4a2fa529e2bcd25c4024",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7093.5996080211753,
        "Y": 6502.675833354353
      },
      {
        "ShowGeometry": true,
        "Name": "Github_Python@Import Excel(By OpenpyXl)",
        "Id": "b4336991a32b46e1bfa26f2d00f265a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7586.0457937311849,
        "Y": 6477.3936496433535
      },
      {
        "ShowGeometry": true,
        "Name": "String From Web",
        "Id": "cfb9f670cc884514938ce524046c0014",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7347.0967376143262,
        "Y": 6387.961886137753
      },
      {
        "ShowGeometry": true,
        "Name": "List.UniqueItems",
        "Id": "a83a98f993dd4a04a274e36e0da9fab0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11195.446108300495,
        "Y": 7629.4121696494321
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65c844a6fc4342d0a5b889df13a34c32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10926.676789986468,
        "Y": 7616.46942808113
      },
      {
        "ShowGeometry": true,
        "Name": "createElemDS",
        "Id": "67f330b11f0741f989c850c8112de991",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12819.054385357891,
        "Y": 7393.3524036427871
      },
      {
        "ShowGeometry": false,
        "Name": "getTargetAndValue",
        "Id": "66979d5642e3486f9b28e6440bf1bb52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15737.113793387198,
        "Y": 8762.5668741328809
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "a4a606cb1846452abefe5992339ded29",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16837.166576180207,
        "Y": 7107.1842246920614
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "00b5c3ab9e324c7f84a2a39d4ac0a4c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9449.7055146376242,
        "Y": 7896.5969790595191
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "344c3f70f1114cfcbf9e36fa8ddfbc2b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15217.487881769117,
        "Y": 7926.2240845521155
      },
      {
        "ShowGeometry": false,
        "Name": "공종목록",
        "Id": "cdf0366fda164fbc850df62921673738",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14993.487881769117,
        "Y": 7926.2240845521155
      },
      {
        "ShowGeometry": false,
        "Name": "슬라브철근비",
        "Id": "01f61211fc9347de9fe859b748b96f38",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8132.0169926972449,
        "Y": 10179.449293520031
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e41dcedb9d134272b0a88d64f987a4c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8406.0169926972449,
        "Y": 10199.08929352003
      },
      {
        "ShowGeometry": false,
        "Name": "독립기초철근비",
        "Id": "5fe52eddd736445585f229e29c93cd8c",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8132.0169926972449,
        "Y": 10095.875960186697
      },
      {
        "ShowGeometry": true,
        "Name": "TAG 전달 및 함수인풋값 전달",
        "Id": "52a0b7a201a4415e85ee54be190d18ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9580.2799017244761,
        "Y": 9348.203096818801
      },
      {
        "ShowGeometry": false,
        "Name": "패드철근비",
        "Id": "66637725087f4b598e5b76b093ad3008",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8132.0169926972449,
        "Y": 10263.022626853364
      },
      {
        "ShowGeometry": true,
        "Name": "funcSets",
        "Id": "84b440e7d26440af9d6065a58f7f80d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10373.455236108688,
        "Y": 10219.248582303209
      },
      {
        "ShowGeometry": true,
        "Name": "funcSets",
        "Id": "41c7e9b5ebd04cc0aeeca60b53e6d80a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11687.375725181126,
        "Y": 10236.715677661003
      },
      {
        "ShowGeometry": true,
        "Name": "funcSets",
        "Id": "634d11753936403eae4ed29861dfbc83",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13114.908683159447,
        "Y": 10268.031135467807
      },
      {
        "ShowGeometry": true,
        "Name": "funcSets",
        "Id": "4773042274a04b27ac50414012205036",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14492.291223787694,
        "Y": 10290.135575203267
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "0b818663ec4d4138b9172b5d59510aad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9840.0378646390855,
        "Y": 7970.1235925177
      },
      {
        "ShowGeometry": true,
        "Name": "콘크리트물량산출함수",
        "Id": "65a784a720ed43d1af0834f0d353e91c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9939.2799017244761,
        "Y": 9317.9897634854678
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3e7e1c7985ff4e07b9833c060ad566e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8056.3078777993933,
        "Y": 6059.1824317553583
      },
      {
        "ShowGeometry": true,
        "Name": "FAMILYTYPE TAG",
        "Id": "80f6896f477342d7b3a68cfcddcf82e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9281.2799017244761,
        "Y": 9280.203096818801
      },
      {
        "ShowGeometry": true,
        "Name": "WBS TAG",
        "Id": "3c9f3ce8c3fe4df4a15f2dc2e16812ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9281.2799017244761,
        "Y": 9433.7764301521347
      },
      {
        "ShowGeometry": true,
        "Name": "TAG 전달 및 함수인풋값 전달",
        "Id": "c6e1f160c7634b3a9b61e8564f1d333d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9589.1746975567512,
        "Y": 9840.8045851672614
      },
      {
        "ShowGeometry": true,
        "Name": "FAMILYTYPE TAG",
        "Id": "509641664cd04a1da862cd90578050ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9290.1746975567512,
        "Y": 9772.8045851672614
      },
      {
        "ShowGeometry": true,
        "Name": "WBS TAG",
        "Id": "bafee0825e9b4dd9ae697af73010879c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9290.1746975567512,
        "Y": 9926.3779185005951
      },
      {
        "ShowGeometry": true,
        "Name": "철근물량산출함수",
        "Id": "5aa73238c8fc49a2b9c83e34983a531b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9959.1746975567512,
        "Y": 9828.8845851672613
      },
      {
        "ShowGeometry": true,
        "Name": "Final funcSets Arrange",
        "Id": "13a78727268b43ffb7ee3ef088e13674",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14837.478183807214,
        "Y": 10210.305096965214
      },
      {
        "ShowGeometry": true,
        "Name": "TAG 전달 및 함수인풋값 전달",
        "Id": "241da9707fdd4e0e90e56ee63c420b44",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9538.8190398642873,
        "Y": 10832.522753610316
      },
      {
        "ShowGeometry": true,
        "Name": "바닥마감물량산출함수",
        "Id": "a1f18105be1b4e1d940aeca67ab042c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9897.8190398642873,
        "Y": 10605.130295026594
      },
      {
        "ShowGeometry": true,
        "Name": "FAMILYTYPE TAG",
        "Id": "392311f42d494af3987627e54858995d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9276.8190398642873,
        "Y": 10773.522753610316
      },
      {
        "ShowGeometry": true,
        "Name": "WBS TAG",
        "Id": "b9bbbce4747645be9542370b214edf3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9276.8190398642873,
        "Y": 10909.096086943649
      },
      {
        "ShowGeometry": true,
        "Name": "TAG 전달 및 함수인풋값 전달",
        "Id": "4ec6038093b64c7db5561abf0daa278d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10694.825444178627,
        "Y": 9347.932698161243
      },
      {
        "ShowGeometry": true,
        "Name": "FAMILYTYPE TAG",
        "Id": "5dfaedb1f25e4358bd0cec3820e64e1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10395.825444178627,
        "Y": 9279.932698161243
      },
      {
        "ShowGeometry": true,
        "Name": "WBS TAG",
        "Id": "3f392633b50643bdbac52a77b0251116",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10395.825444178627,
        "Y": 9433.5060314945767
      },
      {
        "ShowGeometry": true,
        "Name": "거푸집산출함수_슬라브",
        "Id": "dad3ced19c8b43d69714c0f5b7d8c0fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11053.825444178627,
        "Y": 9322.2926981612436
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6a820a7b25e6489c9b8ccdce87f37530",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9635.288428940943,
        "Y": 8287.0147127393029
      },
      {
        "ShowGeometry": true,
        "Name": "Watch 3D",
        "Id": "5da78d90141d41feb18e520c9e6d400a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19546.040966268414,
        "Y": 10265.09791024134
      },
      {
        "ShowGeometry": true,
        "Name": "ListSets",
        "Id": "3289a7c14acd421fb7b7b94ea3b6aba5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19340.725372052355,
        "Y": 10221.826648326929
      },
      {
        "ShowGeometry": true,
        "Name": "TAG 전달 및 함수인풋값 전달",
        "Id": "a4dd99cd75084293badb3a07547e05e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10676.388981817994,
        "Y": 10700.466832803988
      },
      {
        "ShowGeometry": true,
        "Name": "FAMILYTYPE TAG",
        "Id": "11268ec8619e4df18405ae4ede355eb3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10377.388981817994,
        "Y": 10632.466832803988
      },
      {
        "ShowGeometry": true,
        "Name": "WBS TAG",
        "Id": "98960c6380804bcaafb3cad07754e536",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10377.388981817994,
        "Y": 10786.040166137322
      },
      {
        "ShowGeometry": true,
        "Name": "거푸집산출함수_매스시스템폼",
        "Id": "5692eb90b03046d59cab445a6eb6cebe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11035.388981817994,
        "Y": 10674.826832803989
      },
      {
        "ShowGeometry": true,
        "Name": "TAG 전달 및 함수인풋값 전달",
        "Id": "93bd38c3e7334aa3953120c07d32ab31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10692.278010882395,
        "Y": 9855.3451703424853
      },
      {
        "ShowGeometry": true,
        "Name": "FAMILYTYPE TAG",
        "Id": "8f948548e13f428d98767d20a62fd56f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10393.278010882395,
        "Y": 9787.3451703424853
      },
      {
        "ShowGeometry": true,
        "Name": "WBS TAG",
        "Id": "c36092c0eee94fbe94db6c3cf21b0562",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10393.278010882395,
        "Y": 9940.918503675819
      },
      {
        "ShowGeometry": true,
        "Name": "거푸집산출함수_매스하부",
        "Id": "dfc8957ff20b46149d11c569c5771b0e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11051.278010882395,
        "Y": 9829.7051703424859
      },
      {
        "ShowGeometry": true,
        "Name": "TAG 전달 및 함수인풋값 전달",
        "Id": "dea0ba1e7e344cf28b7cf77a8afb14b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10698.204586398746,
        "Y": 11048.442384148297
      },
      {
        "ShowGeometry": true,
        "Name": "FAMILYTYPE TAG",
        "Id": "844aca2ab56a4c44b2fe3c93f75829b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10399.204586398746,
        "Y": 10980.442384148297
      },
      {
        "ShowGeometry": true,
        "Name": "WBS TAG",
        "Id": "abedb68407564a62acb4cc54e705ec92",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10399.204586398746,
        "Y": 11134.01571748163
      },
      {
        "ShowGeometry": true,
        "Name": "시스템동바리산출함수",
        "Id": "2229c356a6e944f58e65a2049aff0a80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11057.204586398746,
        "Y": 11022.802384148297
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script@Export Excel(By OpenpyXl)",
        "Id": "34b7057217be4ff3b14855f3b64dcd96",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18446.138470592956,
        "Y": 6557.2979913504851
      },
      {
        "ShowGeometry": false,
        "Name": "Data Arrange for Excel",
        "Id": "216fea2f2f9a40e9adaa40f2d1a8154b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17909.746889652477,
        "Y": 6652.0113869630513
      },
      {
        "ShowGeometry": false,
        "Name": "input",
        "Id": "c2b8362daa004a37810fde2bb627c80f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10363.351692477898,
        "Y": 6583.7979913504851
      },
      {
        "ShowGeometry": false,
        "Name": "Excel로 Export 하시겠습니까?",
        "Id": "9ecbcfba49cd471ca820c3e5abb7f21d",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18133.722692759482,
        "Y": 6451.6405747275085
      },
      {
        "ShowGeometry": false,
        "Name": "Categories",
        "Id": "1d2693e6923940cf8b15e50b0a35b114",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8580.1345838957532,
        "Y": 6428.3406104182441
      },
      {
        "ShowGeometry": false,
        "Name": "All Elements of Category",
        "Id": "a8b8d907b88e40308dd890410a8f0de7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8883.1345838957532,
        "Y": 6428.3406104182441
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "85177a0847a24da69a83038c6fa1f69d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9203.1874209295565,
        "Y": 6419.7656989844863
      },
      {
        "ShowGeometry": false,
        "Name": "String.ToLower",
        "Id": "0cae2ddf4e1a42c9ade6fdb841ea81cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9744.1874209295565,
        "Y": 6415.5523656511532
      },
      {
        "ShowGeometry": false,
        "Name": "String.ToTitle",
        "Id": "ed6fce2c988a47c28b2ed3c32b8d5399",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10031.187420929557,
        "Y": 6415.5523656511532
      },
      {
        "ShowGeometry": false,
        "Name": "공종목록",
        "Id": "bda053f1a8e6465187c69061f92a2770",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17226.44975452857,
        "Y": 9254.6631335417569
      },
      {
        "ShowGeometry": false,
        "Name": "Integer Slider",
        "Id": "2ce1482a1f6c4f2d8d3425c201d88d52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17450.44975452857,
        "Y": 9548.6631335417569
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "64f1d65d20214011b0be40fe5983889d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18449.44975452857,
        "Y": 9448.1631335417569
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "6a797ebbf17248eba625d07d1373ddf6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16982.44975452857,
        "Y": 9283.1264668750864
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "e04241b8bf384b2a86ee383afd71add6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17450.44975452857,
        "Y": 9254.6631335417569
      },
      {
        "ShowGeometry": false,
        "Name": "Color Palette",
        "Id": "1b352f432dc74dc0a544ee5302cc0dc9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18073.44975452857,
        "Y": 9306.1631335417569
      },
      {
        "ShowGeometry": false,
        "Name": "산출타겟 검증",
        "Id": "5dde24a1e9f14dcd95d449b2504f21da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18449.44975452857,
        "Y": 9251.1631335417569
      },
      {
        "ShowGeometry": false,
        "Name": "선으로 보기",
        "Id": "631ed5ca7dd241a6a622eb6e4e6e8bce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18073.44975452857,
        "Y": 9222.1631335417569
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "bc2794a742354974b4de8968ede6e4db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18073.44975452857,
        "Y": 9452.3764668750864
      },
      {
        "ShowGeometry": false,
        "Name": "findWM",
        "Id": "f3cce97ce84a4c628b088105de6b2e10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17849.44975452857,
        "Y": 9388.6631335417569
      },
      {
        "ShowGeometry": false,
        "Name": "공종목록",
        "Id": "f01fbe2cc66145a8a956af463fe5ac16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17224.643754280787,
        "Y": 9951.427267036277
      },
      {
        "ShowGeometry": false,
        "Name": "Integer Slider",
        "Id": "d6bf71ea61264152bd651b46c8ded705",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17448.643754280787,
        "Y": 10245.427267036277
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "1cd2893763a5485185a309063a49cd3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18447.643754280787,
        "Y": 10144.927267036277
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "e855455f31354deb8ef6fd4b5a30a73f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16980.643754280787,
        "Y": 9979.8906003696065
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "f55912daebd94ec39bdc4222738413c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17448.643754280787,
        "Y": 9951.427267036277
      },
      {
        "ShowGeometry": false,
        "Name": "Color Palette",
        "Id": "b38e920369d048d38c29ceb972772374",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18071.643754280787,
        "Y": 10002.927267036277
      },
      {
        "ShowGeometry": false,
        "Name": "산출타겟 검증",
        "Id": "7514efd0d88b40cfa9f6073f8ff8eccf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18447.643754280787,
        "Y": 9947.927267036277
      },
      {
        "ShowGeometry": false,
        "Name": "선으로 보기",
        "Id": "c6b2c76eea1c41db8f575aa31f89d273",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18071.643754280787,
        "Y": 9918.927267036277
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "c1eb22e87d8a49cd9a611994799ce90b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18071.643754280787,
        "Y": 10149.140600369607
      },
      {
        "ShowGeometry": false,
        "Name": "findWM",
        "Id": "64d1c760e3d9403582f293ba4841ddbe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17847.643754280787,
        "Y": 10085.427267036277
      },
      {
        "ShowGeometry": false,
        "Name": "공종목록",
        "Id": "537639d5dd7347679b6d05907fedb0c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17221.349187276664,
        "Y": 10650.4142496517
      },
      {
        "ShowGeometry": false,
        "Name": "Integer Slider",
        "Id": "5812a16c324d430f93ebbd9cf04be4ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17445.349187276664,
        "Y": 10944.41424965172
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "6cdd2919d4e345b8a966c877235979cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18444.349187276664,
        "Y": 10843.91424965172
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "f8a22fde439242b6b46da910653bd2b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16977.349187276664,
        "Y": 10678.877582985029
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "fc03c6713b1748a78441be9b5430d8fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17445.349187276664,
        "Y": 10650.4142496517
      },
      {
        "ShowGeometry": false,
        "Name": "Color Palette",
        "Id": "d33ca8952e594833b227feadd4645e81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18068.349187276664,
        "Y": 10701.91424965172
      },
      {
        "ShowGeometry": false,
        "Name": "산출타겟 검증",
        "Id": "91973f6c4da9404192bf21d40682d5af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18444.349187276664,
        "Y": 10646.9142496517
      },
      {
        "ShowGeometry": false,
        "Name": "선으로 보기",
        "Id": "a868af41947c41ee8d279f46501596b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18068.349187276664,
        "Y": 10617.9142496517
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "d811220e64d44d6e9fdc61b79d7ea575",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18068.349187276664,
        "Y": 10848.127582985018
      },
      {
        "ShowGeometry": false,
        "Name": "findWM",
        "Id": "ddc6e69eea5a4069a63ce589734f2cb5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17844.349187276664,
        "Y": 10784.41424965172
      },
      {
        "ShowGeometry": false,
        "Name": "공종목록",
        "Id": "26b3ce1d402e46ee9797e5939aa4caf7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17214.37708135966,
        "Y": 11337.754735409873
      },
      {
        "ShowGeometry": false,
        "Name": "Integer Slider",
        "Id": "4f0e1ba592964096b70626029c9136ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17438.37708135966,
        "Y": 11631.754735409972
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "925ed21660474844a8501dc5e2c9583c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18437.37708135966,
        "Y": 11531.254735409972
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "9432477cfe1e4361ac4b92398a815293",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16970.37708135966,
        "Y": 11366.218068743272
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "75f6bf54cde54ab7b32a78cf3d23ef6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17438.37708135966,
        "Y": 11337.754735409873
      },
      {
        "ShowGeometry": false,
        "Name": "Color Palette",
        "Id": "17c3c26bee134726871bde9ccb813986",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18061.37708135966,
        "Y": 11389.254735409972
      },
      {
        "ShowGeometry": false,
        "Name": "산출타겟 검증",
        "Id": "553adaf8695a4321af596fc17b109b93",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18437.37708135966,
        "Y": 11334.254735409873
      },
      {
        "ShowGeometry": false,
        "Name": "선으로 보기",
        "Id": "c5be62025a8d4238afc050589cc39874",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18061.37708135966,
        "Y": 11305.254735409873
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "4b6c80a640104405b25a836986738e30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18061.37708135966,
        "Y": 11535.468068743272
      },
      {
        "ShowGeometry": false,
        "Name": "findWM",
        "Id": "02676eec466e4e288b7b4c0311b0c65e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17837.37708135966,
        "Y": 11471.754735409972
      },
      {
        "ShowGeometry": false,
        "Name": "매스콘크리트철근비",
        "Id": "aeb66b23601e4a748d0c1fdaed99ee16",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8132.0169926972449,
        "Y": 10346.595960186698
      }
    ],
    "Annotations": [
      {
        "Id": "a47783d11200487f943cee498ed31ce5",
        "Title": "Organize\r\nAllElementInform\r\nAsDictionary",
        "Nodes": [
          "e0427ef06d504db89b14c0fecc5c717d"
        ],
        "Left": 10621.336012479816,
        "Top": 7048.9079076515227,
        "Width": 742.41666666666674,
        "Height": 460.0,
        "FontSize": 96.0,
        "InitialTop": 7404.9079076515227,
        "InitialHeight": 145.0,
        "TextblockHeight": 346.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "496856545a3b40eda360a47d69f3f252",
        "Title": "GetFull\r\nWMCodeDescription\r\nPerElement",
        "Nodes": [
          "09731e78949f4760b876c8a956469a3f"
        ],
        "Left": 9541.59227583536,
        "Top": 7031.0890684363412,
        "Width": 890.30666666666673,
        "Height": 486.0,
        "FontSize": 96.0,
        "InitialTop": 7387.0890684363412,
        "InitialHeight": 145.0,
        "TextblockHeight": 346.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "94479bc97aa641ad9685bbe735739eb4",
        "Title": "Primary Input : Excel & Revit Elements",
        "Nodes": [
          "5000a2bea8e64651ab45f16fae6e4191",
          "d6a04655d8504043b972c31b54888ec5",
          "9bae5aaf9bf34b83b811b6478f215564",
          "2b55deec8d4646b896bbdbbbab022bda",
          "7b4f8f19efab4a2fa529e2bcd25c4024",
          "b4336991a32b46e1bfa26f2d00f265a5",
          "cfb9f670cc884514938ce524046c0014"
        ],
        "Left": 7083.5996080211753,
        "Top": 5839.8127223486536,
        "Width": 1191.1764277937709,
        "Height": 859.14284690719978,
        "FontSize": 96.0,
        "InitialTop": 6079.8127223486536,
        "InitialHeight": 671.14284690719978,
        "TextblockHeight": 230.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "1de30857c71842e88f1dcea752566ea1",
        "Title": "단위부재 테스트 용도",
        "Nodes": [
          "00b5c3ab9e324c7f84a2a39d4ac0a4c3"
        ],
        "Left": 9439.7055146376242,
        "Top": 7627.5969790595191,
        "Width": 298.0,
        "Height": 362.0,
        "FontSize": 72.0,
        "InitialTop": 7896.5969790595191,
        "InitialHeight": 145.0,
        "TextblockHeight": 259.0,
        "Background": "#FF848484"
      },
      {
        "Id": "4b55cca47e804f75a8049893ded65aa5",
        "Title": "create Element DataStructure",
        "Nodes": [
          "67f330b11f0741f989c850c8112de991"
        ],
        "Left": 12809.054385357891,
        "Top": 7037.3524036427871,
        "Width": 590.44333333333338,
        "Height": 460.0,
        "FontSize": 96.0,
        "InitialTop": 7393.3524036427871,
        "InitialHeight": 145.0,
        "TextblockHeight": 346.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "528c760ec83447e1959c2ebd39059728",
        "Title": "공종목록 확인",
        "Nodes": [
          "344c3f70f1114cfcbf9e36fa8ddfbc2b",
          "cdf0366fda164fbc850df62921673738"
        ],
        "Left": 14983.487881769117,
        "Top": 7873.2240845521155,
        "Width": 454.0,
        "Height": 331.0,
        "FontSize": 36.0,
        "InitialTop": 7926.2240845521155,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.0,
        "Background": "#FF848484"
      },
      {
        "Id": "2e43370f790541b8a43bed8685d30222",
        "Title": "패밀리 타입 확인용",
        "Nodes": [
          "a83a98f993dd4a04a274e36e0da9fab0",
          "65c844a6fc4342d0a5b889df13a34c32"
        ],
        "Left": 10916.676789986468,
        "Top": 7563.46942808113,
        "Width": 441.76931831402726,
        "Height": 158.94274156830215,
        "FontSize": 36.0,
        "InitialTop": 7616.46942808113,
        "InitialHeight": 157.94274156830215,
        "TextblockHeight": 43.0,
        "Background": "#FF848484"
      },
      {
        "Id": "4d9cdddf22324fc8b15350143df54190",
        "Title": "부재 항목 별  WM  매칭 검증",
        "Nodes": [
          "a4a606cb1846452abefe5992339ded29",
          "ff589f47e64a480691eca72e87bed00f"
        ],
        "Left": 16827.166576180207,
        "Top": 6982.1842246920614,
        "Width": 1523.4842532142102,
        "Height": 403.0,
        "FontSize": 96.0,
        "InitialTop": 7107.1842246920614,
        "InitialHeight": 151.07663195743044,
        "TextblockHeight": 115.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "42081713c4e44c488482f438a1bfb4b9",
        "Title": "콘크리트물량산출함수",
        "Nodes": [
          "52a0b7a201a4415e85ee54be190d18ef",
          "65a784a720ed43d1af0834f0d353e91c",
          "80f6896f477342d7b3a68cfcddcf82e6",
          "3c9f3ce8c3fe4df4a15f2dc2e16812ab",
          "daf8472acbea4640bbc352431b5b208f"
        ],
        "Left": 9271.2799017244761,
        "Top": 9227.203096818801,
        "Width": 865.0,
        "Height": 378.57333333333372,
        "FontSize": 36.0,
        "InitialTop": 9280.203096818801,
        "InitialHeight": 298.57333333333372,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "6911b0e33c824e89a5b437be48b16cca",
        "Title": "함수 인풋값",
        "Nodes": [
          "01f61211fc9347de9fe859b748b96f38",
          "e41dcedb9d134272b0a88d64f987a4c0",
          "5fe52eddd736445585f229e29c93cd8c",
          "66637725087f4b598e5b76b093ad3008",
          "aeb66b23601e4a748d0c1fdaed99ee16"
        ],
        "Left": 8122.0169926972449,
        "Top": 10013.875960186697,
        "Width": 777.0,
        "Height": 400.72000000000116,
        "FontSize": 60.0,
        "InitialTop": 10095.875960186697,
        "InitialHeight": 395.72000000000116,
        "TextblockHeight": 72.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "c66c506479234aeaaa90a145f01104e6",
        "Title": "Create funcSets",
        "Nodes": [
          "84b440e7d26440af9d6065a58f7f80d2",
          "41c7e9b5ebd04cc0aeeca60b53e6d80a",
          "634d11753936403eae4ed29861dfbc83",
          "4773042274a04b27ac50414012205036",
          "13a78727268b43ffb7ee3ef088e13674",
          "6f8063850a7c4468b43419488109aa41"
        ],
        "Left": 9198.0872056136268,
        "Top": 10157.305096965214,
        "Width": 5847.3909781935872,
        "Height": 340.83047823805282,
        "FontSize": 36.0,
        "InitialTop": 10210.305096965214,
        "InitialHeight": 224.83047823805282,
        "TextblockHeight": 43.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "19f0e8568de44128ba01e0c35c5a7f6f",
        "Title": "철근물량산출함수",
        "Nodes": [
          "c6e1f160c7634b3a9b61e8564f1d333d",
          "509641664cd04a1da862cd90578050ad",
          "bafee0825e9b4dd9ae697af73010879c",
          "5aa73238c8fc49a2b9c83e34983a531b",
          "9b5d590d18574b78a5004797dd9c024e"
        ],
        "Left": 9280.1746975567512,
        "Top": 9719.8045851672614,
        "Width": 850.0,
        "Height": 378.57333333333372,
        "FontSize": 36.0,
        "InitialTop": 9772.8045851672614,
        "InitialHeight": 298.57333333333372,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "70ead830d77347ee97f0030ec5860afb",
        "Title": "바닥마감물량산출함수",
        "Nodes": [
          "241da9707fdd4e0e90e56ee63c420b44",
          "a1f18105be1b4e1d940aeca67ab042c2",
          "392311f42d494af3987627e54858995d",
          "b9bbbce4747645be9542370b214edf3c",
          "729b77740fed43aa96c8c944e882ac0c"
        ],
        "Left": 9266.8190398642873,
        "Top": 10552.130295026594,
        "Width": 828.0,
        "Height": 722.965791917055,
        "FontSize": 36.0,
        "InitialTop": 10605.130295026594,
        "InitialHeight": 448.96579191705496,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "fec01b92d06f4d6b9a661a35cec2e512",
        "Title": "거푸집산출함수_슬라브(하부)",
        "Nodes": [
          "4ec6038093b64c7db5561abf0daa278d",
          "5dfaedb1f25e4358bd0cec3820e64e1c",
          "3f392633b50643bdbac52a77b0251116",
          "dad3ced19c8b43d69714c0f5b7d8c0fd",
          "1e4253a4aba543bb97892534b8e1cbe0"
        ],
        "Left": 10385.825444178627,
        "Top": 9226.932698161243,
        "Width": 871.0,
        "Height": 449.57333333333372,
        "FontSize": 36.0,
        "InitialTop": 9279.932698161243,
        "InitialHeight": 298.57333333333372,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "96a9eb64a03c4074ba4efc2c7d902c7b",
        "Title": "공종별 상세조회",
        "Nodes": [
          "5da78d90141d41feb18e520c9e6d400a",
          "3289a7c14acd421fb7b7b94ea3b6aba5"
        ],
        "Left": 19330.725372052355,
        "Top": 9981.826648326929,
        "Width": 435.31559421605925,
        "Height": 561.2712619144113,
        "FontSize": 96.0,
        "InitialTop": 10221.826648326929,
        "InitialHeight": 188.2712619144113,
        "TextblockHeight": 230.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "41ef502dad69443b96705af6ce83e114",
        "Title": "거푸집산출함수_매스시스템폼",
        "Nodes": [
          "a4dd99cd75084293badb3a07547e05e6",
          "11268ec8619e4df18405ae4ede355eb3",
          "98960c6380804bcaafb3cad07754e536",
          "5692eb90b03046d59cab445a6eb6cebe",
          "132a505478b04b218b11433f319bbba0"
        ],
        "Left": 10367.388981817994,
        "Top": 10579.466832803988,
        "Width": 910.0,
        "Height": 326.57333333333372,
        "FontSize": 36.0,
        "InitialTop": 10632.466832803988,
        "InitialHeight": 298.57333333333372,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "c8d63a4f26454e90977798bb938f4845",
        "Title": "거푸집산출함수_매스하부",
        "Nodes": [
          "93bd38c3e7334aa3953120c07d32ab31",
          "8f948548e13f428d98767d20a62fd56f",
          "c36092c0eee94fbe94db6c3cf21b0562",
          "dfc8957ff20b46149d11c569c5771b0e",
          "78d07459001f463283eb9c5596178752"
        ],
        "Left": 10383.278010882395,
        "Top": 9734.3451703424853,
        "Width": 884.0,
        "Height": 326.57333333333372,
        "FontSize": 36.0,
        "InitialTop": 9787.3451703424853,
        "InitialHeight": 298.57333333333372,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "412ba3581db641bd94718a96609b0506",
        "Title": "시스템동바리산출함수",
        "Nodes": [
          "dea0ba1e7e344cf28b7cf77a8afb14b7",
          "844aca2ab56a4c44b2fe3c93f75829b7",
          "abedb68407564a62acb4cc54e705ec92",
          "2229c356a6e944f58e65a2049aff0a80",
          "44992fd013c44e8b80b05c0846bc4214"
        ],
        "Left": 10389.204586398746,
        "Top": 10927.442384148297,
        "Width": 865.0,
        "Height": 326.57333333333372,
        "FontSize": 36.0,
        "InitialTop": 10980.442384148297,
        "InitialHeight": 298.57333333333372,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "654a78a8ba7d4436a5785d754c40e0aa",
        "Title": "Excel Export",
        "Nodes": [
          "34b7057217be4ff3b14855f3b64dcd96",
          "216fea2f2f9a40e9adaa40f2d1a8154b",
          "c2b8362daa004a37810fde2bb627c80f",
          "9ecbcfba49cd471ca820c3e5abb7f21d",
          "1d2693e6923940cf8b15e50b0a35b114",
          "a8b8d907b88e40308dd890410a8f0de7",
          "85177a0847a24da69a83038c6fa1f69d",
          "0cae2ddf4e1a42c9ade6fdb841ea81cb",
          "ed6fce2c988a47c28b2ed3c32b8d5399"
        ],
        "Left": 8570.1345838957532,
        "Top": 6290.5523656511532,
        "Width": 10203.003886697203,
        "Height": 465.45902131189814,
        "FontSize": 96.0,
        "InitialTop": 6415.5523656511532,
        "InitialHeight": 381.45902131189814,
        "TextblockHeight": 115.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "767acda896944011b72dda8fdbf8109f",
        "Title": "산출타겟 검증(시각화)",
        "Nodes": [
          "bda053f1a8e6465187c69061f92a2770",
          "2ce1482a1f6c4f2d8d3425c201d88d52",
          "64f1d65d20214011b0be40fe5983889d",
          "6a797ebbf17248eba625d07d1373ddf6",
          "e04241b8bf384b2a86ee383afd71add6",
          "1b352f432dc74dc0a544ee5302cc0dc9",
          "5dde24a1e9f14dcd95d449b2504f21da",
          "631ed5ca7dd241a6a622eb6e4e6e8bce",
          "bc2794a742354974b4de8968ede6e4db",
          "f3cce97ce84a4c628b088105de6b2e10"
        ],
        "Left": 16972.44975452857,
        "Top": 9097.1631335417569,
        "Width": 1697.0,
        "Height": 629.0,
        "FontSize": 96.0,
        "InitialTop": 9222.1631335417569,
        "InitialHeight": 471.5,
        "TextblockHeight": 115.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "94dcc44ab44244bb8cecf3847f225077",
        "Title": "산출타겟 검증(시각화)",
        "Nodes": [
          "f01fbe2cc66145a8a956af463fe5ac16",
          "d6bf71ea61264152bd651b46c8ded705",
          "1cd2893763a5485185a309063a49cd3e",
          "e855455f31354deb8ef6fd4b5a30a73f",
          "f55912daebd94ec39bdc4222738413c1",
          "b38e920369d048d38c29ceb972772374",
          "7514efd0d88b40cfa9f6073f8ff8eccf",
          "c6b2c76eea1c41db8f575aa31f89d273",
          "c1eb22e87d8a49cd9a611994799ce90b",
          "64d1c760e3d9403582f293ba4841ddbe"
        ],
        "Left": 16970.643754280787,
        "Top": 9793.927267036277,
        "Width": 1697.0,
        "Height": 629.0,
        "FontSize": 96.0,
        "InitialTop": 9918.927267036277,
        "InitialHeight": 471.5,
        "TextblockHeight": 115.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "b334f49127fc485ab7fa5f53182e4a43",
        "Title": "산출타겟 검증(시각화)",
        "Nodes": [
          "537639d5dd7347679b6d05907fedb0c0",
          "5812a16c324d430f93ebbd9cf04be4ec",
          "6cdd2919d4e345b8a966c877235979cb",
          "f8a22fde439242b6b46da910653bd2b0",
          "fc03c6713b1748a78441be9b5430d8fc",
          "d33ca8952e594833b227feadd4645e81",
          "91973f6c4da9404192bf21d40682d5af",
          "a868af41947c41ee8d279f46501596b4",
          "d811220e64d44d6e9fdc61b79d7ea575",
          "ddc6e69eea5a4069a63ce589734f2cb5"
        ],
        "Left": 16967.349187276664,
        "Top": 10492.9142496517,
        "Width": 1697.0,
        "Height": 629.00000000002,
        "FontSize": 96.0,
        "InitialTop": 10617.9142496517,
        "InitialHeight": 471.50000000002,
        "TextblockHeight": 115.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "9178f9c1e60f460183133294133cab99",
        "Title": "산출타겟 검증(시각화)",
        "Nodes": [
          "26b3ce1d402e46ee9797e5939aa4caf7",
          "4f0e1ba592964096b70626029c9136ed",
          "925ed21660474844a8501dc5e2c9583c",
          "9432477cfe1e4361ac4b92398a815293",
          "75f6bf54cde54ab7b32a78cf3d23ef6d",
          "17c3c26bee134726871bde9ccb813986",
          "553adaf8695a4321af596fc17b109b93",
          "c5be62025a8d4238afc050589cc39874",
          "4b6c80a640104405b25a836986738e30",
          "02676eec466e4e288b7b4c0311b0c65e"
        ],
        "Left": 16960.37708135966,
        "Top": 11180.254735409873,
        "Width": 1697.0,
        "Height": 629.00000000009823,
        "FontSize": 96.0,
        "InitialTop": 11305.254735409873,
        "InitialHeight": 471.50000000009823,
        "TextblockHeight": 115.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "2e06ca448c5c4f7d8365de34828527ec",
        "Title": "되메우기기",
        "Nodes": [],
        "Left": 27130.201055262987,
        "Top": 423.0,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "ff589f47e64a480691eca72e87bed00f",
        "Title": "New Note",
        "Nodes": [],
        "Left": 18266.650829394417,
        "Top": 7113.2608566494919,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "daf8472acbea4640bbc352431b5b208f",
        "Title": "refFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]",
        "Nodes": [],
        "Left": 9580.2799017244761,
        "Top": 9280.203096818801,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9b5d590d18574b78a5004797dd9c024e",
        "Title": "refFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]",
        "Nodes": [],
        "Left": 9589.1746975567512,
        "Top": 9772.8045851672614,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6f8063850a7c4468b43419488109aa41",
        "Title": "New Note",
        "Nodes": [],
        "Left": 9208.0872056136268,
        "Top": 10212.17434628431,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "729b77740fed43aa96c8c944e882ac0c",
        "Title": "refFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]",
        "Nodes": [],
        "Left": 9538.8190398642873,
        "Top": 10764.522753610316,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1e4253a4aba543bb97892534b8e1cbe0",
        "Title": "refFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]",
        "Nodes": [],
        "Left": 10694.825444178627,
        "Top": 9279.932698161243,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "132a505478b04b218b11433f319bbba0",
        "Title": "refFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]",
        "Nodes": [],
        "Left": 10676.388981817994,
        "Top": 10632.466832803988,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "78d07459001f463283eb9c5596178752",
        "Title": "refFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]",
        "Nodes": [],
        "Left": 10692.278010882395,
        "Top": 9787.3451703424853,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "44992fd013c44e8b80b05c0846bc4214",
        "Title": "refFunc = IN[0]\r\ntag = IN[1]\r\ninput = IN[2]",
        "Nodes": [],
        "Left": 10698.204586398746,
        "Top": 10980.442384148297,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -4391.6870948906108,
    "Y": -4194.7080018743654,
    "Zoom": 0.47805852543323363
  }
}