{
  "Uuid": "de1ef780-9ab7-46fa-acef-be9b9362e1b7",
  "IsCustomNode": false,
  "Description": "",
  "Name": "04 Str Foundation_mk(220112)",
  "ElementResolver": {
    "ResolutionMap": {
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "7b4f8f19efab4a2fa529e2bcd25c4024",
      "Name": "File Path",
      "Type": "string",
      "Value": "상상진화\\20220110\\DMS(Data Matching Schedule)_R0(Seq2)_220110.xlsx",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "83028b9605a84074beb37f8f1bf17e9f",
      "Name": "온통 터파기 여부",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    },
    {
      "Id": "b64b777db7ac47a0b5124051bd0b5ec0",
      "Name": "터파기 하부 Offset",
      "Type": "number",
      "Value": "300",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "d8a17f85cdba49c1a9d73f285af7b3c4",
      "Name": "경사 비율 입력(1:X) for IsoFDN",
      "Type": "number",
      "Value": "2",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "92f37275fb2246fdb1e268614812d2c2",
      "Name": "버림thk",
      "Type": "number",
      "Value": "50",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "3e63f6d3271c4093bf7d9acdd5521fbb",
      "Name": "토량 환산 계수",
      "Type": "number",
      "Value": "1.2",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "7b633f88c0384a66aaae6857bc5c0759",
      "Name": "기층 Thk",
      "Type": "number",
      "Value": "300",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "a7c2158f540043e4bbc3d79f6da93483",
      "Name": "버림offset",
      "Type": "number",
      "Value": "100",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "08b452ef974f475390e04cc524bbb2b4",
      "Name": "경사 비율 입력(1:X) for SOG",
      "Type": "number",
      "Value": "4",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "c17108c3036e45d4840b4b6cbab39727",
      "Name": "독립기초철근비",
      "Type": "number",
      "Value": "0.1",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "4f93d26cd6db4a13a06f68827e581c3c",
      "Name": "슬라브철근비",
      "Type": "number",
      "Value": "0.15",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "11c286aa0c5c4761922964ec19def15f",
      "Name": "패드철근비",
      "Type": "number",
      "Value": "0.1",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    },
    {
      "Id": "6f824d25a5c54f9bb873d8fd04743032",
      "Name": "잡석 Thk",
      "Type": "number",
      "Value": "100",
      "NumberType": "Double",
      "Description": "Creates a number.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "2e3628b0b3014f19b06a0b1376eb9d88",
      "Inputs": [
        {
          "Id": "ad8bdbab6e184e2fbaf7dac5c9bda5bb",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "645cf3e437e6476dacf384c642cf1fd0",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f20342ec3392467ab3ba6d8cb4025416",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "03554e1927e746199852cd1e08439a77",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa1f6206482942beb7d364d8a60f171f",
          "Name": "list4",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a057c788b43486c99bdf1ea9ade8834",
          "Name": "list5",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ead773312c64c719d59d3163afe89b2",
          "Name": "list6",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7cf1e83698d64066bccc54e673af6a7d",
          "Name": "list7",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ecf3f434a17e486789f9acbae4700958",
          "Name": "list8",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59aa148c97ea41f29bc91774b3c1a1a3",
          "Name": "list9",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "63a7d72e4d4b41b095d0c91794de70a5",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "0cd00cbcddd84a05a79cd37e23d9c879",
      "Inputs": [
        {
          "Id": "4d0c495dd7ff4681af589a2da234949e",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df22f5cc02e44f0c80e1799149771799",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f072a4c986f545399a2ba5eae9e85415",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "d37c401559224779b53f3a8fbc4d2f61",
      "Inputs": [
        {
          "Id": "c11c74f057e349bcac4b7f1010d8cfb6",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4e3697bec4440c1b287ab75507f898c",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65183489890b4adba1921989dcfb05d0",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"WMforTargetElements\";",
      "Id": "21cb082dd28a4eb6947faf601a05c754",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "498212288ec543d7bb6d5cd1e2b55763",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"TargetFuncValues\";",
      "Id": "1e76b1779c074f988d28da9933fdf5f4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4ff8646ef10d433e87b1f76e33475400",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"TargetFuncValuesUnit\";",
      "Id": "adc5a0f82e8146fc8c1ad31c45081356",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "704fd8558468419f83e82cafd6b4cf2c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "25cd006ef8704d07a815fddbf2ea2b47",
      "Inputs": [
        {
          "Id": "88f824e39d4142cf9db78e6683213d3a",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31836f1fd2f94b27802c90838e5c6d2c",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d65a4606dd0242cc89eae7e1d1f2e79b",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "04d6e67324f5423f8c664e842e1f357e",
      "Inputs": [
        {
          "Id": "4b880bb81e8e463c899b6af1855f45f2",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8edc11591fcc46629a27d784772edf8c",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd0863fefa604fa883db3547395e1b8a",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"TrTargetFamilyCode\";",
      "Id": "09368c32f21140f1bc63b1b97d26f3c3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2fbe99ac5810472aa136fc5208693fb3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "8064fea313ec41b69c64632779e8ead9",
      "Inputs": [
        {
          "Id": "e153d5bee13c48419d7d11640f0b1650",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6710f8bdbc6e40bb8a824a24d1475356",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "d2447b7bd403443ba5a33aabee5ced58",
      "Inputs": [
        {
          "Id": "628e9d59c1614c3cb7aac2ed9fae6499",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2daf373c51234c11a1afb0d8ef7063d1",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "_InputDic;",
      "Id": "d5405a9c83714b8985015a34ad26f010",
      "Inputs": [
        {
          "Id": "ee8599748d1b409ab81fb5ff9e476edb",
          "Name": "_InputDic",
          "Description": "_InputDic",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02ed7d75640048919a48d3f3bf1dbae9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "da753820d850479e9452e31c4437370e",
      "Inputs": [
        {
          "Id": "7cea9a03cc0242eba624a0c4e1255bb7",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce26ff79ea3d46f69206f4c7bd9a0358",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a20943ce90884e379860cf09c379e933",
      "Inputs": [
        {
          "Id": "67ea8e06f8034a538164d16069855992",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e57e098dc1bb4547bd3680562fccfbef",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "6483747225a642cf92863ae9263206ee",
      "Inputs": [
        {
          "Id": "300b1066f83a45b9adbd0ed6654d52f0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84ae5f8b755c4befb78964a23a643be1",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "582cc475988a4ac7ac10d435dbd3f59e",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "4dbdcbc518dd4b76b850fa49bdf7101b",
      "Inputs": [
        {
          "Id": "332e4deb583e44709740b9d1dd756199",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38d573950ff04cd4b5f59dbaffe2395d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d6fdfceda654fe89f8186e1e8d7ab52",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b2d72dae5d82452f96add689796db52c",
      "Inputs": [
        {
          "Id": "b210d789b9bf4518a7a6ecbd688993aa",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ad58cffebd64822b7edf0068540c0a2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3906aed83b0d4f8bb3854aa89a88c39d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3944be19c0bc4d4a98aa9037524d6216",
      "Inputs": [
        {
          "Id": "2ccc4465cc9b434b8b938d7da6b0abf6",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59d997ca8b8c4d01bf3a7dbcdc7112d0",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80f97909980d4fb2b31884b72b7a114f",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "2abaf13a6a8a4d5fb9d03ff739150e05",
      "Inputs": [
        {
          "Id": "ac86e68183724fa2a90163b21d0576f1",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf07661689fb45d6a7ae8e1d0edbaa78",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5148a0c3e665494abd28bb9e1fb1f15f",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "edefcdff635e4cb3b34f4bd79efbadaf",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e12840045be4e4a8e701c9be3250b76",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "d1e33ec19c2e4346ab523a01b0d8e5d5",
      "Inputs": [
        {
          "Id": "7a226dd30d7946f7894cd37d439a0972",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1a87b94f1e14097960719611544a982",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "_InputDic1;",
      "Id": "6b66f0251a614e75896ee514c87184a1",
      "Inputs": [
        {
          "Id": "8cb9cccc3aa74c9397920c47c018b7a1",
          "Name": "_InputDic1",
          "Description": "_InputDic1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9f2dbcf8f504170948340168c99a0a7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"TargetWMunique\";",
      "Id": "7a0534ea2ecf463d900f74cc8ceb4a40",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f2e688cce1d462d9a1dfd6a39c41d84",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "07790711fba741db84ea31e8902164b6",
      "Inputs": [
        {
          "Id": "d8355dc39d254a119ca3a011c77b9184",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5112c5cb0fe140fe9ca943b75f14cd56",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03a0cbb29fdf45b28ca375eee78ae568",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "aa9434df4e8e435aa11884b4ac304a7d",
      "Inputs": [
        {
          "Id": "bfe3f3583b4344f6a4110c74c3dd50b7",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9dc76b1df183499786f1da66c477eba8",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "110bad41287c41a39b9a748ed765b996",
      "Inputs": [
        {
          "Id": "9eb311a316b74541ae7209c2a8d94ade",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f19bcde69c84ae98ec065511eea43d0",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "00e132d3b47b435f86f3f10f6838d691",
      "Inputs": [
        {
          "Id": "3d716257a85740df8be525929f0801ae",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bba8558a74e24d8d831df33d3e8c0935",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "85fea91e648c4577bb4bb8d888621b95",
      "Inputs": [
        {
          "Id": "4eada0f2f5af4cc5943f604c5b5ca234",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "199a626c4d6142c19ae7590776ef947e",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "097b20c7a0a84391905563d0fb262511",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "47553dc4-05c1-4a5f-81c2-46ddd567caf8",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "863add32d1094adbaa94574c9b47bae3",
      "Inputs": [
        {
          "Id": "b9f8eb49d4404c70af034ce708c444e9",
          "Name": "_InputDic1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "367720334c7d4b6e8d381860ca1bb3d3",
          "Name": "_InputDic2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e206c8582fc044da8a942f630c9cfa30",
          "Name": "Dictionary",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": ""
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "660284d3b2e24a7fa3f36ff54a01b8d7",
      "Inputs": [
        {
          "Id": "1032a2e54dd14fafbe20276604d01f4d",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26b9a7afd25f459ea7375cd12610b0b8",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.If, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "dfd45841aaf540909c01bbbd6ee4e6be",
      "Inputs": [
        {
          "Id": "51e3b233161145baa663be05eefb165b",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d985638670243dcaa234f911311a380",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45619a0d4635461a9b9aaba80d4c99ba",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae06437b538d4f93be5e74d514c9aaae",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Conditional statement"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "_InputDic2;",
      "Id": "0d755c2449734237ac9df402a33c9159",
      "Inputs": [
        {
          "Id": "08f744b3aeac48569cfdaf77518bed90",
          "Name": "_InputDic2",
          "Description": "_InputDic2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "520077c980f64c3e979ce88083e76a29",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "f0429daa47654e63b8ae13e043be1e57",
      "Inputs": [
        {
          "Id": "574c7b494d3049b8866f77246dc4a8c7",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abe168accfae48c8bd84dd26d10e4077",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "2ca5c032c6724b8e8c87e1fa8fc74f92",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fdca8ef2e3b34b9c8c54ffaa2c1d565f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDict = IN[0]\r\n\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nelement = inputDict[\"AllElement\"]\r\nelementType = []\r\nfor i in element:\r\n    elementType.append(i.Name)\r\nfamilyCode = []\r\nfor i in elementType:\r\n    familyCode.append(i.split(\"_\")[0])\r\nfullWMCodeDescriptionPerElement = inputDict[\"FullWMCodeDescriptionPerElement\"]\r\n\r\nresultDict = {\r\n\"Element\": element,\r\n\"ElementType\": elementType,\r\n\"FamilyCode\": familyCode,\r\n\"FullWMCodeDescriptionPerElement\": fullWMCodeDescriptionPerElement\r\n}\r\n\r\n\r\n\r\nresult = resultDict\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e0427ef06d504db89b14c0fecc5c717d",
      "Inputs": [
        {
          "Id": "fba4f28d4fd64af1852fde8002439ab8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2dd5e372e9c6418b857dbf32b92c5b3c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDict = IN[0]\r\ninputIndex = IN[1]\r\n\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nfullWMCodeDescriptionPerElement = inputDict[\"FullWMCodeDescriptionPerElement\"]\r\nelement = inputDict[\"Element\"]\r\nfamilyCode = inputDict[\"FamilyCode\"]\r\nfamilyCode_unique = findUnique(familyCode)\r\ntargetFamilyCode = familyCode_unique[inputIndex]\r\ntargetIndex = []\r\nfor i in range(len(familyCode)):\r\n    if targetFamilyCode in familyCode[i]:\r\n        targetIndex.append(i)\r\n    else:\r\n        pass\r\n\r\ntargetElements = []\r\nfor i in targetIndex:\r\n    targetElements.append(element[i])\r\n\r\ntargetFamilyCode = []\r\nfor i in targetIndex:\r\n    targetFamilyCode.append(element[i].Name)\r\n\r\nWMforTargetElements = []\r\nfor i in targetIndex:\r\n    WMforTargetElements.append(fullWMCodeDescriptionPerElement[i])\r\n\r\nWMforTargetElements_flat = list(itertools.chain(*WMforTargetElements))\r\ntargetWMunique = findUnique(WMforTargetElements_flat)\r\n\r\nresultDict = {\r\n\"TargetElements\": targetElements,\r\n\"TargetFamilyCode\": targetFamilyCode,\r\n\"WMforTargetElements\": WMforTargetElements,\r\n\"TargetWMunique\": targetWMunique\r\n}\r\n\r\n\r\n\r\nresult = resultDict\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c654078e88ac444b8e1521817eb5e06b",
      "Inputs": [
        {
          "Id": "4598f8d4c5224734b44307c34cc42903",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d52390925fac4164b2df0e6167e21d85",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb27db0c4e454593b14984b1c55ef467",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "93a289d88c594481b09c6b7a61e0f4e5",
      "Inputs": [
        {
          "Id": "b1f2e6facb434af18f0f3af8611abbef",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b198a25bc45741969ab4d8d5bab167d0",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "8408946830dc490fb0fe2a6e540327f6",
      "Inputs": [
        {
          "Id": "3e55f4e0c7cb40e88ffd05fe778488dc",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c95104af746a4baa89804fce969e69df",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"ElementType\";",
      "Id": "cf06bd1ddbc0480fa5a43a046620a5b4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3347fb44093e43a2bf5ca321b0d15590",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "d43b5f272f654f85a4706148687c33b0",
      "Inputs": [
        {
          "Id": "7ba82c341f854218b96cfc7e866fbf91",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "618fa7ef51b74826a1052e3e7e30a917",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52e106ace052492a9ed92765765d1287",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "7aa19e8980394c5b96f78af105f21a51",
      "Inputs": [
        {
          "Id": "4033b74f30d1435d9bb299e3c500ce3c",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18f1a8500fe04fe8a710a4c05497f096",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "3f6a54a220ac47a3857738fe1cbb7a2a",
      "Inputs": [
        {
          "Id": "68a721fcd6944047b3bf7b74de615b3e",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e269fce13b5d4d159ab6aaf963b06b5f",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"FamilyCode\";",
      "Id": "e920760cb92f4811beaaace16b56bead",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f2a9ec72a54742068a0e15f8f37718dd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "fa7c58c4387f4d76b48726887b6d3863",
      "Inputs": [
        {
          "Id": "02d7dbb9d53845d0b3bdb28fd36701af",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c833d60d3ebd41498de74d29a0ce7b7d",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54a5aa082bb44417a3065b858707c7a5",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputElements = IN[0]\r\ninputData = IN[1]\r\n#inputSheetName = IN[2]\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nusedFamilyTypeOfModeling = getUsedFamilyTypeOfModeling(inputElements)\r\nexcelWholeDataSet = inputData#importExcel(inputFilePath, inputSheetName)\r\ntrExcelWholeDataSet = list(zip(*excelWholeDataSet))\r\nexcelColumnDataSet = createExcelDataDictionary(trExcelWholeDataSet)\r\nexcelRowDataSet = createExcelDataDictionary(excelWholeDataSet)\r\nColumnIndexOfUsedFamilyType = findTargetIndex(usedFamilyTypeOfModeling, trExcelWholeDataSet)\r\nColDataSetOfUsedFamilyType = GetValueAtKeys(ColumnIndexOfUsedFamilyType, excelColumnDataSet)\r\nmaterialPerElementFromModeling = []\r\nfor i in inputElements:\r\n    materialPerElementFromModeling.append(i.GetMaterials())\r\n#list(map(lambda x: x.GetMaterials, inputElements)) \"맵함수로 처리하면 리스트화 할 때 타입 변환 오류 남\"\r\n\r\ntargetWMRowIndex = []\r\nfor i in ColDataSetOfUsedFamilyType:\r\n    targetWMRowIndex.append(findTargetIndex(['000'], i))\r\n\r\nrowDataSetOfUsedWM = []\r\nfor i in targetWMRowIndex:\r\n    rowDataSetOfUsedWM.append(GetValueAtKeys(i, excelRowDataSet))\r\n\r\nworkGroup = []\r\nfor i in rowDataSetOfUsedWM:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(j[0])\r\n    workGroup.append(tmp)\r\n    \r\nworkMaster = []\r\nfor i in range(len(ColDataSetOfUsedFamilyType)):\r\n    tmp=[]\r\n    for k in targetWMRowIndex[i]:\r\n        tmp.append(ColDataSetOfUsedFamilyType[i][k])\r\n    workMaster.append(tmp)\r\n\r\nmatchedWM = []\r\nfor i in range(len(workGroup)):\r\n    tmp = []\r\n    for j in range(len(workGroup[i])):\r\n        fullWM = workGroup[i][j] +\"-\"+ workMaster[i][j]\r\n        tmp.append(fullWM)\r\n    matchedWM.append(tmp)\r\n\r\nmatchedWorkGruopAndMasterCode = []\r\nfor i in matchedWM:\r\n    if len(i) > 0:\r\n        matchedWorkGruopAndMasterCode.append(i)\r\n    else:\r\n        pass\r\n\r\nmatchedWMDescription = []\r\nfor i in rowDataSetOfUsedWM:\r\n    tmp=[]\r\n    for j in i:\r\n        tmp.append(j[1] +\" \"+ j[2] +\" \"+ j[3] +\" \"+ \"(\"+ j[4] +\")\")\r\n    if len(tmp) > 0:\r\n        matchedWMDescription.append(tmp)\r\n    else:\r\n        pass\r\n\r\nmatchedWMUnit = []\r\nfor i in rowDataSetOfUsedWM:\r\n    tmp=[]\r\n    for j in i:\r\n        tmp.append(j[4])\r\n    if len(tmp) > 0:\r\n        matchedWMUnit.append(tmp)\r\n    else:\r\n        pass\r\n\r\nmatchedWorkGruopAndMasterCode_flat = list(itertools.chain(*matchedWorkGruopAndMasterCode))\r\nmatchedWMDescription_flat = list(itertools.chain(*matchedWMDescription))\r\n\r\ndic_WMandDescription_Excel = {}\r\nfor i in range(len(matchedWorkGruopAndMasterCode_flat)):\r\n    dic_WMandDescription_Excel[matchedWorkGruopAndMasterCode_flat[i]] = matchedWMDescription_flat[i]\r\n\r\nusedFamilyTypeInExcelOrder = list(map(lambda x: x[3], ColDataSetOfUsedFamilyType))\r\nusedFamilyCodeInExcelOrder = findUnique(list(map(lambda x: x.split('_')[0], usedFamilyTypeInExcelOrder)))\r\n\r\ndic_FamilyCodeandWM = {}\r\nfor i in range(len(usedFamilyCodeInExcelOrder)):\r\n    dic_FamilyCodeandWM[usedFamilyCodeInExcelOrder[i]] = matchedWorkGruopAndMasterCode[i]\r\n\r\nworkMasterCodePerElement = []\r\nfamilyCodePerElem = list(map(lambda x: x.Name.split('_')[0], inputElements))\r\nfor i in familyCodePerElem:\r\n    workMasterCodePerElement.append(dic_FamilyCodeandWM[i])\r\n\r\nmaterialNamePerElem = []\r\nfor i in materialPerElementFromModeling:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(j.Name)\r\n    materialNamePerElem.append(tmp)\r\n\r\nWMPerElementFromModeling = []\r\nfor i in materialNamePerElem:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(j.split('_')[0])\r\n    WMPerElementFromModeling.append(tmp)\r\n\r\nspecPerElementFromModeling = []\r\nfor i in materialNamePerElem:\r\n    tmp = []\r\n    for j in i:\r\n        a = j.split('_')\r\n        del a[0]\r\n        b = \" \".join(a)\r\n        tmp.append(b)\r\n    specPerElementFromModeling.append(tmp)\r\n\r\nWMPerElementFromModeling_flat = list(itertools.chain(*WMPerElementFromModeling))\r\nspecPerElementFromModeling_flat = list(itertools.chain(*specPerElementFromModeling))\r\n\r\ndic_WMandDescription_Model = {}\r\nfor i in range(len(WMPerElementFromModeling_flat)):\r\n    dic_WMandDescription_Model[WMPerElementFromModeling_flat[i]] = specPerElementFromModeling_flat[i]\r\n\r\ndef findAllKeys(dict):\r\n    result = []\r\n    for key in dict.keys():\r\n        result.append(key)\r\n    return result\r\n\r\ndef findAllValues(dict):\r\n    result = []\r\n    for key in dict.keys():\r\n        result.append(dict[key])\r\n    return result\r\n\r\nkeys_WMandDescription_Model = findAllKeys(dic_WMandDescription_Model)\r\nkeys_WMandDescription_Excel = findAllKeys(dic_WMandDescription_Excel)\r\n\r\nkeys_WMandDescription_Both = list(set(keys_WMandDescription_Model + keys_WMandDescription_Excel))\r\nvalues_WMandDescription_Both = []\r\nfor i in keys_WMandDescription_Both:\r\n    if i in keys_WMandDescription_Model:\r\n        values_WMandDescription_Both.append(dic_WMandDescription_Model[i])\r\n    else:\r\n        values_WMandDescription_Both.append(dic_WMandDescription_Excel[i])\r\n\r\ndic_WMandDescription_Both = {}\r\nfor i in range(len(keys_WMandDescription_Both)):\r\n    dic_WMandDescription_Both[keys_WMandDescription_Both[i]] = values_WMandDescription_Both[i]\r\n\r\nworkMasterCodePerElementFromBoth = []\r\nfor i in range(len(workMasterCodePerElement)):\r\n    #tmp = []\r\n    a = WMPerElementFromModeling[i] + workMasterCodePerElement[i]\r\n    b = findUnique(a)\r\n    workMasterCodePerElementFromBoth.append(b)\r\n\r\nspecPerElement = []\r\nfor i in workMasterCodePerElementFromBoth:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(dic_WMandDescription_Both[j])\r\n    specPerElement.append(tmp)\r\n\r\nfullWMCodeDescriptionPerElement = []\r\nfor i in range(len(workMasterCodePerElementFromBoth)):\r\n    tmp = []\r\n    for j in range(len(workMasterCodePerElementFromBoth[i])):\r\n        a = workMasterCodePerElementFromBoth[i][j] +\": \"+ specPerElement[i][j]\r\n        tmp.append(a)\r\n    fullWMCodeDescriptionPerElement.append(tmp)\r\n\r\nfullWMinfo = {\r\n\"AllElement\": inputElements,\r\n\"WorkMasterCodePerFamilyType\": dic_FamilyCodeandWM,\r\n\"WorkMasterCodePerElementBoth\": workMasterCodePerElementFromBoth,\r\n\"FullWMCodeDescriptionPerElement\": fullWMCodeDescriptionPerElement\r\n}\r\n\r\n\r\n\r\nresult = fullWMinfo\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "09731e78949f4760b876c8a956469a3f",
      "Inputs": [
        {
          "Id": "1061c5e9b16a4a679789613a4d0aa20e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fac9c76ea1784feb95ad9393d205fbc3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "865e031ace064d779d73f193184532f3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "_InputElement;\n_InputData;",
      "Id": "5000a2bea8e64651ab45f16fae6e4191",
      "Inputs": [
        {
          "Id": "14e61947d7744c52a6dd68a210b044f2",
          "Name": "_InputElement",
          "Description": "_InputElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "750de69bf742490ba12bf0d097aa30a9",
          "Name": "_InputData",
          "Description": "_InputData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0418426ef2d04c288be030ec5a25cfab",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "752ce043db554bb186b23e6b4f67e766",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "d6a04655d8504043b972c31b54888ec5",
      "Inputs": [
        {
          "Id": "8d1613109372460487afd80f2897ed6a",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "706ae462ad994c67ad60659a97ae1c4b",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 598,
      "SelectedString": "OST_StructuralFoundation",
      "NodeType": "ExtensionNode",
      "Id": "9bae5aaf9bf34b83b811b6478f215564",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "af2194ae75604909b856abac2ed9e960",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Str Foundations\";",
      "Id": "2b55deec8d4646b896bbdbbbab022bda",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "080784591bb34a158a79fdcd1937d4ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\pjmk0\\Downloads\\MK\\mQ\\hecCalc\\상상진화\\20220110\\DMS(Data Matching Schedule)_R0(Seq2)_220110.xlsx",
      "InputValue": "상상진화\\20220110\\DMS(Data Matching Schedule)_R0(Seq2)_220110.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "7b4f8f19efab4a2fa529e2bcd25c4024",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ea97a5cc1b1e447197dfd8a82b3b2712",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "b4336991a32b46e1bfa26f2d00f265a5",
      "Inputs": [
        {
          "Id": "f7aa06c790134ff68946d61adb1c585f",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53c612b3a0d247e68bef0f1ccd07c139",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aeb999a5316a41de89d0326057c17a5f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f81924c69b7147f8aa9c662029870a5a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a Python script from a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport urllib.request\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputURL = \"https://raw.githubusercontent.com/HNANmal/mQ/master/Hdynlib/General/ImportExcel.py\"\r\n\r\n# Place your code below this line\r\nreq = urllib.request\r\ndata = req.urlopen(inputURL)\r\n\r\nresult = data.read().decode(\"utf-8\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "cfb9f670cc884514938ce524046c0014",
      "Inputs": [
        {
          "Id": "be8fb4c8955246979362c350cb2dc1df",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89567a601cc646c7bb7df3be1f854fd6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "f8093c09dc83495d92ec3431b7972149",
      "Inputs": [
        {
          "Id": "12ec7fa57c944e06ae3d2c46e7e84a1c",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ac42b2432e6471da1485ad737702813",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9b9802ea6564949bcdc2a1b4cdf1eca",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "15;",
      "Id": "c5697d71912d4687886cd78a20f564d9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "35dd56976eb6436f90a6af0edfe82047",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "a83a98f993dd4a04a274e36e0da9fab0",
      "Inputs": [
        {
          "Id": "feafaa7d776a4f1cb10c8861f253f682",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae945c84931b4d06a53fc2f95b42ab79",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[\"ElementType\"];",
      "Id": "65c844a6fc4342d0a5b889df13a34c32",
      "Inputs": [
        {
          "Id": "ab6e967096914d64a15d8823d7abe8b2",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "162498c3b9954009bcf1704288003350",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef judgeWM(wm, elem):\r\n    if elem.element\r\n    pass\r\n\r\ndef assembleFunc(targetGeofunc, getvaluefunc, correctfunc):\r\n    pass\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = 0",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "a07a431e650a4fbabfce4ff91181ed2d",
      "Inputs": [
        {
          "Id": "c6b2de8830784b849fea6456d7495974",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b227742561364a488c3eef73b217e437",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "291664d26531451cac9ad8c200f713d8",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42c9ee6eb3414ac8ac5ff092b6dc6c1b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "getTargetGeometry;",
      "Id": "7078853e87ed4178bd2130b54ece77ce",
      "Inputs": [
        {
          "Id": "29b380d2f78f41548730ebb505c5d1a2",
          "Name": "getTargetGeometry",
          "Description": "getTargetGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7896f98158454cad899568dc6b820681",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "calculate;",
      "Id": "85c1b9ff7bbf40628420f9d90fa51ac1",
      "Inputs": [
        {
          "Id": "1fe13b33798d4315b556e1727b772cd6",
          "Name": "calculate",
          "Description": "calculate",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9ad40c61ed24c99b7c8e9c65501e2c2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "correctValue;",
      "Id": "b504fe1f4ea4470ba24bc7d6a645d288",
      "Inputs": [
        {
          "Id": "ca012cb90d404ac795ca4025e3e13ade",
          "Name": "correctValue",
          "Description": "correctValue",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a66a42e76192468f99f3ec46f7921a18",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "ec3bb8e3284a48a486cd398e551b8ccf",
      "Inputs": [
        {
          "Id": "836ad1a3c3c1475cbac45a23c9b8f616",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab66698ded7a4df78758e488629c5dd8",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Id": "7b3c47c7dd3c430ea4c9354e259f368d",
      "Inputs": [
        {
          "Id": "5409255fd133445bb5aa0557383e76ec",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad470cb5ee954aa3a05e080cccad9ed0",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "31e56155a276465bb4776d9c20a3d7b6",
      "Inputs": [
        {
          "Id": "d6f7bd41bcea4ae599c54a1f90521e7f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14b7d55ceaf94d1eabc71f77f339baed",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9e98e4c92804204a20ddf8b9e8193bf",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Family Name\";",
      "Id": "b0df287a19c74f038d27e621a917e75c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1acbf6401a08456991981df9827acf40",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)#Autodesk.Revit.DB.FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nrefFunc = IN[0]\r\nwholeExcavationBln = IN[1]\r\ninputDS = IN[2]\r\nbttmOffset = IN[3]\r\n버림thk = IN[4]\r\nslopeExcav = IN[5]\r\n\r\n\r\n\r\n# Place your code below this line\r\n\r\ndef 터파기산출함수(input):\r\n    targets = []\r\n    \r\n    if wholeExcavationBln:\r\n        calcTargetNum = len(allIsoFdns)\r\n        fdnsGeo = [i.Geometry()[0] for i in allIsoFdns]\r\n        bdBox_fdn = BoundingBox.ByGeometry(fdnsGeo).ToCuboid()\r\n        srfs = bdBox_fdn.Explode()\r\n        belowSrf = [i for i in srfs if i.NormalAtParameter(0.5,0.5).Z == -1][0]\r\n        def getSrfHeight(srf):\r\n            _crvs = srf.PerimeterCurves()\r\n            heights = [i.StartPoint.Z for i in _crvs]\r\n            height = min(heights)\r\n            return height\r\n        belowSrf_height = getSrfHeight(belowSrf)\r\n        \r\n        def findLeanThk(leanobj):\r\n            if leanobj:\r\n                return leanobj.GetParameterValueByName(\"thk\")\r\n            else:\r\n                return 버림thk\r\n        leanobj = None\r\n        leanthk = findLeanThk(leanobj)\r\n        \r\n        def offsetCrv(crv, offset=300):\r\n            return crv.Offset(offset)\r\n        def correctElev(crv, thk):\r\n            return crv.Translate(0,0,thk)\r\n        _exca_belowbdry = offsetCrv(PolyCurve.ByJoinedCurves(belowSrf.PerimeterCurves()), bttmOffset)\r\n        exca_belowbdry = correctElev(_exca_belowbdry, -버림thk)\r\n        _exca_upperbdry = correctElev(_exca_belowbdry, -belowSrf_height)\r\n        exca_upperbdry = offsetCrv(_exca_upperbdry, -belowSrf_height/slopeExcav)\r\n        target = Solid.ByLoft([exca_belowbdry,exca_upperbdry])#excavation_solid\r\n        \r\n        \r\n    else:\r\n        calcTargetNum = 1\r\n        srfs = input.Geometry()[0].Explode()\r\n        belowSrf = [i for i in srfs if i.NormalAtParameter(0.5,0.5).Z == -1][0]\r\n        \r\n        def getSrfHeight(srf):\r\n            _crvs = srf.PerimeterCurves()\r\n            heights = [i.StartPoint.Z for i in _crvs]\r\n            height = min(heights)\r\n            return height\r\n        belowSrf_height = getSrfHeight(belowSrf)\r\n        \r\n        def findLeanThk(leanobj):\r\n            if leanobj:\r\n                return leanobj.GetParameterValueByName(\"thk\")\r\n            else:\r\n                return 버림thk\r\n        leanobj = None\r\n        leanthk = findLeanThk(leanobj)\r\n        \r\n        def offsetCrv(crv, offset=300):\r\n            return crv.Offset(offset)\r\n        def correctElev(crv, thk):\r\n            return crv.Translate(0,0,thk)\r\n        _exca_belowbdry = offsetCrv(PolyCurve.ByJoinedCurves(belowSrf.PerimeterCurves()), bttmOffset)\r\n        exca_belowbdry = correctElev(_exca_belowbdry, -버림thk)\r\n        _exca_upperbdry = correctElev(_exca_belowbdry, -belowSrf_height)\r\n        exca_upperbdry = offsetCrv(_exca_upperbdry, -belowSrf_height/slopeExcav)\r\n        target = Solid.ByLoft([exca_belowbdry,exca_upperbdry])#excavation_solid\r\n\r\n    return (target, sum([i.Volume for i in [target]])/calcTargetNum/1000000000, \"M3\")\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = fdnsGeo\r\nOUT = (터파기산출함수,[\"Footing-Rectangular\"],[\"Excavation\"],[\"M3\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "1d9d60df12cd4f618a5dee4110b24a50",
      "Inputs": [
        {
          "Id": "7156e1ac93f246e1a5df470d6437ea43",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "324f629c27844d3dad460a3bb5cf9431",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f6a3cf8daf341e98c53c716826ebe8c",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af6884371d6445f8b78cb097e0d5adcf",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37a7483cbc9a4487bd25c2b04f2f5ef6",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab1cfc2e830a484ca0d0612ac3caf825",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7a11c13742b42319c72ab915acb4e14",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "83028b9605a84074beb37f8f1bf17e9f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "70672a638f814acb89bb95cf3412e15a",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 300.0,
      "Id": "b64b777db7ac47a0b5124051bd0b5ec0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f602149b16924568b7d8419c1e8add02",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 2.0,
      "Id": "d8a17f85cdba49c1a9d73f285af7b3c4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3b8d745137e0456f9d027d31bc69fdaf",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector = FilteredElementCollector(doc)#Autodesk.Revit.DB.FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n_inputs = IN[0]\r\n# Place your code below this line\r\ndef 거푸집산출함수(input):\r\n    geo = input.Geometry()[0]\r\n    allSrf = geo.Explode()\r\n    sideSrf = [i for i in allSrf if round(i.NormalAtParameter(0.5,0.5).Z)==0]\r\n    \r\n    return (sideSrf, sum([i.Area for i in sideSrf])/1000000, \"M2\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = (거푸집산출함수,[\"Footing-Rectangular\"],[\": Form\"],[\"M2\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "7da9ee320a0946e793f99ac33d6b3f66",
      "Inputs": [
        {
          "Id": "e7b114e932164daba6a770a24a7eb576",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08f323c27d80408c88d68c0aa6a230bc",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = IN",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e0bad9b42b74405485f574c8e6ccae2a",
      "Inputs": [
        {
          "Id": "8c5e665ea7334b6eb806fba9d99043ed",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91c9ffc6983f4a33add604ac87a1318b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8a3a1888a1e49d393877341f2546ec3",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "584f13b0e54b4921873e7cd896d278c2",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eff4a2b2dfb8427f83a622c84a278e53",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72870a5403b84c03aa7194838cf91bd1",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1b8ddf1e1544d5bbc03b6f3bb330043",
          "Name": "IN[6]",
          "Description": "Input #6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "110a6374494b405daf04dbc4034c3c4a",
          "Name": "IN[7]",
          "Description": "Input #7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7cca97c89e354fe18d92d51ee6bd4c18",
          "Name": "IN[8]",
          "Description": "Input #8",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a47d36eef6214aa395a208218f64564b",
          "Name": "IN[9]",
          "Description": "Input #9",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71d6c49711a449a0a06ccb77c574ea5b",
          "Name": "IN[10]",
          "Description": "Input #10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "903f39e7805f4383b5a8404cd4e919f4",
          "Name": "IN[11]",
          "Description": "Input #11",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc59390b03d14e57bd597406a616e704",
          "Name": "IN[12]",
          "Description": "Input #12",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "547329efacb441a2bbf66ca3ebe938f4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDics = IN[0]\r\nelems = elemDics[\"Element\"]\r\nelemTypes = elemDics[\"ElementType\"]\r\nWMperElems = elemDics[\"FullWMCodeDescriptionPerElement\"]\r\nidx = range(len(elems))\r\n# Place your code below this line\r\ndef ElemDS(i, elems, elemTypes, WMperElems):\r\n    elem = elems[i]\r\n    elemType = elemTypes[i]\r\n    familyCode = elemType.split('_')[0]\r\n    WMperElem = WMperElems[i]\r\n    familyClass = elem.ElementType.GetParameterValueByName(\"Family Name\")\r\n    \r\n    def findLevel():\r\n        if \"Wall\" in familyClass:\r\n            level = elem.GetParameterValueByName(\"Base Constraint\")\r\n        elif \"Column\" in familyClass:\r\n            level = elem.GetParameterValueByName(\"Base Level\")\r\n        elif \"Stair\" in familyClass:\r\n            level = elem.GetParameterValueByName(\"Base Level\")\r\n        elif \"Beam\" in familyClass:\r\n            level = elem.GetParameterValueByName(\"Reference Level\")\r\n        else:\r\n            level = elem.GetParameterValueByName(\"Level\")\r\n        return level\r\n    level = findLevel()\r\n    \r\n    result = {\r\n        \"elem\": elem,\r\n        \"elemType\": elemType,\r\n        \"level\": level,\r\n        \"familyCode\": familyCode,\r\n        \"WMperElem\": WMperElem,\r\n    }\r\n    \r\n    return result\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = [ElemDS(i, elems, elemTypes, WMperElems) for i in idx]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "67f330b11f0741f989c850c8112de991",
      "Inputs": [
        {
          "Id": "03fca15be0d040a7a67c8675a66ab51f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38938187921f43e0b2e70dda71f73e69",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 50.0,
      "Id": "92f37275fb2246fdb1e268614812d2c2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "21ac85fc9cc14f66b889375b37fc5358",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDSs = IN[0]\r\nfuncSets = IN[1]\r\n#func = IN[1][0]\r\n#funcfamilyTag = IN[1][1]\r\n#funcWmTag = IN[1][2]\r\n#funcUnitTag = IN[1][3]\r\n# Place your code below this line\r\n\r\n\r\ndef getTarget(elemDS, funcSets):\r\n    elem = elemDS[\"elem\"]\r\n    etype = elemDS[\"elemType\"]\r\n    familyCode = elemDS[\"familyCode\"]\r\n    wms = elemDS[\"WMperElem\"]\r\n    result = []\r\n    \r\n#    def matchWM_func(wms, funcSet):\r\n#        result = []\r\n#        func = funcSet[0]\r\n#        for wm in wms:\r\n#            tmp1 = []\r\n#            tmp2 = []\r\n#            wmbln = []\r\n#            for i in funcSet[1]:\r\n#                if i in etype:#element type 비교\r\n#                    tmp1.append(True)\r\n#                else:\r\n#                    tmp1.append(False)\r\n#            for i in funcSet[2]:#work type 비교\r\n#                if i in wm:\r\n#                    tmp2.append(True)\r\n#                else:\r\n#                    tmp2.append(False)\r\n#            if any(tmp1) and any(tmp2):\r\n#                result.append([etype, wm, func, func(elem)])\r\n#\r\n#        return result\r\n    \r\n    def matchWM_func(wm, funcSets):\r\n        result = []\r\n        \r\n        for funcSet in funcSets:\r\n            func = funcSet[0]\r\n            tmp1 = []\r\n            tmp2 = []\r\n\r\n            for i in funcSet[1]:\r\n                if i in etype:#element type 비교\r\n                    tmp1.append(True)\r\n                else:\r\n                    tmp1.append(False)\r\n            for i in funcSet[2]:#work type 비교\r\n                if i in wm:\r\n                    tmp2.append(True)\r\n                else:\r\n                    tmp2.append(False)\r\n            if any(tmp1) and any(tmp2):\r\n                result.append([etype, wm, func, func(elem)])\r\n\r\n        return result\r\n\r\n#    result = [matchWM_func(wm, funcSets) for wm in wms]\r\n    result = []\r\n    for wm in wms:\r\n        if matchWM_func(wm, funcSets):\r\n            result.append(matchWM_func(wm, funcSets))\r\n        else:\r\n            result.append([[etype, wm, \"-----!!funcSets내, 해당 부재와 해당 공정\"+f'({wm.split(\": \")[0]})'+\"에 대응하는 함수 없음!!-----\",[\"!산출타겟 미지정!\",\"!산출결과 없음!\",\"!산출단위 없음!\"]]])\r\n\r\n    return list(chain(*result))\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = [getTarget(elemDS, funcSets) for elemDS in elemDSs]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "66979d5642e3486f9b28e6440bf1bb52",
      "Inputs": [
        {
          "Id": "86c9b747715f425893eb44b8600e7597",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f888c5c6467640ef90b6487ab5478664",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f56d685ccbb4d3a9e0c72f01ac521e5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a4a606cb1846452abefe5992339ded29",
      "Inputs": [
        {
          "Id": "f2aa2735415546789c8edd83fccabe66",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dbf5d3fd3e2c479092dc272fdb15c3f5",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\ncollector5 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n_allEdges = collector5.OfCategory(BuiltInCategory.OST_EdgeSlab).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"TG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\nallEdges = [i.ToDSType(False) for i in _allEdges]\r\nallEdgesGeo = [i.Geometry()[0] for i in allEdges]\r\nallFdnAndHaunch = [i.ToDSType(False) for i in allFdns+_allEdges]\r\nallFdnAndHaunchGeo = [i.Geometry()[0] for i in allFdnAndHaunch]\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputs = IN[0]\r\n# Place your code below this line\r\ndef 콘크리트물량산출함수(input):\r\n    if \"Footing-Rectangular\" in input.Name:\r\n        target = input\r\n        \r\n        return (target.Geometry()[0], target.GetParameterValueByName(\"Volume\"), \"M3\")\r\n    \r\n    elif \"SOG\" in input.Name:\r\n        inputGeo = input.Geometry()[0]\r\n        간섭판별선 = PolyCurve.ByJoinedCurves([i for i in inputGeo.Explode() if round(i.NormalAtParameter(0.5,0.5).Z)==-1][0].PerimeterCurves()).Offset(-1)\r\n        간섭판별면 = 간섭판별선.Patch()\r\n        overlaps = [i for i in allEdgesGeo if 간섭판별면.DoesIntersect(i)]+[inputGeo]\r\n        unionSolid = Solid.ByUnion(overlaps)\r\n        target = unionSolid\r\n        \r\n        return (target, target.Volume/1000000000, \"M3\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = (콘크리트물량산출함수,[\"Footing-Rectangular\",\"SOG\"],[\": Structural Concrete\"],[\"M3\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "7773a863923d4ce7a7b10ec4c1940acf",
      "Inputs": [
        {
          "Id": "92b137f374ec4444b2c4f6b47e249e4c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce177b02590f4038a852b1f40541ac5a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"TG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nrefFunc = IN[0][0]\r\nwholeExcavationBln = IN[1]\r\ninput = IN[2]\r\nbttmOffset = IN[3]\r\n버림thk = IN[4]\r\nslopeExcav = IN[5]\r\n\r\n\r\n# Place your code below this line\r\n\r\ndef 되메우기산출함수(input):\r\n    targets = []\r\n    \r\n    if wholeExcavationBln:\r\n        calcTargetNum = len(allIsoFdns)\r\n        exca_solid = refFunc(input)[0]\r\n        fdn_solid = Solid.ByUnion([i.Geometry()[0] for i in allIsoFdns])\r\n        peds_solid = Solid.ByUnion(allPedsGeo)\r\n        TGs_solid = Solid.ByUnion(allTGsGeo)\r\n        SOGs_solid = Solid.ByUnion(allSOGsGeo)\r\n        _target1 = exca_solid.Difference(fdn_solid)\r\n        _target2 = _target1.Difference(peds_solid)\r\n        _target3 = _target2.Difference(TGs_solid)\r\n        target = _target3.Difference(SOGs_solid)\r\n        pass\r\n\r\n    else:\r\n        calcTargetNum = 1\r\n        exca_solid = refFunc(input)[0]\r\n        fdn_solid = input.Geometry()[0]\r\n        _joinedPeds = [i for i in allPedsGeo if i.DoesIntersect(exca_solid)]\r\n        joinedPeds = Solid.ByUnion(_joinedPeds)\r\n        _joinedTGs = [i for i in allTGsGeo if i.DoesIntersect(exca_solid)]\r\n        _joinedSOGs = [i for i in allSOGsGeo if i.DoesIntersect(exca_solid)]\r\n        if len(_joinedTGs)>0:\r\n            joinedTGs = Solid.ByUnion(_joinedTGs)\r\n            _target1 = exca_solid.Difference(fdn_solid)#Backfill_Solid ##린 콘크리트 형상 미포함\r\n            _target2 = _target1.Difference(joinedPeds)\r\n            _target3 = _target2.Difference(joinedTGs)\r\n            if len(_joinedSOGs):\r\n                joinedSOGs = Solid.ByUnion(_joinedTGs)\r\n                target = _target3.Difference(joinedSOGs)\r\n            else:\r\n                target = _target3\r\n        else:\r\n            _target1 = exca_solid.Difference(fdn_solid)\r\n            _target2 = _target1.Difference(joinedPeds)\r\n            if len(_joinedSOGs):\r\n                joinedSOGs = Solid.ByUnion(_joinedTGs)\r\n                target = _target2.Difference(joinedSOGs)\r\n            else:\r\n                target = _target2\r\n\r\n    return (target, sum([i.Volume for i in [target]])/calcTargetNum/1000000000, \"M3\")\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = getBackfillTarget(input)\r\nOUT = (되메우기산출함수,[\"Footing-Rectangular\"],[\"Backfill\"],[\"M3\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "92890922703c48a2b2b55e2c2308d608",
      "Inputs": [
        {
          "Id": "fed9bcb62cd24a7fb936335f373430f4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12682936a64d4846a881ce7014a7efb6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a044b26820c47bf8046dae6f6c3d208",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb8b902ba8d5452399ebbbe46420a403",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bed8f6449a743c68e1e4dcefe1021c5",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa6c487ad02a443b8bd4877d20e0bdcd",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12310576af97432ab19c9fcdceb4f672",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[\"elem\"];",
      "Id": "e45b744b672c4904a0c8dede781382e7",
      "Inputs": [
        {
          "Id": "b6b5e75cc73d4acda33b84015b703181",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15e043bba857412094d846d6d09e44f6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[5];",
      "Id": "00b5c3ab9e324c7f84a2a39d4ac0a4c3",
      "Inputs": [
        {
          "Id": "5c2765348ea8457aaac16e9c5bd973ba",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d70a892195074514b6347c457c8e2667",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"TG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nrefFunc = IN[0][0]\r\nwholeExcavationBln = IN[1]\r\nratio = IN[2]\r\n#bttmOffset = IN[3]\r\n#leanThk = IN[4]\r\n#slopeExcav = IN[5]\r\n\r\n\r\n# Place your code below this line\r\n\r\ndef 잔토처리산출함수(input):\r\n    targets = []\r\n    \r\n    if wholeExcavationBln:\r\n        calcTargetNum = len(allIsoFdns)\r\n        exca_solid = refFunc(input)[0]\r\n        fdn_solid = Solid.ByUnion([i.Geometry()[0] for i in allIsoFdns])\r\n        peds_solid = Solid.ByUnion(allPedsGeo)\r\n        TGs_solid = Solid.ByUnion(allTGsGeo)\r\n        SOGs_solid = Solid.ByUnion(allSOGsGeo)\r\n        _target1 = Solid.ByUnion([fdn_solid,peds_solid,TGs_solid,SOGs_solid])\r\n#        _target1 = exca_solid.Difference(fdn_solid)\r\n#        _target2 = _target1.Difference(peds_solid)\r\n#        _target3 = _target2.Difference(TGs_solid)\r\n        target = _target1.Intersect(exca_solid)[0]\r\n        pass\r\n\r\n    else:\r\n        calcTargetNum = 1\r\n        exca_solid = refFunc(input)[0]\r\n        fdn_solid = input.Geometry()[0]\r\n        _joinedPeds = [i for i in allPedsGeo if i.DoesIntersect(exca_solid)]\r\n        #joinedPeds = Solid.ByUnion(_joinedPeds)\r\n        _joinedTGs = [i for i in allTGsGeo if i.DoesIntersect(exca_solid)]\r\n        _joinedSOGs = [i for i in allSOGsGeo if i.DoesIntersect(exca_solid)]\r\n        _target1 = Solid.ByUnion(list(chain(*[[fdn_solid] + _joinedPeds + _joinedTGs + _joinedSOGs])))\r\n        target = _target1.Intersect(exca_solid)[0]\r\n\r\n\r\n    return (target, sum([i.Volume for i in [target]])*ratio/calcTargetNum/1000000000, \"M3\")\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = getBackfillTarget(input)\r\nOUT = (잔토처리산출함수,[\"Footing-Rectangular\"],[\"Disposal\"],[\"M3\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "b9bd646266bf4926b2cea766da608168",
      "Inputs": [
        {
          "Id": "50659a3fe945404dac40ff160d89af68",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1378167deec64a4280d525710bc081cf",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce6798b9e4c64433a430c17388dbb229",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec1d1aa6e1e345889de367beec6afc10",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e6db96a490a4337843ae81ed6e261dd",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6254ecb9e6049c185872803ae95a00b",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "369f54a2cc2e44b3acbc2543670877ae",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.2,
      "Id": "3e63f6d3271c4093bf7d9acdd5521fbb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "19c7059bf98645de95e17dbab10e6c44",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "dfeb934f6e49445ebd157c0d5a84df3a",
      "Inputs": [
        {
          "Id": "d47cc73865e34f2d9e18dbdb525f86a6",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 5,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1800e660969452980468e3c2cd776ad",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"TG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nrefFunc = IN[0][0]\r\nwholeExcavationBln = IN[1]\r\n기층thk = IN[2]\r\nbttmOffset = IN[3]\r\n버림thk = IN[4]\r\n#slopeExcav = IN[5]\r\n\r\n\r\n# Place your code below this line\r\n\r\ndef 기층물량산출함수(input):\r\n    targets = []\r\n    \r\n    if wholeExcavationBln:\r\n        calcTargetNum = len(allIsoFdns)\r\n        exca_solid = refFunc(input)[0]\r\n        srfs_exca_blw = [i for i in exca_solid.Explode() if round(i.NormalAtParameter(0.5,0.5).Z)==-1]\r\n        \r\n\r\n        target = srfs_exca_blw[0].Translate(0,0,-기층thk)\r\n        pass\r\n\r\n    else:\r\n        calcTargetNum = 1\r\n        exca_solid = refFunc(input)[0]\r\n        srfs_exca_blw = [i for i in exca_solid.Explode() if round(i.NormalAtParameter(0.5,0.5).Z)==-1]\r\n\r\n        target = srfs_exca_blw[0].Translate(0,0,-기층thk)\r\n\r\n\r\n    return (target, sum([i.Area for i in [target]])/calcTargetNum/1000000, \"M2\")\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = getBackfillTarget(input)\r\nOUT = (기층물량산출함수,[\"Footing-Rectangular\"],[\"Base Course\"],[\"M2\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "d4b74dd803784e07b2fbe47fc34a7ac8",
      "Inputs": [
        {
          "Id": "3af7b11ee17645609df4e28ae0ed2c4b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e49914561b0d4672ba120aa83f8e02d4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac2df5aaf04d49a5916f971587afc433",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "344e6f310e77474282cad341621d1fea",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8a9d403d5e940c39cd540f027bf5c30",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d15e923735f8461caa4cc75f1fe06dab",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02a17a54132c488886c8679b6f70fa42",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 300.0,
      "Id": "7b633f88c0384a66aaae6857bc5c0759",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f746a68907ef4061b517ee652122b3e4",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n지정색상 = IN[0]\r\n산출결과세트리스트 = IN[1]\r\n공종코드 = IN[2].split(': ')[0]\r\n\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1].split(': ')[0]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\ndef 색상준비(공종목록):\r\n    log = []\r\n    result = {}\r\n    for i in range(len(공종목록)):\r\n        난수1 = random.randint(0,255)\r\n        난수2 = random.randint(0,255)\r\n        난수3 = random.randint(0,255)\r\n        난수4 = random.randint(0,255)\r\n        색상 = Color.ByARGB(난수1,난수2,난수3,난수4)\r\n        if not 색상 in log:\r\n            log.append(색상)\r\n            result[공종목록[i]] = 색상\r\n    return result\r\n    \r\n색상들 = 색상준비(공종목록)\r\n# Place your code below this line\r\ndef 시각화(산출결과세트, 색상들, 공종코드):\r\n    result = []\r\n    for 공종결과 in 산출결과세트:\r\n        tmp1 = []\r\n        target = 공종결과[3][0]\r\n        공종 = 공종결과[1].split(': ')[0]\r\n        색상 = 지정색상\r\n        if 공종 == 공종코드:\r\n            if isinstance(target, Revit.Elements.FamilyInstance):\r\n                visual = GeometryColor.ByGeometryColor(target.Geometry()[0], 색상)[0]\r\n                tmp1.append(visual)\r\n            elif isinstance(target, str):\r\n                pass\r\n            else:\r\n                if not isinstance(target, list):\r\n                    visual = GeometryColor.ByGeometryColor(target, 색상)\r\n                    tmp1.append(visual)\r\n                else:\r\n                    for i in target:\r\n                        tmp1.append(GeometryColor.ByGeometryColor(i, 색상))\r\n            result.append(tmp1)\r\n        else:\r\n            pass\r\n            #result.append(\"no output\")\r\n    return result\r\n\r\nresult = [시각화(산출결과세트, 색상들, 공종코드) for 산출결과세트 in 산출결과세트리스트]\r\n# Assign your output to the OUT variable.\r\nOUT = [list(chain(*result))]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "cbc21043d4424609987e8b8455a60cd3",
      "Inputs": [
        {
          "Id": "8375ab1b13fc4e2ea5a12ac6f6cc2e31",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b714993ece647e1996aff557df9bc1f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d87c70095a0458db6231d10be20a0c9",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d84a3aff6f2a41e8973f075663a79208",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n산출결과세트리스트 = IN[0]\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\nresult = 공종목록\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "bf67dc0d620e4012b330832e28fe5bdd",
      "Inputs": [
        {
          "Id": "7658b260106e4ec8a0163e3bcb16d4e0",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d37ad633b81440395b079525cb7a4e2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 5,
      "MaximumValue": 18,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "4db23de1c1944ce9b61374d079b8df8f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0469ddcf2ffd4398b80b6dc653c34dc2",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "3575c8e25de14f748f0368e4adf3e091",
      "Inputs": [
        {
          "Id": "29034096a7044597b35266452eca95f1",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31e3e115ef354234aab6f9a2b2e6cb63",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d14d7182f684a399b8f9b0f0a1634a2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "691606d10c8e49c79c7daaca2a0089e4",
      "Inputs": [
        {
          "Id": "ca23066dea3a4d2dbce92299bbcda04a",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "febe3ceb1ecb42b8a056a04b219d7cd9",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "input;",
      "Id": "02d863e5a47e48f0bbd59b2cf455c1b1",
      "Inputs": [
        {
          "Id": "13c1145fcf7a4732bf7fd0ee9a75be9d",
          "Name": "input",
          "Description": "input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "641e7ca6fe6746acbd3703795e2b07f3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\ncollector5 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n_allEdges = collector5.OfCategory(BuiltInCategory.OST_EdgeSlab).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"TG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\nallEdges = [i.ToDSType(False) for i in _allEdges]\r\nallEdgesGeo = [i.Geometry()[0] for i in allEdges]\r\nallFdnAndHaunch = [i.ToDSType(False) for i in allFdns+_allEdges]\r\nallFdnAndHaunchGeo = [i.Geometry()[0] for i in allFdnAndHaunch]\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nrefFunc = IN[0]\r\ninput = IN[1]\r\n기층offset = IN[2]\r\nbttmOffset = IN[3]\r\n버림thk = IN[4]\r\n버림offset = IN[5]\r\n#slopeExcav = IN[5]\r\n\r\ndef getIdxOfMaximum(list):\r\n    result = []\r\n    maxValue = max(list)\r\n    for i in range(len(list)):\r\n        if list[i]==maxValue:\r\n            result.append(i)\r\n    return result\r\n\r\n# Place your code below this line\r\n\r\ndef 버림콘크리트산출함수(input):\r\n    calcTargetNum = 1\r\n    inputGeo = input.Geometry()[0]\r\n    \r\n    if \"Footing-Rectangular\" in input.Name:\r\n        srf_fdn_lean = [i for i in inputGeo.Explode() if round(i.NormalAtParameter(0.5,0.5).Z)==-1][0]\r\n        crvs_fdn_lean = srf_fdn_lean.PerimeterCurves()\r\n        crv_fdn_lean = PolyCurve.ByJoinedCurves(crvs_fdn_lean)\r\n        crv_offset = crv_fdn_lean.Offset(버림offset)\r\n        leanSrf = Surface.ByPatch(crv_offset)\r\n        vectorZ = leanSrf.NormalAtParameter(0.5,0.5).Z\r\n        if vectorZ>0:\r\n            target = leanSrf.Thicken(-버림thk, False)\r\n        elif vectorZ<0:\r\n            target = leanSrf.Thicken(버림thk, False)\r\n        \r\n    elif \"TG\" in input.Name:\r\n        srf_TG_lean = [i for i in inputGeo.Explode() if round(i.NormalAtParameter(0.5,0.5).Z)==-1][0]\r\n        crvs_TG_lean = srf_TG_lean.PerimeterCurves()\r\n        len_crvs_TG = [i.Length for i in crvs_TG_lean]\r\n        idx = getIdxOfMaximum(len_crvs_TG)\r\n        crvs_long = []\r\n        for i in idx:\r\n            crvs_long.append(crvs_TG_lean[i])\r\n        extdSrfs = []\r\n        for i in crvs_long:\r\n            vec = i.NormalAtParameter(0.5)\r\n            i_tr = i.Translate(버림offset,vec)\r\n            extdSrfs.append(Surface.ByLoft([i,i_tr]))\r\n        leanSrf = PolyCurve.ByJoinedCurves([srf_TG_lean]+extdSrfs)\r\n        vectorZ = leanSrf.NormalAtParameter(0.5,0.5).Z\r\n        if vectorZ>0:\r\n            target = leanSrf.Thicken(-버림thk, False)\r\n        elif vectorZ<0:\r\n            target = leanSrf.Thicken(버림thk, False)\r\n        \r\n    elif \"SOG\" in input.Name:\r\n        inputGeo = input.Geometry()[0]\r\n        간섭판별선 = PolyCurve.ByJoinedCurves([i for i in inputGeo.Explode() if round(i.NormalAtParameter(0.5,0.5).Z)==-1][0].PerimeterCurves()).Offset(-1)\r\n        간섭판별면 = 간섭판별선.Patch()\r\n        overlaps = [i for i in allEdgesGeo if 간섭판별면.DoesIntersect(i)]+[inputGeo]\r\n        unionSolid = Solid.ByUnion(overlaps)\r\n        def findBeneathSrf(srfGroup):\r\n            result = []\r\n            upperSrfs = [i for i in srfGroup if round(i.NormalAtParameter(0.5,0.5).Z) == 1]\r\n            headCrvs = []\r\n            for i in upperSrfs:\r\n                headCrv = PolyCurve.ByJoinedCurves(i.PerimeterCurves())\r\n                headCrvs.append(headCrv)\r\n            for i in srfGroup:\r\n                tmp=[]\r\n                for j in headCrvs:\r\n                    if i.DoesIntersect(j):\r\n                        tmp.append(False)\r\n                    else:\r\n                        tmp.append(True)\r\n                if all(tmp):\r\n                    result.append(i)\r\n            return result\r\n        leanSrf = PolySurface.ByJoinedSurfaces(findBeneathSrf(unionSolid.Explode()))\r\n        vectorZ = leanSrf.NormalAtParameter(0.5,0.5).Z\r\n        if vectorZ>0:\r\n            if len(leanSrf.Surfaces())>1:\r\n                target = Solid.ByUnion([i.Thicken(-버림thk, False) for i in leanSrf.Surfaces()])\r\n            else:\r\n                target = leanSrf.Thicken(-버림thk, False)\r\n        elif vectorZ<0:\r\n            if len(leanSrf.Surfaces())>1:\r\n                target = Solid.ByUnion([i.Thicken(버림thk, False) for i in leanSrf.Surfaces()])\r\n            else:\r\n                target = leanSrf.Thicken(버림thk, False)\r\n\r\n    #return target\r\n    return (target, sum([i.Volume for i in [target]])/calcTargetNum/1000000000, \"M3\")\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = 버림콘크리트산출함수(input)\r\nOUT = (버림콘크리트산출함수,[\"Footing-Rectangular\",\"TG\",\"SOG\"],[\"Lean Concrete\"],[\"M3\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "9ed2f65360354b408d1cef254e139742",
      "Inputs": [
        {
          "Id": "8c893332a36b4a0d93847dc69fa3df32",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6815890836cf4321ab543158621b5101",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a374c02b17044ebbb09c74fc774419c1",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75f46b267c544372ac7b137d5addafc7",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dafbd32f6779447c83f93d2effba51d4",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a8a774a298c4155a7b8cfe4e42fa655",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b18f500ff9274c09adafa503d8c916ac",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 100.0,
      "Id": "a7c2158f540043e4bbc3d79f6da93483",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ad1cadfdcfdf46baa915df8baa684e5c",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelements = IN[0]\r\n# Place your code below this line\r\ndef findJoinedPair(elements):\r\n    result = []\r\n    Ididx = [i.Id for i in elements]\r\n    _log = []\r\n    for i in elements:\r\n        tmp1= [i]\r\n        if i.Id not in _log:\r\n            _log.append(i.Id)\r\n            joinlist = i.GetJoinedElements()\r\n            if len(joinlist):\r\n                for j in joinlist:\r\n                    if j.Id in Ididx:\r\n                        idx = Ididx.index(j.Id)\r\n                        _log.append(idx)\r\n                        tmp1.append(j)\r\n                        \r\n            result.append(tmp1)\r\n        else:\r\n            pass\r\n    return result\r\n# Assign your output to the OUT variable.\r\nOUT = findJoinedPair(elements)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c5b0f8fdc487427f8a45c6391b91f53c",
      "Inputs": [
        {
          "Id": "f4ff71fb4eda4b0a94da6314fdbf63fe",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c40f0128d6948e0a935d7b2559348c7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[i[5],i[6],i[7],i[8],i[9]];",
      "Id": "0ea86fd7b9d84114a05fe7f8599c2b1b",
      "Inputs": [
        {
          "Id": "778bb1af1bcc4741906fd253307aeb32",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b1b1a148544c4471b59866a6aa5d54d0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "c6e4b0b7571e469d838654917812332f",
      "Inputs": [
        {
          "Id": "7bc2bfcea21b425083488f68cf472a24",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a34d251a0c754635bce61f3216f012b0",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "d9e0dd32b6bd426ea39c366e4bcdfbd5",
      "Inputs": [
        {
          "Id": "f4211058a2d54ead85f85a8720430b5b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7066ce3cec9948fab5e05c24e8c1e399",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3e76ccaf4ffb406b913d4b37f042faf7",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "aef4051d1ffb46b8a4dfd6ec1316a9f2",
      "Inputs": [
        {
          "Id": "d0dbeb4ff0df4c6d992aab2ed0094e5a",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6592055d001c4307924c0de8d786c5a0",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 127,
        "G": 255,
        "B": 212,
        "A": 79
      },
      "NodeType": "ColorInputNode",
      "Id": "fba1ef43a7424e2a8075f88e60d23821",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "417721d78daa4c4786954c6936373b07",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n지정색상 = IN[0]\r\n산출결과세트리스트 = IN[1]\r\n공종코드 = IN[2].split(': ')[0]\r\n\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1].split(': ')[0]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\ndef 색상준비(공종목록):\r\n    log = []\r\n    result = {}\r\n    for i in range(len(공종목록)):\r\n        난수1 = random.randint(0,255)\r\n        난수2 = random.randint(0,255)\r\n        난수3 = random.randint(0,255)\r\n        난수4 = random.randint(0,255)\r\n        색상 = Color.ByARGB(난수1,난수2,난수3,난수4)\r\n        if not 색상 in log:\r\n            log.append(색상)\r\n            result[공종목록[i]] = 색상\r\n    return result\r\n    \r\n색상들 = 색상준비(공종목록)\r\n# Place your code below this line\r\ndef 시각화(산출결과세트, 색상들, 공종코드):\r\n    result = []\r\n    for 공종결과 in 산출결과세트:\r\n        tmp1 = []\r\n        target = 공종결과[3][0]\r\n        공종 = 공종결과[1].split(': ')[0]\r\n        색상 = 지정색상\r\n        if 공종 == 공종코드:\r\n            if isinstance(target, Revit.Elements.FamilyInstance):\r\n                visual = GeometryColor.ByGeometryColor(target.Geometry()[0], 색상)[0]\r\n                tmp1.append(visual)\r\n            elif isinstance(target, str):\r\n                pass\r\n            else:\r\n                if not isinstance(target, list):\r\n                    visual = GeometryColor.ByGeometryColor(target, 색상)\r\n                    tmp1.append(visual)\r\n                else:\r\n                    for i in target:\r\n                        tmp1.append(GeometryColor.ByGeometryColor(i, 색상))\r\n            result.append(tmp1)\r\n        else:\r\n            pass\r\n            #result.append(\"no output\")\r\n    return result\r\n\r\nresult = [시각화(산출결과세트, 색상들, 공종코드) for 산출결과세트 in 산출결과세트리스트]\r\n# Assign your output to the OUT variable.\r\nOUT = [list(chain(*result))]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "b66af7f0ba0b48f68207f8acc4760bbb",
      "Inputs": [
        {
          "Id": "f160e32cb4c6447a9ee1608d76085043",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c27071d267d4b25a11eb86bbaa36c96",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f0c7590d31249d4b05d336847f2cd62",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21ce586217034f879111c9517e04d836",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n산출결과세트리스트 = IN[0]\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\nresult = 공종목록\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "d544bdd80c194a728a1de4392ab60ff5",
      "Inputs": [
        {
          "Id": "0f28c92a243641df811754a492a0e5c6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bbcdd88d1fb484a8fbf8f2b7d04c4d1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 6,
      "MaximumValue": 18,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "e601413e0c14491ebbd46a25e43eae45",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25931e7389aa4518b5be52e8fa1daa23",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "2ac3f49bbb5e412da04c9fac85e3285b",
      "Inputs": [
        {
          "Id": "f841eebfe0e741cdb486f5ea85ae3de9",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "02c470a26b544efc83cc53aae709342b",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d25d8bd622654d648eb9b8f939262170",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "38b0165dba9643159a5bece79eca625c",
      "Inputs": [
        {
          "Id": "1e98d3f8f6c64f5393c00275cba0ed2f",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f93fbd0c6a0e44028263056046dabc57",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "input;",
      "Id": "44950d255a9c4c0da127467d353a5fbf",
      "Inputs": [
        {
          "Id": "010badb88e9041f3b0344064dc34224f",
          "Name": "input",
          "Description": "input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcb3585c2bae429f938eed929407f40b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f846143c3b084de2adf674a3e407390a",
      "Inputs": [
        {
          "Id": "f5f878360cef4544aea29ab438b7e2c0",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c58a06344f5f4dc282dffaeed352a6aa",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 255,
        "G": 0,
        "B": 255,
        "A": 94
      },
      "NodeType": "ColorInputNode",
      "Id": "21218174c63d49e083bb411a48b90a7e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2606c681139c40fa93c325ddbd20fa2c",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\ncollector5 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n_allEdges = collector5.OfCategory(BuiltInCategory.OST_EdgeSlab).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"TG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\nallEdges = [i.ToDSType(False) for i in _allEdges]\r\nallEdgesGeo = [i.Geometry()[0] for i in allEdges]\r\nallFdnAndHaunch = [i.ToDSType(False) for i in allFdns+_allEdges]\r\nallFdnAndHaunchGeo = [i.Geometry()[0] for i in allFdnAndHaunch]\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nrefFunc = IN[0][0]\r\ninput = IN[1]\r\n기층offset = IN[2]\r\nbttmOffset = IN[3]\r\n버림thk = IN[4]\r\n버림offset = IN[5]\r\n#slopeExcav = IN[5]\r\n\r\ndef getIdxOfMaximum(list):\r\n    result = []\r\n    maxValue = max(list)\r\n    for i in range(len(list)):\r\n        if list[i]==maxValue:\r\n            result.append(i)\r\n    return result\r\n\r\n# Place your code below this line\r\n\r\ndef PE시트산출함수(input):\r\n    calcTargetNum = 1\r\n    inputGeo = input.Geometry()[0]\r\n    버림콘크리트산출함수 = refFunc\r\n    버림형상 = 버림콘크리트산출함수(input)[0]\r\n    #버림상부면 = [i for i in 버림형상.Explode() if round(i.NormalAtParameter(0.5,0.5).Z) == 1][0]\r\n    target = 버림형상\r\n\r\n\r\n    #return target\r\n    return (target, sum([i.Volume/버림thk for i in [target]])/calcTargetNum/1000000, \"M2\")\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = PE시트산출함수(input)\r\nOUT = (PE시트산출함수,[\"Footing-Rectangular\",\"TG\",\"SOG\"],[\"PE Sheet (Vapor\"],[\"M2\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "70a7c7e682cc4c33936d81a09852cdc0",
      "Inputs": [
        {
          "Id": "9c58ba7c5c7a4c48865e70477e93fcac",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c601fc92c9d1435aa469e49a825ada86",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8306fd28a066403fb3b2db046c105089",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d0f86fd14834e11b19d5c14497a2422",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0b4648e27a043b99e7efa9074047ae3",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06065304932c4f3ea440365b73eed19d",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50d1c095908e492ea7e8496b627f401d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "344c3f70f1114cfcbf9e36fa8ddfbc2b",
      "Inputs": [
        {
          "Id": "0c8c1ddac5554a9bb5ecc18fdf787db3",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e664abf67c854d9185e14353cbd8fd58",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n지정색상 = IN[0]\r\n산출결과세트리스트 = IN[1]\r\n공종코드 = IN[2].split(': ')[0]\r\n\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1].split(': ')[0]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\ndef 색상준비(공종목록):\r\n    log = []\r\n    result = {}\r\n    for i in range(len(공종목록)):\r\n        난수1 = random.randint(0,255)\r\n        난수2 = random.randint(0,255)\r\n        난수3 = random.randint(0,255)\r\n        난수4 = random.randint(0,255)\r\n        색상 = Color.ByARGB(난수1,난수2,난수3,난수4)\r\n        if not 색상 in log:\r\n            log.append(색상)\r\n            result[공종목록[i]] = 색상\r\n    return result\r\n    \r\n색상들 = 색상준비(공종목록)\r\n# Place your code below this line\r\ndef 시각화(산출결과세트, 색상들, 공종코드):\r\n    result = []\r\n    for 공종결과 in 산출결과세트:\r\n        tmp1 = []\r\n        target = 공종결과[3][0]\r\n        공종 = 공종결과[1].split(': ')[0]\r\n        색상 = 지정색상\r\n        if 공종 == 공종코드:\r\n            if isinstance(target, Revit.Elements.FamilyInstance):\r\n                visual = GeometryColor.ByGeometryColor(target.Geometry()[0], 색상)[0]\r\n                tmp1.append(visual)\r\n            elif isinstance(target, str):\r\n                pass\r\n            else:\r\n                if not isinstance(target, list):\r\n                    visual = GeometryColor.ByGeometryColor(target, 색상)\r\n                    tmp1.append(visual)\r\n                else:\r\n                    for i in target:\r\n                        tmp1.append(GeometryColor.ByGeometryColor(i, 색상))\r\n            result.append(tmp1)\r\n        else:\r\n            pass\r\n            #result.append(\"no output\")\r\n    return result\r\n\r\nresult = [시각화(산출결과세트, 색상들, 공종코드) for 산출결과세트 in 산출결과세트리스트]\r\n# Assign your output to the OUT variable.\r\nOUT = [list(chain(*result))]",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "44c3a88d622340c1b34b94186773982b",
      "Inputs": [
        {
          "Id": "222046a55bbf4892b62fd1eb04b7b9cd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84596ba00f7e41a4b2d31a79d92e1e38",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c69e52d9d2fa42d39b5eb7e1aadaa210",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af0ecf9213f54980a10c3843775d1971",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nfrom DSCore import Color\r\nclr.AddReference('GeometryColor')\r\nfrom Modifiers import GeometryColor\r\n\r\nimport random\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n산출결과세트리스트 = IN[0]\r\n\r\ndef 공종종류(산출결과세트리스트):\r\n    result = []\r\n    for 산출결과세트 in 산출결과세트리스트:\r\n        for i in 산출결과세트:\r\n            공종 = i[1]\r\n            if not 공종 in result:\r\n                result.append(공종)\r\n    return result\r\n    \r\n공종목록 = 공종종류(산출결과세트리스트)\r\n\r\nresult = 공종목록\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "71a89f09821048f39d02598b104f7e66",
      "Inputs": [
        {
          "Id": "de6a3b146bcc45e5aea5ea344db9a867",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3ab0ea2c9ac48129ebcf1dfd10007c1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.IntegerSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Integer",
      "InputValue": 14,
      "MaximumValue": 18,
      "MinimumValue": 0,
      "StepValue": 1,
      "Id": "d60b29b1949747f9bb769e72394abb30",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d52dae658a4c491eba3211fa160725de",
          "Name": "",
          "Description": "Int64",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces integer values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "32a5d4722b93420ebcbe34bf90901699",
      "Inputs": [
        {
          "Id": "05137d06f7694baf83eef851327046f2",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75b5acbf293f4d5fba86f4c339c95aa2",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94adada4de12438496197e6d368d1e1b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "581effdb309349e9a6ad2a27c106afc7",
      "Inputs": [
        {
          "Id": "ebdc4fc0bdf748829b2865549a462d72",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59768c7bb6e24a8db7c0d692c9259dd7",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "input;",
      "Id": "ab6ae0fa7ae74edb9554ba7a5b44ec56",
      "Inputs": [
        {
          "Id": "b4d931d0da544c49b5928987b1d1c270",
          "Name": "input",
          "Description": "input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa3954722395415c9218359a690b7752",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "cee9c9d0f0234bef8901994920265b67",
      "Inputs": [
        {
          "Id": "5189d4a4814a408783734809c2f9f853",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ab38605a7f74b0cb25456fac2373326",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 51,
        "G": 127,
        "B": 80,
        "A": 130
      },
      "NodeType": "ColorInputNode",
      "Id": "536eaff6281d4926b0d4c6d9c24f17fb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a2b9b5eb16d3420182313905927f071f",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "98a297e499ac4778b00656a71f8d7481",
      "Inputs": [
        {
          "Id": "ba53076489ae4f0bbf5ee1af914df6df",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "796db0485e014dd5b90b08c338a8068c",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)#Autodesk.Revit.DB.FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nrefFunc = IN[0]\r\n#wholeExcavationBln = IN[1]\r\ninputDS = IN[2]\r\nbttmOffset = IN[3]\r\n버림thk = IN[4]\r\nslopeExcav = IN[5]\r\n\r\n\r\n\r\n# Place your code below this line\r\n\r\ndef 터파기산출함수SOG(input):\r\n    \r\n    calcTargetNum = 1\r\n    srfs = input.Geometry()[0].Explode()\r\n    belowSrf = [i for i in srfs if i.NormalAtParameter(0.5,0.5).Z == -1][0]\r\n    \r\n    def getSrfHeight(srf):\r\n        _crvs = srf.PerimeterCurves()\r\n        heights = [i.StartPoint.Z for i in _crvs]\r\n        height = min(heights)\r\n        return height\r\n    belowSrf_height = getSrfHeight(belowSrf)\r\n    \r\n    def findLeanThk(leanobj):\r\n        if leanobj:\r\n            return leanobj.GetParameterValueByName(\"thk\")\r\n        else:\r\n            return 버림thk\r\n    leanobj = None\r\n    leanthk = findLeanThk(leanobj)\r\n    \r\n    def offsetCrv(crv, offset=300):\r\n        return crv.Offset(offset)\r\n    def correctElev(crv, thk):\r\n        return crv.Translate(0,0,thk)\r\n    _exca_belowbdry = offsetCrv(PolyCurve.ByJoinedCurves(belowSrf.PerimeterCurves()), bttmOffset)\r\n    exca_belowbdry = correctElev(_exca_belowbdry, -버림thk)\r\n    _exca_upperbdry = correctElev(_exca_belowbdry, -belowSrf_height)\r\n    exca_upperbdry = offsetCrv(_exca_upperbdry, -belowSrf_height/slopeExcav)\r\n    target = Solid.ByLoft([exca_belowbdry,exca_upperbdry])\r\n\r\n    return (target, sum([i.Volume for i in [target]])/calcTargetNum/1000000000, \"M3\")\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = fdnsGeo\r\nOUT = (터파기산출함수SOG,[\"SOG\"],[\"Excavation\"],[\"M3\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "627a08ffd47e44d9963dda20d1360637",
      "Inputs": [
        {
          "Id": "2f06c53ad65747dfb2a5e623a0efa666",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3cedc5e04c2445b890a241577ea1626e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bde0279c3a44877bfb57389a1738a54",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5559660f7a6649b3841f9eef23c8602b",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1ab8a25d9544916bd0afccbf511fede",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1793b9e503064505a1a214d9831f8bc5",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fa1a3dab60040bdbaa027deb4d98edb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 4.0,
      "Id": "08b452ef974f475390e04cc524bbb2b4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3c16c5709fab4eb199cd8d4a774a9b73",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\ncollector5 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n_allEdges = collector5.OfCategory(BuiltInCategory.OST_EdgeSlab).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"TG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\nallEdges = [i.ToDSType(False) for i in _allEdges]\r\nallEdgesGeo = [i.Geometry()[0] for i in allEdges]\r\nallFdnAndHaunch = [i.ToDSType(False) for i in allFdns+_allEdges]\r\nallFdnAndHaunchGeo = [i.Geometry()[0] for i in allFdnAndHaunch]\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nrefFunc = IN[0][0]\r\ninputs = IN[1]\r\n독립기초철근비 = IN[2]\r\n슬라브철근비 = IN[3]\r\n패드철근비 = IN[4]\r\n\r\n# Place your code below this line\r\ndef 철근물량산출함수(input):\r\n    콘크리트물량산출함수 = refFunc\r\n    if \"Footing-Rectangular\" in input.Name:\r\n        target = 콘크리트물량산출함수(input)[0]\r\n        ratio = 독립기초철근비\r\n        \r\n        return (\"형상정보 미제공\", target.Volume*ratio/1000000000, \"TON\")\r\n    \r\n    elif \"SOG\" in input.Name:\r\n        target = 콘크리트물량산출함수(input)[0]\r\n        ratio = 슬라브철근비\r\n        \r\n        return (\"형상정보 미제공\", target.Volume*ratio/1000000000, \"TON\")\r\n        \r\n    elif \"PAD\" in input.Name:\r\n        target = 콘크리트물량산출함수(input)[0]\r\n        ratio = 패드철근비\r\n        \r\n        return (\"형상정보 미제공\", target.Volume*ratio/1000000000, \"TON\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = (철근물량산출함수,[\"Footing-Rectangular\",\"SOG\"],[\"Rebar Work\"],[\"TON\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "552baf9502cc43d98b225a464ac12791",
      "Inputs": [
        {
          "Id": "a3660c9198c4412e8bc56a3052471394",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97dfaeb0facb467d8ab79d7d7965c1cd",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9c42f336bf84a519f776271fa4e5968",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ab07f2837d64d428194d17c1130bb0d",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bac396d332a54b48a43b5f00bfe4df9a",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9a809703c574f35915508c74f29a0f9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.1,
      "Id": "c17108c3036e45d4840b4b6cbab39727",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7da9b7efe56a411e845bacdf9f561748",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.15,
      "Id": "4f93d26cd6db4a13a06f68827e581c3c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4f2a72e3c56440639d3b3c8b9e862b13",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.1,
      "Id": "11c286aa0c5c4761922964ec19def15f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "16a90711def345709b25cc8b3cd83284",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\ncollector5 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\n_allEdges = collector5.OfCategory(BuiltInCategory.OST_EdgeSlab).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"TG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\nallEdges = [i.ToDSType(False) for i in _allEdges]\r\nallEdgesGeo = [i.Geometry()[0] for i in allEdges]\r\nallFdnAndHaunch = [i.ToDSType(False) for i in allFdns+_allEdges]\r\nallFdnAndHaunchGeo = [i.Geometry()[0] for i in allFdnAndHaunch]\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nrefFunc = IN[0][0]\r\ninput = IN[1]\r\n기층offset = IN[2]\r\nbttmOffset = IN[3]\r\n버림thk = IN[4]\r\n버림offset = IN[5]\r\n#slopeExcav = IN[5]\r\n\r\ndef getIdxOfMaximum(list):\r\n    result = []\r\n    maxValue = max(list)\r\n    for i in range(len(list)):\r\n        if list[i]==maxValue:\r\n            result.append(i)\r\n    return result\r\n\r\n# Place your code below this line\r\n\r\ndef 시트멤브레인산출함수(input):\r\n    PE시트산출함수 = refFunc\r\n    calcTargetNum = 1\r\n    타겟형상 = PE시트산출함수(input)[0]\r\n    타겟값 = PE시트산출함수(input)[1]\r\n    #버림상부면 = [i for i in 버림형상.Explode() if round(i.NormalAtParameter(0.5,0.5).Z) == 1][0]\r\n    target = 타겟값\r\n\r\n\r\n    #return target\r\n    return (\"형상정보 미제공\", target, \"M2\")\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = PE시트산출함수(input)\r\nOUT = (시트멤브레인산출함수,[\"Footing-Rectangular\",\"SOG\"],[\"Sheet Membrane\"],[\"M2\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "8a2d5c95fd0b4103ae10a5d699dba6c6",
      "Inputs": [
        {
          "Id": "1474895c3e034c7a91f213d2fd6c8530",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c2b4a052eab4d6eafd4ebc9c4e477be",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a7d26d0441041ed9317e486c3aa8724",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33b702756a134efda4d928e28eaf2215",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "40385dcea9f44aefbe35ff4c3b927369",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "272735f71a8b419cb5fc5b886684dcbe",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72d2c29013a34ee892edfc02698e9051",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"TG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nrefFunc = IN[0]\r\ninput = IN[1]\r\nratio = IN[2]\r\n#bttmOffset = IN[3]\r\n#leanThk = IN[4]\r\n#slopeExcav = IN[5]\r\n\r\n\r\n# Place your code below this line\r\n\r\ndef 프로텍션보드산출함수(input):\r\n\r\n    calcTargetNum = 1\r\n    #exca_solid = refFunc(input)[0]\r\n    fdn_solid = input.Geometry()[0]\r\n    _joinedPeds = [i for i in allPedsGeo if i.DoesIntersect(fdn_solid)]\r\n    srf_fdn_upper = [i for i in fdn_solid.Explode() if round(i.NormalAtParameter(0.5,0.5).Z) == 1][0]\r\n    srf_fdn_side = [i for i in fdn_solid.Explode() if round(i.NormalAtParameter(0.5,0.5).Z)==0]\r\n    joinedPeds = Solid.ByUnion(_joinedPeds)\r\n    _target1 = srf_fdn_upper.SubtractFrom(joinedPeds)[0]\r\n    target = srf_fdn_side + [_target1]\r\n\r\n    #return target\r\n    return (target, sum([i.Area for i in target])/calcTargetNum/1000000, \"M2\")\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = 프로텍션보드산출함수(input)\r\nOUT = (프로텍션보드산출함수,[\"Footing-Rectangular\"],[\"Protection Board\"],[\"M2\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5e5c4032098d41dc8d7ee5fe30719827",
      "Inputs": [
        {
          "Id": "fbb4f0de7fbe4d7f984ffbaefb6b0067",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "88af7df1eb614a73942ea70de407f33a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d90f7ea3bf74253b4131c9518ed8dee",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32e098b342824acaa523974ee43b27ee",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8338a7bc693442a9df478afdc51148c",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96ded40eaf874ea4a6a39191229903e1",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f460ed76a38497eb89634f08bfbc03b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector1 = FilteredElementCollector(doc)\r\ncollector2 = FilteredElementCollector(doc)\r\ncollector3 = FilteredElementCollector(doc)\r\ncollector4 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\n\r\nallFdns = collector1.OfCategory(BuiltInCategory.OST_StructuralFoundation).WhereElementIsNotElementType().ToElements()\r\nallCols = collector2.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsNotElementType().ToElements()\r\nallBeams = collector3.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsNotElementType().ToElements()\r\nallFloors = collector4.OfCategory(BuiltInCategory.OST_Floors).WhereElementIsNotElementType().ToElements()\r\nallIsoFdns = [i.ToDSType(False) for i in allFdns if \"Footing-\" in i.Name]\r\nallPeds = [i.ToDSType(False) for i in allCols if \"UG\" in i.Name]\r\nallPedsGeo = [i.Geometry()[0] for i in allPeds]\r\nallTGs = [i.ToDSType(False) for i in allBeams if \"TG\" in i.Name]\r\nallTGsGeo = [i.Geometry()[0] for i in allTGs]\r\nallSOGs = [i.ToDSType(False) for i in allFdns if \"SOG\" in i.Name and \"GS\" in i.Name]\r\nallSOGsGeo = [i.Geometry()[0] for i in allSOGs]\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nrefFunc = IN[0][0]\r\ninput = IN[1]\r\n잡석thk = IN[2]\r\nbttmOffset = IN[3]\r\n버림thk = IN[4]\r\n#slopeExcav = IN[5]\r\n\r\n\r\n# Place your code below this line\r\n\r\ndef 잡석다짐산출함수(input):\r\n    버림콘크리트산출함수 = refFunc\r\n    if \"Footing-Rectangular\" in input.Name:\r\n        calcTargetNum = 1\r\n        solid_lean = 버림콘크리트산출함수(input)[0]\r\n        srf_lean_blw = PolySurface.ByJoinedSurfaces([i for i in solid_lean.Explode() if round(i.NormalAtParameter(0.5,0.5).Z)==-1])\r\n    \r\n        vectorZ = srf_lean_blw.NormalAtParameter(0.5,0.5).Z\r\n        if vectorZ>0:\r\n            target = srf_lean_blw.Thicken(-잡석thk, False)\r\n        elif vectorZ<0:\r\n            target = srf_lean_blw.Thicken(잡석thk, False)\r\n    elif \"SOG\" in input.Name:\r\n        calcTargetNum = 1\r\n        solid_lean = 버림콘크리트산출함수(input)[0]\r\n        srf_lean_blw = [i for i in solid_lean.Explode() if i.NormalAtParameter(0.5,0.5).Z==-1]\r\n    \r\n        vectorZ = PolySurface.ByJoinedSurfaces(srf_lean_blw).NormalAtParameter(0.5,0.5).Z\r\n        if vectorZ>0:\r\n            target = Solid.ByUnion([i.Thicken(-잡석thk, False) for i in srf_lean_blw])\r\n        elif vectorZ<0:\r\n            target = Solid.ByUnion([i.Thicken(잡석thk, False) for i in srf_lean_blw])\r\n        \r\n#    return target\r\n    return (target, sum([i.Volume for i in [target]])/calcTargetNum/1000000000, \"M3\")\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = 잡석다짐산출함수(input)\r\nOUT = (잡석다짐산출함수,[\"Footing-Rectangular\",\"SOG\"],[\"Crushed Stone\"],[\"M3\"])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "6f3cb50f8ce14df3bbfb4d0ae8974fa1",
      "Inputs": [
        {
          "Id": "41e882d91fb342c2bdfbd4049bcff9f5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a605b2ad2cc4786acfe8c754a1fc18d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e26cf78ed6014b2fb7b8ada8a287c208",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb728dd423e84f43948a4fd20f5bde7f",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "185d5ed25eb3401485083fd8c4624e27",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4755216ad03c4d43945848c102435d0d",
          "Name": "IN[5]",
          "Description": "Input #5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5a34a2e3de54a2bbd2b90b0fc895284",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 100.0,
      "Id": "6f824d25a5c54f9bb873d8fd04743032",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "62ca226bbb674be199e17bc5cfe88953",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    }
  ],
  "Connectors": [
    {
      "Start": "63a7d72e4d4b41b095d0c91794de70a5",
      "End": "08f744b3aeac48569cfdaf77518bed90",
      "Id": "dc3cbb83fd7449c582e0508bf6c75710"
    },
    {
      "Start": "f072a4c986f545399a2ba5eae9e85415",
      "End": "628e9d59c1614c3cb7aac2ed9fae6499",
      "Id": "662f976891184e3c875f7d8a94b513d7"
    },
    {
      "Start": "65183489890b4adba1921989dcfb05d0",
      "End": "7cea9a03cc0242eba624a0c4e1255bb7",
      "Id": "7cb58e340634430d87f2e4a8585dcba4"
    },
    {
      "Start": "498212288ec543d7bb6d5cd1e2b55763",
      "End": "df22f5cc02e44f0c80e1799149771799",
      "Id": "e4b61cc519ab4e13a44b9771635a76ec"
    },
    {
      "Start": "4ff8646ef10d433e87b1f76e33475400",
      "End": "c4e3697bec4440c1b287ab75507f898c",
      "Id": "414bcb29335b43e3b55adce35e02353e"
    },
    {
      "Start": "704fd8558468419f83e82cafd6b4cf2c",
      "End": "31836f1fd2f94b27802c90838e5c6d2c",
      "Id": "6c3ec695812f497da984ab15904a91e0"
    },
    {
      "Start": "d65a4606dd0242cc89eae7e1d1f2e79b",
      "End": "67ea8e06f8034a538164d16069855992",
      "Id": "d723393fdbda4b029117ada6b63bc162"
    },
    {
      "Start": "bd0863fefa604fa883db3547395e1b8a",
      "End": "e153d5bee13c48419d7d11640f0b1650",
      "Id": "d3dc0e060d1e4aeaa44a16e100ce84a5"
    },
    {
      "Start": "2fbe99ac5810472aa136fc5208693fb3",
      "End": "8edc11591fcc46629a27d784772edf8c",
      "Id": "39d41af5022142dc825933b1aaa74154"
    },
    {
      "Start": "6710f8bdbc6e40bb8a824a24d1475356",
      "End": "300b1066f83a45b9adbd0ed6654d52f0",
      "Id": "94e3e75f811c4a0cbbca63d8249f5740"
    },
    {
      "Start": "2daf373c51234c11a1afb0d8ef7063d1",
      "End": "332e4deb583e44709740b9d1dd756199",
      "Id": "3c51230bd6f745bd9ce3fde76e9910c2"
    },
    {
      "Start": "02ed7d75640048919a48d3f3bf1dbae9",
      "End": "4d0c495dd7ff4681af589a2da234949e",
      "Id": "9840c30a7d9a434794796bbb15ef132f"
    },
    {
      "Start": "02ed7d75640048919a48d3f3bf1dbae9",
      "End": "c11c74f057e349bcac4b7f1010d8cfb6",
      "Id": "ba11854ca92c424cb515204231832999"
    },
    {
      "Start": "02ed7d75640048919a48d3f3bf1dbae9",
      "End": "88f824e39d4142cf9db78e6683213d3a",
      "Id": "645856162b054931b8e93b641704086e"
    },
    {
      "Start": "02ed7d75640048919a48d3f3bf1dbae9",
      "End": "4b880bb81e8e463c899b6af1855f45f2",
      "Id": "d7952812da4a4f85b80d38ac97a48a9e"
    },
    {
      "Start": "ce26ff79ea3d46f69206f4c7bd9a0358",
      "End": "b210d789b9bf4518a7a6ecbd688993aa",
      "Id": "cc3c9c67fde84804a85f5c2d044755a6"
    },
    {
      "Start": "e57e098dc1bb4547bd3680562fccfbef",
      "End": "2ccc4465cc9b434b8b938d7da6b0abf6",
      "Id": "424e2994e83b4d22b314a4bcee902a71"
    },
    {
      "Start": "582cc475988a4ac7ac10d435dbd3f59e",
      "End": "ac86e68183724fa2a90163b21d0576f1",
      "Id": "2e0539213991429a8023df6ddd673477"
    },
    {
      "Start": "2d6fdfceda654fe89f8186e1e8d7ab52",
      "End": "cf07661689fb45d6a7ae8e1d0edbaa78",
      "Id": "631d99aa848d46f380dcd0d8c57c7616"
    },
    {
      "Start": "3906aed83b0d4f8bb3854aa89a88c39d",
      "End": "5148a0c3e665494abd28bb9e1fb1f15f",
      "Id": "c2f16bf1572d460fa6e726684a48abf1"
    },
    {
      "Start": "80f97909980d4fb2b31884b72b7a114f",
      "End": "edefcdff635e4cb3b34f4bd79efbadaf",
      "Id": "4bc49517d9d7451c8fc28c616dce813e"
    },
    {
      "Start": "8e12840045be4e4a8e701c9be3250b76",
      "End": "7a226dd30d7946f7894cd37d439a0972",
      "Id": "cf2565420da1453695d34a19ec111de6"
    },
    {
      "Start": "f9f2dbcf8f504170948340168c99a0a7",
      "End": "d8355dc39d254a119ca3a011c77b9184",
      "Id": "9475394373ca4b9592e28e61e7630211"
    },
    {
      "Start": "f9f2dbcf8f504170948340168c99a0a7",
      "End": "b9f8eb49d4404c70af034ce708c444e9",
      "Id": "55017b01461a41faa128824c4430eef2"
    },
    {
      "Start": "7f2e688cce1d462d9a1dfd6a39c41d84",
      "End": "5112c5cb0fe140fe9ca943b75f14cd56",
      "Id": "b3e60d10bcfd4bb985c6cc0ab9e21607"
    },
    {
      "Start": "03a0cbb29fdf45b28ca375eee78ae568",
      "End": "bfe3f3583b4344f6a4110c74c3dd50b7",
      "Id": "da8aece1dce54c69bc1a1246537ed99a"
    },
    {
      "Start": "9dc76b1df183499786f1da66c477eba8",
      "End": "3d716257a85740df8be525929f0801ae",
      "Id": "281b90a605a34393a617b2b749b0b835"
    },
    {
      "Start": "2f19bcde69c84ae98ec065511eea43d0",
      "End": "4eada0f2f5af4cc5943f604c5b5ca234",
      "Id": "091253a66ae0479ab02f45554e14c4c9"
    },
    {
      "Start": "bba8558a74e24d8d831df33d3e8c0935",
      "End": "199a626c4d6142c19ae7590776ef947e",
      "Id": "e799604519484adb9ddfeb7af5c5436d"
    },
    {
      "Start": "097b20c7a0a84391905563d0fb262511",
      "End": "51e3b233161145baa663be05eefb165b",
      "Id": "a3456e1dca114a3f9523fb647c322e26"
    },
    {
      "Start": "e206c8582fc044da8a942f630c9cfa30",
      "End": "8d985638670243dcaa234f911311a380",
      "Id": "ea297eebe9b84fe39ace7046aa2ba375"
    },
    {
      "Start": "26b9a7afd25f459ea7375cd12610b0b8",
      "End": "45619a0d4635461a9b9aaba80d4c99ba",
      "Id": "a13f8b2ab72c4c97a972b255dad2a7dd"
    },
    {
      "Start": "ae06437b538d4f93be5e74d514c9aaae",
      "End": "ee8599748d1b409ab81fb5ff9e476edb",
      "Id": "1e9d303e2ea04a7ead447afc778bcd0c"
    },
    {
      "Start": "520077c980f64c3e979ce88083e76a29",
      "End": "9eb311a316b74541ae7209c2a8d94ade",
      "Id": "348ec6c4d4e64e0997c6bc546d56355b"
    },
    {
      "Start": "520077c980f64c3e979ce88083e76a29",
      "End": "367720334c7d4b6e8d381860ca1bb3d3",
      "Id": "abb9fc0253994e06afc7cf106c537ac3"
    },
    {
      "Start": "abe168accfae48c8bd84dd26d10e4077",
      "End": "8cb9cccc3aa74c9397920c47c018b7a1",
      "Id": "ec439c0c45ce46d8b74aa842ffdece56"
    },
    {
      "Start": "fdca8ef2e3b34b9c8c54ffaa2c1d565f",
      "End": "d52390925fac4164b2df0e6167e21d85",
      "Id": "4dd2a7ed1b934e57ac48d061a9968390"
    },
    {
      "Start": "2dd5e372e9c6418b857dbf32b92c5b3c",
      "End": "4598f8d4c5224734b44307c34cc42903",
      "Id": "d7867a8d857d497892959f11c1b96d5c"
    },
    {
      "Start": "2dd5e372e9c6418b857dbf32b92c5b3c",
      "End": "02d7dbb9d53845d0b3bdb28fd36701af",
      "Id": "8d2fa0d8e7c147a6bba5e0a52d47f8e4"
    },
    {
      "Start": "2dd5e372e9c6418b857dbf32b92c5b3c",
      "End": "7ba82c341f854218b96cfc7e866fbf91",
      "Id": "ca78f48eb92a4aa4bd10ec5a30083854"
    },
    {
      "Start": "2dd5e372e9c6418b857dbf32b92c5b3c",
      "End": "ab6e967096914d64a15d8823d7abe8b2",
      "Id": "488d00be58954f26875bdac8dbecbe5a"
    },
    {
      "Start": "2dd5e372e9c6418b857dbf32b92c5b3c",
      "End": "03fca15be0d040a7a67c8675a66ab51f",
      "Id": "a8d1181ffc0f4889b0ac513fb7bc5d9d"
    },
    {
      "Start": "eb27db0c4e454593b14984b1c55ef467",
      "End": "574c7b494d3049b8866f77246dc4a8c7",
      "Id": "6395e3e592134efab97f313a003ac14c"
    },
    {
      "Start": "c95104af746a4baa89804fce969e69df",
      "End": "b1f2e6facb434af18f0f3af8611abbef",
      "Id": "4b0838d076a146d591e53730a08ed11e"
    },
    {
      "Start": "3347fb44093e43a2bf5ca321b0d15590",
      "End": "618fa7ef51b74826a1052e3e7e30a917",
      "Id": "1724c24c954c4d3da23d656e237cfda3"
    },
    {
      "Start": "52e106ace052492a9ed92765765d1287",
      "End": "3e55f4e0c7cb40e88ffd05fe778488dc",
      "Id": "98a4b21abf554e3c8607d679a323ba07"
    },
    {
      "Start": "e269fce13b5d4d159ab6aaf963b06b5f",
      "End": "4033b74f30d1435d9bb299e3c500ce3c",
      "Id": "f6fe48d68dc541338736ca5715899dc8"
    },
    {
      "Start": "f2a9ec72a54742068a0e15f8f37718dd",
      "End": "c833d60d3ebd41498de74d29a0ce7b7d",
      "Id": "f4e5100e25a04b3085fafa213c66c8ae"
    },
    {
      "Start": "54a5aa082bb44417a3065b858707c7a5",
      "End": "68a721fcd6944047b3bf7b74de615b3e",
      "Id": "66149a9d8777419b914e102ef3fbc5f6"
    },
    {
      "Start": "865e031ace064d779d73f193184532f3",
      "End": "fba4f28d4fd64af1852fde8002439ab8",
      "Id": "7865de55417c4fb58850e0eeae2ff1db"
    },
    {
      "Start": "0418426ef2d04c288be030ec5a25cfab",
      "End": "1061c5e9b16a4a679789613a4d0aa20e",
      "Id": "77d3f3546c69402784cebbf10acb0440"
    },
    {
      "Start": "0418426ef2d04c288be030ec5a25cfab",
      "End": "836ad1a3c3c1475cbac45a23c9b8f616",
      "Id": "76c319b6440a4dde887938fca6793ca1"
    },
    {
      "Start": "752ce043db554bb186b23e6b4f67e766",
      "End": "fac9c76ea1784feb95ad9393d205fbc3",
      "Id": "f667b405d1f5489a9d8cfae52f542bc2"
    },
    {
      "Start": "706ae462ad994c67ad60659a97ae1c4b",
      "End": "12ec7fa57c944e06ae3d2c46e7e84a1c",
      "Id": "85359de733b3486d90b2ddeec3e59444"
    },
    {
      "Start": "af2194ae75604909b856abac2ed9e960",
      "End": "8d1613109372460487afd80f2897ed6a",
      "Id": "61c09809972f4acf989e01a41037e036"
    },
    {
      "Start": "080784591bb34a158a79fdcd1937d4ba",
      "End": "aeb999a5316a41de89d0326057c17a5f",
      "Id": "5d5e9ef6cccc4fb39c749c62769ee9e5"
    },
    {
      "Start": "ea97a5cc1b1e447197dfd8a82b3b2712",
      "End": "53c612b3a0d247e68bef0f1ccd07c139",
      "Id": "4f35da7e25ba45d2989f9a57a5b09cf2"
    },
    {
      "Start": "f81924c69b7147f8aa9c662029870a5a",
      "End": "750de69bf742490ba12bf0d097aa30a9",
      "Id": "5a80263544e040e8be370c1a8e059f7f"
    },
    {
      "Start": "89567a601cc646c7bb7df3be1f854fd6",
      "End": "f7aa06c790134ff68946d61adb1c585f",
      "Id": "d167dc42cd1e4448bc360462b4cffe70"
    },
    {
      "Start": "a9b9802ea6564949bcdc2a1b4cdf1eca",
      "End": "14e61947d7744c52a6dd68a210b044f2",
      "Id": "898547165d39475ebed7cdc689bbdea7"
    },
    {
      "Start": "35dd56976eb6436f90a6af0edfe82047",
      "End": "5ac42b2432e6471da1485ad737702813",
      "Id": "ca4324adef664593bc8365846e91c7d9"
    },
    {
      "Start": "162498c3b9954009bcf1704288003350",
      "End": "feafaa7d776a4f1cb10c8861f253f682",
      "Id": "65f0bbb9300741e09d719d1e81d616e4"
    },
    {
      "Start": "7896f98158454cad899568dc6b820681",
      "End": "c6b2de8830784b849fea6456d7495974",
      "Id": "6f148b6b52c14d76aa6047f6e346e761"
    },
    {
      "Start": "a9ad40c61ed24c99b7c8e9c65501e2c2",
      "End": "b227742561364a488c3eef73b217e437",
      "Id": "83ebc3481aac439db576dbe7f7e998c7"
    },
    {
      "Start": "a66a42e76192468f99f3ec46f7921a18",
      "End": "291664d26531451cac9ad8c200f713d8",
      "Id": "dbffe22ef8104f25b90c69656fb57315"
    },
    {
      "Start": "ab66698ded7a4df78758e488629c5dd8",
      "End": "5409255fd133445bb5aa0557383e76ec",
      "Id": "02652bc70aff471bb609a3ad5b6f3070"
    },
    {
      "Start": "ab66698ded7a4df78758e488629c5dd8",
      "End": "d6f7bd41bcea4ae599c54a1f90521e7f",
      "Id": "4b4d13571d06496bbe072a819c32ec8b"
    },
    {
      "Start": "1acbf6401a08456991981df9827acf40",
      "End": "14b7d55ceaf94d1eabc71f77f339baed",
      "Id": "1588dd620ede445f906223b9f9abdb64"
    },
    {
      "Start": "c7a11c13742b42319c72ab915acb4e14",
      "End": "c8a3a1888a1e49d393877341f2546ec3",
      "Id": "c7728d6658fb4c4d98be72a7a48e2827"
    },
    {
      "Start": "c7a11c13742b42319c72ab915acb4e14",
      "End": "fed9bcb62cd24a7fb936335f373430f4",
      "Id": "ab6c48ccef4a4c9baa115de2344bc274"
    },
    {
      "Start": "c7a11c13742b42319c72ab915acb4e14",
      "End": "50659a3fe945404dac40ff160d89af68",
      "Id": "465bf7bbb57b42a98002d4a4e4e924b0"
    },
    {
      "Start": "c7a11c13742b42319c72ab915acb4e14",
      "End": "3af7b11ee17645609df4e28ae0ed2c4b",
      "Id": "78c39dc37aa4468a85735cf5cf1a4039"
    },
    {
      "Start": "70672a638f814acb89bb95cf3412e15a",
      "End": "324f629c27844d3dad460a3bb5cf9431",
      "Id": "fd915e40dfc54a73bd3ac71b46ddeb65"
    },
    {
      "Start": "70672a638f814acb89bb95cf3412e15a",
      "End": "12682936a64d4846a881ce7014a7efb6",
      "Id": "222b3220719e4734aeeffa9a86ca829b"
    },
    {
      "Start": "70672a638f814acb89bb95cf3412e15a",
      "End": "1378167deec64a4280d525710bc081cf",
      "Id": "478338615b4a47fe9794bd84d262fa1b"
    },
    {
      "Start": "70672a638f814acb89bb95cf3412e15a",
      "End": "e49914561b0d4672ba120aa83f8e02d4",
      "Id": "ab97a59637e04aa2b323677196f10892"
    },
    {
      "Start": "f602149b16924568b7d8419c1e8add02",
      "End": "af6884371d6445f8b78cb097e0d5adcf",
      "Id": "475a3bf34f5041a9b0f8f550dabfa7e1"
    },
    {
      "Start": "f602149b16924568b7d8419c1e8add02",
      "End": "344e6f310e77474282cad341621d1fea",
      "Id": "9f40cb73c94b41c68deae4c8dff31e4d"
    },
    {
      "Start": "f602149b16924568b7d8419c1e8add02",
      "End": "5559660f7a6649b3841f9eef23c8602b",
      "Id": "4801f6d46b654adfbf9e60eb3002233f"
    },
    {
      "Start": "3b8d745137e0456f9d027d31bc69fdaf",
      "End": "ab1cfc2e830a484ca0d0612ac3caf825",
      "Id": "2645fb7056c34400a490194747128e24"
    },
    {
      "Start": "08f323c27d80408c88d68c0aa6a230bc",
      "End": "91c9ffc6983f4a33add604ac87a1318b",
      "Id": "131bce3d25964cd1b82ed949ae645b5e"
    },
    {
      "Start": "547329efacb441a2bbf66ca3ebe938f4",
      "End": "f888c5c6467640ef90b6487ab5478664",
      "Id": "6b1474fbedc54d3ba78862f0bd9d1e51"
    },
    {
      "Start": "38938187921f43e0b2e70dda71f73e69",
      "End": "86c9b747715f425893eb44b8600e7597",
      "Id": "20f1600ae23d4f31aef6bc365ea27600"
    },
    {
      "Start": "38938187921f43e0b2e70dda71f73e69",
      "End": "b6b5e75cc73d4acda33b84015b703181",
      "Id": "a1f3a1a86a9d44f3a7114e31d02e3e69"
    },
    {
      "Start": "21ac85fc9cc14f66b889375b37fc5358",
      "End": "37a7483cbc9a4487bd25c2b04f2f5ef6",
      "Id": "c201680eadcf467eb75d11094e75a9fb"
    },
    {
      "Start": "21ac85fc9cc14f66b889375b37fc5358",
      "End": "a8a9d403d5e940c39cd540f027bf5c30",
      "Id": "500e3f71df0040fbba5cf48cd7dda3de"
    },
    {
      "Start": "21ac85fc9cc14f66b889375b37fc5358",
      "End": "dafbd32f6779447c83f93d2effba51d4",
      "Id": "0006b92233194804880da060e4f08841"
    },
    {
      "Start": "21ac85fc9cc14f66b889375b37fc5358",
      "End": "b0b4648e27a043b99e7efa9074047ae3",
      "Id": "aa1ede12c9e04f328b498cbf818307fc"
    },
    {
      "Start": "21ac85fc9cc14f66b889375b37fc5358",
      "End": "e1ab8a25d9544916bd0afccbf511fede",
      "Id": "d2a59dd8e93243069c03ea4a6c71eef6"
    },
    {
      "Start": "0f56d685ccbb4d3a9e0c72f01ac521e5",
      "End": "f2aa2735415546789c8edd83fccabe66",
      "Id": "fb3c25545e0442678f1da2e90c752c39"
    },
    {
      "Start": "0f56d685ccbb4d3a9e0c72f01ac521e5",
      "End": "13c1145fcf7a4732bf7fd0ee9a75be9d",
      "Id": "c03d4e6dc4d24e21aa043864e9b7fb40"
    },
    {
      "Start": "0f56d685ccbb4d3a9e0c72f01ac521e5",
      "End": "010badb88e9041f3b0344064dc34224f",
      "Id": "55639ccb996942e8a5fb10d5d648844b"
    },
    {
      "Start": "0f56d685ccbb4d3a9e0c72f01ac521e5",
      "End": "b4d931d0da544c49b5928987b1d1c270",
      "Id": "54483aa9fb484757a482eadee08145a1"
    },
    {
      "Start": "dbf5d3fd3e2c479092dc272fdb15c3f5",
      "End": "d47cc73865e34f2d9e18dbdb525f86a6",
      "Id": "f4d1ad0f935b471b972fc0a53c6eae34"
    },
    {
      "Start": "ce177b02590f4038a852b1f40541ac5a",
      "End": "8c5e665ea7334b6eb806fba9d99043ed",
      "Id": "03f22f1578b14ddfa8a41bf0a6e7ccc5"
    },
    {
      "Start": "ce177b02590f4038a852b1f40541ac5a",
      "End": "a3660c9198c4412e8bc56a3052471394",
      "Id": "bbd9cd436e6b4ea1b442eee18a27a0c0"
    },
    {
      "Start": "12310576af97432ab19c9fcdceb4f672",
      "End": "72870a5403b84c03aa7194838cf91bd1",
      "Id": "27aa27ccca8849b3b35ff83b40b994c8"
    },
    {
      "Start": "15e043bba857412094d846d6d09e44f6",
      "End": "778bb1af1bcc4741906fd253307aeb32",
      "Id": "bccd3afd35c5459abfb788e75d7bf43b"
    },
    {
      "Start": "15e043bba857412094d846d6d09e44f6",
      "End": "5c2765348ea8457aaac16e9c5bd973ba",
      "Id": "9951bc39b68648f0acb5da0323b50957"
    },
    {
      "Start": "d70a892195074514b6347c457c8e2667",
      "End": "ba53076489ae4f0bbf5ee1af914df6df",
      "Id": "dcdb89a2adfe405bbf61482a36343f28"
    },
    {
      "Start": "369f54a2cc2e44b3acbc2543670877ae",
      "End": "a1b8ddf1e1544d5bbc03b6f3bb330043",
      "Id": "6852fcbee5824e6388c83ee02537dadd"
    },
    {
      "Start": "19c7059bf98645de95e17dbab10e6c44",
      "End": "ce6798b9e4c64433a430c17388dbb229",
      "Id": "bc47a2a783a445e3a4f08c5a28fa8784"
    },
    {
      "Start": "02a17a54132c488886c8679b6f70fa42",
      "End": "110a6374494b405daf04dbc4034c3c4a",
      "Id": "da2a04169ffe47b4945c5453d04ce392"
    },
    {
      "Start": "f746a68907ef4061b517ee652122b3e4",
      "End": "ac2df5aaf04d49a5916f971587afc433",
      "Id": "e93ccb726a0b4940be19e671fe7ec410"
    },
    {
      "Start": "7d37ad633b81440395b079525cb7a4e2",
      "End": "d0dbeb4ff0df4c6d992aab2ed0094e5a",
      "Id": "872574a0b3a940eaba118e40838a6df5"
    },
    {
      "Start": "7d37ad633b81440395b079525cb7a4e2",
      "End": "0c8c1ddac5554a9bb5ecc18fdf787db3",
      "Id": "b9507d4fdefe4bc798d0214ff08932c2"
    },
    {
      "Start": "0469ddcf2ffd4398b80b6dc653c34dc2",
      "End": "31e3e115ef354234aab6f9a2b2e6cb63",
      "Id": "3b399d984761466aa8687e6dbd49c666"
    },
    {
      "Start": "0d14d7182f684a399b8f9b0f0a1634a2",
      "End": "ca23066dea3a4d2dbce92299bbcda04a",
      "Id": "34438b9c75734f2f94fc69a97d970e77"
    },
    {
      "Start": "febe3ceb1ecb42b8a056a04b219d7cd9",
      "End": "0d87c70095a0458db6231d10be20a0c9",
      "Id": "5e62ab49cc4d439aafd8492e2a469fcd"
    },
    {
      "Start": "641e7ca6fe6746acbd3703795e2b07f3",
      "End": "7658b260106e4ec8a0163e3bcb16d4e0",
      "Id": "c4c8838389784add903e0f67f86b7530"
    },
    {
      "Start": "641e7ca6fe6746acbd3703795e2b07f3",
      "End": "4b714993ece647e1996aff557df9bc1f",
      "Id": "1d0c735e3765401aae9f82f777cdd55a"
    },
    {
      "Start": "b18f500ff9274c09adafa503d8c916ac",
      "End": "9c58ba7c5c7a4c48865e70477e93fcac",
      "Id": "7d90d4e0af9341398019deb79162f948"
    },
    {
      "Start": "b18f500ff9274c09adafa503d8c916ac",
      "End": "a47d36eef6214aa395a208218f64564b",
      "Id": "06f8a91418c54381ac64a3b1c136f163"
    },
    {
      "Start": "b18f500ff9274c09adafa503d8c916ac",
      "End": "41e882d91fb342c2bdfbd4049bcff9f5",
      "Id": "cd55ef9922394c50b64aad4f62349ae8"
    },
    {
      "Start": "ad1cadfdcfdf46baa915df8baa684e5c",
      "End": "9a8a774a298c4155a7b8cfe4e42fa655",
      "Id": "2ce5823f321a42a683d6a1ae10ed205a"
    },
    {
      "Start": "1c40f0128d6948e0a935d7b2559348c7",
      "End": "7bc2bfcea21b425083488f68cf472a24",
      "Id": "0a9c20ae40e94a15affc2962e87505ba"
    },
    {
      "Start": "b1b1a148544c4471b59866a6aa5d54d0",
      "End": "f4ff71fb4eda4b0a94da6314fdbf63fe",
      "Id": "5b0d18da17124b81abc54cc7c210b1f1"
    },
    {
      "Start": "a34d251a0c754635bce61f3216f012b0",
      "End": "f4211058a2d54ead85f85a8720430b5b",
      "Id": "60dc956ca7bf461d8bac1340c4207cbd"
    },
    {
      "Start": "6592055d001c4307924c0de8d786c5a0",
      "End": "29034096a7044597b35266452eca95f1",
      "Id": "b036cf7aad174713af1d1bdf9ce1c015"
    },
    {
      "Start": "417721d78daa4c4786954c6936373b07",
      "End": "8375ab1b13fc4e2ea5a12ac6f6cc2e31",
      "Id": "3c0841d3a23a4dfb9f382d4deac49b14"
    },
    {
      "Start": "7bbcdd88d1fb484a8fbf8f2b7d04c4d1",
      "End": "f5f878360cef4544aea29ab438b7e2c0",
      "Id": "1f8ab3821f584e5386a179a1ff11abe8"
    },
    {
      "Start": "25931e7389aa4518b5be52e8fa1daa23",
      "End": "02c470a26b544efc83cc53aae709342b",
      "Id": "a715a21cfbf84285a51d72174e25a4af"
    },
    {
      "Start": "d25d8bd622654d648eb9b8f939262170",
      "End": "1e98d3f8f6c64f5393c00275cba0ed2f",
      "Id": "08efc746acab417a8882bbb4692e8601"
    },
    {
      "Start": "f93fbd0c6a0e44028263056046dabc57",
      "End": "1f0c7590d31249d4b05d336847f2cd62",
      "Id": "d6c316a7ce77407b9aaf62e9642c2817"
    },
    {
      "Start": "dcb3585c2bae429f938eed929407f40b",
      "End": "3c27071d267d4b25a11eb86bbaa36c96",
      "Id": "be295b99b9ff4c46990aab5d0afb2257"
    },
    {
      "Start": "dcb3585c2bae429f938eed929407f40b",
      "End": "0f28c92a243641df811754a492a0e5c6",
      "Id": "c5f2d89f92324d959a123cf203b0d0c0"
    },
    {
      "Start": "c58a06344f5f4dc282dffaeed352a6aa",
      "End": "f841eebfe0e741cdb486f5ea85ae3de9",
      "Id": "b5de64d9eb6b4756827d62b014c080c0"
    },
    {
      "Start": "2606c681139c40fa93c325ddbd20fa2c",
      "End": "f160e32cb4c6447a9ee1608d76085043",
      "Id": "59db15204ed24fefa4d6a737de4854a4"
    },
    {
      "Start": "50d1c095908e492ea7e8496b627f401d",
      "End": "1474895c3e034c7a91f213d2fd6c8530",
      "Id": "7c84f05af2ae43b9ae24984afc8ab632"
    },
    {
      "Start": "50d1c095908e492ea7e8496b627f401d",
      "End": "71d6c49711a449a0a06ccb77c574ea5b",
      "Id": "613a3806b4c741208d022a9c7f40987d"
    },
    {
      "Start": "a3ab0ea2c9ac48129ebcf1dfd10007c1",
      "End": "5189d4a4814a408783734809c2f9f853",
      "Id": "3b32beaf07d946849403b2026d33a65e"
    },
    {
      "Start": "d52dae658a4c491eba3211fa160725de",
      "End": "75b5acbf293f4d5fba86f4c339c95aa2",
      "Id": "91591b9258f843f587eefd23a4396a1f"
    },
    {
      "Start": "94adada4de12438496197e6d368d1e1b",
      "End": "ebdc4fc0bdf748829b2865549a462d72",
      "Id": "bb06db477c684d6ea596a46c8b622794"
    },
    {
      "Start": "59768c7bb6e24a8db7c0d692c9259dd7",
      "End": "c69e52d9d2fa42d39b5eb7e1aadaa210",
      "Id": "166258bdf1a445078d26711d058ac670"
    },
    {
      "Start": "aa3954722395415c9218359a690b7752",
      "End": "84596ba00f7e41a4b2d31a79d92e1e38",
      "Id": "1217583208da429a9aa8d09fcd8bdd87"
    },
    {
      "Start": "aa3954722395415c9218359a690b7752",
      "End": "de6a3b146bcc45e5aea5ea344db9a867",
      "Id": "ba871500293d4804a17d05f953d4e8c1"
    },
    {
      "Start": "0ab38605a7f74b0cb25456fac2373326",
      "End": "05137d06f7694baf83eef851327046f2",
      "Id": "f1d72e3466cb4184881117903457da80"
    },
    {
      "Start": "a2b9b5eb16d3420182313905927f071f",
      "End": "222046a55bbf4892b62fd1eb04b7b9cd",
      "Id": "7782854ed2d44203b9f3d3f25b34eb9a"
    },
    {
      "Start": "9fa1a3dab60040bdbaa027deb4d98edb",
      "End": "eff4a2b2dfb8427f83a622c84a278e53",
      "Id": "a12f1a606118443c9293b23d19daabcf"
    },
    {
      "Start": "3c16c5709fab4eb199cd8d4a774a9b73",
      "End": "1793b9e503064505a1a214d9831f8bc5",
      "Id": "5e6764fbfa334fa48d9febfe7c90ddbf"
    },
    {
      "Start": "f9a809703c574f35915508c74f29a0f9",
      "End": "584f13b0e54b4921873e7cd896d278c2",
      "Id": "ac09a8b69c054abf815a9e48bd4e3ed8"
    },
    {
      "Start": "7da9b7efe56a411e845bacdf9f561748",
      "End": "d9c42f336bf84a519f776271fa4e5968",
      "Id": "b0d3dd1377e74496aace7cd24c98aa9b"
    },
    {
      "Start": "4f2a72e3c56440639d3b3c8b9e862b13",
      "End": "6ab07f2837d64d428194d17c1130bb0d",
      "Id": "17fd2250327047ce83a844e6ae055071"
    },
    {
      "Start": "16a90711def345709b25cc8b3cd83284",
      "End": "bac396d332a54b48a43b5f00bfe4df9a",
      "Id": "f3dec1c1be3640c9a7d1b0be31b20132"
    },
    {
      "Start": "72d2c29013a34ee892edfc02698e9051",
      "End": "903f39e7805f4383b5a8404cd4e919f4",
      "Id": "110c93f027fd4006a36c26048f1fbbd4"
    },
    {
      "Start": "6f460ed76a38497eb89634f08bfbc03b",
      "End": "cc59390b03d14e57bd597406a616e704",
      "Id": "30a48ce9b5db41bfb61caa6c7711f266"
    },
    {
      "Start": "b5a34a2e3de54a2bbd2b90b0fc895284",
      "End": "7cca97c89e354fe18d92d51ee6bd4c18",
      "Id": "3e42eca6324c40a39ea3f6c0e28eaa65"
    },
    {
      "Start": "62ca226bbb674be199e17bc5cfe88953",
      "End": "e26cf78ed6014b2fb7b8ada8a287c208",
      "Id": "e0816621a78146ae9bc5cffdbd8a3dbc"
    }
  ],
  "Dependencies": [
    "47553dc4-05c1-4a5f-81c2-46ddd567caf8"
  ],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -8337.1826171875,
      "EyeY": 12698.28125,
      "EyeZ": -28814.08203125,
      "LookX": 15444.6357421875,
      "LookY": -20017.560546875,
      "LookZ": 14498.134765625,
      "UpX": 0.37551194429397583,
      "UpY": 0.85716646909713745,
      "UpZ": 0.35250011086463928
    },
    "NodeViews": [
      {
        "ShowGeometry": false,
        "Name": "List.Join",
        "Id": "2e3628b0b3014f19b06a0b1376eb9d88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 31345.423627386779,
        "Y": 8184.49786106557
      },
      {
        "ShowGeometry": false,
        "Name": "Dictionary.ValueAtKey",
        "Id": "0cd00cbcddd84a05a79cd37e23d9c879",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 36806.575551140784,
        "Y": 14406.998004258518
      },
      {
        "ShowGeometry": false,
        "Name": "Dictionary.ValueAtKey",
        "Id": "d37c401559224779b53f3a8fbc4d2f61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 36806.575551140784,
        "Y": 14800.998004258519
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "21cb082dd28a4eb6947faf601a05c754",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 36465.575551140784,
        "Y": 14437.211337591847
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "1e76b1779c074f988d28da9933fdf5f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 36465.575551140784,
        "Y": 14831.211337591851
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "adc5a0f82e8146fc8c1ad31c45081356",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 36465.575551140784,
        "Y": 15224.211337591851
      },
      {
        "ShowGeometry": false,
        "Name": "Dictionary.ValueAtKey",
        "Id": "25cd006ef8704d07a815fddbf2ea2b47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 36806.575551140784,
        "Y": 15193.998004258519
      },
      {
        "ShowGeometry": false,
        "Name": "Dictionary.ValueAtKey",
        "Id": "04d6e67324f5423f8c664e842e1f357e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 36806.575551140784,
        "Y": 14013.998004258518
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "09368c32f21140f1bc63b1b97d26f3c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 36465.575551140784,
        "Y": 14044.211337591847
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "8064fea313ec41b69c64632779e8ead9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 37117.575551140784,
        "Y": 14013.998004258518
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "d2447b7bd403443ba5a33aabee5ced58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 37117.575551140784,
        "Y": 14406.998004258518
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "d5405a9c83714b8985015a34ad26f010",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 36465.575551140784,
        "Y": 14608.211337591851
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "da753820d850479e9452e31c4437370e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 37117.575551140784,
        "Y": 14800.998004258519
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "a20943ce90884e379860cf09c379e933",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 37117.575551140784,
        "Y": 15193.998004258519
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "6483747225a642cf92863ae9263206ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 37507.575551140784,
        "Y": 14402.998004258518
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "4dbdcbc518dd4b76b850fa49bdf7101b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 37507.575551140784,
        "Y": 14536.998004258519
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "b2d72dae5d82452f96add689796db52c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 37507.575551140784,
        "Y": 14670.998004258519
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "3944be19c0bc4d4a98aa9037524d6216",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 37507.575551140784,
        "Y": 14804.998004258519
      },
      {
        "ShowGeometry": false,
        "Name": "List Create",
        "Id": "2abaf13a6a8a4d5fb9d03ff739150e05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 37792.575551140784,
        "Y": 14564.998004258519
      },
      {
        "ShowGeometry": false,
        "Name": "List.Transpose",
        "Id": "d1e33ec19c2e4346ab523a01b0d8e5d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 38012.575551140784,
        "Y": 14564.998004258519
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "6b66f0251a614e75896ee514c87184a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 31550.488954927379,
        "Y": 8468.439353612921
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "7a0534ea2ecf463d900f74cc8ceb4a40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 31550.488954927379,
        "Y": 8577.439353612921
      },
      {
        "ShowGeometry": false,
        "Name": "Dictionary.ValueAtKey",
        "Id": "07790711fba741db84ea31e8902164b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 31868.488954927379,
        "Y": 8502.2260202795187
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "aa9434df4e8e435aa11884b4ac304a7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 32179.488954927379,
        "Y": 8502.2260202795187
      },
      {
        "ShowGeometry": false,
        "Name": "List.Count",
        "Id": "110bad41287c41a39b9a748ed765b996",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 32569.488954927379,
        "Y": 8341.2260202795187
      },
      {
        "ShowGeometry": false,
        "Name": "List.Count",
        "Id": "00e132d3b47b435f86f3f10f6838d691",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 32569.488954927379,
        "Y": 8449.2260202795187
      },
      {
        "ShowGeometry": false,
        "Name": "==",
        "Id": "85fea91e648c4577bb4bb8d888621b95",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 32840.488954927379,
        "Y": 8382.2260202795187
      },
      {
        "ShowGeometry": false,
        "Name": "OrganizeFuncValuesAndWorkMasterAsDictionary",
        "Id": "863add32d1094adbaa94574c9b47bae3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 32840.488954927379,
        "Y": 8516.2260202795187
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "660284d3b2e24a7fa3f36ff54a01b8d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 32840.488954927379,
        "Y": 8650.2260202795187
      },
      {
        "ShowGeometry": false,
        "Name": "If",
        "Id": "dfd45841aaf540909c01bbbd6ee4e6be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 33265.488954927379,
        "Y": 8490.2260202795187
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "0d755c2449734237ac9df402a33c9159",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 32179.488954927379,
        "Y": 8392.939353612921
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "f0429daa47654e63b8ae13e043be1e57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17792.189260170075,
        "Y": 7915.70940049208
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2ca5c032c6724b8e8c87e1fa8fc74f92",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16342.523295401219,
        "Y": 7566.0400698617605
      },
      {
        "ShowGeometry": true,
        "Name": "Set Up All Element Inform as Dictionary",
        "Id": "e0427ef06d504db89b14c0fecc5c717d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10855.559922843906,
        "Y": 8528.8040314959635
      },
      {
        "ShowGeometry": true,
        "Name": "Select Target Family Element And Connected WorkMasters",
        "Id": "c654078e88ac444b8e1521817eb5e06b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16458.449111365197,
        "Y": 7464.2255395499606
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "93a289d88c594481b09c6b7a61e0f4e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8594.0533136886388,
        "Y": 5061.0439208179005
      },
      {
        "ShowGeometry": true,
        "Name": "List.UniqueItems",
        "Id": "8408946830dc490fb0fe2a6e540327f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8341.0533136886388,
        "Y": 5061.0439208179005
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "cf06bd1ddbc0480fa5a43a046620a5b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7764.0533136886388,
        "Y": 5091.2572541511972
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ValueAtKey",
        "Id": "d43b5f272f654f85a4706148687c33b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8030.0533136886388,
        "Y": 5061.0439208179005
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "7aa19e8980394c5b96f78af105f21a51",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8597.2413287731,
        "Y": 4783.5695902711986
      },
      {
        "ShowGeometry": true,
        "Name": "List.UniqueItems",
        "Id": "3f6a54a220ac47a3857738fe1cbb7a2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8344.2413287731,
        "Y": 4783.5695902711986
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e920760cb92f4811beaaace16b56bead",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7775.2413287731,
        "Y": 4813.7829236046009
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.ValueAtKey",
        "Id": "fa7c58c4387f4d76b48726887b6d3863",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8033.2413287731,
        "Y": 4783.5695902711986
      },
      {
        "ShowGeometry": true,
        "Name": "ExcelDataManagerNode",
        "Id": "09731e78949f4760b876c8a956469a3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9289.7237899202137,
        "Y": 8721.9405125390222
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5000a2bea8e64651ab45f16fae6e4191",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8861.5494118274437,
        "Y": 8740.7237293018225
      },
      {
        "ShowGeometry": false,
        "Name": "All Elements of Category",
        "Id": "d6a04655d8504043b972c31b54888ec5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8516.5723010062029,
        "Y": 8417.7646235418215
      },
      {
        "ShowGeometry": false,
        "Name": "Categories",
        "Id": "9bae5aaf9bf34b83b811b6478f215564",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8225.8666330264932,
        "Y": 8416.51285026102
      },
      {
        "ShowGeometry": true,
        "Name": "Sheet Name",
        "Id": "2b55deec8d4646b896bbdbbbab022bda",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8240.4841694636834,
        "Y": 8942.6556971682221
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "7b4f8f19efab4a2fa529e2bcd25c4024",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7956.3729840336728,
        "Y": 8839.3759612667236
      },
      {
        "ShowGeometry": true,
        "Name": "Github_Python@Import Excel(By OpenpyXl)",
        "Id": "b4336991a32b46e1bfa26f2d00f265a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8448.8191697436832,
        "Y": 8814.0937775557213
      },
      {
        "ShowGeometry": true,
        "Name": "String From Web",
        "Id": "cfb9f670cc884514938ce524046c0014",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8209.8701136268228,
        "Y": 8724.6620140501218
      },
      {
        "ShowGeometry": true,
        "Name": "List.RemoveItemAtIndex",
        "Id": "f8093c09dc83495d92ec3431b7972149",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8766.0792036069688,
        "Y": 8398.84525587735
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c5697d71912d4687886cd78a20f564d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8625.1804406569026,
        "Y": 8281.1401002313578
      },
      {
        "ShowGeometry": true,
        "Name": "List.UniqueItems",
        "Id": "a83a98f993dd4a04a274e36e0da9fab0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12273.436843409747,
        "Y": 8566.8243245089325
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "65c844a6fc4342d0a5b889df13a34c32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11866.445381274871,
        "Y": 8605.5505348414517
      },
      {
        "ShowGeometry": true,
        "Name": "Assemble Function",
        "Id": "a07a431e650a4fbabfce4ff91181ed2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 7506.3329988234818,
        "Y": 7235.9986227158533
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7078853e87ed4178bd2130b54ece77ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6949.6222133072279,
        "Y": 7097.8692852765435
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "85c1b9ff7bbf40628420f9d90fa51ac1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6930.3810624784546,
        "Y": 7239.1402211237673
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b504fe1f4ea4470ba24bc7d6a645d288",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7036.2076477693863,
        "Y": 7353.5217793104475
      },
      {
        "ShowGeometry": true,
        "Name": "Element.ElementType",
        "Id": "ec3bb8e3284a48a486cd398e551b8ccf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9269.298394213045,
        "Y": 9150.2537550111047
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Parameters",
        "Id": "7b3c47c7dd3c430ea4c9354e259f368d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9835.9108112954236,
        "Y": 9399.4483979883589
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "31e56155a276465bb4776d9c20a3d7b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9843.5303604675573,
        "Y": 8905.9948631415427
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b0df287a19c74f038d27e621a917e75c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9598.1036221127251,
        "Y": 8889.5225309654979
      },
      {
        "ShowGeometry": true,
        "Name": "터파기산출함수()",
        "Id": "1d9d60df12cd4f618a5dee4110b24a50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12005.8972253396,
        "Y": 9721.9387357116
      },
      {
        "ShowGeometry": false,
        "Name": "온통 터파기 여부",
        "Id": "83028b9605a84074beb37f8f1bf17e9f",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11668.903567417237,
        "Y": 9997.9376129431621
      },
      {
        "ShowGeometry": false,
        "Name": "터파기 하부 Offset",
        "Id": "b64b777db7ac47a0b5124051bd0b5ec0",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11666.897225339577,
        "Y": 9764.9387357116
      },
      {
        "ShowGeometry": false,
        "Name": "경사 비율 입력(1:X) for IsoFDN",
        "Id": "d8a17f85cdba49c1a9d73f285af7b3c4",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11645.437176295945,
        "Y": 9846.2034015386216
      },
      {
        "ShowGeometry": true,
        "Name": "거푸집산출함수()",
        "Id": "7da9ee320a0946e793f99ac33d6b3f66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12005.317013449168,
        "Y": 9588.07790239699
      },
      {
        "ShowGeometry": true,
        "Name": "funcSets",
        "Id": "e0bad9b42b74405485f574c8e6ccae2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13028.21881023742,
        "Y": 10097.493890329275
      },
      {
        "ShowGeometry": true,
        "Name": "createElemDS",
        "Id": "67f330b11f0741f989c850c8112de991",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11598.006198407902,
        "Y": 9074.9735427656215
      },
      {
        "ShowGeometry": false,
        "Name": "버림thk",
        "Id": "92f37275fb2246fdb1e268614812d2c2",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11676.570138027222,
        "Y": 10646.154267973059
      },
      {
        "ShowGeometry": false,
        "Name": "getTargetAndValue",
        "Id": "66979d5642e3486f9b28e6440bf1bb52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13669.348600898642,
        "Y": 9810.0190993749366
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "a4a606cb1846452abefe5992339ded29",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14390.275899324086,
        "Y": 8850.5311267104316
      },
      {
        "ShowGeometry": true,
        "Name": "콘크리트물량산출함수()",
        "Id": "7773a863923d4ce7a7b10ec4c1940acf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12003.3843969012,
        "Y": 9454.54655944232
      },
      {
        "ShowGeometry": true,
        "Name": "되메우기산출함수()",
        "Id": "92890922703c48a2b2b55e2c2308d608",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12006.126352463372,
        "Y": 9976.9434945146841
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e45b744b672c4904a0c8dede781382e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9657.7532294348475,
        "Y": 10443.042814978864
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "00b5c3ab9e324c7f84a2a39d4ac0a4c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11511.582542369681,
        "Y": 11530.621001491258
      },
      {
        "ShowGeometry": true,
        "Name": "잔토처리산출함수()",
        "Id": "b9bd646266bf4926b2cea766da608168",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12005.519658101406,
        "Y": 10220.532925245814
      },
      {
        "ShowGeometry": false,
        "Name": "토량 환산 계수",
        "Id": "3e63f6d3271c4093bf7d9acdd5521fbb",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11653.351531652595,
        "Y": 10411.594208081995
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "dfeb934f6e49445ebd157c0d5a84df3a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14425.430139763703,
        "Y": 8248.416952280837
      },
      {
        "ShowGeometry": true,
        "Name": "기층물량산출함수()",
        "Id": "d4b74dd803784e07b2fbe47fc34a7ac8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12004.752043787354,
        "Y": 10483.232233902865
      },
      {
        "ShowGeometry": false,
        "Name": "기층 Thk",
        "Id": "7b633f88c0384a66aaae6857bc5c0759",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11684.596618344762,
        "Y": 10559.813735013962
      },
      {
        "ShowGeometry": false,
        "Name": "산출타겟 검증",
        "Id": "cbc21043d4424609987e8b8455a60cd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15893.76833643793,
        "Y": 10319.813349109361
      },
      {
        "ShowGeometry": false,
        "Name": "공종목록",
        "Id": "bf67dc0d620e4012b330832e28fe5bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14749.76833643793,
        "Y": 10261.813349109361
      },
      {
        "ShowGeometry": false,
        "Name": "Integer Slider",
        "Id": "4db23de1c1944ce9b61374d079b8df8f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14973.76833643793,
        "Y": 10555.386682442695
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "3575c8e25de14f748f0368e4adf3e091",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15372.76833643793,
        "Y": 10404.026682442694
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "691606d10c8e49c79c7daaca2a0089e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15583.76833643793,
        "Y": 10399.813349109361
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "02d863e5a47e48f0bbd59b2cf455c1b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14505.76833643793,
        "Y": 10308.026682442694
      },
      {
        "ShowGeometry": true,
        "Name": "버림콘크리트산출함수()",
        "Id": "9ed2f65360354b408d1cef254e139742",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11984.332261947675,
        "Y": 10726.080402822707
      },
      {
        "ShowGeometry": false,
        "Name": "버림offset",
        "Id": "a7c2158f540043e4bbc3d79f6da93483",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11667.330641851799,
        "Y": 10741.874450140083
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "c5b0f8fdc487427f8a45c6391b91f53c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10226.029156741562,
        "Y": 10270.872760919676
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0ea86fd7b9d84114a05fe7f8599c2b1b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9857.3526462862974,
        "Y": 10394.71543786781
      },
      {
        "ShowGeometry": false,
        "Name": "Element.Geometry",
        "Id": "c6e4b0b7571e469d838654917812332f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10378.975761590566,
        "Y": 10077.611948200372
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "d9e0dd32b6bd426ea39c366e4bcdfbd5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10619.519819780302,
        "Y": 10074.841765176876
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "aef4051d1ffb46b8a4dfd6ec1316a9f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14975.966092546738,
        "Y": 10281.593154088852
      },
      {
        "ShowGeometry": false,
        "Name": "Color Palette",
        "Id": "fba1ef43a7424e2a8075f88e60d23821",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15583.76833643793,
        "Y": 10291.813349109361
      },
      {
        "ShowGeometry": true,
        "Name": "산출타겟 검증",
        "Id": "b66af7f0ba0b48f68207f8acc4760bbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15895.975646077273,
        "Y": 11100.770578675181
      },
      {
        "ShowGeometry": false,
        "Name": "공종목록",
        "Id": "d544bdd80c194a728a1de4392ab60ff5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14751.975646077273,
        "Y": 11042.770578675181
      },
      {
        "ShowGeometry": false,
        "Name": "Integer Slider",
        "Id": "e601413e0c14491ebbd46a25e43eae45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14975.975646077273,
        "Y": 11336.343912008531
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "2ac3f49bbb5e412da04c9fac85e3285b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15374.975646077273,
        "Y": 11184.983912008511
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "38b0165dba9643159a5bece79eca625c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15585.975646077273,
        "Y": 11180.770578675181
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "44950d255a9c4c0da127467d353a5fbf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14507.975646077273,
        "Y": 11088.983912008511
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "f846143c3b084de2adf674a3e407390a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14975.975646077273,
        "Y": 11042.770578675181
      },
      {
        "ShowGeometry": false,
        "Name": "Color Palette",
        "Id": "21218174c63d49e083bb411a48b90a7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15585.975646077273,
        "Y": 11072.770578675181
      },
      {
        "ShowGeometry": true,
        "Name": "PE시트산출함수()",
        "Id": "70a7c7e682cc4c33936d81a09852cdc0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12023.165176790148,
        "Y": 10981.919359890469
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "344c3f70f1114cfcbf9e36fa8ddfbc2b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13315.803016510919,
        "Y": 11373.07272239245
      },
      {
        "ShowGeometry": true,
        "Name": "산출타겟 검증",
        "Id": "44c3a88d622340c1b34b94186773982b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15891.130938401022,
        "Y": 11843.669901570618
      },
      {
        "ShowGeometry": false,
        "Name": "공종목록",
        "Id": "71a89f09821048f39d02598b104f7e66",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14747.130938401022,
        "Y": 11785.669901570618
      },
      {
        "ShowGeometry": false,
        "Name": "Integer Slider",
        "Id": "d60b29b1949747f9bb769e72394abb30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14971.130938401022,
        "Y": 12079.243234904017
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "32a5d4722b93420ebcbe34bf90901699",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15370.130938401022,
        "Y": 11927.883234903918
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "581effdb309349e9a6ad2a27c106afc7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15581.130938401022,
        "Y": 11923.669901570618
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "ab6ae0fa7ae74edb9554ba7a5b44ec56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14503.130938401022,
        "Y": 11831.883234903918
      },
      {
        "ShowGeometry": false,
        "Name": "Watch",
        "Id": "cee9c9d0f0234bef8901994920265b67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14971.130938401022,
        "Y": 11785.669901570618
      },
      {
        "ShowGeometry": false,
        "Name": "Color Palette",
        "Id": "536eaff6281d4926b0d4c6d9c24f17fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15581.130938401022,
        "Y": 11815.669901570618
      },
      {
        "ShowGeometry": false,
        "Name": "Element.Geometry",
        "Id": "98a297e499ac4778b00656a71f8d7481",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11616.399059874879,
        "Y": 11158.106499646412
      },
      {
        "ShowGeometry": true,
        "Name": "터파기산출함수()_SOG",
        "Id": "627a08ffd47e44d9963dda20d1360637",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12308.866016692429,
        "Y": 9723.36224116346
      },
      {
        "ShowGeometry": false,
        "Name": "경사 비율 입력(1:X) for SOG",
        "Id": "08b452ef974f475390e04cc524bbb2b4",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11645.830561323386,
        "Y": 9915.7696694083661
      },
      {
        "ShowGeometry": true,
        "Name": "철근물량산출함수()",
        "Id": "552baf9502cc43d98b225a464ac12791",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12317.103615977016,
        "Y": 9450.59445306864
      },
      {
        "ShowGeometry": false,
        "Name": "독립기초철근비",
        "Id": "c17108c3036e45d4840b4b6cbab39727",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11682.036245579282,
        "Y": 9240.3611774035144
      },
      {
        "ShowGeometry": false,
        "Name": "슬라브철근비",
        "Id": "4f93d26cd6db4a13a06f68827e581c3c",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11684.193600564915,
        "Y": 9309.6410232857579
      },
      {
        "ShowGeometry": false,
        "Name": "패드철근비",
        "Id": "11c286aa0c5c4761922964ec19def15f",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11686.346035847151,
        "Y": 9389.02781550606
      },
      {
        "ShowGeometry": true,
        "Name": "시트멤브레인산출함수()",
        "Id": "8a2d5c95fd0b4103ae10a5d699dba6c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12314.481947868419,
        "Y": 10981.832126447189
      },
      {
        "ShowGeometry": true,
        "Name": "프로텍션보드산출함수()",
        "Id": "5e5c4032098d41dc8d7ee5fe30719827",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12610.805663674897,
        "Y": 10984.036259835317
      },
      {
        "ShowGeometry": true,
        "Name": "잡석다짐산출함수()",
        "Id": "6f3cb50f8ce14df3bbfb4d0ae8974fa1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12320.223182134223,
        "Y": 10731.051551734639
      },
      {
        "ShowGeometry": false,
        "Name": "잡석 Thk",
        "Id": "6f824d25a5c54f9bb873d8fd04743032",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11688.429335390594,
        "Y": 10480.678669517631
      }
    ],
    "Annotations": [
      {
        "Id": "51b2882b1e7c4a2e9f785940f900503d",
        "Title": "데이터 취합 및 Row 방향 정렬",
        "Nodes": [
          "0cd00cbcddd84a05a79cd37e23d9c879",
          "d37c401559224779b53f3a8fbc4d2f61",
          "21cb082dd28a4eb6947faf601a05c754",
          "1e76b1779c074f988d28da9933fdf5f4",
          "adc5a0f82e8146fc8c1ad31c45081356",
          "25cd006ef8704d07a815fddbf2ea2b47",
          "04d6e67324f5423f8c664e842e1f357e",
          "09368c32f21140f1bc63b1b97d26f3c3",
          "8064fea313ec41b69c64632779e8ead9",
          "d2447b7bd403443ba5a33aabee5ced58",
          "d5405a9c83714b8985015a34ad26f010",
          "da753820d850479e9452e31c4437370e",
          "a20943ce90884e379860cf09c379e933",
          "6483747225a642cf92863ae9263206ee",
          "4dbdcbc518dd4b76b850fa49bdf7101b",
          "b2d72dae5d82452f96add689796db52c",
          "3944be19c0bc4d4a98aa9037524d6216",
          "2abaf13a6a8a4d5fb9d03ff739150e05",
          "d1e33ec19c2e4346ab523a01b0d8e5d5"
        ],
        "Left": 36455.575551140784,
        "Top": 13888.998004258518,
        "Width": 1734.0,
        "Height": 1583.0000000000018,
        "FontSize": 96.0,
        "InitialTop": 14013.998004258518,
        "InitialHeight": 1355.2133333333331,
        "TextblockHeight": 115.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "50bf67f7623c41b5aa012f7b0bfbbb9a",
        "Title": "TargetWMunique + Data Sending",
        "Nodes": [
          "6b66f0251a614e75896ee514c87184a1",
          "7a0534ea2ecf463d900f74cc8ceb4a40",
          "07790711fba741db84ea31e8902164b6",
          "aa9434df4e8e435aa11884b4ac304a7d",
          "110bad41287c41a39b9a748ed765b996",
          "00e132d3b47b435f86f3f10f6838d691",
          "85fea91e648c4577bb4bb8d888621b95",
          "863add32d1094adbaa94574c9b47bae3",
          "660284d3b2e24a7fa3f36ff54a01b8d7",
          "dfd45841aaf540909c01bbbd6ee4e6be",
          "0d755c2449734237ac9df402a33c9159"
        ],
        "Left": 31540.488954927379,
        "Top": 8288.2260202795187,
        "Width": 1862.0,
        "Height": 640.0,
        "FontSize": 36.0,
        "InitialTop": 8341.2260202795187,
        "InitialHeight": 454.0,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2d555e1ed225435eb427616ca1c5050f",
        "Title": "Select Target Family Element And Connected WorkMasters",
        "Nodes": [
          "2ca5c032c6724b8e8c87e1fa8fc74f92",
          "c654078e88ac444b8e1521817eb5e06b"
        ],
        "Left": 16332.523295401219,
        "Top": 6878.2255395499606,
        "Width": 565.88666666666666,
        "Height": 780.8145303117999,
        "FontSize": 96.0,
        "InitialTop": 7464.2255395499606,
        "InitialHeight": 246.8145303117999,
        "TextblockHeight": 576.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a47783d11200487f943cee498ed31ce5",
        "Title": "Organize\r\nAllElementInform\r\nAsDictionary",
        "Nodes": [
          "e0427ef06d504db89b14c0fecc5c717d"
        ],
        "Left": 10845.559922843906,
        "Top": 8172.8040314959635,
        "Width": 742.41666666666674,
        "Height": 460.0,
        "FontSize": 96.0,
        "InitialTop": 8528.8040314959635,
        "InitialHeight": 145.0,
        "TextblockHeight": 346.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bbd4697b85124b509245624a4f742569",
        "Title": "사용된 패밀리 타입 종류 확인 구간",
        "Nodes": [
          "93a289d88c594481b09c6b7a61e0f4e5",
          "8408946830dc490fb0fe2a6e540327f6",
          "cf06bd1ddbc0480fa5a43a046620a5b4",
          "d43b5f272f654f85a4706148687c33b0",
          "7aa19e8980394c5b96f78af105f21a51",
          "3f6a54a220ac47a3857738fe1cbb7a2a",
          "e920760cb92f4811beaaace16b56bead",
          "fa7c58c4387f4d76b48726887b6d3863"
        ],
        "Left": 7754.0533136886388,
        "Top": 4543.5695902711986,
        "Width": 1063.1880150844609,
        "Height": 795.47433054670182,
        "FontSize": 96.0,
        "InitialTop": 4783.5695902711986,
        "InitialHeight": 452.68766387999858,
        "TextblockHeight": 230.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "496856545a3b40eda360a47d69f3f252",
        "Title": "GetFull\r\nWMCodeDescription\r\nPerElement",
        "Nodes": [
          "09731e78949f4760b876c8a956469a3f"
        ],
        "Left": 9279.7237899202137,
        "Top": 8365.9405125390222,
        "Width": 890.30666666666673,
        "Height": 486.0,
        "FontSize": 96.0,
        "InitialTop": 8721.9405125390222,
        "InitialHeight": 145.0,
        "TextblockHeight": 346.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "94479bc97aa641ad9685bbe735739eb4",
        "Title": "Primary Input : Excel & Revit Elements",
        "Nodes": [
          "5000a2bea8e64651ab45f16fae6e4191",
          "d6a04655d8504043b972c31b54888ec5",
          "9bae5aaf9bf34b83b811b6478f215564",
          "2b55deec8d4646b896bbdbbbab022bda",
          "7b4f8f19efab4a2fa529e2bcd25c4024",
          "b4336991a32b46e1bfa26f2d00f265a5",
          "cfb9f670cc884514938ce524046c0014"
        ],
        "Left": 7946.3729840336728,
        "Top": 8176.5128502610205,
        "Width": 1191.1764277937709,
        "Height": 859.1428469072016,
        "FontSize": 96.0,
        "InitialTop": 8416.51285026102,
        "InitialHeight": 671.1428469072016,
        "TextblockHeight": 230.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "68ab86b8390545159562a427d370cbf5",
        "Title": "개념도",
        "Nodes": [
          "a07a431e650a4fbabfce4ff91181ed2d",
          "7078853e87ed4178bd2130b54ece77ce",
          "85c1b9ff7bbf40628420f9d90fa51ac1",
          "b504fe1f4ea4470ba24bc7d6a645d288"
        ],
        "Left": 6920.3810624784546,
        "Top": 6972.8692852765435,
        "Width": 771.95193634502721,
        "Height": 473.65249403390408,
        "FontSize": 96.0,
        "InitialTop": 7097.8692852765435,
        "InitialHeight": 400.65249403390408,
        "TextblockHeight": 115.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "7a01e7b88f094ef68e47c66652d3e440",
        "Title": "산출타겟 검증",
        "Nodes": [
          "cbc21043d4424609987e8b8455a60cd3",
          "bf67dc0d620e4012b330832e28fe5bdd",
          "4db23de1c1944ce9b61374d079b8df8f",
          "3575c8e25de14f748f0368e4adf3e091",
          "691606d10c8e49c79c7daaca2a0089e4",
          "02d863e5a47e48f0bbd59b2cf455c1b1",
          "aef4051d1ffb46b8a4dfd6ec1316a9f2",
          "fba1ef43a7424e2a8075f88e60d23821"
        ],
        "Left": 14495.76833643793,
        "Top": 10136.813349109361,
        "Width": 1546.0,
        "Height": 541.0,
        "FontSize": 96.0,
        "InitialTop": 10261.813349109361,
        "InitialHeight": 438.57333333333372,
        "TextblockHeight": 115.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "35d7cc6b13974507ba90bf3198ebef94",
        "Title": "산출타겟 검증",
        "Nodes": [
          "b66af7f0ba0b48f68207f8acc4760bbb",
          "d544bdd80c194a728a1de4392ab60ff5",
          "e601413e0c14491ebbd46a25e43eae45",
          "2ac3f49bbb5e412da04c9fac85e3285b",
          "38b0165dba9643159a5bece79eca625c",
          "44950d255a9c4c0da127467d353a5fbf",
          "f846143c3b084de2adf674a3e407390a",
          "21218174c63d49e083bb411a48b90a7e"
        ],
        "Left": 14497.975646077273,
        "Top": 10917.770578675181,
        "Width": 1546.0,
        "Height": 541.0,
        "FontSize": 96.0,
        "InitialTop": 11042.770578675181,
        "InitialHeight": 438.57333333335009,
        "TextblockHeight": 115.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "8fa54417720a4255be8894be0d073c86",
        "Title": "산출타겟 검증",
        "Nodes": [
          "44c3a88d622340c1b34b94186773982b",
          "71a89f09821048f39d02598b104f7e66",
          "d60b29b1949747f9bb769e72394abb30",
          "32a5d4722b93420ebcbe34bf90901699",
          "581effdb309349e9a6ad2a27c106afc7",
          "ab6ae0fa7ae74edb9554ba7a5b44ec56",
          "cee9c9d0f0234bef8901994920265b67",
          "536eaff6281d4926b0d4c6d9c24f17fb"
        ],
        "Left": 14493.130938401022,
        "Top": 11660.669901570618,
        "Width": 1546.0,
        "Height": 541.0,
        "FontSize": 96.0,
        "InitialTop": 11785.669901570618,
        "InitialHeight": 438.57333333339921,
        "TextblockHeight": 115.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "2e06ca448c5c4f7d8365de34828527ec",
        "Title": "되메우기기",
        "Nodes": [],
        "Left": 27130.201055262987,
        "Top": 423.0,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -6552.0379026921573,
    "Y": -5207.7697208710515,
    "Zoom": 0.60677007222320389
  }
}