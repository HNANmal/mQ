{
  "Uuid": "de1ef780-9ab7-46fa-acef-be9b9362e1b7",
  "IsCustomNode": false,
  "Description": null,
  "Name": "09 Railing (220104)",
  "ElementResolver": {
    "ResolutionMap": {
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "Curve": {
        "Key": "Autodesk.DesignScript.Geometry.Curve",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "c67a25898f0943338fb7fafb0f4492b6",
      "Name": "File Path",
      "Type": "string",
      "Value": "..\\DMS(Data Matching Schedule)_R0(Seq1-2).xlsx",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputElements = IN[0]\r\ninputData = IN[1]\r\n#inputSheetName = IN[2]\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nusedFamilyTypeOfModeling = getUsedFamilyTypeOfModeling(inputElements)\r\nexcelWholeDataSet = inputData#importExcel(inputFilePath, inputSheetName)\r\ntrExcelWholeDataSet = list(zip(*excelWholeDataSet))\r\nexcelColumnDataSet = createExcelDataDictionary(trExcelWholeDataSet)\r\nexcelRowDataSet = createExcelDataDictionary(excelWholeDataSet)\r\nColumnIndexOfUsedFamilyType = findTargetIndex(usedFamilyTypeOfModeling, trExcelWholeDataSet)\r\nColDataSetOfUsedFamilyType = GetValueAtKeys(ColumnIndexOfUsedFamilyType, excelColumnDataSet)\r\nmaterialPerElementFromModeling = []\r\nfor i in inputElements:\r\n    materialPerElementFromModeling.append(i.GetMaterials())\r\n#list(map(lambda x: x.GetMaterials, inputElements)) \"맵함수로 처리하면 리스트화 할 때 타입 변환 오류 남\"\r\n\r\ntargetWMRowIndex = []\r\nfor i in ColDataSetOfUsedFamilyType:\r\n    targetWMRowIndex.append(findTargetIndex(['000'], i))\r\n\r\nrowDataSetOfUsedWM = []\r\nfor i in targetWMRowIndex:\r\n    rowDataSetOfUsedWM.append(GetValueAtKeys(i, excelRowDataSet))\r\n\r\nworkGroup = []\r\nfor i in rowDataSetOfUsedWM:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(j[0])\r\n    workGroup.append(tmp)\r\n    \r\nworkMaster = []\r\nfor i in range(len(ColDataSetOfUsedFamilyType)):\r\n    tmp=[]\r\n    for k in targetWMRowIndex[i]:\r\n        tmp.append(ColDataSetOfUsedFamilyType[i][k])\r\n    workMaster.append(tmp)\r\n\r\nmatchedWM = []\r\nfor i in range(len(workGroup)):\r\n    tmp = []\r\n    for j in range(len(workGroup[i])):\r\n        fullWM = workGroup[i][j] +\"-\"+ workMaster[i][j]\r\n        tmp.append(fullWM)\r\n    matchedWM.append(tmp)\r\n\r\nmatchedWorkGruopAndMasterCode = []\r\nfor i in matchedWM:\r\n    if len(i) > 0:\r\n        matchedWorkGruopAndMasterCode.append(i)\r\n    else:\r\n        pass\r\n\r\nmatchedWMDescription = []\r\nfor i in rowDataSetOfUsedWM:\r\n    tmp=[]\r\n    for j in i:\r\n        tmp.append(j[1] +\" \"+ j[2] +\" \"+ j[3] +\" \"+ \"(\"+ j[4] +\")\")\r\n    if len(tmp) > 0:\r\n        matchedWMDescription.append(tmp)\r\n    else:\r\n        pass\r\n\r\nmatchedWMUnit = []\r\nfor i in rowDataSetOfUsedWM:\r\n    tmp=[]\r\n    for j in i:\r\n        tmp.append(j[4])\r\n    if len(tmp) > 0:\r\n        matchedWMUnit.append(tmp)\r\n    else:\r\n        pass\r\n\r\nmatchedWorkGruopAndMasterCode_flat = list(itertools.chain(*matchedWorkGruopAndMasterCode))\r\nmatchedWMDescription_flat = list(itertools.chain(*matchedWMDescription))\r\n\r\ndic_WMandDescription_Excel = {}\r\nfor i in range(len(matchedWorkGruopAndMasterCode_flat)):\r\n    dic_WMandDescription_Excel[matchedWorkGruopAndMasterCode_flat[i]] = matchedWMDescription_flat[i]\r\n\r\nusedFamilyTypeInExcelOrder = list(map(lambda x: x[3], ColDataSetOfUsedFamilyType))\r\nusedFamilyCodeInExcelOrder = findUnique(list(map(lambda x: x.split('_')[0], usedFamilyTypeInExcelOrder)))\r\n\r\ndic_FamilyCodeandWM = {}\r\nfor i in range(len(usedFamilyCodeInExcelOrder)):\r\n    dic_FamilyCodeandWM[usedFamilyCodeInExcelOrder[i]] = matchedWorkGruopAndMasterCode[i]\r\n\r\nworkMasterCodePerElement = []\r\nfamilyCodePerElem = list(map(lambda x: x.Name.split('_')[0], inputElements))\r\nfor i in familyCodePerElem:\r\n    workMasterCodePerElement.append(dic_FamilyCodeandWM[i])\r\n\r\nmaterialNamePerElem = []\r\nfor i in materialPerElementFromModeling:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(j.Name)\r\n    materialNamePerElem.append(tmp)\r\n\r\nWMPerElementFromModeling = []\r\nfor i in materialNamePerElem:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(j.split('_')[0])\r\n    WMPerElementFromModeling.append(tmp)\r\n\r\nspecPerElementFromModeling = []\r\nfor i in materialNamePerElem:\r\n    tmp = []\r\n    for j in i:\r\n        a = j.split('_')\r\n        del a[0]\r\n        b = \" \".join(a)\r\n        tmp.append(b)\r\n    specPerElementFromModeling.append(tmp)\r\n\r\nWMPerElementFromModeling_flat = list(itertools.chain(*WMPerElementFromModeling))\r\nspecPerElementFromModeling_flat = list(itertools.chain(*specPerElementFromModeling))\r\n\r\ndic_WMandDescription_Model = {}\r\nfor i in range(len(WMPerElementFromModeling_flat)):\r\n    dic_WMandDescription_Model[WMPerElementFromModeling_flat[i]] = specPerElementFromModeling_flat[i]\r\n\r\ndef findAllKeys(dict):\r\n    result = []\r\n    for key in dict.keys():\r\n        result.append(key)\r\n    return result\r\n\r\ndef findAllValues(dict):\r\n    result = []\r\n    for key in dict.keys():\r\n        result.append(dict[key])\r\n    return result\r\n\r\nkeys_WMandDescription_Model = findAllKeys(dic_WMandDescription_Model)\r\nkeys_WMandDescription_Excel = findAllKeys(dic_WMandDescription_Excel)\r\n\r\nkeys_WMandDescription_Both = list(set(keys_WMandDescription_Model + keys_WMandDescription_Excel))\r\nvalues_WMandDescription_Both = []\r\nfor i in keys_WMandDescription_Both:\r\n    if i in keys_WMandDescription_Model:\r\n        values_WMandDescription_Both.append(dic_WMandDescription_Model[i])\r\n    else:\r\n        values_WMandDescription_Both.append(dic_WMandDescription_Excel[i])\r\n\r\ndic_WMandDescription_Both = {}\r\nfor i in range(len(keys_WMandDescription_Both)):\r\n    dic_WMandDescription_Both[keys_WMandDescription_Both[i]] = values_WMandDescription_Both[i]\r\n\r\nworkMasterCodePerElementFromBoth = []\r\nfor i in range(len(workMasterCodePerElement)):\r\n    #tmp = []\r\n    a = WMPerElementFromModeling[i] + workMasterCodePerElement[i]\r\n    b = findUnique(a)\r\n    workMasterCodePerElementFromBoth.append(b)\r\n\r\nspecPerElement = []\r\nfor i in workMasterCodePerElementFromBoth:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(dic_WMandDescription_Both[j])\r\n    specPerElement.append(tmp)\r\n\r\nfullWMCodeDescriptionPerElement = []\r\nfor i in range(len(workMasterCodePerElementFromBoth)):\r\n    tmp = []\r\n    for j in range(len(workMasterCodePerElementFromBoth[i])):\r\n        a = workMasterCodePerElementFromBoth[i][j] +\": \"+ specPerElement[i][j]\r\n        tmp.append(a)\r\n    fullWMCodeDescriptionPerElement.append(tmp)\r\n\r\nfullWMinfo = {\r\n\"AllElement\": inputElements,\r\n\"WorkMasterCodePerFamilyType\": dic_FamilyCodeandWM,\r\n\"WorkMasterCodePerElementBoth\": workMasterCodePerElementFromBoth,\r\n\"FullWMCodeDescriptionPerElement\": fullWMCodeDescriptionPerElement\r\n}\r\n\r\n\r\n\r\nresult = fullWMinfo\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "f333f1b559da4c54a8829098ed2417d1",
      "Inputs": [
        {
          "Id": "4fc0f9992e014826ba9859d06da64444",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a9cf3f7ba39408fadb81d1e65b38a77",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a5430259ace478b91296a889663365f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "_InputElement;\n_InputData;",
      "Id": "abd2f3a85c67411e9bc711e5f4eb455a",
      "Inputs": [
        {
          "Id": "602c3ed1622a4b5bb3e66dba0311bc5c",
          "Name": "_InputElement",
          "Description": "_InputElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0aeec0f5910742ec8be1c2f042d4d19e",
          "Name": "_InputData",
          "Description": "_InputData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4364c6aaeace45a1a4b740fe02a84ee3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7e86af1776d4f1a8a3df21651a14fda",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "e502ccee84844404a04916c4be58a78e",
      "Inputs": [
        {
          "Id": "0aa10cf6da544b1097298e11b3aee83e",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92dc94458f6d4d63ad13042ead5ada7f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "10b997452af24920931f86584e910a26",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fad363e2bc3461981e95f1bca5a2274",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a Python script from a string."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "a8007784c9e4456aacb9023234147b1c",
      "Inputs": [
        {
          "Id": "ecfa1a31f9004866bb4006c8c7726bf5",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c34b12544a2c43319bc0365158e633c9",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Railings\";",
      "Id": "18660130c94948cb83d6a138f28a5c21",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e03d454a2c84e09a956b23543942020",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\whcho\\01 Project\\현대eng\\220104\\DMS(Data Matching Schedule)_R0(Seq1-2).xlsx",
      "InputValue": "..\\DMS(Data Matching Schedule)_R0(Seq1-2).xlsx",
      "NodeType": "ExtensionNode",
      "Id": "c67a25898f0943338fb7fafb0f4492b6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8a770a51453a41c9b997d8de4e805e6d",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport urllib.request\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputURL = \"https://raw.githubusercontent.com/HNANmal/mQ/master/Hdynlib/General/ImportExcel.py\"\r\n\r\n# Place your code below this line\r\nreq = urllib.request\r\ndata = req.urlopen(inputURL)\r\n\r\nresult = data.read().decode(\"utf-8\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "7ed2c284e5014ad98f582b5df3409dc6",
      "Inputs": [
        {
          "Id": "7edfceaaf615451794e70cef581206c9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58c4d36b0c0946f0963bc173ceb8015a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 432,
      "SelectedString": "OST_StairsRailing",
      "NodeType": "ExtensionNode",
      "Id": "24d4328dec274669b8c26ca9c3bca769",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1f555fa6236249cfbdc3189021f651b9",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "fc8d6d6cba864339871d737f0f87f0c5",
      "Inputs": [
        {
          "Id": "c1c98bc0403a464aa263f874e2899f20",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b4c2de4e26047738387fae93e2445fb",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDict = IN[0]\r\ninputIndex = IN[1]\r\n\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nfullWMCodeDescriptionPerElement = inputDict[\"FullWMCodeDescriptionPerElement\"]\r\nelement = inputDict[\"Element\"]\r\nfamilyCode = inputDict[\"FamilyCode\"]\r\nfamilyCode_unique = findUnique(familyCode)\r\ntargetFamilyCode = familyCode_unique[inputIndex]\r\ntargetIndex = []\r\nfor i in range(len(familyCode)):\r\n    if targetFamilyCode in familyCode[i]:\r\n        targetIndex.append(i)\r\n    else:\r\n        pass\r\n\r\ntargetElements = []\r\nfor i in targetIndex:\r\n    targetElements.append(element[i])\r\n\r\ntargetFamilyCode = []\r\nfor i in targetIndex:\r\n    targetFamilyCode.append(element[i].Name)\r\n\r\nWMforTargetElements = []\r\nfor i in targetIndex:\r\n    WMforTargetElements.append(fullWMCodeDescriptionPerElement[i])\r\n\r\nWMforTargetElements_flat = list(itertools.chain(*WMforTargetElements))\r\ntargetWMunique = findUnique(WMforTargetElements_flat)\r\n\r\nresultDict = {\r\n\"TargetElements\": targetElements,\r\n\"TargetFamilyCode\": targetFamilyCode,\r\n\"WMforTargetElements\": WMforTargetElements,\r\n\"TargetWMunique\": targetWMunique\r\n}\r\n\r\n\r\n\r\nresult = resultDict\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "6c9e77bc0a3d4d7fbd99d19d9194072a",
      "Inputs": [
        {
          "Id": "68a74618909143ba8e74258a49920d1c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9661797d0d3b45b6a9885070faa7050b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8aee08f0aef54592850257e3ecd7e5d5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "cb4fb02b488d44f9ad49c7d4f5e3752a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a5db6549c270413a839d5a3402f87a25",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDict = IN[0]\r\n\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nelement = inputDict[\"AllElement\"]\r\nelementType = []\r\nfor i in element:\r\n    elementType.append(i.Name)\r\nfamilyCode = []\r\nfor i in elementType:\r\n    familyCode.append(i.split(\"_\")[0])\r\nfullWMCodeDescriptionPerElement = inputDict[\"FullWMCodeDescriptionPerElement\"]\r\n\r\nresultDict = {\r\n\"Element\": element,\r\n\"ElementType\": elementType,\r\n\"FamilyCode\": familyCode,\r\n\"FullWMCodeDescriptionPerElement\": fullWMCodeDescriptionPerElement\r\n}\r\n\r\n\r\n\r\nresult = resultDict\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "56d974f4c57842debb75c23ba9bd556b",
      "Inputs": [
        {
          "Id": "405745d19ff347789f29964036f4ca9b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a46c731bcfdb4c75a7e4dd5005493048",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ngeoColors = IN[0]\r\nblnForVisual = IN[1]\r\n\r\n# Place your code below this line\r\nif blnForVisual == True:\r\n    result = geoColors\r\nelse:\r\n    result = 0\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "fe3b2cdc50cf47d38d33ff5d1efb05e3",
      "Inputs": [
        {
          "Id": "b0d55bb0d2b647be8c6ce1e76478157f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d23d89b8832d4bbfb0c9f40a82092a7b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85f1fc72bd034444b2229221b3b7c653",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "bcd8d5b34eed401d801a7fdf3cffa9b5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9651c33495bc46f395c8dd0e5c301f67",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "MainOutput;\nRefOutput_geoColor;",
      "Id": "b112bc66fc5d4b87b3e77f77f5c6818a",
      "Inputs": [
        {
          "Id": "899a45bfd33a44ea9a6938332be7cccb",
          "Name": "MainOutput",
          "Description": "MainOutput",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "000eb218cfe84b3ab666bf45ac026c6d",
          "Name": "RefOutput_geoColor",
          "Description": "RefOutput_geoColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2a16b5bdc1a4b37adbc3535ea0b1871",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "868df01bd71d4f30877a51106d302c47",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "{\n\"FuncValues\": _FuncValues,\n\"FuncValuesUnit\": _FuncValuesUnit\n};",
      "Id": "e524bb8e47c74b07abd9c940142dcac5",
      "Inputs": [
        {
          "Id": "07dc6b55a1254588a2d45cbafd4e8315",
          "Name": "_FuncValues",
          "Description": "_FuncValues",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8d459f7805934ba49f4652890449a296",
          "Name": "_FuncValuesUnit",
          "Description": "_FuncValuesUnit",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "466d2ab05fa340c4beccc3212752c0dd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "5e3543c7c9d14ae6a0e9b36e1cb962b7",
      "Inputs": [
        {
          "Id": "fb77d4cc98f14f89b0b0210a9ee9ee5f",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8555d810d1747ff87ea9d89922147aa",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7525584b84664a8b921f2373f28ee1ec",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "c009471fd3664ba993e211bf6cf7c095",
      "Inputs": [
        {
          "Id": "c96f833358d648c7bb27b3cad585b8d3",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f1d6f0cc2bd4bee9b53d7324d0d1bb1",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"M\";",
      "Id": "0f8e74dc6ca748e5827842859afd717a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "af662bd9c5e64b56bae5649389dcb000",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "ef3cddd5616f4bc988b12ccb045cb022",
      "Inputs": [
        {
          "Id": "4ccfa8921fb847bc8c1995789d9b2d9a",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e37137a4e06444f39e7b2b8bc2b5168e",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "146694d985544b349b46639454944def",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"TargetElements\";",
      "Id": "fa4ca2e8538942c1b6dba1ac9f9a18d1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6caa734ffad94f47abb35fd1f29e5b9b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "0f9849044d7846858999378c6205d12e",
      "Inputs": [
        {
          "Id": "9a34d06ed224460f81b61b52635613ae",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fb6882dab304d799d14c884bb91c740",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9b814cc8613436581bedf380de56ec9",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Length\";",
      "Id": "5db7e0b6a7964118bd3e88386562415b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d895f5eb8aa43dcb43bbe191376c761",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "MainInput;\nRefInput1;\nRefInput2;",
      "Id": "7bb1f899fee344d6944220cac8c8f80b",
      "Inputs": [
        {
          "Id": "9a91e81417fa4c7e92d66aa507f53f77",
          "Name": "MainInput",
          "Description": "MainInput",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72204374bbce4326bd3c03da11e96908",
          "Name": "RefInput1",
          "Description": "RefInput1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0324eba6220d4e2faf58d2090c53b1d3",
          "Name": "RefInput2",
          "Description": "RefInput2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4204558121f14339b2575ce7a11055fe",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ea6a01a4e77450c84aa5dca8bc02d22",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2db887a133f6444d94dfa1f93209cca7",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ref;",
      "Id": "fccb87c82be349b7a9ffb0a6fbfd3e9f",
      "Inputs": [
        {
          "Id": "fc74813255f54c138d9cadff5a925f35",
          "Name": "ref",
          "Description": "ref",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca20eb122de747cabd94ccb30c5bfcd5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "e45d2dfe59c04eeeb0a6a39ee7f2da2e",
      "Inputs": [
        {
          "Id": "8b9fcdc71a514f929cd5b18e96d53f5d",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e5fd38ae2c34d66809350703d26d484",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Id": "f6c32b31fd7740afa5745dadd8c1ace9",
      "Inputs": [
        {
          "Id": "9115b1bd25fb46e7ab0e18c33766c4d1",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d7f9cbd69054dcaa7ca577bfc12ba6c",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b27b87709d148379b86d5a306ffca96",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "07cdbfbe68c148d5b71772b05118b19b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "208f56e37464421a93dcbedb6f288aeb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "area/1000;",
      "Id": "250d3da596df4f5d98a248f5c0299677",
      "Inputs": [
        {
          "Id": "81fe86aab85842bab71c0f2579f765d1",
          "Name": "area",
          "Description": "area",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b33d15f98d4472b824970b02b1d1c37",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "8a5430259ace478b91296a889663365f",
      "End": "405745d19ff347789f29964036f4ca9b",
      "Id": "357792700d6946dd90dcd22819e379a0"
    },
    {
      "Start": "4364c6aaeace45a1a4b740fe02a84ee3",
      "End": "4fc0f9992e014826ba9859d06da64444",
      "Id": "e6c7ab992743414cb5ccbd8abbb23a99"
    },
    {
      "Start": "f7e86af1776d4f1a8a3df21651a14fda",
      "End": "1a9cf3f7ba39408fadb81d1e65b38a77",
      "Id": "c0e96d809682454aa4a4621d0a8c8cdc"
    },
    {
      "Start": "9fad363e2bc3461981e95f1bca5a2274",
      "End": "0aeec0f5910742ec8be1c2f042d4d19e",
      "Id": "a349cccbc41e4cc98a1fc1a0775a8f6c"
    },
    {
      "Start": "c34b12544a2c43319bc0365158e633c9",
      "End": "602c3ed1622a4b5bb3e66dba0311bc5c",
      "Id": "be66975c0746402d920b81215ab84561"
    },
    {
      "Start": "5e03d454a2c84e09a956b23543942020",
      "End": "10b997452af24920931f86584e910a26",
      "Id": "14f566bb808642ceb3a89080f53594c5"
    },
    {
      "Start": "8a770a51453a41c9b997d8de4e805e6d",
      "End": "92dc94458f6d4d63ad13042ead5ada7f",
      "Id": "1a7ceaa369724c8c8691484ca152525a"
    },
    {
      "Start": "58c4d36b0c0946f0963bc173ceb8015a",
      "End": "0aa10cf6da544b1097298e11b3aee83e",
      "Id": "146382952a0b46c6984db1f30ebe42a2"
    },
    {
      "Start": "1f555fa6236249cfbdc3189021f651b9",
      "End": "ecfa1a31f9004866bb4006c8c7726bf5",
      "Id": "ad7148810a69482ba5c8af6e0bde9165"
    },
    {
      "Start": "8aee08f0aef54592850257e3ecd7e5d5",
      "End": "c1c98bc0403a464aa263f874e2899f20",
      "Id": "9773acc3f40e4b9588b9fed71be4a117"
    },
    {
      "Start": "8aee08f0aef54592850257e3ecd7e5d5",
      "End": "8b9fcdc71a514f929cd5b18e96d53f5d",
      "Id": "2a0aac8945d148109bd3db97ee4fb541"
    },
    {
      "Start": "a5db6549c270413a839d5a3402f87a25",
      "End": "9661797d0d3b45b6a9885070faa7050b",
      "Id": "98f9405950ad4eb781af32aec0acd224"
    },
    {
      "Start": "a46c731bcfdb4c75a7e4dd5005493048",
      "End": "68a74618909143ba8e74258a49920d1c",
      "Id": "b6ed070a76d2445b89e545858fa77d15"
    },
    {
      "Start": "9651c33495bc46f395c8dd0e5c301f67",
      "End": "d23d89b8832d4bbfb0c9f40a82092a7b",
      "Id": "9ef30a4eb37740ba88752f1fcdae5f9d"
    },
    {
      "Start": "868df01bd71d4f30877a51106d302c47",
      "End": "b0d55bb0d2b647be8c6ce1e76478157f",
      "Id": "d1341a3b12bb4ad59e7f731e0f45b688"
    },
    {
      "Start": "466d2ab05fa340c4beccc3212752c0dd",
      "End": "899a45bfd33a44ea9a6938332be7cccb",
      "Id": "1e1f59793af94600b7912c51b9637c89"
    },
    {
      "Start": "7525584b84664a8b921f2373f28ee1ec",
      "End": "8d459f7805934ba49f4652890449a296",
      "Id": "c36479dadc144810b27cbee83cd35dba"
    },
    {
      "Start": "5f1d6f0cc2bd4bee9b53d7324d0d1bb1",
      "End": "b8555d810d1747ff87ea9d89922147aa",
      "Id": "ba2d5d51a74c4d599535889650cecb63"
    },
    {
      "Start": "af662bd9c5e64b56bae5649389dcb000",
      "End": "fb77d4cc98f14f89b0b0210a9ee9ee5f",
      "Id": "a452f6ca39244dc096cba1c862db9aac"
    },
    {
      "Start": "146694d985544b349b46639454944def",
      "End": "81fe86aab85842bab71c0f2579f765d1",
      "Id": "8a6935f0055f44a69d0213ac3e7533c8"
    },
    {
      "Start": "6caa734ffad94f47abb35fd1f29e5b9b",
      "End": "5fb6882dab304d799d14c884bb91c740",
      "Id": "edbf7b8363c043c7a4d62abbb3cc8e08"
    },
    {
      "Start": "b9b814cc8613436581bedf380de56ec9",
      "End": "4ccfa8921fb847bc8c1995789d9b2d9a",
      "Id": "0c83a804e7334271b722f6644fccb9c5"
    },
    {
      "Start": "2d895f5eb8aa43dcb43bbe191376c761",
      "End": "e37137a4e06444f39e7b2b8bc2b5168e",
      "Id": "5212da6553b34b77b4d4d9b533649ccd"
    },
    {
      "Start": "4204558121f14339b2575ce7a11055fe",
      "End": "9a34d06ed224460f81b61b52635613ae",
      "Id": "0e545d8dadd7495a8acb898c8c1c4c27"
    },
    {
      "Start": "2e5fd38ae2c34d66809350703d26d484",
      "End": "9a91e81417fa4c7e92d66aa507f53f77",
      "Id": "992caabd695244f6bf9dd25880837d55"
    },
    {
      "Start": "9b27b87709d148379b86d5a306ffca96",
      "End": "c96f833358d648c7bb27b3cad585b8d3",
      "Id": "b5d88f6a802e4f45a20a3a03dd051b55"
    },
    {
      "Start": "9b27b87709d148379b86d5a306ffca96",
      "End": "07dc6b55a1254588a2d45cbafd4e8315",
      "Id": "ce4a4676b28942a2ae83951dcef998d8"
    },
    {
      "Start": "208f56e37464421a93dcbedb6f288aeb",
      "End": "3d7f9cbd69054dcaa7ca577bfc12ba6c",
      "Id": "a3590480485a4ff28e665b2b5684110d"
    },
    {
      "Start": "1b33d15f98d4472b824970b02b1d1c37",
      "End": "9115b1bd25fb46e7ab0e18c33766c4d1",
      "Id": "ae50cdc8b4134f9e8e83662f4c8181be"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "None provided",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -13263.9248046875,
      "EyeY": 3529.20751953125,
      "EyeZ": -462.56640625,
      "LookX": 16904.013671875,
      "LookY": -9265.6162109375,
      "LookZ": -14855.9951171875,
      "UpX": 0.13045117259025574,
      "UpY": 0.98480510711669922,
      "UpZ": -0.11463621258735657
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "ExcelDataManagerNode",
        "Id": "f333f1b559da4c54a8829098ed2417d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3099.2025610929363,
        "Y": -8745.9240770342349
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "abd2f3a85c67411e9bc711e5f4eb455a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2622.5714530547912,
        "Y": -8563.1765750085469
      },
      {
        "ShowGeometry": true,
        "Name": "Github_Python@Import Excel(By OpenpyXl)",
        "Id": "e502ccee84844404a04916c4be58a78e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2209.8412109710312,
        "Y": -8489.8065267546481
      },
      {
        "ShowGeometry": false,
        "Name": "All Elements of Category",
        "Id": "a8007784c9e4456aacb9023234147b1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2277.5943422335513,
        "Y": -8886.13568076855
      },
      {
        "ShowGeometry": true,
        "Name": "Sheet Name",
        "Id": "18660130c94948cb83d6a138f28a5c21",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2001.5062106910309,
        "Y": -8361.2446071421509
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "c67a25898f0943338fb7fafb0f4492b6",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1717.3950252610211,
        "Y": -8464.5243430436458
      },
      {
        "ShowGeometry": true,
        "Name": "String From Web",
        "Id": "7ed2c284e5014ad98f582b5df3409dc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1970.8921548541712,
        "Y": -8579.2382902602476
      },
      {
        "ShowGeometry": false,
        "Name": "Categories",
        "Id": "24d4328dec274669b8c26ca9c3bca769",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1986.8886742538411,
        "Y": -8887.3874540493471
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "fc8d6d6cba864339871d737f0f87f0c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6497.7641036349132,
        "Y": -8963.5176887451216
      },
      {
        "ShowGeometry": true,
        "Name": "Select Target Family Element And Connected WorkMasters",
        "Id": "6c9e77bc0a3d4d7fbd99d19d9194072a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5651.6149481459634,
        "Y": -8948.5051914099222
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "cb4fb02b488d44f9ad49c7d4f5e3752a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5535.689132181973,
        "Y": -8846.6906610980222
      },
      {
        "ShowGeometry": true,
        "Name": "Set Up All Element Inform as Dictionary",
        "Id": "56d974f4c57842debb75c23ba9bd556b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4057.3381444612633,
        "Y": -8791.6171436933219
      },
      {
        "ShowGeometry": true,
        "Name": "Visual Manager",
        "Id": "fe3b2cdc50cf47d38d33ff5d1efb05e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16805.277687832044,
        "Y": -8048.9400938784311
      },
      {
        "ShowGeometry": true,
        "Name": "Visual 켜기/끄기",
        "Id": "bcd8d5b34eed401d801a7fdf3cffa9b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16535.357955304942,
        "Y": -7993.9876065005374
      },
      {
        "ShowGeometry": false,
        "Name": "Output",
        "Id": "b112bc66fc5d4b87b3e77f77f5c6818a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16139.136559218845,
        "Y": -8237.3520725061317
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "e524bb8e47c74b07abd9c940142dcac5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16094.429474347744,
        "Y": -8597.9567002145341
      },
      {
        "ShowGeometry": false,
        "Name": "List.OfRepeatedItem",
        "Id": "5e3543c7c9d14ae6a0e9b36e1cb962b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11853.999882812044,
        "Y": -8716.6803077835357
      },
      {
        "ShowGeometry": false,
        "Name": "List.Count",
        "Id": "c009471fd3664ba993e211bf6cf7c095",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11582.999882812044,
        "Y": -8755.5736411169346
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "0f8e74dc6ca748e5827842859afd717a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11582.999882812044,
        "Y": -8647.5736411169346
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "ef3cddd5616f4bc988b12ccb045cb022",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10293.950862812893,
        "Y": -8838.9505798161335
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "fa4ca2e8538942c1b6dba1ac9f9a18d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9180.3294045980729,
        "Y": -8708.3682795209315
      },
      {
        "ShowGeometry": false,
        "Name": "Dictionary.ValueAtKey",
        "Id": "0f9849044d7846858999378c6205d12e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9471.3294045980729,
        "Y": -8738.5816128543374
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5db7e0b6a7964118bd3e88386562415b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10112.29832619238,
        "Y": -8737.3819305353318
      },
      {
        "ShowGeometry": false,
        "Name": "Value for Import from others",
        "Id": "7bb1f899fee344d6944220cac8c8f80b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8822.5753534941032,
        "Y": -8743.0880663430362
      },
      {
        "ShowGeometry": false,
        "Name": "Reference Output",
        "Id": "fccb87c82be349b7a9ffb0a6fbfd3e9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8103.0882438892731,
        "Y": -8176.9925306861333
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e45d2dfe59c04eeeb0a6a39ee7f2da2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7792.7121755262633,
        "Y": -8431.6461816008414
      },
      {
        "ShowGeometry": true,
        "Name": "Math.Round",
        "Id": "f6c32b31fd7740afa5745dadd8c1ace9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11042.4311924884,
        "Y": -8727.59111308963
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "07cdbfbe68c148d5b71772b05118b19b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10923.2606200465,
        "Y": -8691.22242210057
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "250d3da596df4f5d98a248f5c0299677",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10641.9660895968,
        "Y": -8872.69293542388
      }
    ],
    "Annotations": [
      {
        "Id": "6b224bc1292146498513e5d56dea024f",
        "Title": "GetFull\r\nWMCodeDescription\r\nPerElement",
        "Nodes": [
          "f333f1b559da4c54a8829098ed2417d1"
        ],
        "Left": 3089.2025610929363,
        "Top": -9101.9240770342349,
        "Width": 890.30666666666673,
        "Height": 486.0,
        "FontSize": 96.0,
        "InitialTop": -8745.9240770342349,
        "InitialHeight": 145.0,
        "TextblockHeight": 346.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e585ed49fd804a4faa9229231a936c17",
        "Title": "Primary Input : Excel & Revit Elements",
        "Nodes": [
          "abd2f3a85c67411e9bc711e5f4eb455a",
          "e502ccee84844404a04916c4be58a78e",
          "a8007784c9e4456aacb9023234147b1c",
          "24d4328dec274669b8c26ca9c3bca769",
          "18660130c94948cb83d6a138f28a5c21",
          "c67a25898f0943338fb7fafb0f4492b6",
          "7ed2c284e5014ad98f582b5df3409dc6"
        ],
        "Left": 1707.3950252610211,
        "Top": -9127.3874540493471,
        "Width": 1191.17642779377,
        "Height": 859.14284690719614,
        "FontSize": 96.0,
        "InitialTop": -8887.3874540493471,
        "InitialHeight": 671.14284690719614,
        "TextblockHeight": 230.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "a282eb817d7745008fea5ae367bfc2ed",
        "Title": "Select Target Family Element And Connected WorkMasters",
        "Nodes": [
          "6c9e77bc0a3d4d7fbd99d19d9194072a",
          "cb4fb02b488d44f9ad49c7d4f5e3752a"
        ],
        "Left": 5525.689132181973,
        "Top": -9534.5051914099222,
        "Width": 565.88666666666666,
        "Height": 780.8145303119,
        "FontSize": 96.0,
        "InitialTop": -8948.5051914099222,
        "InitialHeight": 246.81453031189994,
        "TextblockHeight": 576.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "017cf5f7b5a0411fba9a0461f185adbc",
        "Title": "Organize\r\nAllElementInform\r\nAsDictionary",
        "Nodes": [
          "56d974f4c57842debb75c23ba9bd556b"
        ],
        "Left": 4047.3381444612633,
        "Top": -9147.6171436933219,
        "Width": 742.41666666666674,
        "Height": 460.0,
        "FontSize": 96.0,
        "InitialTop": -8791.6171436933219,
        "InitialHeight": 145.0,
        "TextblockHeight": 346.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4be798c8b6254d078f7e07829a0f6249",
        "Title": " Visual Manager",
        "Nodes": [
          "fe3b2cdc50cf47d38d33ff5d1efb05e3",
          "bcd8d5b34eed401d801a7fdf3cffa9b5",
          "5037bcd219aa477a8c22f39c10880982",
          "9c84dda291a8415b917aa2fcdf70beb7"
        ],
        "Left": 16525.357955304942,
        "Top": -8173.9400938784311,
        "Width": 1236.700574327373,
        "Height": 255.0,
        "FontSize": 96.0,
        "InitialTop": -8048.9400938784311,
        "InitialHeight": 163.97024857760698,
        "TextblockHeight": 115.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "ac26e09ec57145d8895b62e66c6ffe60",
        "Title": " Output Manager",
        "Nodes": [
          "b112bc66fc5d4b87b3e77f77f5c6818a",
          "fccb87c82be349b7a9ffb0a6fbfd3e9f",
          "d692e39000f04911a3bcf1bfae5c52bf",
          "0c010548dd0748e69cf336c17a3bd0c4"
        ],
        "Left": 8044.7301842465422,
        "Top": -8417.895299181946,
        "Width": 8448.4063749723027,
        "Height": 516.50484027869243,
        "FontSize": 72.0,
        "InitialTop": -8321.895299181946,
        "InitialHeight": 516.50484027869243,
        "TextblockHeight": 86.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "3fc5cb7cb32f4906a62225f8f0ef2f62",
        "Title": "<Func 1>M ",
        "Nodes": [
          "fa4ca2e8538942c1b6dba1ac9f9a18d1",
          "0f9849044d7846858999378c6205d12e",
          "e524bb8e47c74b07abd9c940142dcac5"
        ],
        "Left": 9170.3294045980729,
        "Top": -8863.5816128543374,
        "Width": 7369.1000697496711,
        "Height": 402.62491263980337,
        "FontSize": 96.0,
        "InitialTop": -8738.5816128543374,
        "InitialHeight": 365.28773441450176,
        "TextblockHeight": 115.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "c6d69692e159470d876dba9597d0063d",
        "Title": " Input Manager",
        "Nodes": [
          "7bb1f899fee344d6944220cac8c8f80b",
          "e6e6d806bc004da591afa497599a8c29"
        ],
        "Left": 8036.8691215291256,
        "Top": -8839.0880663430362,
        "Width": 1033.7062319649776,
        "Height": 374.66264106381277,
        "FontSize": 72.0,
        "InitialTop": -8743.0880663430362,
        "InitialHeight": 374.66264106381277,
        "TextblockHeight": 86.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "5037bcd219aa477a8c22f39c10880982",
        "Title": "New Note",
        "Nodes": [],
        "Left": 17678.058529632315,
        "Top": -8029.9698453008241,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9c84dda291a8415b917aa2fcdf70beb7",
        "Title": "New Note",
        "Nodes": [],
        "Left": 16539.126524455904,
        "Top": -8047.7866042337337,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0c010548dd0748e69cf336c17a3bd0c4",
        "Title": "New Note",
        "Nodes": [],
        "Left": 15912.760370826581,
        "Top": -7950.3904589032536,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d692e39000f04911a3bcf1bfae5c52bf",
        "Title": "New Note",
        "Nodes": [],
        "Left": 8054.7301842465422,
        "Top": -8321.895299181946,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e6e6d806bc004da591afa497599a8c29",
        "Title": "New Note",
        "Nodes": [],
        "Left": 8046.8691215291256,
        "Top": -8513.4254252792234,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -147.96624358629197,
    "Y": 1536.6392745407302,
    "Zoom": 0.11494632244952112
  }
}