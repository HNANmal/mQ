{
  "Uuid": "de1ef780-9ab7-46fa-acef-be9b9362e1b7",
  "IsCustomNode": false,
  "Description": null,
  "Name": "12 Windows (220104)창문 meterial 수정 필요",
  "ElementResolver": {
    "ResolutionMap": {
      "DesignScript.Builtin.Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "Cuboid": {
        "Key": "Autodesk.DesignScript.Geometry.Cuboid",
        "Value": "ProtoGeometry.dll"
      },
      "Solid": {
        "Key": "Autodesk.DesignScript.Geometry.Solid",
        "Value": "ProtoGeometry.dll"
      },
      "Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "Location.ByLatitudeAndLongitude": {
        "Key": "DynamoUnits.Location",
        "Value": "DynamoUnits.dll"
      },
      "Autodesk.DesignScript.Geometry.Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "Revit.Elements.Level": {
        "Key": "Revit.Elements.Level",
        "Value": "RevitNodes.dll"
      },
      "Revit.Elements": {
        "Key": "Revit.Elements.Level",
        "Value": "RevitNodes.dll"
      },
      "Elements": {
        "Key": "Revit.Elements.Level",
        "Value": "RevitNodes.dll"
      },
      "Vector": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      },
      "List.FilterByBoolMask": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "Surface": {
        "Key": "Autodesk.DesignScript.Geometry.Surface",
        "Value": "ProtoGeometry.dll"
      },
      "PolyCurve": {
        "Key": "Autodesk.DesignScript.Geometry.PolyCurve",
        "Value": "ProtoGeometry.dll"
      },
      "Geometry": {
        "Key": "Autodesk.DesignScript.Geometry.Geometry",
        "Value": "ProtoGeometry.dll"
      },
      "GeometryColor": {
        "Key": "Modifiers.GeometryColor",
        "Value": "GeometryColor.dll"
      },
      "Element": {
        "Key": "Revit.Elements.Element",
        "Value": "RevitNodes.dll"
      },
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "dc0c07811c6a4659bfa6cc2d3805aa6e",
      "Name": "File Path",
      "Type": "string",
      "Value": "..\\DMS(Data Matching Schedule)_R0(Seq1-2).xlsx",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "a7ef039546d442fca5219a52667aa54f",
      "Name": "T:EA / F:M2",
      "Type": "boolean",
      "Value": "false",
      "Description": "Selection between a true and false.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonStringNode, PythonNodeModels",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "e2fc7e3c54f64dc094e974cc098a6173",
      "Inputs": [
        {
          "Id": "081a5843aba947ca9a5440a89d881ef8",
          "Name": "script",
          "Description": "Python script to run.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14319d98718244d5b23ed04f0a034a94",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9440046c3c90475ea7af923a06716c65",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83d55ffea58f4e7bbe2b99378620978c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs a Python script from a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "_InputElement;\n_InputData;",
      "Id": "49f0559a593c4240a3460e3f4a14b37a",
      "Inputs": [
        {
          "Id": "e93a9bf6da834b038ad0c36f04e808dd",
          "Name": "_InputElement",
          "Description": "_InputElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8bbc589702449d7a92cb0fc734640d1",
          "Name": "_InputData",
          "Description": "_InputData",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1aba341adf174cdd80f6109266e10bdd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83040db6f7814b4099a6ded14c14c1f2",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Windows\";",
      "Id": "56e573d852f74e768c456b3d100653e2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9b971f62aa274977bc4b7c704ca0b029",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\whcho\\01 Project\\현대eng\\220104\\DMS(Data Matching Schedule)_R0(Seq1-2).xlsx",
      "InputValue": "..\\DMS(Data Matching Schedule)_R0(Seq1-2).xlsx",
      "NodeType": "ExtensionNode",
      "Id": "dc0c07811c6a4659bfa6cc2d3805aa6e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dc757565e2f24e3a9fa3345657cca15e",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport urllib.request\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputURL = \"https://raw.githubusercontent.com/HNANmal/mQ/master/Hdynlib/General/ImportExcel.py\"\r\n\r\n# Place your code below this line\r\nreq = urllib.request\r\ndata = req.urlopen(inputURL)\r\n\r\nresult = data.read().decode(\"utf-8\")\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "8fff471c0b214bcc98cb3c9a7a8582c9",
      "Inputs": [
        {
          "Id": "3a33adfd63b4476484a7a03292355093",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9554ff85c9df43a18440e102a140eedd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputElements = IN[0]\r\ninputData = IN[1]\r\n#inputSheetName = IN[2]\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nusedFamilyTypeOfModeling = getUsedFamilyTypeOfModeling(inputElements)\r\nexcelWholeDataSet = inputData#importExcel(inputFilePath, inputSheetName)\r\ntrExcelWholeDataSet = list(zip(*excelWholeDataSet))\r\nexcelColumnDataSet = createExcelDataDictionary(trExcelWholeDataSet)\r\nexcelRowDataSet = createExcelDataDictionary(excelWholeDataSet)\r\nColumnIndexOfUsedFamilyType = findTargetIndex(usedFamilyTypeOfModeling, trExcelWholeDataSet)\r\nColDataSetOfUsedFamilyType = GetValueAtKeys(ColumnIndexOfUsedFamilyType, excelColumnDataSet)\r\nmaterialPerElementFromModeling = []\r\nfor i in inputElements:\r\n    materialPerElementFromModeling.append(i.GetMaterials())\r\n#list(map(lambda x: x.GetMaterials, inputElements)) \"맵함수로 처리하면 리스트화 할 때 타입 변환 오류 남\"\r\n\r\ntargetWMRowIndex = []\r\nfor i in ColDataSetOfUsedFamilyType:\r\n    targetWMRowIndex.append(findTargetIndex(['000'], i))\r\n\r\nrowDataSetOfUsedWM = []\r\nfor i in targetWMRowIndex:\r\n    rowDataSetOfUsedWM.append(GetValueAtKeys(i, excelRowDataSet))\r\n\r\nworkGroup = []\r\nfor i in rowDataSetOfUsedWM:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(j[0])\r\n    workGroup.append(tmp)\r\n    \r\nworkMaster = []\r\nfor i in range(len(ColDataSetOfUsedFamilyType)):\r\n    tmp=[]\r\n    for k in targetWMRowIndex[i]:\r\n        tmp.append(ColDataSetOfUsedFamilyType[i][k])\r\n    workMaster.append(tmp)\r\n\r\nmatchedWM = []\r\nfor i in range(len(workGroup)):\r\n    tmp = []\r\n    for j in range(len(workGroup[i])):\r\n        fullWM = workGroup[i][j] +\"-\"+ workMaster[i][j]\r\n        tmp.append(fullWM)\r\n    matchedWM.append(tmp)\r\n\r\nmatchedWorkGruopAndMasterCode = []\r\nfor i in matchedWM:\r\n    if len(i) > 0:\r\n        matchedWorkGruopAndMasterCode.append(i)\r\n    else:\r\n        pass\r\n\r\nmatchedWMDescription = []\r\nfor i in rowDataSetOfUsedWM:\r\n    tmp=[]\r\n    for j in i:\r\n        tmp.append(j[1] +\" \"+ j[2] +\" \"+ j[3] +\" \"+ \"(\"+ j[4] +\")\")\r\n    if len(tmp) > 0:\r\n        matchedWMDescription.append(tmp)\r\n    else:\r\n        pass\r\n\r\nmatchedWMUnit = []\r\nfor i in rowDataSetOfUsedWM:\r\n    tmp=[]\r\n    for j in i:\r\n        tmp.append(j[4])\r\n    if len(tmp) > 0:\r\n        matchedWMUnit.append(tmp)\r\n    else:\r\n        pass\r\n\r\nmatchedWorkGruopAndMasterCode_flat = list(itertools.chain(*matchedWorkGruopAndMasterCode))\r\nmatchedWMDescription_flat = list(itertools.chain(*matchedWMDescription))\r\n\r\ndic_WMandDescription_Excel = {}\r\nfor i in range(len(matchedWorkGruopAndMasterCode_flat)):\r\n    dic_WMandDescription_Excel[matchedWorkGruopAndMasterCode_flat[i]] = matchedWMDescription_flat[i]\r\n\r\nusedFamilyTypeInExcelOrder = list(map(lambda x: x[3], ColDataSetOfUsedFamilyType))\r\nusedFamilyCodeInExcelOrder = findUnique(list(map(lambda x: x.split('_')[0], usedFamilyTypeInExcelOrder)))\r\n\r\ndic_FamilyCodeandWM = {}\r\nfor i in range(len(usedFamilyCodeInExcelOrder)):\r\n    dic_FamilyCodeandWM[usedFamilyCodeInExcelOrder[i]] = matchedWorkGruopAndMasterCode[i]\r\n\r\nworkMasterCodePerElement = []\r\nfamilyCodePerElem = list(map(lambda x: x.Name.split('_')[0], inputElements))\r\nfor i in familyCodePerElem:\r\n    workMasterCodePerElement.append(dic_FamilyCodeandWM[i])\r\n\r\nmaterialNamePerElem = []\r\nfor i in materialPerElementFromModeling:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(j.Name)\r\n    materialNamePerElem.append(tmp)\r\n\r\nWMPerElementFromModeling = []\r\nfor i in materialNamePerElem:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(j.split('_')[0])\r\n    WMPerElementFromModeling.append(tmp)\r\n\r\nspecPerElementFromModeling = []\r\nfor i in materialNamePerElem:\r\n    tmp = []\r\n    for j in i:\r\n        a = j.split('_')\r\n        del a[0]\r\n        b = \" \".join(a)\r\n        tmp.append(b)\r\n    specPerElementFromModeling.append(tmp)\r\n\r\nWMPerElementFromModeling_flat = list(itertools.chain(*WMPerElementFromModeling))\r\nspecPerElementFromModeling_flat = list(itertools.chain(*specPerElementFromModeling))\r\n\r\ndic_WMandDescription_Model = {}\r\nfor i in range(len(WMPerElementFromModeling_flat)):\r\n    dic_WMandDescription_Model[WMPerElementFromModeling_flat[i]] = specPerElementFromModeling_flat[i]\r\n\r\ndef findAllKeys(dict):\r\n    result = []\r\n    for key in dict.keys():\r\n        result.append(key)\r\n    return result\r\n\r\ndef findAllValues(dict):\r\n    result = []\r\n    for key in dict.keys():\r\n        result.append(dict[key])\r\n    return result\r\n\r\nkeys_WMandDescription_Model = findAllKeys(dic_WMandDescription_Model)\r\nkeys_WMandDescription_Excel = findAllKeys(dic_WMandDescription_Excel)\r\n\r\nkeys_WMandDescription_Both = list(set(keys_WMandDescription_Model + keys_WMandDescription_Excel))\r\nvalues_WMandDescription_Both = []\r\nfor i in keys_WMandDescription_Both:\r\n    if i in keys_WMandDescription_Model:\r\n        values_WMandDescription_Both.append(dic_WMandDescription_Model[i])\r\n    else:\r\n        values_WMandDescription_Both.append(dic_WMandDescription_Excel[i])\r\n\r\ndic_WMandDescription_Both = {}\r\nfor i in range(len(keys_WMandDescription_Both)):\r\n    dic_WMandDescription_Both[keys_WMandDescription_Both[i]] = values_WMandDescription_Both[i]\r\n\r\nworkMasterCodePerElementFromBoth = []\r\nfor i in range(len(workMasterCodePerElement)):\r\n    #tmp = []\r\n    a = WMPerElementFromModeling[i] + workMasterCodePerElement[i]\r\n    b = findUnique(a)\r\n    workMasterCodePerElementFromBoth.append(b)\r\n\r\nspecPerElement = []\r\nfor i in workMasterCodePerElementFromBoth:\r\n    tmp = []\r\n    for j in i:\r\n        tmp.append(dic_WMandDescription_Both[j])\r\n    specPerElement.append(tmp)\r\n\r\nfullWMCodeDescriptionPerElement = []\r\nfor i in range(len(workMasterCodePerElementFromBoth)):\r\n    tmp = []\r\n    for j in range(len(workMasterCodePerElementFromBoth[i])):\r\n        a = workMasterCodePerElementFromBoth[i][j] +\": \"+ specPerElement[i][j]\r\n        tmp.append(a)\r\n    fullWMCodeDescriptionPerElement.append(tmp)\r\n\r\nfullWMinfo = {\r\n\"AllElement\": inputElements,\r\n\"WorkMasterCodePerFamilyType\": dic_FamilyCodeandWM,\r\n\"WorkMasterCodePerElementBoth\": workMasterCodePerElementFromBoth,\r\n\"FullWMCodeDescriptionPerElement\": fullWMCodeDescriptionPerElement\r\n}\r\n\r\n\r\n\r\nresult = fullWMinfo\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "31ea120b37ad4c639a46325866ecf0a9",
      "Inputs": [
        {
          "Id": "8c598a7d1e6c431cb01d4653a9167946",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "045bc61e8e6642bc90afece5de5e8626",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd6f435990f8445db9b1866e5e373825",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "8d5e4c9e947b4373908f00a6eeb5e90f",
      "Inputs": [
        {
          "Id": "7978949f21ca4d37a492b72ab563c5a0",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "682a6e59e05a48bbaca0b23b29a185c9",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 703,
      "SelectedString": "OST_Windows",
      "NodeType": "ExtensionNode",
      "Id": "5ac1aa527df14e2aba371b5c00b42d6a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fe21e4de29d34a5a9d94728966c704e0",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "a497d1c87e184719ba1d717db121d724",
      "Inputs": [
        {
          "Id": "0d379d6f62454cc3a3b6622f7df2a0af",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "49622a22783a40889ee4f1fe8dc53b15",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6773a73e535e48038c34205e8d3f2ed4",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Family\";",
      "Id": "2170da120d884ff09f6d158edc35e3c0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2458c3a10a8e411b8dc4d523b2499c2d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "15e6980a67b64f228fcae7596ac414f8",
      "Inputs": [
        {
          "Id": "d30f5bca94314f3285702be6c730a89d",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57a9caf494c14df1999bb06835b8fe07",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "4c768dd8463e419b8bfc6d33cee01897",
      "Inputs": [
        {
          "Id": "d5f4d6b48e2c4703b4ebf75c55d11cad",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7d0de92b99542a6abab23920bdc87c8",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1039385e3368473f98a25b2d63ddb3c0",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aced7b58b774404b92a0f7cffd186b2f",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Opening\";",
      "Id": "6c821779955646099c739661263d4edd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a8dac63e4599476bbbd7c83271207ef7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "640c498c59e043f589490cde7a15bab3",
      "Inputs": [
        {
          "Id": "67a68cf3d4ce42628aac6a533204647b",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "daf6b3ad755d46cb93f1e379660b1e32",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3e53460af1e41279086cab02b52399c",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bf64542cdc3b4b44bd6939a4f15e0092",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6b9b667bf93e4268be415108bfad1ff9",
      "Inputs": [
        {
          "Id": "9893e17172ae4966be6f5b60b24e25e7",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac32c331dd494393a1e0cdc82821bf44",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "22fb847c12814115a0ee14cb6be6bf8e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "61d16ea639a846b79a6b01f5d768a843",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDict = IN[0]\r\ninputIndex = IN[1]\r\n\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nfullWMCodeDescriptionPerElement = inputDict[\"FullWMCodeDescriptionPerElement\"]\r\nelement = inputDict[\"Element\"]\r\nfamilyCode = inputDict[\"FamilyCode\"]\r\nfamilyCode_unique = findUnique(familyCode)\r\ntargetFamilyCode = familyCode_unique[inputIndex]\r\ntargetIndex = []\r\nfor i in range(len(familyCode)):\r\n    if targetFamilyCode in familyCode[i]:\r\n        targetIndex.append(i)\r\n    else:\r\n        pass\r\n\r\ntargetElements = []\r\nfor i in targetIndex:\r\n    targetElements.append(element[i])\r\n\r\ntargetFamilyCode = []\r\nfor i in targetIndex:\r\n    targetFamilyCode.append(element[i].Name)\r\n\r\nWMforTargetElements = []\r\nfor i in targetIndex:\r\n    WMforTargetElements.append(fullWMCodeDescriptionPerElement[i])\r\n\r\nWMforTargetElements_flat = list(itertools.chain(*WMforTargetElements))\r\ntargetWMunique = findUnique(WMforTargetElements_flat)\r\n\r\nresultDict = {\r\n\"TargetElements\": targetElements,\r\n\"TargetFamilyCode\": targetFamilyCode,\r\n\"WMforTargetElements\": WMforTargetElements,\r\n\"TargetWMunique\": targetWMunique\r\n}\r\n\r\n\r\n\r\nresult = resultDict\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "f1c15fe765224fc78728f60670a3a467",
      "Inputs": [
        {
          "Id": "eb487b4a81464ddca8954ecf5886bef1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b327ce9e43e44ea5a52fdef17f2599cd",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d56da4e415e4dceaba0d5b6c6f78cc6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDict = IN[0]\r\n\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nelement = inputDict[\"AllElement\"]\r\nelementType = []\r\nfor i in element:\r\n    elementType.append(i.Name)\r\nfamilyCode = []\r\nfor i in elementType:\r\n    familyCode.append(i.split(\"_\")[0])\r\nfullWMCodeDescriptionPerElement = inputDict[\"FullWMCodeDescriptionPerElement\"]\r\n\r\nresultDict = {\r\n\"Element\": element,\r\n\"ElementType\": elementType,\r\n\"FamilyCode\": familyCode,\r\n\"FullWMCodeDescriptionPerElement\": fullWMCodeDescriptionPerElement\r\n}\r\n\r\n\r\n\r\nresult = resultDict\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "fc16c0f883e8462691597320fa331c47",
      "Inputs": [
        {
          "Id": "551d9fbf8dbc4389a419ee8e6ad86dc3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "955dc5fc52fd498f8eddaa7a2dc9d5aa",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "962c5decd0554e2b82cfb60b0f9e023d",
      "Inputs": [
        {
          "Id": "167ae80a101f4421be698edf76e0ec7f",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ecec3ffb43d4356a920c8146dac2d71",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDict = IN[0]\r\ninputIndex = IN[1]\r\n\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nfullWMCodeDescriptionPerElement = inputDict[\"FullWMCodeDescriptionPerElement\"]\r\nelement = inputDict[\"Element\"]\r\nfamilyCode = inputDict[\"FamilyCode\"]\r\nfamilyCode_unique = findUnique(familyCode)\r\ntargetFamilyCode = familyCode_unique[inputIndex]\r\ntargetIndex = []\r\nfor i in range(len(familyCode)):\r\n    if targetFamilyCode in familyCode[i]:\r\n        targetIndex.append(i)\r\n    else:\r\n        pass\r\n\r\ntargetElements = []\r\nfor i in targetIndex:\r\n    targetElements.append(element[i])\r\n\r\ntargetFamilyCode = []\r\nfor i in targetIndex:\r\n    targetFamilyCode.append(element[i].Name)\r\n\r\nWMforTargetElements = []\r\nfor i in targetIndex:\r\n    WMforTargetElements.append(fullWMCodeDescriptionPerElement[i])\r\n\r\nWMforTargetElements_flat = list(itertools.chain(*WMforTargetElements))\r\ntargetWMunique = findUnique(WMforTargetElements_flat)\r\n\r\nresultDict = {\r\n\"TargetElements\": targetElements,\r\n\"TargetFamilyCode\": targetFamilyCode,\r\n\"WMforTargetElements\": WMforTargetElements,\r\n\"TargetWMunique\": targetWMunique\r\n}\r\n\r\n\r\n\r\nresult = resultDict\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "2368db46e3434d39a0d9d3f2a51a2dd6",
      "Inputs": [
        {
          "Id": "de92c3d343184d8fa3b2b0e909005924",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "023e392f2d524f7c86e5da22a8822de3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8b841f29b3e4fa78d9afaed04bf269f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "db5a14f0d8224013a02d4b132d328dc0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5eef3823b95048de99256628bac79770",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "48970d0e51c24ff6a7dd7f9af4da6927",
      "Inputs": [
        {
          "Id": "994f8a3523c5495cb9ec5797a99c8c61",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69dddc77aeff44b5bc25ff4c292e0e2a",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDict = IN[0]\r\ninputIndex = IN[1]\r\n\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nfullWMCodeDescriptionPerElement = inputDict[\"FullWMCodeDescriptionPerElement\"]\r\nelement = inputDict[\"Element\"]\r\nfamilyCode = inputDict[\"FamilyCode\"]\r\nfamilyCode_unique = findUnique(familyCode)\r\ntargetFamilyCode = familyCode_unique[inputIndex]\r\ntargetIndex = []\r\nfor i in range(len(familyCode)):\r\n    if targetFamilyCode in familyCode[i]:\r\n        targetIndex.append(i)\r\n    else:\r\n        pass\r\n\r\ntargetElements = []\r\nfor i in targetIndex:\r\n    targetElements.append(element[i])\r\n\r\ntargetFamilyCode = []\r\nfor i in targetIndex:\r\n    targetFamilyCode.append(element[i].Name)\r\n\r\nWMforTargetElements = []\r\nfor i in targetIndex:\r\n    WMforTargetElements.append(fullWMCodeDescriptionPerElement[i])\r\n\r\nWMforTargetElements_flat = list(itertools.chain(*WMforTargetElements))\r\ntargetWMunique = findUnique(WMforTargetElements_flat)\r\n\r\nresultDict = {\r\n\"TargetElements\": targetElements,\r\n\"TargetFamilyCode\": targetFamilyCode,\r\n\"WMforTargetElements\": WMforTargetElements,\r\n\"TargetWMunique\": targetWMunique\r\n}\r\n\r\n\r\n\r\nresult = resultDict\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "2de4b26426af41f8a63596b033c14f43",
      "Inputs": [
        {
          "Id": "ba7ea17e0ce44240a1bb25edff28e67f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "12345ddcb1c24c7d9fbde9ec81751f98",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a18110d93b664e8cb0ab67cc30df458b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "174507af1186489b975adcaf64ca35b8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "043c1c7128914ccfa514815d835caf16",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "aa67427de3034fc7b75f0e068e3f827b",
      "Inputs": [
        {
          "Id": "b3051631700f47aca5b3e49784014e3f",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ebf3524481b84987804d65e9aefb4656",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDict = IN[0]\r\ninputIndex = IN[1]\r\n\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nfullWMCodeDescriptionPerElement = inputDict[\"FullWMCodeDescriptionPerElement\"]\r\nelement = inputDict[\"Element\"]\r\nfamilyCode = inputDict[\"FamilyCode\"]\r\nfamilyCode_unique = findUnique(familyCode)\r\ntargetFamilyCode = familyCode_unique[inputIndex]\r\ntargetIndex = []\r\nfor i in range(len(familyCode)):\r\n    if targetFamilyCode in familyCode[i]:\r\n        targetIndex.append(i)\r\n    else:\r\n        pass\r\n\r\ntargetElements = []\r\nfor i in targetIndex:\r\n    targetElements.append(element[i])\r\n\r\ntargetFamilyCode = []\r\nfor i in targetIndex:\r\n    targetFamilyCode.append(element[i].Name)\r\n\r\nWMforTargetElements = []\r\nfor i in targetIndex:\r\n    WMforTargetElements.append(fullWMCodeDescriptionPerElement[i])\r\n\r\nWMforTargetElements_flat = list(itertools.chain(*WMforTargetElements))\r\ntargetWMunique = findUnique(WMforTargetElements_flat)\r\n\r\nresultDict = {\r\n\"TargetElements\": targetElements,\r\n\"TargetFamilyCode\": targetFamilyCode,\r\n\"WMforTargetElements\": WMforTargetElements,\r\n\"TargetWMunique\": targetWMunique\r\n}\r\n\r\n\r\n\r\nresult = resultDict\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "f97111acb92944e893478179aecef2be",
      "Inputs": [
        {
          "Id": "d10cbfa555004c3f9d70ffae0f4be5f9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "216118d321fd44bb939c70d5f0c5a926",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f41de225edf3444bb115479ad5dcdd1c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "4;",
      "Id": "aaad887ce4b24c91b2475cde8f58c17a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5143222010dd49daaec0ce929b61059e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "0908dcc69fa54063a81240c357574e9d",
      "Inputs": [
        {
          "Id": "c06bdda6e8134593a85c2c57b9387479",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65a97340576b4fbfb82141812192da2c",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "bc86d330cc524ac78e2077967be089a0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5b608d6c37ab47749b560a8763a2c7a7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\ndef findUnique(inputs):\r\n    result = []\r\n    for i in inputs:\r\n        if i in result:\r\n            pass\r\n        else:\r\n            result.append(i)\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDict = IN[0]\r\ninputIndex = IN[1]\r\n\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef getUsedFamilyTypeOfModeling(elements):\r\n    familyCode = list(map(lambda x: x.Name.split('_')[0], elements))\r\n    unq_familyCode = findUnique(familyCode)\r\n    return unq_familyCode\r\n    \r\ndef createExcelDataDictionary(values):\r\n    result = {}\r\n    for i in range(len(values)):\r\n        result[str(i)] = values[i]\r\n    return result\r\n\r\ndef findTargetIndex(targets, list):\r\n    result = []\r\n    for target in targets:\r\n        for i in range(len(list)):\r\n            if target in str(list[i]):\r\n                result.append(i)\r\n            else:\r\n                pass\r\n    result.sort()\r\n    return result\r\n    \r\ndef GetValueAtKeys(keys, dictionary):\r\n    result = [] \r\n    for i in keys:\r\n        result.append(dictionary[str(i)])\r\n    return result\r\n\r\n\r\n# Place your code below this line\r\nfullWMCodeDescriptionPerElement = inputDict[\"FullWMCodeDescriptionPerElement\"]\r\nelement = inputDict[\"Element\"]\r\nfamilyCode = inputDict[\"FamilyCode\"]\r\nfamilyCode_unique = findUnique(familyCode)\r\ntargetFamilyCode = familyCode_unique[inputIndex]\r\ntargetIndex = []\r\nfor i in range(len(familyCode)):\r\n    if targetFamilyCode in familyCode[i]:\r\n        targetIndex.append(i)\r\n    else:\r\n        pass\r\n\r\ntargetElements = []\r\nfor i in targetIndex:\r\n    targetElements.append(element[i])\r\n\r\ntargetFamilyCode = []\r\nfor i in targetIndex:\r\n    targetFamilyCode.append(element[i].Name)\r\n\r\nWMforTargetElements = []\r\nfor i in targetIndex:\r\n    WMforTargetElements.append(fullWMCodeDescriptionPerElement[i])\r\n\r\nWMforTargetElements_flat = list(itertools.chain(*WMforTargetElements))\r\ntargetWMunique = findUnique(WMforTargetElements_flat)\r\n\r\nresultDict = {\r\n\"TargetElements\": targetElements,\r\n\"TargetFamilyCode\": targetFamilyCode,\r\n\"WMforTargetElements\": WMforTargetElements,\r\n\"TargetWMunique\": targetWMunique\r\n}\r\n\r\n\r\n\r\nresult = resultDict\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "b534fe4e51c8496e875f22fb79e3e0c8",
      "Inputs": [
        {
          "Id": "845c7b956d32495da672f7aab4677649",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9a0b8e96c8b4560b360e07b065eb204",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb468417e0f3425fa182a2cf41fa5a4c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ngeoColors = IN[0]\r\nblnForVisual = IN[1]\r\n\r\n# Place your code below this line\r\nif blnForVisual == True:\r\n    result = geoColors\r\nelse:\r\n    result = 0\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "2b341f46552144c88c105ea3cdb07a2e",
      "Inputs": [
        {
          "Id": "39884181c6c941e59cda44226b706f5d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48140ea86abc43629eb8995a7854643f",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69cfb8681d514e129d7b19ce1d08112b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "2baaf4492dc24e9dbe3d464e12218fad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a687ef6208a1454faf06caa154e62282",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "MainOutput;\nRefOutput_geoColor;",
      "Id": "1e00b70f200044a880ee443df64e2515",
      "Inputs": [
        {
          "Id": "f0132289cfb447f2b3acf782e6d2c495",
          "Name": "MainOutput",
          "Description": "MainOutput",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ecd7eb6520044b8e9015095778847c32",
          "Name": "RefOutput_geoColor",
          "Description": "RefOutput_geoColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e6f4a2545dd4d6d93b2e1107b2af976",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2efd42b0572c463681d1126e6106a156",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "{\n\"FuncValues\": _FuncValues,\n\"FuncValuesUnit\": _FuncValuesUnit\n};",
      "Id": "b3ea4fb3ba974ff3bb3a5e2d7b3793bc",
      "Inputs": [
        {
          "Id": "b637e18cf9264eaa864a95cfac3b1f27",
          "Name": "_FuncValues",
          "Description": "_FuncValues",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0cd6972de75e49d28c92a3a8459b293d",
          "Name": "_FuncValuesUnit",
          "Description": "_FuncValuesUnit",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5fe29ebef2e4478bae081dc648d77bb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ngeoColors = IN[0]\r\nblnForVisual = IN[1]\r\n\r\n# Place your code below this line\r\nif blnForVisual == True:\r\n    result = geoColors\r\nelse:\r\n    result = 0\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "16fcd0196a944a8cbaaa3e35612232b5",
      "Inputs": [
        {
          "Id": "3a0c57dea6144582a7b01237299355fd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c8cbbde185d948449bbdd6bbd494a46c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "778d898689e24e1c88007b6171f241b8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "aff72e2f052f4e679cb7580a36a5a6a3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9aa29bd0c86143678a60e00f4ca4c697",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "4fa9a5551e2e4ab0b54d73ab117fac37",
      "Inputs": [
        {
          "Id": "f541265a14bc4df08f045c72fcac556e",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "778c1d0143fb4b4cb8962e60067ffe6c",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba1340b222a04b84abdb288f75cfa364",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fddd2764ebe742e5941218a386256c07",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either the True or False input depending on what boolean value is toggled in the test input."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "a7ef039546d442fca5219a52667aa54f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e0ab9ad4cecf49dfbd9b77e6aa54ec9b",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "MainOutput;\nRefOutput_geoColor;",
      "Id": "d2df4e9d4cd34857ab3cf6c24d578a42",
      "Inputs": [
        {
          "Id": "181fcf0f073d4615ae8de6df6dd961ae",
          "Name": "MainOutput",
          "Description": "MainOutput",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d815db7608f54c7b9abe6209180964bb",
          "Name": "RefOutput_geoColor",
          "Description": "RefOutput_geoColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1a4f6ea891f4179b506e73f7cf139cf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b6a615f9320419e8857df77e10d66e3",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"EA\";",
      "Id": "631303a76e54485f8ff39ff23aa3d904",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "220b803a93a841b4bd279e955d916423",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "{\n\"FuncValues\": _FuncValues,\n\"FuncValuesUnit\": _FuncValuesUnit\n};",
      "Id": "4a97e7613f2740ca806df4f264c6fb2d",
      "Inputs": [
        {
          "Id": "8ba9ee07b812469ca24c48e3f4cb305e",
          "Name": "_FuncValues",
          "Description": "_FuncValues",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "860633015ed14978bec35ca26cb3fe27",
          "Name": "_FuncValuesUnit",
          "Description": "_FuncValuesUnit",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adaf33faed9940b5bef073ba9bf328ac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "area/1000000;",
      "Id": "c08517a2e7324610ba0f67bf3ebb4215",
      "Inputs": [
        {
          "Id": "dbb94ff3a4ef4ce6b4a199b6e269f16f",
          "Name": "area",
          "Description": "area",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10e1debd1b7948b39579e9dd94e16e26",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "f6361e6b2d494f02b2a6840c9ec4eb9f",
      "Inputs": [
        {
          "Id": "cd03577df8464d93a004fda6d814a0ea",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20cc1c9fcabd44db92723225db067e7d",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "afade67469b242e099bc1c9542dd03de",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "9ad3c9f17b5140439e485d458ff7e112",
      "Inputs": [
        {
          "Id": "697f5869e12e453793d381993f84c613",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9796d1c82dfa4088880b742a7571104b",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"M2\";",
      "Id": "1bffb3b61ead47149446221fd4aa6a12",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "00874a0e4e5445b39ecfb2d167c98c67",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "70ca1002bcd14cf0a4ee7782d584c8b7",
      "Inputs": [
        {
          "Id": "e2a89a59bfe543a19dd09151a85613c7",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ddfd8414f89483b9b7c813bb9834f53",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "48184c8ade7e4ffc9307f46f4501cd35",
      "Inputs": [
        {
          "Id": "45d0ad9244014ab8860692211174ad1c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e09eb4e60dfb47f0ae81dc602794ee9c",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2240b383ecb040e1a7171cc2c2d48035",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "a0d84af3357b4356b8ec7cf6794ec3b5",
      "Inputs": [
        {
          "Id": "0b9fd3cc8265404684e591c77543a63f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c1d7ba43c214873947fd5a6a51fcef0",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6dcb6a6229214a2dbe39ba8b206b56d9",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "3b98f9ff512d431e81955bfa30250054",
      "Inputs": [
        {
          "Id": "569882e1c4b44eb09707ce12247d7aff",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1bbfea78b094bc1bf049c1ff1fc7830",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db6d2e42a432466d91e17391743bc0eb",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"TargetElements\";",
      "Id": "870bc9d8a0ae4f22bfd5dddea3a23006",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6607d38a599047ff9eeb835eff5a5ed5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "54ed4198e5c4453d9a0686e2daa4b017",
      "Inputs": [
        {
          "Id": "a6fd5c0966824600aaebd9d279ec595b",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1ac510d681f4adebefff5e0a8a423d1",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "38ffa92925fe4f8ea52958e93b5a7bcb",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"TargetElements\";",
      "Id": "623de91c71344bc2a62061272fc4720b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c5b5b551c3404bf0bfcd57cfd3b6100a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "cfcc146c50f8476898b96cec2a36fb45",
      "Inputs": [
        {
          "Id": "b7cc0deb181d42b38910bf4b0c401466",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dcc4c543558c4108893d364eadf33219",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a7792a76778c4f31b49585bfe931b55d",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Height\";\n\"Width\";",
      "Id": "dd8c3c65dce54d7190086ce0716565e4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1513d909357842b391be4f2fc1f0631f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3ef314451ea4b83a1060ab0841dcdc6",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "8c4087d2c57e4eec87ee31da2be11155",
      "Inputs": [
        {
          "Id": "36cdfd0f9fb8475f910bb66d4aa8fbc7",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3901e336578640e68750b91d4879cb1d",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "MainInput;\nRefInput1;\nRefInput2;",
      "Id": "533526958eca4eaea12ffd39846b4bd3",
      "Inputs": [
        {
          "Id": "08b4e15c0e3c49f6b87401dc670f91a4",
          "Name": "MainInput",
          "Description": "MainInput",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1c7e19fec4d4ec0af6534c418772639",
          "Name": "RefInput1",
          "Description": "RefInput1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4612b8f12b84430d912aa91d228055cd",
          "Name": "RefInput2",
          "Description": "RefInput2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f3ffb4bb65d4a27b0292b92f3c9ff85",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "329166fc5b764a9faacbbf86ed4188d5",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1462f4dc3bf04cefb961a8947b6324a4",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "MainInput;\nRefInput1;\nRefInput2;",
      "Id": "fbd2fa3c7669455fb99b941161938b69",
      "Inputs": [
        {
          "Id": "1fd3eca03e8744ab93d300e57c4ba62b",
          "Name": "MainInput",
          "Description": "MainInput",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fdf11eaee448466bb15ff6665ca49d5a",
          "Name": "RefInput1",
          "Description": "RefInput1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90cc3575533549bd93026309a913f023",
          "Name": "RefInput2",
          "Description": "RefInput2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fa731ac4b86417ab84a46f507b07b39",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c116fca9319401495ad5447ea84fccb",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f0d487e91a8446886c04c7dda448ed6",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ref;",
      "Id": "bd1690f483864bbabfd153a5e9d9712e",
      "Inputs": [
        {
          "Id": "7af9c635203146f5be96b2df8d9cc52f",
          "Name": "ref",
          "Description": "ref",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ffd51c072bb54877aee81af6c5849a28",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ref;",
      "Id": "8f85461aca5046e29b2825e12b9e596d",
      "Inputs": [
        {
          "Id": "94a5b0b71e8f421385c644c7ca15c3a7",
          "Name": "ref",
          "Description": "ref",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bec50ba9e4e245d08d9b4b31e9d9842b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "433001d330f941a088c3b7875f2bad8f",
      "Inputs": [
        {
          "Id": "6d5d983c89c74e5184f9cd1b2ee36def",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c75bb9e0e9244eb816a3f56141a4a25",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "83d55ffea58f4e7bbe2b99378620978c",
      "End": "c8bbc589702449d7a92cb0fc734640d1",
      "Id": "f569e992a3ba4ca8bc3f2f99a1ae4ef5"
    },
    {
      "Start": "1aba341adf174cdd80f6109266e10bdd",
      "End": "8c598a7d1e6c431cb01d4653a9167946",
      "Id": "20a2a7357bf54eb9832d51a81fbdbd44"
    },
    {
      "Start": "83040db6f7814b4099a6ded14c14c1f2",
      "End": "045bc61e8e6642bc90afece5de5e8626",
      "Id": "c4ca7bfcec3041109c0b7fa3c5734bba"
    },
    {
      "Start": "9b971f62aa274977bc4b7c704ca0b029",
      "End": "9440046c3c90475ea7af923a06716c65",
      "Id": "de3d3d4ad6794e2283d1839766474bc7"
    },
    {
      "Start": "dc757565e2f24e3a9fa3345657cca15e",
      "End": "14319d98718244d5b23ed04f0a034a94",
      "Id": "a45b1bbca9a545bb9636a1f89edc895d"
    },
    {
      "Start": "9554ff85c9df43a18440e102a140eedd",
      "End": "081a5843aba947ca9a5440a89d881ef8",
      "Id": "1952a4afc96247a8b791f3db7b4c9925"
    },
    {
      "Start": "cd6f435990f8445db9b1866e5e373825",
      "End": "551d9fbf8dbc4389a419ee8e6ad86dc3",
      "Id": "ac6b46bafffb4df68721bf5b2515da2d"
    },
    {
      "Start": "682a6e59e05a48bbaca0b23b29a185c9",
      "End": "0d379d6f62454cc3a3b6622f7df2a0af",
      "Id": "35d57b2924ed4e97b04d0fd90ad72f99"
    },
    {
      "Start": "682a6e59e05a48bbaca0b23b29a185c9",
      "End": "67a68cf3d4ce42628aac6a533204647b",
      "Id": "6d19184a84124cd3b76ea61c134d05dc"
    },
    {
      "Start": "fe21e4de29d34a5a9d94728966c704e0",
      "End": "7978949f21ca4d37a492b72ab563c5a0",
      "Id": "6231bea7089e414b88c73bb20f499fe8"
    },
    {
      "Start": "6773a73e535e48038c34205e8d3f2ed4",
      "End": "d30f5bca94314f3285702be6c730a89d",
      "Id": "c0a80fb31c004f33a44110c88ee17926"
    },
    {
      "Start": "2458c3a10a8e411b8dc4d523b2499c2d",
      "End": "49622a22783a40889ee4f1fe8dc53b15",
      "Id": "d1ddf0537c9f430d967c06df735e5cca"
    },
    {
      "Start": "57a9caf494c14df1999bb06835b8fe07",
      "End": "d5f4d6b48e2c4703b4ebf75c55d11cad",
      "Id": "7bd5fbd855a4498ba9f94aa5830e3008"
    },
    {
      "Start": "aced7b58b774404b92a0f7cffd186b2f",
      "End": "daf6b3ad755d46cb93f1e379660b1e32",
      "Id": "de10aa902c8940e188f390126e5acac8"
    },
    {
      "Start": "a8dac63e4599476bbbd7c83271207ef7",
      "End": "a7d0de92b99542a6abab23920bdc87c8",
      "Id": "086802d0de984bfe8091633f8389149d"
    },
    {
      "Start": "bf64542cdc3b4b44bd6939a4f15e0092",
      "End": "e93a9bf6da834b038ad0c36f04e808dd",
      "Id": "f6fb64ecca364e919fea0045af5d11b4"
    },
    {
      "Start": "61d16ea639a846b79a6b01f5d768a843",
      "End": "b327ce9e43e44ea5a52fdef17f2599cd",
      "Id": "17c56bc12f6e4211990bf1161ca383b7"
    },
    {
      "Start": "8d56da4e415e4dceaba0d5b6c6f78cc6",
      "End": "9893e17172ae4966be6f5b60b24e25e7",
      "Id": "903f216a394d4231896969139e0b639a"
    },
    {
      "Start": "955dc5fc52fd498f8eddaa7a2dc9d5aa",
      "End": "eb487b4a81464ddca8954ecf5886bef1",
      "Id": "927c40428cdd4d7bafb03253919020a9"
    },
    {
      "Start": "955dc5fc52fd498f8eddaa7a2dc9d5aa",
      "End": "de92c3d343184d8fa3b2b0e909005924",
      "Id": "82e3588d3c2946ed917c385d31f2fc09"
    },
    {
      "Start": "955dc5fc52fd498f8eddaa7a2dc9d5aa",
      "End": "ba7ea17e0ce44240a1bb25edff28e67f",
      "Id": "9466b79568bd4f3f896c677eb2b8654b"
    },
    {
      "Start": "955dc5fc52fd498f8eddaa7a2dc9d5aa",
      "End": "d10cbfa555004c3f9d70ffae0f4be5f9",
      "Id": "0a0833aef55b47e782309312780cf5c6"
    },
    {
      "Start": "955dc5fc52fd498f8eddaa7a2dc9d5aa",
      "End": "845c7b956d32495da672f7aab4677649",
      "Id": "57f8c14a3481415a91865c70c87009ff"
    },
    {
      "Start": "f8b841f29b3e4fa78d9afaed04bf269f",
      "End": "167ae80a101f4421be698edf76e0ec7f",
      "Id": "4971082fd1d846d284544fa0e8e687be"
    },
    {
      "Start": "5eef3823b95048de99256628bac79770",
      "End": "023e392f2d524f7c86e5da22a8822de3",
      "Id": "12081a34fcd6488e85ce231d1af6efd8"
    },
    {
      "Start": "a18110d93b664e8cb0ab67cc30df458b",
      "End": "994f8a3523c5495cb9ec5797a99c8c61",
      "Id": "77f15bb772cc4dc9b7f740aa3be75104"
    },
    {
      "Start": "043c1c7128914ccfa514815d835caf16",
      "End": "12345ddcb1c24c7d9fbde9ec81751f98",
      "Id": "5e7025b068494e2f810924fd52bf34a4"
    },
    {
      "Start": "f41de225edf3444bb115479ad5dcdd1c",
      "End": "b3051631700f47aca5b3e49784014e3f",
      "Id": "060538be19624882bcf52ff08e655288"
    },
    {
      "Start": "5143222010dd49daaec0ce929b61059e",
      "End": "216118d321fd44bb939c70d5f0c5a926",
      "Id": "08fe9e70e72645709231f36cc188b841"
    },
    {
      "Start": "5b608d6c37ab47749b560a8763a2c7a7",
      "End": "e9a0b8e96c8b4560b360e07b065eb204",
      "Id": "036d3b9423de4b20877f8fd0b8d6d9ed"
    },
    {
      "Start": "eb468417e0f3425fa182a2cf41fa5a4c",
      "End": "c06bdda6e8134593a85c2c57b9387479",
      "Id": "fc2a5e822f104283acc5067b465858d4"
    },
    {
      "Start": "a687ef6208a1454faf06caa154e62282",
      "End": "48140ea86abc43629eb8995a7854643f",
      "Id": "f3294221064248dab1e85fa6dd285e9d"
    },
    {
      "Start": "2efd42b0572c463681d1126e6106a156",
      "End": "39884181c6c941e59cda44226b706f5d",
      "Id": "1fe45c5699d34351aec8077035011238"
    },
    {
      "Start": "c5fe29ebef2e4478bae081dc648d77bb",
      "End": "f0132289cfb447f2b3acf782e6d2c495",
      "Id": "41935ed8cf09451196fd84130769a281"
    },
    {
      "Start": "c5fe29ebef2e4478bae081dc648d77bb",
      "End": "ba1340b222a04b84abdb288f75cfa364",
      "Id": "66ea826101734bb09f9912f0fb21aa1c"
    },
    {
      "Start": "9aa29bd0c86143678a60e00f4ca4c697",
      "End": "c8cbbde185d948449bbdd6bbd494a46c",
      "Id": "e8239faaa83e4c759c053a1f1b5d777a"
    },
    {
      "Start": "e0ab9ad4cecf49dfbd9b77e6aa54ec9b",
      "End": "f541265a14bc4df08f045c72fcac556e",
      "Id": "4cac2166803f45bf8750209c85f910a6"
    },
    {
      "Start": "7b6a615f9320419e8857df77e10d66e3",
      "End": "3a0c57dea6144582a7b01237299355fd",
      "Id": "1b1228e7fd5d4e5ba279432ed418fd68"
    },
    {
      "Start": "220b803a93a841b4bd279e955d916423",
      "End": "860633015ed14978bec35ca26cb3fe27",
      "Id": "41cda516bef6452a9cc861553ce1671e"
    },
    {
      "Start": "adaf33faed9940b5bef073ba9bf328ac",
      "End": "778c1d0143fb4b4cb8962e60067ffe6c",
      "Id": "40d9c4e40d824e72a9a671564c76bd1e"
    },
    {
      "Start": "adaf33faed9940b5bef073ba9bf328ac",
      "End": "181fcf0f073d4615ae8de6df6dd961ae",
      "Id": "97af48183eaf44a9b671f2370130ae9b"
    },
    {
      "Start": "10e1debd1b7948b39579e9dd94e16e26",
      "End": "b637e18cf9264eaa864a95cfac3b1f27",
      "Id": "fc4c5cffb9fa49408d0db8df762fe859"
    },
    {
      "Start": "10e1debd1b7948b39579e9dd94e16e26",
      "End": "697f5869e12e453793d381993f84c613",
      "Id": "fedf9cbb705346c2a19657731f404ef2"
    },
    {
      "Start": "afade67469b242e099bc1c9542dd03de",
      "End": "0cd6972de75e49d28c92a3a8459b293d",
      "Id": "3425f2bafc6f400bae0eaae0d74c4397"
    },
    {
      "Start": "9796d1c82dfa4088880b742a7571104b",
      "End": "20cc1c9fcabd44db92723225db067e7d",
      "Id": "a2e3d133254b4f2db14ee4af6c0cf80b"
    },
    {
      "Start": "00874a0e4e5445b39ecfb2d167c98c67",
      "End": "cd03577df8464d93a004fda6d814a0ea",
      "Id": "fb6599d20d84461e909d7fcbe24d260d"
    },
    {
      "Start": "6ddfd8414f89483b9b7c813bb9834f53",
      "End": "8ba9ee07b812469ca24c48e3f4cb305e",
      "Id": "8a0c754e1cfc4e08981f00bf9be5f6b8"
    },
    {
      "Start": "2240b383ecb040e1a7171cc2c2d48035",
      "End": "569882e1c4b44eb09707ce12247d7aff",
      "Id": "0433a4512ace445fa44da541d998945c"
    },
    {
      "Start": "6dcb6a6229214a2dbe39ba8b206b56d9",
      "End": "d1bbfea78b094bc1bf049c1ff1fc7830",
      "Id": "e5d25299596d49af815c422271481a4f"
    },
    {
      "Start": "db6d2e42a432466d91e17391743bc0eb",
      "End": "dbb94ff3a4ef4ce6b4a199b6e269f16f",
      "Id": "0c6fab5f92424395b2daa73013389d7a"
    },
    {
      "Start": "6607d38a599047ff9eeb835eff5a5ed5",
      "End": "a1ac510d681f4adebefff5e0a8a423d1",
      "Id": "32a0f1c3431b431cab5467c1bce58066"
    },
    {
      "Start": "38ffa92925fe4f8ea52958e93b5a7bcb",
      "End": "e2a89a59bfe543a19dd09151a85613c7",
      "Id": "8f890a7d041c43d3b6979769e75f1d05"
    },
    {
      "Start": "c5b5b551c3404bf0bfcd57cfd3b6100a",
      "End": "dcc4c543558c4108893d364eadf33219",
      "Id": "c8254704a2c8417aa790a028a5e970ea"
    },
    {
      "Start": "a7792a76778c4f31b49585bfe931b55d",
      "End": "36cdfd0f9fb8475f910bb66d4aa8fbc7",
      "Id": "9f0ac612c2dc4257a041412593d4a3d9"
    },
    {
      "Start": "1513d909357842b391be4f2fc1f0631f",
      "End": "e09eb4e60dfb47f0ae81dc602794ee9c",
      "Id": "fd72ba071c8c40a59ab9ada5279281e1"
    },
    {
      "Start": "f3ef314451ea4b83a1060ab0841dcdc6",
      "End": "8c1d7ba43c214873947fd5a6a51fcef0",
      "Id": "e851f3f1c7184c8f8c740b8908cc748e"
    },
    {
      "Start": "3901e336578640e68750b91d4879cb1d",
      "End": "45d0ad9244014ab8860692211174ad1c",
      "Id": "151188f2e2fc4d9fb5ff9cccea3c0e01"
    },
    {
      "Start": "3901e336578640e68750b91d4879cb1d",
      "End": "0b9fd3cc8265404684e591c77543a63f",
      "Id": "57e68568f1da4ddf80455812e6fd4d66"
    },
    {
      "Start": "7f3ffb4bb65d4a27b0292b92f3c9ff85",
      "End": "a6fd5c0966824600aaebd9d279ec595b",
      "Id": "9b632a6fca5e46e3b47ecaa188916632"
    },
    {
      "Start": "9fa731ac4b86417ab84a46f507b07b39",
      "End": "b7cc0deb181d42b38910bf4b0c401466",
      "Id": "f7ff45710deb4743b2e9da8fcc4a735f"
    },
    {
      "Start": "0c75bb9e0e9244eb816a3f56141a4a25",
      "End": "08b4e15c0e3c49f6b87401dc670f91a4",
      "Id": "e856bd5fdac44e69ad29513214ec0f30"
    },
    {
      "Start": "0c75bb9e0e9244eb816a3f56141a4a25",
      "End": "1fd3eca03e8744ab93d300e57c4ba62b",
      "Id": "7de22ec4aca34778ab9d02d7e5c37075"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "None provided",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 10000.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 18581.001953125,
      "EyeY": 2261.47607421875,
      "EyeZ": -14081.7509765625,
      "LookX": -18083.98828125,
      "LookY": -9387.4208984375,
      "LookZ": -10102.3173828125,
      "UpX": -0.1815108060836792,
      "UpY": 0.97814732789993286,
      "UpZ": -0.10139872133731842
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Github_Python@Import Excel(By OpenpyXl)",
        "Id": "e2fc7e3c54f64dc094e974cc098a6173",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -715.17649663142129,
        "Y": 55171.047841792082
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "49f0559a593c4240a3460e3f4a14b37a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -302.44625454766083,
        "Y": 55097.677793538081
      },
      {
        "ShowGeometry": true,
        "Name": "Sheet Name",
        "Id": "56e573d852f74e768c456b3d100653e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -923.511496911422,
        "Y": 55299.609761404477
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "dc0c07811c6a4659bfa6cc2d3805aa6e",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1207.6226823414318,
        "Y": 55196.330025503077
      },
      {
        "ShowGeometry": true,
        "Name": "String From Web",
        "Id": "8fff471c0b214bcc98cb3c9a7a8582c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -954.12555274828173,
        "Y": 55081.616078286483
      },
      {
        "ShowGeometry": true,
        "Name": "ExcelDataManagerNode",
        "Id": "31ea120b37ad4c639a46325866ecf0a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 95.232161429018561,
        "Y": 55074.856392768015
      },
      {
        "ShowGeometry": false,
        "Name": "All Elements of Category",
        "Id": "8d5e4c9e947b4373908f00a6eeb5e90f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2155.7294565102611,
        "Y": 54457.861248860965
      },
      {
        "ShowGeometry": false,
        "Name": "Categories",
        "Id": "5ac1aa527df14e2aba371b5c00b42d6a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2446.4351244899708,
        "Y": 54456.609475580168
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "a497d1c87e184719ba1d717db121d724",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1673.8871558171877,
        "Y": 54543.337274401078
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2170da120d884ff09f6d158edc35e3c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1898.8871558171868,
        "Y": 54573.550607734476
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "15e6980a67b64f228fcae7596ac414f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1310.8871558171877,
        "Y": 54543.337274401078
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "4c768dd8463e419b8bfc6d33cee01897",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1075.8871558171868,
        "Y": 54582.337274401078
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6c821779955646099c739661263d4edd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1310.8871558171877,
        "Y": 54651.550607734476
      },
      {
        "ShowGeometry": true,
        "Name": "List.FilterByBoolMask",
        "Id": "640c498c59e043f589490cde7a15bab3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -749.52912228181322,
        "Y": 54463.037844148443
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "6b9b667bf93e4268be415108bfad1ff9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2988.6396465973157,
        "Y": 54636.3285511416
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "22fb847c12814115a0ee14cb6be6bf8e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2273.0563888189508,
        "Y": 54775.818238419786
      },
      {
        "ShowGeometry": true,
        "Name": "Select Target Family Element And Connected WorkMasters",
        "Id": "f1c15fe765224fc78728f60670a3a467",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2388.9822047829311,
        "Y": 54674.003708107986
      },
      {
        "ShowGeometry": true,
        "Name": "Set Up All Element Inform as Dictionary",
        "Id": "fc16c0f883e8462691597320fa331c47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1292.8295517742849,
        "Y": 55082.826209792329
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "962c5decd0554e2b82cfb60b0f9e023d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2984.6135304815734,
        "Y": 55633.17354767787
      },
      {
        "ShowGeometry": true,
        "Name": "Select Target Family Element And Connected WorkMasters",
        "Id": "2368db46e3434d39a0d9d3f2a51a2dd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2384.9560886671889,
        "Y": 55670.848704644268
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "db5a14f0d8224013a02d4b132d328dc0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2269.030272703209,
        "Y": 55772.663234956068
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "48970d0e51c24ff6a7dd7f9af4da6927",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2919.4961123570874,
        "Y": 56657.855357967557
      },
      {
        "ShowGeometry": true,
        "Name": "Select Target Family Element And Connected WorkMasters",
        "Id": "2de4b26426af41f8a63596b033c14f43",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2319.8386705427019,
        "Y": 56695.530514933955
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "174507af1186489b975adcaf64ca35b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2203.9128545787221,
        "Y": 56797.345045245755
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "aa67427de3034fc7b75f0e068e3f827b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2875.4402485818073,
        "Y": 58719.412321070915
      },
      {
        "ShowGeometry": true,
        "Name": "Select Target Family Element And Connected WorkMasters",
        "Id": "f97111acb92944e893478179aecef2be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2275.7828067674227,
        "Y": 58757.087478037312
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "aaad887ce4b24c91b2475cde8f58c17a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2159.8569908034424,
        "Y": 58858.902008349112
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "0908dcc69fa54063a81240c357574e9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2879.4663646975496,
        "Y": 57722.567324534619
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "bc86d330cc524ac78e2077967be089a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2163.8831069191847,
        "Y": 57862.057011812816
      },
      {
        "ShowGeometry": true,
        "Name": "Select Target Family Element And Connected WorkMasters",
        "Id": "b534fe4e51c8496e875f22fb79e3e0c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2279.8089228831645,
        "Y": 57760.242481501016
      },
      {
        "ShowGeometry": true,
        "Name": "Visual Manager",
        "Id": "2b341f46552144c88c105ea3cdb07a2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13985.179584325502,
        "Y": 56606.850798000152
      },
      {
        "ShowGeometry": true,
        "Name": "Visual 켜기/끄기",
        "Id": "2baaf4492dc24e9dbe3d464e12218fad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13715.2598517984,
        "Y": 56661.803285378046
      },
      {
        "ShowGeometry": false,
        "Name": "Output",
        "Id": "1e00b70f200044a880ee443df64e2515",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13319.038455712303,
        "Y": 56418.438819372452
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "b3ea4fb3ba974ff3bb3a5e2d7b3793bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13274.331370841202,
        "Y": 56057.834191664049
      },
      {
        "ShowGeometry": true,
        "Name": "Visual Manager",
        "Id": "16fcd0196a944a8cbaaa3e35612232b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13982.273857373602,
        "Y": 55371.339916477547
      },
      {
        "ShowGeometry": true,
        "Name": "Visual 켜기/끄기",
        "Id": "aff72e2f052f4e679cb7580a36a5a6a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13712.3541248465,
        "Y": 55426.292403855448
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "4fa9a5551e2e4ab0b54d73ab117fac37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14213.316495306703,
        "Y": 55636.236830450645
      },
      {
        "ShowGeometry": true,
        "Name": "T:EA / F:M2",
        "Id": "a7ef039546d442fca5219a52667aa54f",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13958.7292950138,
        "Y": 55607.497678303152
      },
      {
        "ShowGeometry": false,
        "Name": "Output",
        "Id": "d2df4e9d4cd34857ab3cf6c24d578a42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13316.132728760404,
        "Y": 55185.248126645747
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "631303a76e54485f8ff39ff23aa3d904",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12328.444702412304,
        "Y": 54818.926794594852
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "4a97e7613f2740ca806df4f264c6fb2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13207.132823320302,
        "Y": 54747.247094462145
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c08517a2e7324610ba0f67bf3ebb4215",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8329.8477858397018,
        "Y": 55922.371888306552
      },
      {
        "ShowGeometry": false,
        "Name": "List.OfRepeatedItem",
        "Id": "f6361e6b2d494f02b2a6840c9ec4eb9f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9033.9017793055027,
        "Y": 55939.110584095048
      },
      {
        "ShowGeometry": false,
        "Name": "List.Count",
        "Id": "9ad3c9f17b5140439e485d458ff7e112",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8762.9017793055027,
        "Y": 55900.217250761649
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "1bffb3b61ead47149446221fd4aa6a12",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8762.9017793055027,
        "Y": 56008.217250761649
      },
      {
        "ShowGeometry": false,
        "Name": "List.Count",
        "Id": "70ca1002bcd14cf0a4ee7782d584c8b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11963.0149670571,
        "Y": 54693.525378625447
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "48184c8ade7e4ffc9307f46f4501cd35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7473.8527593063518,
        "Y": 55816.84031206245
      },
      {
        "ShowGeometry": true,
        "Name": "Element.GetParameterValueByName",
        "Id": "a0d84af3357b4356b8ec7cf6794ec3b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7704.195563396901,
        "Y": 56028.422875903147
      },
      {
        "ShowGeometry": true,
        "Name": "*",
        "Id": "3b98f9ff512d431e81955bfa30250054",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8089.1528534121026,
        "Y": 55916.591800567352
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "870bc9d8a0ae4f22bfd5dddea3a23006",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6351.7237447875632,
        "Y": 54711.911730835047
      },
      {
        "ShowGeometry": false,
        "Name": "Dictionary.ValueAtKey",
        "Id": "54ed4198e5c4453d9a0686e2daa4b017",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6642.7237447875632,
        "Y": 54681.698397501648
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "623de91c71344bc2a62061272fc4720b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6360.2313010915313,
        "Y": 55947.422612357652
      },
      {
        "ShowGeometry": false,
        "Name": "Dictionary.ValueAtKey",
        "Id": "cfcc146c50f8476898b96cec2a36fb45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6651.2313010915313,
        "Y": 55917.209279024246
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "dd8c3c65dce54d7190086ce0716565e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7292.2002226858422,
        "Y": 55918.408961343252
      },
      {
        "ShowGeometry": true,
        "Name": "Element.ElementType",
        "Id": "8c4087d2c57e4eec87ee31da2be11155",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6994.4116792511231,
        "Y": 55869.952898178548
      },
      {
        "ShowGeometry": false,
        "Name": "Value for Import from others",
        "Id": "533526958eca4eaea12ffd39846b4bd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5999.5715230356618,
        "Y": 54677.19194401295
      },
      {
        "ShowGeometry": false,
        "Name": "Value for Import from others",
        "Id": "fbd2fa3c7669455fb99b941161938b69",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6002.4772499875617,
        "Y": 55912.702825535547
      },
      {
        "ShowGeometry": false,
        "Name": "Reference Output",
        "Id": "bd1690f483864bbabfd153a5e9d9712e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5280.0844134308318,
        "Y": 55245.607668465746
      },
      {
        "ShowGeometry": false,
        "Name": "Reference Output",
        "Id": "8f85461aca5046e29b2825e12b9e596d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5282.9901403827316,
        "Y": 56478.79836119245
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "433001d330f941a088c3b7875f2bad8f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4043.5126656397942,
        "Y": 54778.781805748651
      }
    ],
    "Annotations": [
      {
        "Id": "e4ffc28e3572409aa739d66983674994",
        "Title": "Primary Input : Excel & Revit Elements",
        "Nodes": [
          "49f0559a593c4240a3460e3f4a14b37a",
          "e2fc7e3c54f64dc094e974cc098a6173",
          "56e573d852f74e768c456b3d100653e2",
          "dc0c07811c6a4659bfa6cc2d3805aa6e",
          "8fff471c0b214bcc98cb3c9a7a8582c9",
          "8d5e4c9e947b4373908f00a6eeb5e90f",
          "5ac1aa527df14e2aba371b5c00b42d6a",
          "2170da120d884ff09f6d158edc35e3c0",
          "a497d1c87e184719ba1d717db121d724",
          "15e6980a67b64f228fcae7596ac414f8",
          "6c821779955646099c739661263d4edd",
          "4c768dd8463e419b8bfc6d33cee01897",
          "640c498c59e043f589490cde7a15bab3"
        ],
        "Left": -2456.4351244899708,
        "Top": 54331.609475580168,
        "Width": 2429.98886994231,
        "Height": 1061.0002858243097,
        "FontSize": 96.0,
        "InitialTop": 54456.609475580168,
        "InitialHeight": 988.00028582430969,
        "TextblockHeight": 115.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "2fa9c412c4df4c20bae2dfad342a5932",
        "Title": "GetFull\r\nWMCodeDescription\r\nPerElement",
        "Nodes": [
          "31ea120b37ad4c639a46325866ecf0a9"
        ],
        "Left": 85.232161429018561,
        "Top": 54718.856392768015,
        "Width": 890.30666666666673,
        "Height": 486.0,
        "FontSize": 96.0,
        "InitialTop": 55074.856392768015,
        "InitialHeight": 145.0,
        "TextblockHeight": 346.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "87478fc037884329a347bf9e0efee298",
        "Title": "Select Target Family Element And Connected WorkMasters",
        "Nodes": [
          "f1c15fe765224fc78728f60670a3a467",
          "22fb847c12814115a0ee14cb6be6bf8e"
        ],
        "Left": 2263.0563888189508,
        "Top": 54088.003708107986,
        "Width": 565.88666666666666,
        "Height": 780.8145303117999,
        "FontSize": 96.0,
        "InitialTop": 54674.003708107986,
        "InitialHeight": 246.8145303117999,
        "TextblockHeight": 576.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "506980da410240caade849432fcce89c",
        "Title": "Organize\r\nAllElementInform\r\nAsDictionary",
        "Nodes": [
          "fc16c0f883e8462691597320fa331c47"
        ],
        "Left": 1282.8295517742849,
        "Top": 54726.826209792329,
        "Width": 742.41666666666674,
        "Height": 460.0,
        "FontSize": 96.0,
        "InitialTop": 55082.826209792329,
        "InitialHeight": 145.0,
        "TextblockHeight": 346.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9125430f4a9343d1aa95c7da195db453",
        "Title": "Select Target Family Element And Connected WorkMasters",
        "Nodes": [
          "2368db46e3434d39a0d9d3f2a51a2dd6",
          "db5a14f0d8224013a02d4b132d328dc0"
        ],
        "Left": 2259.030272703209,
        "Top": 55084.848704644268,
        "Width": 565.88666666666666,
        "Height": 780.8145303117999,
        "FontSize": 96.0,
        "InitialTop": 55670.848704644268,
        "InitialHeight": 246.8145303117999,
        "TextblockHeight": 576.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "89bc48408088442fb179a83037c18744",
        "Title": "Select Target Family Element And Connected WorkMasters",
        "Nodes": [
          "2de4b26426af41f8a63596b033c14f43",
          "174507af1186489b975adcaf64ca35b8"
        ],
        "Left": 2193.9128545787221,
        "Top": 56109.530514933955,
        "Width": 565.88666666666666,
        "Height": 780.8145303117999,
        "FontSize": 96.0,
        "InitialTop": 56695.530514933955,
        "InitialHeight": 246.8145303117999,
        "TextblockHeight": 576.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "372e0d03c6bf4f9bb204059414b364d2",
        "Title": "Select Target Family Element And Connected WorkMasters",
        "Nodes": [
          "f97111acb92944e893478179aecef2be",
          "aaad887ce4b24c91b2475cde8f58c17a"
        ],
        "Left": 2149.8569908034424,
        "Top": 58171.087478037312,
        "Width": 565.88666666666666,
        "Height": 780.8145303117999,
        "FontSize": 96.0,
        "InitialTop": 58757.087478037312,
        "InitialHeight": 246.8145303117999,
        "TextblockHeight": 576.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9605df67682f488d88b625d55659c617",
        "Title": "Select Target Family Element And Connected WorkMasters",
        "Nodes": [
          "b534fe4e51c8496e875f22fb79e3e0c8",
          "bc86d330cc524ac78e2077967be089a0"
        ],
        "Left": 2153.8831069191847,
        "Top": 57174.242481501016,
        "Width": 565.88666666666666,
        "Height": 780.8145303117999,
        "FontSize": 96.0,
        "InitialTop": 57760.242481501016,
        "InitialHeight": 246.8145303117999,
        "TextblockHeight": 576.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "709182bd667a4eb09a2cefe89d0d00be",
        "Title": " Visual Manager",
        "Nodes": [
          "2b341f46552144c88c105ea3cdb07a2e",
          "2baaf4492dc24e9dbe3d464e12218fad",
          "1ba0e862eb3b42bd8b41f69146cf1b3e",
          "0621662d698e44b5af3144022cefa681"
        ],
        "Left": 13705.2598517984,
        "Top": 56481.850798000152,
        "Width": 1236.700574327373,
        "Height": 255.0,
        "FontSize": 96.0,
        "InitialTop": 56606.850798000152,
        "InitialHeight": 163.97024857760698,
        "TextblockHeight": 115.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "6d37788a21784467ae897b3122226a6f",
        "Title": " Output Manager",
        "Nodes": [
          "1e00b70f200044a880ee443df64e2515",
          "8f85461aca5046e29b2825e12b9e596d",
          "c735679f94254d7e8dce71a1612065c5",
          "d358fc7b81ed4bb89750e7d522c18893"
        ],
        "Left": 5224.6320807400007,
        "Top": 56237.895592696637,
        "Width": 8448.4063749723027,
        "Height": 516.50484027869243,
        "FontSize": 72.0,
        "InitialTop": 56333.895592696637,
        "InitialHeight": 516.50484027869243,
        "TextblockHeight": 86.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "eb9116c8df73404b8ae0b38ec990a553",
        "Title": "<Func 1>M2   ",
        "Nodes": [
          "623de91c71344bc2a62061272fc4720b",
          "cfcc146c50f8476898b96cec2a36fb45",
          "b3ea4fb3ba974ff3bb3a5e2d7b3793bc",
          "f58e28c6fcce48f3ad22a9ba9f8aa228"
        ],
        "Left": 6350.2313010915313,
        "Top": 55734.546457249548,
        "Width": 7369.1000697496711,
        "Height": 460.28773441450176,
        "FontSize": 96.0,
        "InitialTop": 55859.546457249548,
        "InitialHeight": 365.28773441450176,
        "TextblockHeight": 115.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "3880ce1bc9ca450494eec87484cb48a0",
        "Title": " Visual Manager",
        "Nodes": [
          "16fcd0196a944a8cbaaa3e35612232b5",
          "aff72e2f052f4e679cb7580a36a5a6a3",
          "e0e34ad92b93436aa0229092004e43d6",
          "99b6eccad2404c6f8cb542cc0143136d"
        ],
        "Left": 13702.3541248465,
        "Top": 55246.339916477547,
        "Width": 1236.7005743273694,
        "Height": 255.0,
        "FontSize": 96.0,
        "InitialTop": 55371.339916477547,
        "InitialHeight": 163.97024857763608,
        "TextblockHeight": 115.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "8c9af3c39b184d2c92527ae087fa96ba",
        "Title": " Output Manager",
        "Nodes": [
          "d2df4e9d4cd34857ab3cf6c24d578a42",
          "bd1690f483864bbabfd153a5e9d9712e",
          "330f1c828ee44c3abf8f1c916e57cede",
          "b3797bb477e3455b9b5503291eacec05"
        ],
        "Left": 5221.7263537881008,
        "Top": 55004.704899969947,
        "Width": 8448.4063749723027,
        "Height": 516.5048402786997,
        "FontSize": 72.0,
        "InitialTop": 55100.704899969947,
        "InitialHeight": 516.5048402786997,
        "TextblockHeight": 86.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "6ffe3f15d1714998894fd24318a46335",
        "Title": "<Func 1>EA",
        "Nodes": [
          "870bc9d8a0ae4f22bfd5dddea3a23006",
          "54ed4198e5c4453d9a0686e2daa4b017",
          "4a97e7613f2740ca806df4f264c6fb2d",
          "cf8316b3973a475a93d8d4f0af65c1d5"
        ],
        "Left": 6341.7237447875632,
        "Top": 54556.698397501648,
        "Width": 7310.4090785327389,
        "Height": 327.54869696049718,
        "FontSize": 96.0,
        "InitialTop": 54681.698397501648,
        "InitialHeight": 232.54869696049718,
        "TextblockHeight": 115.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "6aefcaadab98475a967df0a0f3fc4c56",
        "Title": " Input Manager",
        "Nodes": [
          "533526958eca4eaea12ffd39846b4bd3",
          "57432c7cbba3414e89315453d2d5d549"
        ],
        "Left": 5213.8652910706842,
        "Top": 54581.19194401295,
        "Width": 1033.7062319649776,
        "Height": 374.6626410638346,
        "FontSize": 72.0,
        "InitialTop": 54677.19194401295,
        "InitialHeight": 374.6626410638346,
        "TextblockHeight": 86.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "52db725579a34e46a4e825e30c4d6a86",
        "Title": " Input Manager",
        "Nodes": [
          "fbd2fa3c7669455fb99b941161938b69",
          "e96e550d56c14e8ebd5453d1f0c41145"
        ],
        "Left": 5216.771018022584,
        "Top": 55816.702825535547,
        "Width": 1033.7062319649776,
        "Height": 374.66264106381277,
        "FontSize": 72.0,
        "InitialTop": 55912.702825535547,
        "InitialHeight": 374.66264106381277,
        "TextblockHeight": 86.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "1ba0e862eb3b42bd8b41f69146cf1b3e",
        "Title": "New Note",
        "Nodes": [],
        "Left": 14857.960426125774,
        "Top": 56625.821046577759,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0621662d698e44b5af3144022cefa681",
        "Title": "New Note",
        "Nodes": [],
        "Left": 13719.028420949362,
        "Top": 56608.00428764485,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d358fc7b81ed4bb89750e7d522c18893",
        "Title": "New Note",
        "Nodes": [],
        "Left": 13092.66226732004,
        "Top": 56705.40043297533,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b3797bb477e3455b9b5503291eacec05",
        "Title": "New Note",
        "Nodes": [],
        "Left": 13089.756540368104,
        "Top": 55472.209740248647,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e0e34ad92b93436aa0229092004e43d6",
        "Title": "New Note",
        "Nodes": [],
        "Left": 14855.05469917387,
        "Top": 55390.310165055183,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "99b6eccad2404c6f8cb542cc0143136d",
        "Title": "New Note",
        "Nodes": [],
        "Left": 13716.122693997462,
        "Top": 55372.493406122274,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "cf8316b3973a475a93d8d4f0af65c1d5",
        "Title": "<Func>",
        "Nodes": [],
        "Left": 6953.7237447875195,
        "Top": 54692.698397501663,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f58e28c6fcce48f3ad22a9ba9f8aa228",
        "Title": "H x W",
        "Nodes": [],
        "Left": 6812.9295839767728,
        "Top": 55859.546457249548,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "330f1c828ee44c3abf8f1c916e57cede",
        "Title": "New Note",
        "Nodes": [],
        "Left": 5231.7263537881008,
        "Top": 55100.704899969947,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "57432c7cbba3414e89315453d2d5d549",
        "Title": "New Note",
        "Nodes": [],
        "Left": 5223.8652910706842,
        "Top": 54906.854585076784,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c735679f94254d7e8dce71a1612065c5",
        "Title": "New Note",
        "Nodes": [],
        "Left": 5234.6320807400007,
        "Top": 56333.895592696637,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e96e550d56c14e8ebd5453d1f0c41145",
        "Title": "New Note",
        "Nodes": [],
        "Left": 5226.771018022584,
        "Top": 56142.36546659936,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 418.16091680459232,
    "Y": -2846.0906306115839,
    "Zoom": 0.05722614919037005
  }
}