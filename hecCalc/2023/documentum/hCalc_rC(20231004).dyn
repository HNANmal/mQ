{
  "Uuid": "1d6d431a-e8c4-48aa-8b91-a874ff2542a8",
  "IsCustomNode": false,
  "Description": "",
  "Name": "hCalc_rC(20231004)",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "1250bd18102c4ebaac9950d60dac8849",
      "Inputs": [
        {
          "Id": "f2b7450af5914cbf8a28c2a092e6a190",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "912753a782b84f598e120e936fffbd58",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\ndef get_all_BIC():\r\n\r\n    db = [\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Floors,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Roofs,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Walls,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFoundation,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Ceilings,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Doors,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Windows,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Stairs,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Railings,\r\n    ]\r\n    return db\r\n    \r\ndef get_allElems(doc):\r\n    bics = get_all_BIC()\r\n    \r\n    def getElems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        return res\r\n\r\n    def getRailElems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType()\r\n        return res\r\n\r\n    res = map(getElems, bics)\r\n#    res = getRailElems(Autodesk.Revit.DB.BuiltInCategory.OST_RailingSystemRail)\r\n    return res\r\n\r\n\r\nOUT = get_allElems(doc)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "c790cfc4c7d943cdb05ca3a612d673c4",
      "Inputs": [
        {
          "Id": "08594b729317483fab0ab869358cdb3c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4d9d60debe6406cace5eb687f712858",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 441,
      "SelectedString": "OST_StairsRailing",
      "NodeType": "ExtensionNode",
      "Id": "d78f3dfc768541ab8490b53194e174c5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bdc68e6596d64c1bb2ad17af850a8a64",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "94dc2b3bd4e14a9fa5352e8ad0cbe58b",
      "Inputs": [
        {
          "Id": "ae38fed72c0a434eb235268bfba22c03",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07eba95685e249a0a3188444eec253fe",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "bf37a72db0e847dba5e3d1c2ed14c8bd",
      "Inputs": [
        {
          "Id": "efbd6851497a4681a114ca7842d95e6a",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d45870ecc9f4742810ae2af861ad07b",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "266640a8b58449a48603af36addb1282",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "1eac1f1717ab40c98ea2a8a9b59421d3",
      "Inputs": [
        {
          "Id": "c4d740fa206e4ab3b53ba148e9727e8f",
          "Name": "file",
          "Description": "File representing the Excel workbook\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8871f8fef5b841e484fe65aa92aecb9c",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2e3869f91c64b06ab4cff0e2c816de0",
          "Name": "readAsStrings",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da624c3834b64df4a29198439fca082e",
          "Name": "showExcel",
          "Description": "Toggle to show excel's main window\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16f6a93146ee4557a8eec29cac4eb344",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "caccad700bd84d8e8cb198c7fe1545aa",
      "Inputs": [
        {
          "Id": "8d8f529204cd48a5a2210b85d94be686",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb3a2510c5934129baf50771f5bb29a9",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\mk\\mQ\\hecCalc\\2023\\documentum\\플랜트건축팀_BIM_팀 표준 Family List_Rev.0_SQ3_박기범_20230913.xlsx",
      "InputValue": ".\\플랜트건축팀_BIM_팀 표준 Family List_Rev.0_SQ3_박기범_20230913.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "51b4738620874fe885b1b5ecce1e49b7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e3d41cbea388406e9b31fca8184f2a13",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "76e75c1cd00342eeb418e14c2410b8f4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f98969ee45ea4cce8921b553ad57fbc0",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"WM-AR\",\n\"물량Param\",\n\"1.Floors\",\n\"2.Roofs\",\n\"3.Walls\",\n\"4.St Fdn\",\n\"5.St Col\",\n\"6.St Framing\",\n\"7.Ceilings\",\n\"8.Doors\",\n\"9.Windows\",\n\"10.Stairs\",\n\"11.Railings\"\n//,\"13.Generic\"\n];",
      "Id": "64985def907747329221585392bfc414",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a4ee13c7962e41349775335b48e45650",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "9180e2e72a3c4871ad3dcc4c90e647ef",
      "Inputs": [
        {
          "Id": "fb681e08f1034208a2da1a59eef69887",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d4c7b51481348b68b28a4a779f5cca8",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c4c0a55d8a14ffd85d7c51b2c5597ce",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\ndef getCharValue(s):\r\n    # 베이스 케이스\r\n    if not s:\r\n        return 0\r\n \r\n    value = 0\r\n    # 입력 문자열을 대문자로 변환한 후 반복\r\n    for ch in s:\r\n        value = value * 26 + (ord(ch) - ord('A') + 1)\r\n    return value\r\n    \r\n#################################Module For Functional Programing#############################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\n\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    #endidxs_tmp= list(map(lambda x: x[0],res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndb = IN[0]\r\nallCatSheetsNames =IN[1]\r\nlang_mode = IN[2]\r\n\r\nparamSheet = db[0]\r\nallCatSheets = db[1:]\r\n\r\n# Place your code below this line\r\n\r\ndef find_headersAtCatSheet(catSheet):\r\n    headers_CatSheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(catSheet[1])))\r\n    \r\n    return dict(headers_CatSheet)\r\n\r\ndef find_rangesAtCatSheet(catSheet, hdrs_withIdx):\r\n    return find_range_by_columnItem(catSheet, hdrs_withIdx[\"Q'ty Cal Type Tag\"], \"-\")\r\n\r\ndef get_DataOnRangesAtCatSheet(Sheet):\r\n    \r\n    hdrs_withIdx = find_headersAtCatSheet(Sheet)\r\n    title_idx = map(lambda x: x[0], find_rangesAtCatSheet(Sheet, hdrs_withIdx).values())\r\n    calcType_colDatas = list(map(lambda x: x[hdrs_withIdx[\"Q'ty Cal Type Tag\"]], Sheet))\r\n    calcTypes = list(map(lambda x: calcType_colDatas[x], title_idx))\r\n    rgs_v = list(map(lambda x: x[1], find_rangesAtCatSheet(Sheet, hdrs_withIdx).values()))\r\n    rgs_k = list(map(lambda x: x, find_rangesAtCatSheet(Sheet, hdrs_withIdx).keys()))\r\n    \r\n    hdrs_v = list(hdrs_withIdx.values())\r\n    hdrs_k = list(hdrs_withIdx.keys())\r\n    eff_hdrs_v = hdrs_v[2:]\r\n    eff_hdrs_k = hdrs_k[2:]\r\n    \r\n    datas_allCalType = list(map(lambda x: Sheet[x[0]-1:x[1]], rgs_v))\r\n    \r\n    def setDict_OnEachCalType(data_calType):\r\n        paramName_lang = \"패밀리 매개변수(from Revit) 영문판\" if lang_mode is True else \"패밀리 매개변수(from Revit) 한글판\"\r\n        calcTypeName = data_calType[0][2]\r\n        data_calType_noneless = list(filter(lambda x: x[hdrs_withIdx[\"항목\"]] != None, data_calType))\r\n#        ## WM row 별 header명 과 짝짓기\r\n        data_withHdrsIdx = list(map(lambda y: list(map(lambda x: y[x], eff_hdrs_v)), data_calType_noneless))\r\n        dict_ = list(map(lambda x: dict(zip(eff_hdrs_k, x)), data_withHdrsIdx))\r\n        dicts_noneless = list(map(lambda y: dict(filter(lambda x: x[1]!=None, y.items())),dict_))\r\n#        ## dict_Cal Type 입력처리\r\n        targetColName = \"Q'ty Cal Type Tag\"\r\n        dicts_finalNoneless = []\r\n        for d in dicts_noneless:\r\n            d[\"Q'ty Cal Type Tag\"] = calcTypeName\r\n            \r\n            if \"입력값\" in d.keys():\r\n                d[\"applyForCalc\"] = d[\"입력값\"]\r\n                dicts_finalNoneless.append(d)\r\n            elif paramName_lang in d.keys():\r\n                d[\"applyForCalc\"] = d[paramName_lang]\r\n                dicts_finalNoneless.append(d)\r\n            else:\r\n                pass\r\n        \r\n        return {calcTypeName: dicts_finalNoneless}\r\n        \r\n    return map(setDict_OnEachCalType, datas_allCalType)\r\neach_dict = get_DataOnRangesAtCatSheet(paramSheet)\r\ndicts_AllInOne = {}\r\nfor d in each_dict:\r\n    dict_k_v = d.items()\r\n    for k,v in dict_k_v:\r\n        dicts_AllInOne[k] = v\r\n# Assign your output to the OUT variable.\r\n\r\n\r\nOUT = dicts_AllInOne",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ffe3ce92ec6b41c28dea986fb27302b8",
      "Inputs": [
        {
          "Id": "cbcac752c4ef4adbbf500face4dae780",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8fc2fd075a8f43b5aa80a7c22114b549",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da273f14c52b42558ec17b22c360f024",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10927b3559a04512b2a50eede4045749",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "//모델링 부재랑 만났을때,\n//\"applyForCalc값이 숫자인 경우는 바로 적용\n//숫자가 아닌 경우는 파라미터 값 소환,",
      "Id": "c2e2ffc4ce8c4995823302e2e6edbf6b",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// >>> 레빗 부재 별로 패밀리 타입 엑셀 시트 짝지을때,\n// applyForCalc값 중 매개 변수 에 해당 하는 값을 업데이트 하여 딕셔너리 갱신",
      "Id": "6cc32639f4334079a3ed3015057ed0c0",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "85e664ba9cb643c5b3b2014270272b36",
      "Inputs": [
        {
          "Id": "9ba11babb5ef4e12a0e246df296ff645",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5775c1a7f8c45d6911594db84ada28f",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6db5b3198a84514b931f6728da04348",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "0d04816ca9f34db6a891541712eb1f5d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25b11d15e6834c96a298b45cb1bf32a7",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// 최종적으로는\n\n// 부재(FamilyType) 별 WM 항목 마다\n// 1. 물량산출식\n// 2. 산출식 참여 약자 목록 []\n// 3. 약자별 대입 값 목록 []\n\n\n// 이렇게 정리가 되어있어야 한다.",
      "Id": "ab9b7226a471462bbe05f1ffb8d082d3",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "9fac8931a6e44ba394f6b5087edcfafe",
      "Inputs": [
        {
          "Id": "16ae095d8bb742a1842007898fa8da08",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5cb5f12a9a34c0580335168f950d6a0",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "995ccef9f1cd4b49aecc810576ba715f",
      "Inputs": [
        {
          "Id": "2ffc7badc3964fe4b1668daa8972e17a",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a92beaaaf9e4ccf9cbcace53639c1b5",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d2a0590f2cb4f7e9a74cf1403826133",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb52218899294b78b858cdf419efe4a3",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "fdb901f20d644088a89f03651e881266",
      "Inputs": [
        {
          "Id": "60298be91cbc40aaa4d4c2caf7553ef4",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2eeeec0b990e460c904c7443bf123471",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "704a0615649a4b69a7598e7bf9bbdf71",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"H_Q'ty Cal Type Tag\",\n\"H_WM Code_1\",\n\"H_WM Code_2\",\n\"H_WM Code_3\",\n\"H_WM Code_4\",\n\"H_WM Code_5\",\n\"H_WM Code_6\",\n\"H_WM Code_7\",\n\"H_WM Code_8\",\n\"H_WM Code_9\"\n];",
      "Id": "014417a7a6a74588a86afc4c30d8ea08",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da989cdd240f4026b50103281496dc4c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nfrom Revit.Elements import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemTypes = IN[0]\r\nWMs_perFamTyp = IN[1]\r\nparam_ListForWM = IN[2]\r\n\r\ninput_sets = list(zip(elemTypes, WMs_perFamTyp))\r\n\r\n# Place your code below this line\r\n\r\ndef setParamAnElem(elem, paramNames, paramVals):\r\n    effName_List = paramNames[:len(paramVals)]\r\n    effVals_List = paramVals\r\n    setForParam = list(zip(effName_List, effVals_List))\r\n    res = list(map(lambda x: elem.SetParameterByName(x[0],x[1]), setForParam))\r\n    \r\n    return res\r\n\r\n\r\nfinal = map(lambda x: setParamAnElem(x[0],param_ListForWM,x[1]), input_sets)\r\n\r\n\r\n#res = elemT.GetParameterValueByName(\"Default Thickness\")\r\n# Assign your output to the OUT variable.\r\n#OUT = input_sets\r\nOUT = final",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ee95e619ed6b4a4092d10917064aaf58",
      "Inputs": [
        {
          "Id": "13eef7c2e1884f17bd9a94f727ce0d5e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7eecaa87218489daa29e5f629d3e5f4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c24b6a46f074029ae30973e803423cf",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a4290472fea4213a024469dd6acf27e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndict_aio = IN[0]\r\ncalType_header = IN[1]\r\n# Place your code below this line\r\nfamTypes = list(dict_aio.items())\r\nres_dict = {}\r\n\r\n\r\ndef find_WMspecsPerFamType(k_v):\r\n    k = k_v[0]\r\n    wms = k_v[1]\r\n    res = list(map(lambda x: [x[\"Work Master Code\"]] + x[\"wmSpecs\"], wms))\r\n    res_zeroless = list(map(lambda y: filter(lambda x: x!=0, y), res))\r\n    joined_strs = list(map(lambda x: ' | '.join(x),res_zeroless))\r\n\r\n    return k,joined_strs\r\n\r\nWMspecs = list(map(find_WMspecsPerFamType, famTypes))\r\n\r\nfor k,v in WMspecs:\r\n    res_dict[k] = [dict_aio[k][0][calType_header]] + v\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res_dict",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ad5dc112707a4841a2b44b8eb9c1ca62",
      "Inputs": [
        {
          "Id": "03197cc52c5a41498621cc5cbbdcdda2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1acb0f3536104379b228c0f654ce7eff",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3d8ae3ce29c4ada9cd978071a690e99",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "4eee53a8546c4694abfafd1926920870",
      "Inputs": [
        {
          "Id": "9dd564bcf04b4432a305390a99f356d7",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "affa8e9069d34d359fdc5519189993e3",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b78d9bdee064ca8aa719add76dab153",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Q'ty Cal Type Tag\";",
      "Id": "9e1934a59db94d298059a9bc8b9a66b6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bd1c260823824c3fa942da73cd699d3c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "catSheetDatas;\nUniqElemTypes;",
      "Id": "5942773aeb824c84bde85b7a139bac6b",
      "Inputs": [
        {
          "Id": "e45e7bbab26b4433b5b39ea0019872d8",
          "Name": "catSheetDatas",
          "Description": "catSheetDatas",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b807a40e33d146ed8e1079d77df2f4a2",
          "Name": "UniqElemTypes",
          "Description": "UniqElemTypes",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ffaed7ff9494698a476c77992378425",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4dfc84f116ed401aafa20bbf21bb6813",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "590996bec97544a8a3c5eaecbf1bbd45",
      "Inputs": [
        {
          "Id": "791810c9f38243529a3142e7e7fd2d41",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ab530efab9c434581925fdde0bb806e",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8402fd2e2cf40e18826f7fb710d7abe",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Type\";\n\"Type Name\";",
      "Id": "ea47f768c4464f6ca17b7b47bc073108",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34478aa62bfa4d148cf03d330610f255",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bd9705415654f7e8ac8be1751b2b4e4",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nfrom Revit.Elements import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nparamSheetDic = IN[0]\r\n# Place your code below this line\r\n\r\ndef findDictPerCalType(dicList):\r\n    dic = {}\r\n    for i in dicList:\r\n        dic[i[\"산출수식 약자\"]] = i[\"applyForCalc\"]\r\n    \r\n    return dic\r\n\r\nks_forDic = list(paramSheetDic.keys())\r\nvs_forDic = list(map(findDictPerCalType, paramSheetDic.values()))\r\n\r\nres = dict(zip(ks_forDic, vs_forDic))\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1bd5112c1ae04bcfb1e2fd87f4860ba7",
      "Inputs": [
        {
          "Id": "55f29dd9f2c2400aad315d92c033b933",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5cf52c8def9d401db5e11d43ab6fe5cd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nfrom Revit.Elements import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nparamSheetDic = IN[0]\r\ncatSheetDic = IN[1]\r\n\r\n# Place your code below this line\r\nheaders = list(catSheetDic.values())[0][0].Keys\r\nwmspec_headers = list(filter(lambda x: \"Work C\" in x or \"Spec\" in x, headers))\r\n\r\ndef matchWith_paramDic(catSheetDic, paramSheetDic):\r\n    res = {}\r\n    for famType,diclist in catSheetDic.items():\r\n        new_diclist = []\r\n        for d in diclist:\r\n            new_d = {}\r\n            keys = d.Keys\r\n            keys_new = set(keys) - set(wmspec_headers)\r\n            calcType = d[\"Q'ty Cal Type Tag\"]\r\n            new_d[\"Sym_Val Dict\"] = paramSheetDic[calcType]\r\n            new_d[\"wmSpecs\"] = list(map(lambda x: d[x],wmspec_headers))\r\n            for spec in keys_new:\r\n                new_d[spec] = d[spec]\r\n            new_diclist.append(new_d)\r\n        \r\n        res[famType] = new_diclist\r\n        \r\n    return res\r\n    \r\n\r\n#res2 = map(lambda x: x[1], catSheetDic.items())\r\n# Assign your output to the OUT variable.\r\nOUT = matchWith_paramDic(catSheetDic, paramSheetDic)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "f99474b49e3e486e8933b2ac5d7484fa",
      "Inputs": [
        {
          "Id": "413d8e4c6a5b4e0f81d2665f58b5e5b6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4dfe3aa2a2224526a2855fca7f3bad83",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e71cda960604590987dd25291031857",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\n#clr.AddReference('RevitNodes')\r\n#import Revit\r\n#clr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n#doc = DocumentManager.Instance.CurrentDBDocument\r\n#collector1 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nfamlist_dic = IN[0]\r\nrevitElems = IN[1]\r\n\r\n# Place your code below this line\r\ndef matchWith_Elem_Dict(famlist_dic,revitElems):\r\n    res = []\r\n    for i in revitElems:\r\n        tmp = {}\r\n        famTypeName = i.GetParameterValueByName(\"Type\").GetParameterValueByName(\"Type Name\")\r\n        tmp[\"Elem\"] = i\r\n        tmp[\"wms\"] = famlist_dic[famTypeName]\r\n        \r\n        res.append(tmp)\r\n    return res\r\n\r\ndef update_sym_valDict(elemDicts):\r\n    for d in elemDicts:\r\n        elem = d[\"Elem\"]\r\n        wms = d[\"wms\"]\r\n        \r\n        for wm in wms:\r\n            sym_valDict = wm[\"Sym_Val Dict\"]\r\n            sv_keys = sym_valDict.Keys\r\n            sv_vals = sym_valDict.Values\r\n            sv_items = list(zip(sv_keys, sv_vals))\r\n            \r\n            for x in sv_items:\r\n                [k,v] = x\r\n                if isinstance(v, str):\r\n                    if v == \"Level\":\r\n                        #sym_valDict[k] = type(UnwrapElement(elem.GetParameterValueByName(v)))\r\n                        sym_valDict[k] = round(elem.GetParameterValueByName(\"Elevation at Bottom\"),2)\r\n                    elif elem.GetParameterValueByName(v):\r\n                        sym_valDict[k] = elem.GetParameterValueByName(v)\r\n                    elif elem.GetParameterValueByName(\"Type\").GetParameterValueByName(v):\r\n                        sym_valDict[k] = elem.GetParameterValueByName(\"Type\").GetParameterValueByName(v)\r\n                    else:\r\n                        pass\r\n    return elemDicts\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = update_sym_valDict(matchWith_Elem_Dict(famlist_dic,revitElems))",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "3bf30dcbbca84eb08aafa5ed15d4042e",
      "Inputs": [
        {
          "Id": "6bb89a836d794adbb921321ff571e938",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a75d2d18293473e89b54f0ee754c1e5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3849c2f660e4f0d9a1e89d3d58bb89f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[\"H_SF_ACE_Mass_T2500\"];",
      "Id": "3e48607c97ad4d69855c68aad2472202",
      "Inputs": [
        {
          "Id": "1c86f76bf4e449e498eaeaf4e9d6e40f",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92d9b75e3c174ab1a72714bd22bcbc8f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n#doc = DocumentManager.Instance.CurrentDBDocument\r\n#collector1 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\nimport copy\r\n###################################################################################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n###########################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDicts = IN[0]\r\n    \r\n\r\n# Place your code below this line\r\n\r\n\r\ndef makeExcaShape(elem, sym_valDict):\r\n    def findBtmCrv(geo, sym_valDict): ##btmOffset = d1 + d2\r\n        offSetDist = sym_valDict[\"D1\"] + sym_valDict[\"D2\"]\r\n        #H2 = sym_valDict[\"H2\"] if sym_valDict[\"H2\"]>=0 else -sym_valDict[\"H2\"]\r\n        h = abs(sym_valDict[\"C1\"] + sym_valDict[\"C2\"] + sym_valDict[\"C3\"])\r\n        bdBox_fdn = BoundingBox.ByGeometry(geo).ToCuboid() ## 형상의 자그마한 요철 무시\r\n        srfs = bdBox_fdn.Explode() ## surface들\r\n        btmSrf = PolySurface.ByJoinedSurfaces(list(filter(lambda x: round(x.NormalAtParameter(0.5,0.5).Z, 3) == -1, srfs)))\r\n        btmCrvs = btmSrf.PerimeterCurves()\r\n        btmPolCrv = PolyCurve.ByJoinedCurves(btmCrvs)\r\n        offseted_btmPolCrv = btmPolCrv.Offset(offSetDist)\r\n        h_modified_btmPolCrv = offseted_btmPolCrv.Translate(0,0,-h-0.3)\r\n        return h_modified_btmPolCrv\r\n    \r\n    def findUprCrv(_btmPolCrv, sym_valDict):\r\n        btmCrvZ = _btmPolCrv.StartPoint.Z\r\n        test = (sym_valDict[\"C1\"] + sym_valDict[\"C2\"] + sym_valDict[\"C3\"])\r\n        #H = abs(sym_valDict[\"H2\"]) + (sym_valDict[\"C1\"] + sym_valDict[\"C2\"] + sym_valDict[\"C3\"])\r\n        H = abs(round(btmCrvZ,2))\r\n        G = sym_valDict[\"G\"]\r\n        offSetDist = (G * H)\r\n        \r\n        uprPolCrv = _btmPolCrv.Translate(0,0,H).Offset(offSetDist)\r\n        uprCrvZ = uprPolCrv.StartPoint.Z\r\n        return uprPolCrv#_btmPolCrv,btmCrvZ,uprPolCrv,uprCrvZ #btmCrvZ,uprCrvZ,test\r\n\r\n\r\n    fdnsGeo = elem.Geometry()[0]\r\n    btmPolCrv = findBtmCrv(fdnsGeo, sym_valDict)\r\n    uprPolCrv = findUprCrv(btmPolCrv, sym_valDict)\r\n    \r\n    return Solid.ByLoft([btmPolCrv,uprPolCrv])\r\n\r\n    \r\ndef addExcaInElemDicts(elemDicts):\r\n    allExcas = []\r\n    for idx,dic in enumerate(elemDicts):\r\n        elem = dic[\"Elem\"]\r\n        wms = dic[\"wms\"]\r\n        excaBln = \"Exca\" in \"\".join(list(map(lambda x: x[\"Dynamo 물량산출식\"], wms)))\r\n        if excaBln:\r\n            sym_valDict = wms[0][\"Sym_Val Dict\"]\r\n            excaGeo = makeExcaShape(elem, sym_valDict)\r\n            try:\r\n                allExcasUni = Solid.ByUnion(allExcas)\r\n                eff_excaGeo = excaGeo.Split(allExcasUni)[0]\r\n                allExcas.append(excaGeo)\r\n            except:\r\n                eff_excaGeo = excaGeo\r\n                allExcas.append(excaGeo)\r\n            dic[\"ExcaGeo\"] = eff_excaGeo\r\n\r\n    return elemDicts\r\n\r\n\r\ndef find_allGeo_UG_elems(elemDicts):\r\n    geoResult = []\r\n    for dic in elemDicts:\r\n        elem = dic[\"Elem\"]\r\n        wms = dic[\"wms\"]\r\n        excaBln = \"Exca\" in \"\".join(list(map(lambda x: x[\"Dynamo 물량산출식\"], wms)))\r\n        famType_ = wms[0][\"Family Type Name\"]\r\n            \r\n        if \"MAT_\" in famType_ or \"Mass_\" in famType_ or \"Pit\" in famType_ or \"Trench\" in famType_:\r\n            if \"Slab\" in famType_ or \"MAT_\" in famType_ or \"Mass_\" in famType_ : ## 내부 빈공간 있는 RC부재는 꽉채워서 공제 \r\n                srfs = elem.Geometry()[0].Explode() ## surface들\r\n                btmSrf = PolySurface.ByJoinedSurfaces(list(filter(lambda x: round(x.NormalAtParameter(0.5,0.5).Z, 3) == -1, srfs)))\r\n                btmCrvs = btmSrf.PerimeterCurves()\r\n                btmPolCrv = PolyCurve.ByJoinedCurves(btmCrvs)\r\n                btmCrvZ = btmPolCrv.StartPoint.Z\r\n                uprPolCrv = btmPolCrv.Translate(0,0,(0-btmCrvZ))\r\n                targetGeo = Solid.ByLoft([btmPolCrv,uprPolCrv])\r\n                geoResult.append(targetGeo)\r\n            else:\r\n                geoResult.append(elem.Geometry()[0])\r\n        elif \"PED_\" in famType_ or \"TG_\" in famType_ or \"SOG_\" in famType_ or \"UG\" in famType_:\r\n            geoResult.append(elem.Geometry()[0])\r\n            pass\r\n        elif excaBln:\r\n            geoResult.append(elem.Geometry()[0])\r\n            pass\r\n\r\n    return geoResult\r\n\r\n\r\ndef add_effExcaInElemDicts(elemDicts):\r\n    \r\n    allGeo_UG_RC_Elems = find_allGeo_UG_elems(elemDicts)\r\n    allUniGeo_UG_RC_Elems = Solid.ByUnion(allGeo_UG_RC_Elems)\r\n    elemDicts_excas = addExcaInElemDicts(elemDicts)\r\n    \r\n    for dic in elemDicts_excas:\r\n        if \"ExcaGeo\" in dic.keys():\r\n            excaGeo = dic[\"ExcaGeo\"]\r\n\r\n            eff_excaGeo = excaGeo\r\n            splitResult = eff_excaGeo.Split(allUniGeo_UG_RC_Elems)\r\n            dic[\"effExcaGeo\"] = eff_excaGeo\r\n            dic[\"effBackfillGeo\"] = splitResult[0]\r\n            #try:\r\n            #    dic[\"effDisposalGeo\"] = splitResult[1]#eff_excaGeo.Intersect(allUniGeo_UG_RC_Elems)\r\n            #except:\r\n            #    dic[\"effDisposalGeo\"] = []\r\n        \r\n        wms = dic[\"wms\"]\r\n        for wm in wms:\r\n            if \"Exca\" in wm[\"Dynamo 물량산출식\"] or\\\r\n               \"Back\" in wm[\"Dynamo 물량산출식\"] or\\\r\n               \"Disp\" in wm[\"Dynamo 물량산출식\"]:\r\n                wm[\"Sym_Val Dict\"][\"Exca\"] = dic[\"effExcaGeo\"].Volume\r\n                wm[\"Sym_Val Dict\"][\"Back\"] = dic[\"effBackfillGeo\"].Volume\r\n                wm[\"Sym_Val Dict\"][\"Disp\"] = dic[\"effExcaGeo\"].Volume - dic[\"effBackfillGeo\"].Volume\r\n\r\n                #try:\r\n                #    wm[\"Sym_Val Dict\"][\"Disp\"] = dic[\"effDisposalGeo\"].Volume\r\n                #except:\r\n                #    wm[\"Sym_Val Dict\"][\"Disp\"] = 0\r\n\r\n\r\n    return elemDicts_excas\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = add_effExcaInElemDicts(elemDicts)#elemDicts_ExcasWithWholeExcaList\r\n#OUT = allUniGeo_UG_RC_Elems",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "fb1aef36c6274fd48c14e9a3127ec8e9",
      "Inputs": [
        {
          "Id": "f11a15768d5746ea9b3149fa74e9f064",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f91fcafbd74a4726a0feb1b7027b8a3c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n#doc = DocumentManager.Instance.CurrentDBDocument\r\n#collector1 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\nimport copy\r\n###################################################################################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n###########################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDicts = IN[0]\r\n\r\ndef clean_SymValDict(elemDicts):\r\n    for dic in elemDicts:\r\n        wms = dic[\"wms\"]\r\n        for wm in wms:\r\n            formula = wm[\"Dynamo 물량산출식\"]\r\n            SymValDicts = wm[\"Sym_Val Dict\"]\r\n            SymValItems = list(zip(SymValDicts.Keys, SymValDicts.Values))\r\n            sym_val_keySets = []\r\n            sym_val_valSets = []\r\n            for k,v in SymValItems:\r\n                if k in formula:\r\n                    sym_val_keySets.append(k)\r\n                    sym_val_valSets.append(v)\r\n            #wm[\"Sym_Val Set\"] = [sym_val_keySets,sym_val_valSets]\r\n            wm[\"Sym_Val Set\"] = dict(zip(sym_val_keySets,sym_val_valSets))\r\n            formula_eqSymRemove = formula.lstrip(\"=\")\r\n            tmp = formula_eqSymRemove\r\n            for k in sym_val_keySets: ## 이 부분은 좀더 범용 처리 필요할수도\r\n                priorSymList = [\"Exca\", \"Back\", \"Disp\"]\r\n                #any(list(map(lambda x: x in tmp, priorList)))\r\n                #if \"Exca\" in tmp or \"Back\" in tmp or \"Disp\" in tmp:\r\n                if any(list(map(lambda x: x in tmp, priorSymList))):\r\n                    appliedSym = list(filter(lambda x: x in tmp, priorSymList))[0]\r\n                    #if len(k) > 1:\r\n                    if k == appliedSym:\r\n                        tmp = tmp.replace(k, str(wm[\"Sym_Val Set\"][k]))\r\n                else:\r\n                    tmp = tmp.replace(k, str(wm[\"Sym_Val Set\"][k]))\r\n                \r\n            \r\n            #wm[\"calcResult\"] = tmp.strip()\r\n            wm[\"calcResult\"] = round(eval(tmp.strip()),3)\r\n    \r\n    return elemDicts\r\n\r\n# Place your code below this line\r\n\r\nelemDicts_withSymValSet = clean_SymValDict(elemDicts)\r\n\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = clean_SymValDict(elemDicts)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "0c4ce42b1eec4eed8035d10e12270fc2",
      "Inputs": [
        {
          "Id": "715d5eb8400a49d68e4675ea776ce995",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d25f86b42589432686f7e0c250268c07",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "3a2291d54fa74970b0cacd8a3a8a08b8",
      "Inputs": [
        {
          "Id": "c2327385dc4d4427ad017aefe187b6f3",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f39659b145d0462482073c7655fe3582",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "99b7a172bab04fcf9e908e78fd92eaf3",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26d7414229104d838c6c46f04092e46f",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "908bb9ba4c4445618470abf4e49c4100",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "bc26711cf2d84b4faf73917768d70b24",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "457260c062b340eeaab5b5dedbfbc540",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1543c714eb7542f6bf73df28c1912c26",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\ndef getCharValue(s):\r\n    # 베이스 케이스\r\n    if not s:\r\n        return 0\r\n \r\n    value = 0\r\n    # 입력 문자열을 대문자로 변환한 후 반복\r\n    for ch in s:\r\n        value = value * 26 + (ord(ch) - ord('A') + 1)\r\n    return value\r\n    \r\n#################################Module For Functional Programing#############################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\n\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    #endidxs_tmp= list(map(lambda x: x[0],res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndb = IN[0]\r\nallCatSheetsNames =IN[1]\r\n\r\n\r\nparamSheet = db[0]\r\nallCatSheets = db[1:]\r\n\r\n# Place your code below this line\r\n\r\ndef find_headersAtCatSheet(catSheet):\r\n    headers_CatSheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(catSheet[1])))\r\n    \r\n    return dict(headers_CatSheet)\r\n\r\ndef find_rangesAtCatSheet(catSheet, hdrs_withIdx):\r\n    return find_range_by_columnItem(catSheet, hdrs_withIdx[\"Family Type Name\"], \"H_\")\r\n\r\ndef get_DataOnRangesAtCatSheet(catSheet): \r\n    hdrs_withIdx = find_headersAtCatSheet(catSheet)\r\n    title_idx = map(lambda x: x[0], find_rangesAtCatSheet(catSheet, hdrs_withIdx).values())\r\n    calcType_colDatas = list(map(lambda x: x[hdrs_withIdx[\"Q'ty Cal Type Tag\"]], catSheet))\r\n    calcTypes = list(map(lambda x: calcType_colDatas[x], title_idx))\r\n    rgs_v = list(map(lambda x: x[1], find_rangesAtCatSheet(catSheet, hdrs_withIdx).values()))\r\n    rgs_k = list(map(lambda x: x, find_rangesAtCatSheet(catSheet, hdrs_withIdx).keys()))\r\n    \r\n    hdrs_v = list(hdrs_withIdx.values())\r\n    hdrs_k = list(hdrs_withIdx.keys())\r\n    #tagDatas = list(zip(rgs_k,calcTypes))\r\n    \r\n    datas_allFamType = list(map(lambda x: list(zip(catSheet[x[0]-1:x[1]], range(x[0]-1,x[1]))), rgs_v))\r\n    #datas_allFamType = list(zip(tagDatas, datas_allFamType_))\r\n    \r\n    def setDict_OnEachFamType(data_famType):  ## 최종적으로 산출식 없는 것 걸러내기 추가해야 함\r\n        titleData = list(data_famType).pop(0)[0]\r\n        \r\n        famTypeName = titleData[hdrs_withIdx[\"Family Type Name\"]]\r\n        calcTypeName = titleData[hdrs_withIdx[\"Q'ty Cal Type Tag\"]]\r\n        data_famType_noneless = list(filter(lambda x: x[0][5] != None, data_famType))\r\n        ## WM row 별 header명 과 짝짓기\r\n        data_withHdrsIdx = list(map(lambda y: [list(map(lambda x: y[0][x], hdrs_v)), y[1]], data_famType_noneless))\r\n        hdrs_k.append(\"rIDX\")\r\n        dict_ = list(map(lambda x: dict(zip(hdrs_k, x[0]+[x[1]])), data_withHdrsIdx))\r\n        dicts_noneless = list(map(lambda y: dict(filter(lambda x: x[1]!=None, y.items())),dict_))\r\n        ## dict_gauge, 물량산출식 없는 항목 처리\r\n        dicts_final = []\r\n        needDefault_ColName = \"Gauge Code\"\r\n        noneRemove_ColName = \"Dynamo 물량산출식\"\r\n        for d in dicts_noneless:\r\n            d[\"Family Type Name\"] = famTypeName\r\n            \r\n            if calcTypeName == None:\r\n                pass            \r\n            elif noneRemove_ColName in d.keys():\r\n                d[\"Q'ty Cal Type Tag\"] = calcTypeName\r\n                d[needDefault_ColName] = \"\"\r\n                dicts_final.append(d)\r\n\r\n        \r\n        return dicts_final\r\n        \r\n    dicts_allFamType = list(map(lambda x: setDict_OnEachFamType(list(x)), datas_allFamType))\r\n    ds_famTypesAtCatSheet = dict(zip(rgs_k, dicts_allFamType))\r\n    ds_famTypesAtCatSheet_effCalcType = dict(filter(lambda x: all(list(map(lambda i: \"Q'ty Cal Type Tag\" in i, x[1]))), list(ds_famTypesAtCatSheet.items())))\r\n    ds_famTypesAtCatSheet_noneless = dict(filter(lambda x: len(list(x[1]))!=0, list(ds_famTypesAtCatSheet_effCalcType.items())))\r\n    \r\n    return  ds_famTypesAtCatSheet_noneless\r\n\r\n## AllInOne 딕셔너리에 정리\r\ndataOnRanges_allCat = list(map(get_DataOnRangesAtCatSheet, allCatSheets))\r\ndataOnRanges_allCat_WithCatNames = list(zip(allCatSheetsNames, dataOnRanges_allCat))\r\ndicts_AllInOne = {}\r\n\r\nfor d in dataOnRanges_allCat_WithCatNames:\r\n    catName = d[0]\r\n    dict_k_v = d[1].items()\r\n    for k,v in dict_k_v:\r\n        for wm in v:\r\n            wm[\"SheetName\"] = catName\r\n        dicts_AllInOne[k] = v\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dicts_AllInOne\r\n#OUT = get_DataOnRangesAtCatSheet(allCatSheets[0])#allCatSheetsWithNames#",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "000f06ac5d844412994ef40b4057a11a",
      "Inputs": [
        {
          "Id": "798645b44b2541869eebb7e2b11c5570",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "866fe130d5be4da3b59bb3722a0dbbc6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6f6808e72c5476eb31874fb60fbd602",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport operator\r\nfrom itertools import groupby\r\nimport copy\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDicts = IN[0]\r\n# Place your code below this line\r\ndef extractCalcResult(elemDicts):\r\n    res = []\r\n    for d in elemDicts:\r\n        wms = d[\"wms\"]\r\n        for wm in wms:\r\n            keys = [\"SheetName\", \"rIDX\", \"Work Master Code\", \"Family Type Name\", \"calcResult\"]\r\n            vals = list(map(lambda x: wm[x],keys))\r\n            k_v = list(zip(keys, vals))\r\n            res.append(dict(k_v))\r\n        \r\n    return res\r\n\r\n\r\ndef make_dict_groupBy_Sheet_WM(elemDicts):\r\n    extractedDicts = extractCalcResult(elemDicts)\r\n    sortedDicts_sheet = sorted(extractedDicts, key=operator.itemgetter(\"SheetName\"))\r\n    grpDicts_Sheet = groupby(sortedDicts_sheet, lambda x: x[\"SheetName\"])\r\n    \r\n    res = {}\r\n    for k, g in grpDicts_Sheet:\r\n        sorted_g = sorted(list(g), key=operator.itemgetter(\"rIDX\"))\r\n        grped_g = groupby(sorted_g, lambda x: x[\"rIDX\"])\r\n        tmp = []\r\n        for k_,g_ in grped_g:\r\n            gg = copy.deepcopy(list(g_))\r\n            calcSum = round(sum(map(lambda x: x[\"calcResult\"],gg)),3)\r\n            rIDX = gg[0][\"rIDX\"]\r\n            tmp.append((rIDX,calcSum))\r\n            \r\n        res[k] = tmp\r\n    return res\r\n\r\ndef fill_dict_emptySlot(dic):\r\n    tmp = []\r\n    for k, v in dic.items():\r\n#        for d in v:\r\n#            all_idxs = list(map(lambda x: x[0],v))\r\n#            max_idx = max(all_idxs)\r\n#            full_range = range(0, max_idx+1)\r\n        all_idxs = list(map(lambda x: x[0],v))\r\n        max_idx = max(all_idxs)\r\n        full_range = range(0, max_idx+1)\r\n        \r\n        for i in full_range:\r\n            if i not in all_idxs:\r\n                v.append([i, \"\"])\r\n        tmp.append(sorted(v, key=operator.itemgetter(0)))\r\n        \r\n    res = list(zip(dic.keys(),tmp))\r\n    return dict(res)\r\n\r\n\r\n\r\ndict_groupBy_Sheet_WM = make_dict_groupBy_Sheet_WM(elemDicts)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = [fill_dict_emptySlot(dict_groupBy_Sheet_WM), elemDicts]",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "df538152d8514dcaab3d75f0734a582b",
      "Inputs": [
        {
          "Id": "a26d934531764b6fa9513dcabfe0e2f2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ecd0a9d586d84b0ea205aa4d38047209",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "d9de8a61787442ceb4b5e56fe75e7a1d",
      "Inputs": [
        {
          "Id": "c24104869fb5431bacfe98eac9722e96",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ddaee91b731249a990626eee2bce9ca4",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32031adf5ee64bc49ae7c3d65dc89ca3",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ae19779d3103471bb4993d2624fee3c8",
      "Inputs": [
        {
          "Id": "b4d9a9e2970e4ba7a0adf077ee9264e5",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "c5bae2a161c44dbab17d406f3fc7e8d6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b75b3669acf47baab8e27b5432293d5",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "0e906b492e964f0388034bb3dba9715c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fbe496ff58b5496bab3d818170be9b90",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "file_path;",
      "Id": "79390c9ce7774e469399c480c2fd9540",
      "Inputs": [
        {
          "Id": "f9f782fc2baf4e9a9eeaf109ac5875b7",
          "Name": "file_path",
          "Description": "file_path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "859d68f38a9e4150ba95406d0e5a28cd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "file_path;",
      "Id": "e4bace56c16d462b8e637e17ad1a1046",
      "Inputs": [
        {
          "Id": "83e98e90705349c8b13048c1f1cfe7c0",
          "Name": "file_path",
          "Description": "file_path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3ef7f68ea224374834c39ddb549b2ca",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "43c850fe5b414baaa43fa6abbf66d41a",
      "Inputs": [
        {
          "Id": "9e003a398c744cf489ca6cf87328c986",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6b9ac6c86e794528a8f432bda91bb2d7",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66334226642f44b19bfe040f61500a5c",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "6;\n31;",
      "Id": "2524f0f864744ce88dfa2ab2d9d3e61d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "724b257b6e404ed585ee188d157145ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfa2bdde29b94030aa701b88ab3ca988",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];\ni[1];",
      "Id": "5439dd63dedb49b3a2f7682ca7a4cdfc",
      "Inputs": [
        {
          "Id": "7172958be4034e968a9464e4e693a0dc",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04e2bf21646244d9a1090d5b680e0f73",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "859e8205f3a742078b7288d96db74aba",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dict_groupBy_Sheet_WM;",
      "Id": "92a5d0c5dcc842d7b250f2421b0731ad",
      "Inputs": [
        {
          "Id": "966c11318b8a4a43afa0e303f1b32ac8",
          "Name": "dict_groupBy_Sheet_WM",
          "Description": "dict_groupBy_Sheet_WM",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e09582488be4705b6ac572c258d018e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport operator\r\nfrom itertools import groupby\r\nimport copy\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDicts = IN[0]\r\n# Place your code below this line\r\ndef extractCalcResult(elemDicts):\r\n    res = []\r\n    for d in elemDicts:\r\n        wms = d[\"wms\"]\r\n        for wm in wms:\r\n            keys = [\"SheetName\", \"rIDX\", \"Work Master Code\", \"Gauge Code\", \"wmSpecs\", \"Family Type Name\", \"calcResult\"]\r\n            vals = list(map(lambda x: wm[x],keys))\r\n            k_v = list(zip(keys, vals))\r\n            res_d = dict(k_v)\r\n            if \"Description\" in wm.Keys:\r\n                res_d[\"Description\"] = wm[\"Description\"]\r\n            else:\r\n                res_d[\"Description\"] = \"\"\r\n            res_d[\"wmcANDgauge\"] = \"\".join([wm[\"Work Master Code\"],wm[\"Gauge Code\"]])\r\n            \r\n            res.append(res_d)\r\n        \r\n    return res\r\n\r\ndef make_dict_groupBy_WM(elemDicts):\r\n    extractedDicts = extractCalcResult(elemDicts)\r\n    sortedDicts_WMC = sorted(extractedDicts, key=operator.itemgetter(\"wmcANDgauge\"))\r\n    grpDicts_WMC = groupby(sortedDicts_WMC, key=operator.itemgetter(\"wmcANDgauge\"))\r\n    \r\n    res = []\r\n    for k, g in grpDicts_WMC: \r\n        wmCode = k\r\n        gg = copy.deepcopy(list(g))\r\n        calcSum = round(sum(map(lambda x: x[\"calcResult\"], gg)),3)\r\n        wmSpecs = gg[0][\"wmSpecs\"]\r\n        catStr = \"_\".join([wmSpecs[0],wmSpecs[1]])\r\n        specOnly = list(filter(lambda x: x!=0, wmSpecs))[3:]\r\n        addSpec = gg[0][\"Description\"]\r\n        dict_res = {\r\n            \"catStr\": catStr,\r\n            \"Work Master Code\": wmCode,\r\n            \"Gauge Code\": gg[0][\"Gauge Code\"],\r\n            \"Description\": wmSpecs[2],\r\n            \"Spec.\": \"\\n\".join(specOnly),\r\n            \"Additional Spec.\": addSpec,\r\n            \"calcVal\": calcSum, \r\n            #\"wmSpecs\": wmSpecs,\r\n            }\r\n        res.append(dict_res)\r\n    \r\n    \r\n    return res\r\n\r\nextDicts = extractCalcResult(elemDicts)\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = make_dict_groupBy_WM(elemDicts)\r\n#OUT = sorted(set(map(lambda x: x[\"Work Master Code\"], extDicts)))",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "f12f2f24ce254bd0baef14f26c5d20e9",
      "Inputs": [
        {
          "Id": "eb38296ae8b4424f892c47d4c8380597",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9f7652d7dcd49818455cfcb11afd4d5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\mk\\mQ\\hecCalc\\2023\\documentum\\Total BOQ_20230920.xlsx",
      "InputValue": ".\\Total BOQ_20230920.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "ecccb4f11a2543e29cb666423f4f697e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "095ac27cee8044e7a2f1a3250bb3ef14",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "545bdda03ce34cbf8f380aa09996affe",
      "Inputs": [
        {
          "Id": "60314121b72e4091a067f4ad720e1648",
          "Name": "file",
          "Description": "File representing the Excel workbook\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "809aab676bdd45759176cd7fc1b7287c",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e88f8bd2a3704b26b0a47f1a4af42085",
          "Name": "readAsStrings",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c46c0fce7ef4f3b9d77f0c79a6d570a",
          "Name": "showExcel",
          "Description": "Toggle to show excel's main window\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e5bac32700234c6d9ed167d8d9c8f586",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"(AR) BOQ\";",
      "Id": "23c16e6f54c54461a94198d996b688b8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d12edf981f54677938d68adb8a3f14d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "cb8eb6bb001d4e018998c1f81063a7b3",
      "Inputs": [
        {
          "Id": "ca3839e498cc41deb8e9225ab7ab8210",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e30bb663437641e092989a1db00f22eb",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "6a020c54a254430aafe4c69e393e637c",
      "Inputs": [
        {
          "Id": "53befc281d5c4d3eba5820d32875f46f",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52868781734549dcbb51852a6bfe97e7",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6bbf6ee01df24cbc8a3c084d9bf90c58",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "91c3545aae754e43b03d7ab2410f3689",
      "Inputs": [
        {
          "Id": "5a720910b0b34fc1b70406b13692f1d8",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "150db7ecac4a4d079ed7254879dd055e",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c0c9b8840f54890bcd02532d2cfd68a",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "wm_sheetDatas;",
      "Id": "14f3ccaaff4b40d6995625fe77a4fefc",
      "Inputs": [
        {
          "Id": "328222afafa543d68afcfdc2f53476d0",
          "Name": "wm_sheetDatas",
          "Description": "wm_sheetDatas",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01cf442cc25e44a3937621ee3fddaaed",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "wm_sheetDatas;",
      "Id": "e1f7183e17d94ac6b722d8c8f5f42ae7",
      "Inputs": [
        {
          "Id": "7dc96717c51d4f9eaac5abcc8680a77d",
          "Name": "wm_sheetDatas",
          "Description": "wm_sheetDatas",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18bef21345f64804b4e31abad6496667",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "wm_sheetDatas;",
      "Id": "6689bfc92b614a86a2438579264ab559",
      "Inputs": [
        {
          "Id": "8c0251f3a93a45e3af2c10b715fdc9fc",
          "Name": "wm_sheetDatas",
          "Description": "wm_sheetDatas",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c8a37b2461841eebfd7ca01ff4cbbcb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "dcbac945a42f4a5c9a9db85369fb5958",
      "Inputs": [
        {
          "Id": "c9e1a9717b414fb18cba11de5a217a51",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "15939b39f28f4e619a0eb5412fcc19b8",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bd85b9cebae40d887ecf33249bfa9ea",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "abf63584b5df484fa09c861a33e2a423",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b56e73df83b44e3e99d4218e0c900f86",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "0a5e14b22e144bed8451ebf583eb117a",
      "Inputs": [
        {
          "Id": "e5be3df534fc4ffca7597213d53ae45a",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "524b1b7f02034b7e9f83fd908cc91185",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65c451db8acc4de497ba72e61d8cd1ed",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "6;",
      "Id": "0de826304a0c4eeb88bf431965d3fbff",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "52e9ec6674db4af88586c7799cfe0b57",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "353906790eac4dbe9265acc4fd59f260",
      "Inputs": [
        {
          "Id": "a4bfa9cbcd0b41e78735db0e5ca3876c",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e3824f6d5f54568850402f597fa43b7",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nwm_sheetDatas = IN[0]\r\n# Place your code below this line\r\nwm_sheetDatas_noneless = \\\r\n    list(filter(lambda row: not all(row),wm_sheetDatas))\r\n\r\ndef find_headers_wmSheet(wm_sheetDatas_noneless):\r\n\r\n    headers_tmp = wm_sheetDatas_noneless[2]\r\n    subHead_tmp = wm_sheetDatas_noneless[3]\r\n    \r\n    headers_L1 = []\r\n    for i,v in enumerate(headers_tmp):\r\n        if (v is not None): headers_L1.append(v)\r\n        else: headers_L1.append(headers_L1[i-1])\r\n    \r\n    headers_L1_L2 = []\r\n    for i,v in enumerate(subHead_tmp):\r\n        if (v is not None): headers_L1_L2.append(headers_L1[i] + \"_\" + v)\r\n        else: headers_L1_L2.append(headers_L1[i])\r\n        \r\n    return list(enumerate(headers_L1_L2))\r\n\r\nheaders = find_headers_wmSheet(wm_sheetDatas_noneless)\r\n\r\nheaders_nonLineBreak = list(map(lambda hd: [hd[1].replace(\"\\n\",\" \"), hd[0]],headers))\r\n\r\nheaders_dict = {}\r\nfor i in headers_nonLineBreak:\r\n    if i[0] not in headers_dict:\r\n        headers_dict[i[0]] = i[1]\r\n\r\n\r\n\r\n\r\n\r\n\r\ndef find_wmDicts(wm_sheetDatas_noneless):\r\n    decr_colDatas = list(map(lambda x: x[headers_dict[\"Category(Large)_Description\"]], wm_sheetDatas_noneless))\r\n    firsIDX = decr_colDatas.index(\"AR-Dummy\")\r\n\r\n    wm_sheetDatas_noHeads = wm_sheetDatas_noneless[firsIDX:]\r\n    wmDicts = []\r\n    \r\n    for row in wm_sheetDatas_noHeads:\r\n        #ref = headers_dict.items()\r\n        tmp = []\r\n        for k,idx in headers_dict.items():\r\n            if row[idx] is not None:\r\n                tmp.append([k,row[idx]])\r\n            else:\r\n                tmp.append([k,\"\"])\r\n        res = dict(tmp)\r\n        wmDicts.append(res)\r\n\r\n    return wmDicts\r\n\r\n\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = find_wmDicts(wm_sheetDatas_noneless)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "36b8b78ffdd8496bb8be6839809f94f6",
      "Inputs": [
        {
          "Id": "6667d076703448fd9a46062b1daf2ea1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4182ec433f6d4ee69d5d8f76e44fd0f8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.CustomSelection, CoreNodeModels",
      "SerializedItems": [
        {
          "Name": "터파기 형상",
          "Item": "effExcaGeo"
        },
        {
          "Name": "되메우기 형상",
          "Item": "effBackfillGeo"
        }
      ],
      "SelectedIndex": 1,
      "SelectedString": "되메우기 형상",
      "NodeType": "ExtensionNode",
      "Id": "9e1ea02461dd42db9359284f3fb6bd53",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "53bf423126fa4038b68a15dd738dbbef",
          "Name": "value",
          "Description": "Selected value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A dropdown menu with customizable values."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ntgt_key = IN[0]\r\nelemDicts = IN[1]\r\n# Place your code below this line\r\n\r\nonlyExcaDicts = list(filter(lambda x: tgt_key in x.keys(), elemDicts))\r\nres = list(map(lambda x: x[tgt_key], onlyExcaDicts))\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "459d10fe5baa468d9226fc41edb2fc12",
      "Inputs": [
        {
          "Id": "2f440e28c6ad4e89b3abec966706fd74",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b01cc52a5a834be48106e2c14f7ab598",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af54601b54f14f269e499e30b2d9bccb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"effExcaGeo\";\n\"effBackfillGeo\";",
      "Id": "b32ba32e11b94d07a3439003f54a3c9a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "27938ad6b4a14016ba47a4376105e1ed",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7bbfddc01a304074b1eb8ea5721394a0",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "10df97388f1c47c99f9d61d15ad19e4a",
      "Inputs": [
        {
          "Id": "1dec7b1240b943bc99da472d1b0ede28",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d89c3085a1d4d59b9cb367d2023d6b4",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "12c80170ba694c22b43e5c8cb13cca2a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "4;",
      "Id": "b34a66f0d7864ef283856170c2606a12",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "72a95324c21747128d0dc9cabbbed1fd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "9a893bfe-b5bc-4b0d-b0c0-365d427b3f85 Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "NodeType": "ExtensionNode",
      "Id": "9a893bfeb5bc4b0db0c0365d427b3f85",
      "Inputs": [
        {
          "Id": "3af6ae031cef40b8bfd4648638902c0c",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5da7d53613794d7dbcf92ef1287410ea",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Keys",
      "Id": "0e9dd9cb6fb34e35b5bb8303dbaaffa7",
      "Inputs": [
        {
          "Id": "a2812fed94d14546ab79190346f3a1ab",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "848bebf74a5b471892ccbed05551e0d2",
          "Name": "keys",
          "Description": "Keys of the Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the keys in a Dictionary.\n\nDictionary.Keys: string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e861b848a856496cbce58b3351868c08",
      "Inputs": [
        {
          "Id": "e4473f11a1094475b798c856c23211f3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "200e8c0696ef4ed5a750d77b90d8adb2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ccaaaeb81e64cf0afd6b6f7368aeef8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Type\";\n\"Type Name\";",
      "Id": "b8bb7074d1474d5c817d440222fe7c73",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e2efe09d87f1434eb0f7c9414128ff0c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "416031294e5a4b26a177a3f81301ce5d",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "a6525529e2854c5da74f8737df2462da",
      "Inputs": [
        {
          "Id": "02e0bb5b9d0e457ebd53e48eca839e1d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ff046ebd624422dad4be5c1cb3a9e98",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b41720919fd0439ea0dd87f71b67080e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "b0d49f5a08ca4d7aa0ec4d85b3c4eb68",
      "Inputs": [
        {
          "Id": "bee976de5cac45d9a7729a1dad8b487d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08cf3f9b3e5d43e48be4ee2445de11d1",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "343c269326d242598a644214bc9fd722",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "73b6dea7f2e447e79d14252e5f29c46f",
      "Inputs": [
        {
          "Id": "5898129ba6e94717bad1c2e9e6b75313",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90f57e60ceb2474582ae512af066d4ae",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dbe3d4e0b3c843b381d4619e6b08c419",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "220d3bdb4cb2425baa34694c41b40bf4",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "filtered;",
      "Id": "5fa4cf5424f741e2afce70431dab7668",
      "Inputs": [
        {
          "Id": "60e35df0a54d44b2b29f12ffd164e82a",
          "Name": "filtered",
          "Description": "filtered",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c74ec6256e048dda2ae76e8a8a16d55",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Contains@var[]..[],var[]..[]",
      "Id": "ff9036ffe34e498e92682212d56492b0",
      "Inputs": [
        {
          "Id": "2e0e9ab5640c43a492b1a15323d3445b",
          "Name": "list",
          "Description": "List to search in\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1b3d9a6071e4c09a2b8469bc8792426",
          "Name": "item",
          "Description": "Item to look for\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5dce84b2c7754a2bbef894ea1de56dd5",
          "Name": "bool",
          "Description": "True if list contains item, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list contains the given item. This function searches through the sublists contained in it.\n\nList.Contains (list: var[]..[], item: var[]..[]): bool"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\nimport itertools\r\nfrom itertools import chain\r\n\r\ndef getCharValue(s):\r\n    # 베이스 케이스\r\n    if not s:\r\n        return 0\r\n \r\n    value = 0\r\n    # 입력 문자열을 대문자로 변환한 후 반복\r\n    for ch in s:\r\n        value = value * 26 + (ord(ch) - ord('A') + 1)\r\n    return value\r\n    \r\n#################################Module For Functional Programing#############################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\n        \r\ndef find_IsInList(List, str):\r\n    if str == None or List == None:\r\n        pass\r\n    else:\r\n        res = str in List\r\n        return res\r\n\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    #endidxs_tmp= list(map(lambda x: x[0],res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n    \r\ndef find_range_by_columnItem_discrim(db, col_idx, 판별항목):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInList(판별항목, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    #endidxs_tmp= list(map(lambda x: x[0],res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nbd_name = IN[0]\r\ndescr판별항목 = IN[1]\r\n판별항목lv1 = descr판별항목[0]\r\n판별항목lv2 = descr판별항목[1]\r\ndb = IN[2]\r\n\r\n\r\n# Place your code below this line\r\n\r\ndef find_headersAtSheet(Sheet):\r\n    headers_Sheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(Sheet[2])))\r\n    res = dict(headers_Sheet)\r\n    del res[\"_\"]\r\n    \r\n    return res\r\n    \r\ndef find_headers_Building(Sheet, bd_name):\r\n    headers_bd = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(Sheet[3])))\r\n    headers_targetBD = list(filter(lambda x: x[0] == bd_name, headers_bd))\r\n    res = {}\r\n    res[\"targetBD\"] = headers_targetBD[0][1]\r\n    return res\r\n\r\ndef find_rangesAtSheet(Sheet, hdrs_withIdx, 판별항목):\r\n    return find_range_by_columnItem_discrim(Sheet, hdrs_withIdx[\"Description\"], 판별항목)\r\n\r\ndef get_DataOnRangesAtSheet(Sheet):\r\n    \r\n    hdrs_withIdx = dict(list(find_headersAtSheet(Sheet).items()) + list(find_headers_Building(Sheet, bd_name).items()))\r\n    rgs_v_lv1 = list(map(lambda x: x[1], find_rangesAtSheet(Sheet, hdrs_withIdx, 판별항목lv1).values()))\r\n    rgs_v_lv2 = list(map(lambda x: x[1], find_rangesAtSheet(Sheet, hdrs_withIdx, 판별항목lv2).values()))\r\n    \r\n    idxs_v_lv1 = list(map(lambda x: range(x[0],x[1]+1), rgs_v_lv1))\r\n\r\n    datas_lv1 = []\r\n    col_datas = list(map(lambda x: x[hdrs_withIdx[\"Description\"]], Sheet))\r\n    for rg in idxs_v_lv1:\r\n        lv1_str = col_datas[rg[0]-1]\r\n        tmp = []\r\n        for i in rg:\r\n            tmp.append([i, lv1_str, col_datas[i]])\r\n        \r\n        datas_lv1.append(tmp)\r\n\r\n    datas_lv2 = []\r\n    for rg in datas_lv1:\r\n        tmp = []\r\n        for idx,v in enumerate(rg):\r\n            if v[2] == None:\r\n                tmp.append([v[0],v[1],tmp[idx-1][2]])\r\n            else:\r\n                \r\n                tmp.append(v)\r\n        datas_lv2.append(tmp)\r\n\r\n    flatten_res = list(chain(*datas_lv2))\r\n    rres = itertools.groupby(flatten_res, lambda x: [x[1], x[2]])\r\n    \r\n    res = {}\r\n    for k, g in rres:\r\n        #print(list(g))\r\n        removedfirstelem_g = list(g)[1:]\r\n        res[\"_\".join(k)] = [removedfirstelem_g[0][0],removedfirstelem_g[-1][0]]\r\n    \r\n    return res\r\n\r\nhdrs_withIdx = dict(list(find_headersAtSheet(db).items()) + list(find_headers_Building(db, bd_name).items()))\r\n\r\nOUT = hdrs_withIdx, get_DataOnRangesAtSheet(db)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "6d3257a7ae1544ba96260a2930df41a0",
      "Inputs": [
        {
          "Id": "e40fc391bb9543069e39578990171d11",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c86c20b170cf41b2b9cfee070d24dc41",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec0e917339cb4f81875e476c63e9f5d3",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27d87943c571456dab1665971c560014",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a21d79dc4e546c7a5d930f015a1ccf9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "description판별항목1;",
      "Id": "1d1c6adab25c4ce38795f6d70084638b",
      "Inputs": [
        {
          "Id": "4e559b0185dc4491b7280e9af4d25100",
          "Name": "description판별항목1",
          "Description": "description판별항목1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75452394259f454aac6b7f0729e4e1f7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "86d4c756923b4ec5a7a76f44031313e3",
      "Inputs": [
        {
          "Id": "b6b668c063784cf0ba5e742521351658",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e51c34b755b4b5daebc49a04c834a02",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be1b029e33894bd0902651bb82065169",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "6;",
      "Id": "36b72e613f054f51ab44d4a659a11baf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da8b6750c54241e4ae6ec824684ac955",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "522eba1415564c619ea3a722c3bfca63",
      "Inputs": [
        {
          "Id": "85ac0d8fca71462086880054318c5da1",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1713810eee684d02934f951dc7ba675d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b345d4e40bdc4e6593a996aa4cb30453",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "78f0730f98164cf88c95031451db6a2e",
      "Inputs": [
        {
          "Id": "830fdb6b17c24e5e9b88bcb80c215549",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd49bd91c8404815a9c1a36fc411c667",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "5;",
      "Id": "f8862fff8dc647619582f6b8e6003793",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d4b321675a114235bf59cb7e5d0e3e28",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Steam Turbine Building",
      "Id": "aae6ee369697433d96978d6f0a38227c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a2ecfaa19c334eddb1d809fd5b9c21b7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "description판별항목2;",
      "Id": "6790ac16e9864c6282b9f0a28e4bac80",
      "Inputs": [
        {
          "Id": "42770b41a2d946509605b16ddcffe4ed",
          "Name": "description판별항목2",
          "Description": "description판별항목2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "112368b6347846d79c81bcc2f9ded6e3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "8066549a4a9b47df80e48559f550e5c6",
      "Inputs": [
        {
          "Id": "893113c989264cd19431bbb81823b560",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5241a20caa8f481a94fc7be2332e76fc",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f41c17b57dc4486791d293b996225179",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport subprocess\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\ndef pip_install(package):\r\n    subprocess.check_call([\"pip\", \"install\", package])\r\n\r\npip_install(\"numpy\")\r\n# Assign your output to the OUT variable.\r\nOUT = 0",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "92e3526e93834efd8c29509a613b39e7",
      "Inputs": [
        {
          "Id": "936dfc9c99d64583a46fe13eadfa711d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f87482b31cfd40c9a64b7f5bdbc2d6e6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import groupby\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nrangeDicts = IN[0]\r\nwmsList = IN[1]\r\n# Place your code below this line\r\n\r\nwmsSorted = sorted(wmsList, key=lambda x: x[\"Work Master Code\"])\r\nwmsGrped = groupby(wmsList, lambda x: x[\"catStr\"])\r\nwmsGrped_sorted = []\r\n\r\nfor k,v in wmsGrped:\r\n    grp_sorted = sorted(list(v), key=lambda x: x[\"Work Master Code\"])\r\n    stt_idx = rangeDicts[k][0]\r\n    length_grp = len(grp_sorted)\r\n    idxs = range(stt_idx, stt_idx+length_grp)\r\n    zip_grp_idxs = list(zip(idxs, grp_sorted))\r\n    for i in zip_grp_idxs:\r\n        d = i[1]\r\n        d[\"rIDX\"] = i[0]\r\n    \r\n    wmsGrped_sorted.append(grp_sorted)\r\n    \r\nwmsGrped_sorted_idxed = list(chain(*wmsGrped_sorted))\r\n\r\nres = []\r\nfor n,v in enumerate(wmsGrped_sorted_idxed):\r\n    if v[\"rIDX\"] == wmsGrped_sorted_idxed[n-1][\"rIDX\"] + 1:\r\n        res.append(v)\r\n    else:\r\n        pass\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = wmsGrped_sorted_idxed",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "cf52cd359968431c954ef0c1c105f09b",
      "Inputs": [
        {
          "Id": "c65df92cac4c49448f02fb3db90aca10",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d6a579e11fc46ff81e2a20afbd033ad",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc0b74d5401541c0bc827a65e85ad1a1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import groupby\r\n\r\nimport DSOffice\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nfilePath = IN[0]\r\nsheetName = IN[1]\r\nhdrs_withIdx = IN[2]\r\ndictList = IN[3]\r\n\r\n# Place your code below this line\r\nexportToExcel = DSOffice.Data.ExportToExcel\r\n#print(hdrs_withIdx)\r\n\r\nhdrsColIdxs = [\r\n        hdrs_withIdx[\"Work Master Code\"],\r\n        hdrs_withIdx[\"Gauge Code\"],\r\n        hdrs_withIdx[\"Description\"],\r\n        hdrs_withIdx[\"Spec.\"],\r\n        hdrs_withIdx[\"Additional Spec.(설계자 작성)\"],\r\n        hdrs_withIdx[\"targetBD\"],\r\n            ]\r\n\r\n\r\ndictList_grped = groupby(dictList, lambda x: x[\"catStr\"])\r\n\r\ndictList_grpedList = []\r\nfor k,grp in dictList_grped:\r\n    dictList_grpedList.append(list(grp))\r\n\r\ndef writeExcel(keys,startColhdr, grpedList):\r\n    for i in dictList_grpedList:\r\n        #keys = [\"Work Master Code\", \"Gauge Code\", \"Description\", \"Spec.\", \"Additional Spec.\", ]\r\n        startCol = hdrs_withIdx[startColhdr]\r\n        startRow = i[0][\"rIDX\"]\r\n\r\n        datas = list(zip(*map(lambda y: map(lambda x: x[y], list(i)), keys)))\r\n        #res.append(datas)\r\n        exportToExcel(filePath, sheetName, startRow, startCol, datas)\r\n\r\nkeys1 = [\"Work Master Code\", \"Gauge Code\", \"Description\", \"Spec.\", \"Additional Spec.\", ]\r\nkeys2 = [\"calcVal\"]\r\n\r\nwriteExcel(keys1,\"Work Master Code\", dictList_grpedList)\r\nwriteExcel(keys2,\"targetBD\", dictList_grpedList)\r\n# Assign your output to the OUT variable.\r\nOUT = hdrsColIdxs",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "53192363f9da457ca86140d19351bdfb",
      "Inputs": [
        {
          "Id": "7d852923babc430fa1d5c8efa5cdde9f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a14711119634cb3be308f0f81f8e3c2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b24df086c9204ccd9af377fabb5536aa",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17c5e50fcdc64d49a30e6884d4f4a9e0",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f86a6da172074bfd8722962d69214204",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "filePath;\nsheetName;",
      "Id": "29337ae8d2c94d488ebdc03de0a16ad6",
      "Inputs": [
        {
          "Id": "f36f58acbd9d4a98a75c350160b56455",
          "Name": "filePath",
          "Description": "filePath",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66b06265d43b492688394beaf19bea9d",
          "Name": "sheetName",
          "Description": "sheetName",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3422482c33ca4a8bb54f4221e08c54ac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9b1312780c54a8e89dc026b692e91e8",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];\ni[1];",
      "Id": "008b88f58bd548188e4d5668e106d9e3",
      "Inputs": [
        {
          "Id": "7a4717f20e8c4a92bf2544c39b2f6225",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "197c2806328b44c7b389b19b4bf208b1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e7bc4b0ebb94439a19e112cec4c9870",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "912753a782b84f598e120e936fffbd58",
      "End": "ae38fed72c0a434eb235268bfba22c03",
      "Id": "2f9fd4adb6444d8e9c24cd4a536bbbf2",
      "IsHidden": "False"
    },
    {
      "Start": "e4d9d60debe6406cace5eb687f712858",
      "End": "efbd6851497a4681a114ca7842d95e6a",
      "Id": "2483c846c22f4026a33d2bffb611b5e1",
      "IsHidden": "False"
    },
    {
      "Start": "bdc68e6596d64c1bb2ad17af850a8a64",
      "End": "f2b7450af5914cbf8a28c2a092e6a190",
      "Id": "e1261a8d8e0640709812536bf93bfcb4",
      "IsHidden": "False"
    },
    {
      "Start": "07eba95685e249a0a3188444eec253fe",
      "End": "2d45870ecc9f4742810ae2af861ad07b",
      "Id": "9aeb66891ebe4d4ca89e07933da9a02d",
      "IsHidden": "False"
    },
    {
      "Start": "266640a8b58449a48603af36addb1282",
      "End": "e4473f11a1094475b798c856c23211f3",
      "Id": "adcf7ca898144a3b8f77115c0a663e7f",
      "IsHidden": "False"
    },
    {
      "Start": "16f6a93146ee4557a8eec29cac4eb344",
      "End": "5a720910b0b34fc1b70406b13692f1d8",
      "Id": "3f1f84dec4784524b8a6218e92c15933",
      "IsHidden": "False"
    },
    {
      "Start": "eb3a2510c5934129baf50771f5bb29a9",
      "End": "c4d740fa206e4ab3b53ba148e9727e8f",
      "Id": "0708e80f5c0f475aa73809bfc8d71053",
      "IsHidden": "False"
    },
    {
      "Start": "e3d41cbea388406e9b31fca8184f2a13",
      "End": "8d8f529204cd48a5a2210b85d94be686",
      "Id": "aea2bbf0844a421eac38d674664254a7",
      "IsHidden": "False"
    },
    {
      "Start": "e3d41cbea388406e9b31fca8184f2a13",
      "End": "f9f782fc2baf4e9a9eeaf109ac5875b7",
      "Id": "eafa2240e806488fbd17faf4c8cfd800",
      "IsHidden": "False"
    },
    {
      "Start": "f98969ee45ea4cce8921b553ad57fbc0",
      "End": "da624c3834b64df4a29198439fca082e",
      "Id": "056e91bb2fca4d81af853578b822a2fa",
      "IsHidden": "False"
    },
    {
      "Start": "a4ee13c7962e41349775335b48e45650",
      "End": "8871f8fef5b841e484fe65aa92aecb9c",
      "Id": "511ab0c224e74145934ebe664f7e5100",
      "IsHidden": "False"
    },
    {
      "Start": "a4ee13c7962e41349775335b48e45650",
      "End": "53befc281d5c4d3eba5820d32875f46f",
      "Id": "3e44935e90554d148ce3d58849272c9e",
      "IsHidden": "False"
    },
    {
      "Start": "7d4c7b51481348b68b28a4a779f5cca8",
      "End": "8fc2fd075a8f43b5aa80a7c22114b549",
      "Id": "758db14748464307bcd2f9bfee28d63e",
      "IsHidden": "False"
    },
    {
      "Start": "4c4c0a55d8a14ffd85d7c51b2c5597ce",
      "End": "866fe130d5be4da3b59bb3722a0dbbc6",
      "Id": "445a1d0cfa4e4c6f9a63de2f51b4fefa",
      "IsHidden": "False"
    },
    {
      "Start": "10927b3559a04512b2a50eede4045749",
      "End": "55f29dd9f2c2400aad315d92c033b933",
      "Id": "fd4a4199c451446fb68c683ac788c324",
      "IsHidden": "False"
    },
    {
      "Start": "a6db5b3198a84514b931f6728da04348",
      "End": "affa8e9069d34d359fdc5519189993e3",
      "Id": "d7265a7aa81143e980dbc9fb2f067d7f",
      "IsHidden": "False"
    },
    {
      "Start": "25b11d15e6834c96a298b45cb1bf32a7",
      "End": "da273f14c52b42558ec17b22c360f024",
      "Id": "b790e826848349b3999761b5dbe7aeb7",
      "IsHidden": "False"
    },
    {
      "Start": "f5cb5f12a9a34c0580335168f950d6a0",
      "End": "b807a40e33d146ed8e1079d77df2f4a2",
      "Id": "c5747d2463794114aac18de569ebdc9c",
      "IsHidden": "False"
    },
    {
      "Start": "8d2a0590f2cb4f7e9a74cf1403826133",
      "End": "16ae095d8bb742a1842007898fa8da08",
      "Id": "69843f6ba0c244dda039144208d1ec34",
      "IsHidden": "False"
    },
    {
      "Start": "704a0615649a4b69a7598e7bf9bbdf71",
      "End": "d7eecaa87218489daa29e5f629d3e5f4",
      "Id": "c6c8b668c94b4fd3a8d836d7f59c30ef",
      "IsHidden": "False"
    },
    {
      "Start": "da989cdd240f4026b50103281496dc4c",
      "End": "5c24b6a46f074029ae30973e803423cf",
      "Id": "5780c2d647e0468b9a4416956c5d1de7",
      "IsHidden": "False"
    },
    {
      "Start": "a3d8ae3ce29c4ada9cd978071a690e99",
      "End": "60298be91cbc40aaa4d4c2caf7553ef4",
      "Id": "44d3a61834ea4fdc87d49c2b7853293c",
      "IsHidden": "False"
    },
    {
      "Start": "2b78d9bdee064ca8aa719add76dab153",
      "End": "03197cc52c5a41498621cc5cbbdcdda2",
      "Id": "3222e9cb93354ef584433d5298ef1779",
      "IsHidden": "False"
    },
    {
      "Start": "bd1c260823824c3fa942da73cd699d3c",
      "End": "1acb0f3536104379b228c0f654ce7eff",
      "Id": "bee2b8173f32457e87e183a9072558bc",
      "IsHidden": "False"
    },
    {
      "Start": "0ffaed7ff9494698a476c77992378425",
      "End": "9ba11babb5ef4e12a0e246df296ff645",
      "Id": "54ca60e73be04ea1a84cc3d9610d1437",
      "IsHidden": "False"
    },
    {
      "Start": "4dfc84f116ed401aafa20bbf21bb6813",
      "End": "791810c9f38243529a3142e7e7fd2d41",
      "Id": "f3c0180c2ad04c3e8bb0b6262bf1fb4f",
      "IsHidden": "False"
    },
    {
      "Start": "4dfc84f116ed401aafa20bbf21bb6813",
      "End": "13eef7c2e1884f17bd9a94f727ce0d5e",
      "Id": "f3455b73a07e4f86aee74da478e9fdbb",
      "IsHidden": "False"
    },
    {
      "Start": "d8402fd2e2cf40e18826f7fb710d7abe",
      "End": "e5775c1a7f8c45d6911594db84ada28f",
      "Id": "4ca3ebe2dc6b435aaa3f0a73607db136",
      "IsHidden": "False"
    },
    {
      "Start": "d8402fd2e2cf40e18826f7fb710d7abe",
      "End": "9dd564bcf04b4432a305390a99f356d7",
      "Id": "b204c1ced1514f68ba43e37d0b19c58c",
      "IsHidden": "False"
    },
    {
      "Start": "d8402fd2e2cf40e18826f7fb710d7abe",
      "End": "2eeeec0b990e460c904c7443bf123471",
      "Id": "4234ace9fb904db4bd3319cdbe148d71",
      "IsHidden": "False"
    },
    {
      "Start": "3bd9705415654f7e8ac8be1751b2b4e4",
      "End": "9ab530efab9c434581925fdde0bb806e",
      "Id": "bb946722da4c4973837208e6ea593923",
      "IsHidden": "False"
    },
    {
      "Start": "5cf52c8def9d401db5e11d43ab6fe5cd",
      "End": "413d8e4c6a5b4e0f81d2665f58b5e5b6",
      "Id": "45abac9d707d4c78b9dbe92dece5d907",
      "IsHidden": "False"
    },
    {
      "Start": "9e71cda960604590987dd25291031857",
      "End": "6bb89a836d794adbb921321ff571e938",
      "Id": "f571bc79199e4fbdb053d743c62fae36",
      "IsHidden": "False"
    },
    {
      "Start": "9e71cda960604590987dd25291031857",
      "End": "e45e7bbab26b4433b5b39ea0019872d8",
      "Id": "5ad28eb7162a4089a8c617d9fac698a6",
      "IsHidden": "False"
    },
    {
      "Start": "9e71cda960604590987dd25291031857",
      "End": "1c86f76bf4e449e498eaeaf4e9d6e40f",
      "Id": "aea4170ff73f4e60b31559b6f1a53565",
      "IsHidden": "False"
    },
    {
      "Start": "f3849c2f660e4f0d9a1e89d3d58bb89f",
      "End": "f11a15768d5746ea9b3149fa74e9f064",
      "Id": "85b5073206fa40b0909d82e6560567ef",
      "IsHidden": "False"
    },
    {
      "Start": "f91fcafbd74a4726a0feb1b7027b8a3c",
      "End": "715d5eb8400a49d68e4675ea776ce995",
      "Id": "b591698e1d774f829bd3c9d04887aa2c",
      "IsHidden": "False"
    },
    {
      "Start": "d25f86b42589432686f7e0c250268c07",
      "End": "a26d934531764b6fa9513dcabfe0e2f2",
      "Id": "ecff7ae3706d4f168d14ee453febca19",
      "IsHidden": "False"
    },
    {
      "Start": "d25f86b42589432686f7e0c250268c07",
      "End": "b01cc52a5a834be48106e2c14f7ab598",
      "Id": "16dcc0476888424590221b489d29b4f6",
      "IsHidden": "False"
    },
    {
      "Start": "a6f6808e72c5476eb31874fb60fbd602",
      "End": "4dfe3aa2a2224526a2855fca7f3bad83",
      "Id": "2d402a09a1794363b5b65ae576ba7a64",
      "IsHidden": "False"
    },
    {
      "Start": "a6f6808e72c5476eb31874fb60fbd602",
      "End": "a2812fed94d14546ab79190346f3a1ab",
      "Id": "75937646fa874f19949a8fa3a3895527",
      "IsHidden": "False"
    },
    {
      "Start": "ecd0a9d586d84b0ea205aa4d38047209",
      "End": "7172958be4034e968a9464e4e693a0dc",
      "Id": "9cb7f8b21a58400299a223bc8add9c09",
      "IsHidden": "False"
    },
    {
      "Start": "ddaee91b731249a990626eee2bce9ca4",
      "End": "f39659b145d0462482073c7655fe3582",
      "Id": "bb10b8b155574fc1b28d8e50bdb1ec9d",
      "IsHidden": "False"
    },
    {
      "Start": "32031adf5ee64bc49ae7c3d65dc89ca3",
      "End": "b4d9a9e2970e4ba7a0adf077ee9264e5",
      "Id": "5ee870b4a1c24e509f74c3a382712baa",
      "IsHidden": "False"
    },
    {
      "Start": "8b75b3669acf47baab8e27b5432293d5",
      "End": "9e003a398c744cf489ca6cf87328c986",
      "Id": "fe94b593700f427ab2952453c3ad657b",
      "IsHidden": "False"
    },
    {
      "Start": "fbe496ff58b5496bab3d818170be9b90",
      "End": "c5bae2a161c44dbab17d406f3fc7e8d6",
      "Id": "ef473d909f8f47ec8564e892527483d8",
      "IsHidden": "False"
    },
    {
      "Start": "859d68f38a9e4150ba95406d0e5a28cd",
      "End": "83e98e90705349c8b13048c1f1cfe7c0",
      "Id": "5bdf069881b94f4dbc310aebe401e127",
      "IsHidden": "False"
    },
    {
      "Start": "a3ef7f68ea224374834c39ddb549b2ca",
      "End": "c2327385dc4d4427ad017aefe187b6f3",
      "Id": "13de535de37b4fd4b9cd3f6c03cf65b2",
      "IsHidden": "False"
    },
    {
      "Start": "66334226642f44b19bfe040f61500a5c",
      "End": "908bb9ba4c4445618470abf4e49c4100",
      "Id": "628f0fc69ff44a33aa30b4dc5dcc1d83",
      "IsHidden": "False"
    },
    {
      "Start": "724b257b6e404ed585ee188d157145ba",
      "End": "99b7a172bab04fcf9e908e78fd92eaf3",
      "Id": "9340680534104457a1394df00fe0b8c3",
      "IsHidden": "False"
    },
    {
      "Start": "724b257b6e404ed585ee188d157145ba",
      "End": "6b9ac6c86e794528a8f432bda91bb2d7",
      "Id": "9a391cab697f4f719602fc3d68579349",
      "IsHidden": "False"
    },
    {
      "Start": "bfa2bdde29b94030aa701b88ab3ca988",
      "End": "26d7414229104d838c6c46f04092e46f",
      "Id": "a6a3a45e5f85428cab6f2525462d295a",
      "IsHidden": "False"
    },
    {
      "Start": "04e2bf21646244d9a1090d5b680e0f73",
      "End": "c24104869fb5431bacfe98eac9722e96",
      "Id": "a877848a20224541a37a9d3b335b8563",
      "IsHidden": "False"
    },
    {
      "Start": "859e8205f3a742078b7288d96db74aba",
      "End": "966c11318b8a4a43afa0e303f1b32ac8",
      "Id": "bcc78099a0c24f06bd68907ae744dad9",
      "IsHidden": "False"
    },
    {
      "Start": "1e09582488be4705b6ac572c258d018e",
      "End": "eb38296ae8b4424f892c47d4c8380597",
      "Id": "f4af9c3841ea48c08f2e8550c5297d8e",
      "IsHidden": "False"
    },
    {
      "Start": "d9f7652d7dcd49818455cfcb11afd4d5",
      "End": "5d6a579e11fc46ff81e2a20afbd033ad",
      "Id": "389e038f7a0b43d38a5d4e01498869f9",
      "IsHidden": "False"
    },
    {
      "Start": "095ac27cee8044e7a2f1a3250bb3ef14",
      "End": "ca3839e498cc41deb8e9225ab7ab8210",
      "Id": "3507dc859328499a9a70256b268c8f40",
      "IsHidden": "False"
    },
    {
      "Start": "095ac27cee8044e7a2f1a3250bb3ef14",
      "End": "f36f58acbd9d4a98a75c350160b56455",
      "Id": "da521293760640a6944015d2b99c5d3b",
      "IsHidden": "False"
    },
    {
      "Start": "e5bac32700234c6d9ed167d8d9c8f586",
      "End": "ec0e917339cb4f81875e476c63e9f5d3",
      "Id": "e612ac9c5b1e4f5da9953e4e986bda04",
      "IsHidden": "False"
    },
    {
      "Start": "2d12edf981f54677938d68adb8a3f14d",
      "End": "809aab676bdd45759176cd7fc1b7287c",
      "Id": "5d630b015d954f4b81ffdf8a226efd9d",
      "IsHidden": "False"
    },
    {
      "Start": "2d12edf981f54677938d68adb8a3f14d",
      "End": "66b06265d43b492688394beaf19bea9d",
      "Id": "3eed20d5a085418fa01190c42fe1e4c6",
      "IsHidden": "False"
    },
    {
      "Start": "e30bb663437641e092989a1db00f22eb",
      "End": "60314121b72e4091a067f4ad720e1648",
      "Id": "0483fec52e294191a9fbc53fac0015c9",
      "IsHidden": "False"
    },
    {
      "Start": "6bbf6ee01df24cbc8a3c084d9bf90c58",
      "End": "fb681e08f1034208a2da1a59eef69887",
      "Id": "634020c8a32744b39aa1db7c5b0eeb73",
      "IsHidden": "False"
    },
    {
      "Start": "150db7ecac4a4d079ed7254879dd055e",
      "End": "328222afafa543d68afcfdc2f53476d0",
      "Id": "31a868c675d144c6bccbb0e9fc2c6138",
      "IsHidden": "False"
    },
    {
      "Start": "2c0c9b8840f54890bcd02532d2cfd68a",
      "End": "cbcac752c4ef4adbbf500face4dae780",
      "Id": "77bc5bf851ed4732b7397ad184223e99",
      "IsHidden": "False"
    },
    {
      "Start": "2c0c9b8840f54890bcd02532d2cfd68a",
      "End": "798645b44b2541869eebb7e2b11c5570",
      "Id": "af22e82a77d6453d82e1b9a6a3057a30",
      "IsHidden": "False"
    },
    {
      "Start": "01cf442cc25e44a3937621ee3fddaaed",
      "End": "7dc96717c51d4f9eaac5abcc8680a77d",
      "Id": "fcaea59360bc4fdca95ebe75830a4576",
      "IsHidden": "False"
    },
    {
      "Start": "18bef21345f64804b4e31abad6496667",
      "End": "8c0251f3a93a45e3af2c10b715fdc9fc",
      "Id": "2142adfdb73244b49b5f14c493d4a427",
      "IsHidden": "False"
    },
    {
      "Start": "8c8a37b2461841eebfd7ca01ff4cbbcb",
      "End": "c9e1a9717b414fb18cba11de5a217a51",
      "Id": "2841eaf5dd4a4786a970acde91428eac",
      "IsHidden": "False"
    },
    {
      "Start": "8c8a37b2461841eebfd7ca01ff4cbbcb",
      "End": "6667d076703448fd9a46062b1daf2ea1",
      "Id": "608eae44c53d464aa8365684a1694c52",
      "IsHidden": "False"
    },
    {
      "Start": "8c8a37b2461841eebfd7ca01ff4cbbcb",
      "End": "85ac0d8fca71462086880054318c5da1",
      "Id": "2b4898dd04724928bceda9e8c8f653cf",
      "IsHidden": "False"
    },
    {
      "Start": "8bd85b9cebae40d887ecf33249bfa9ea",
      "End": "e5be3df534fc4ffca7597213d53ae45a",
      "Id": "8c4ae19e61304e3989e225276fea049e",
      "IsHidden": "False"
    },
    {
      "Start": "b56e73df83b44e3e99d4218e0c900f86",
      "End": "15939b39f28f4e619a0eb5412fcc19b8",
      "Id": "d0ac131505264be1bed92a0be74ebc1f",
      "IsHidden": "False"
    },
    {
      "Start": "65c451db8acc4de497ba72e61d8cd1ed",
      "End": "a4bfa9cbcd0b41e78735db0e5ca3876c",
      "Id": "9d557bbd38024f47ba36d72731a3ebc8",
      "IsHidden": "False"
    },
    {
      "Start": "52e9ec6674db4af88586c7799cfe0b57",
      "End": "524b1b7f02034b7e9f83fd908cc91185",
      "Id": "a70c0bd1baa7405cb1189ae877b879ec",
      "IsHidden": "False"
    },
    {
      "Start": "9e3824f6d5f54568850402f597fa43b7",
      "End": "4e559b0185dc4491b7280e9af4d25100",
      "Id": "144a89029f714c0890c1d469d4130e31",
      "IsHidden": "False"
    },
    {
      "Start": "53bf423126fa4038b68a15dd738dbbef",
      "End": "2f440e28c6ad4e89b3abec966706fd74",
      "Id": "2c57ed139e52465c913f3251c28b77d1",
      "IsHidden": "False"
    },
    {
      "Start": "af54601b54f14f269e499e30b2d9bccb",
      "End": "1dec7b1240b943bc99da472d1b0ede28",
      "Id": "96e18ccf7bee48348eef2dafbd66f35f",
      "IsHidden": "False"
    },
    {
      "Start": "12c80170ba694c22b43e5c8cb13cca2a",
      "End": "3af6ae031cef40b8bfd4648638902c0c",
      "Id": "c408cf5480974a7d88de5e726b911ef9",
      "IsHidden": "False"
    },
    {
      "Start": "72a95324c21747128d0dc9cabbbed1fd",
      "End": "4d89c3085a1d4d59b9cb367d2023d6b4",
      "Id": "084ce350169a43b1ab06975108a56deb",
      "IsHidden": "False"
    },
    {
      "Start": "848bebf74a5b471892ccbed05551e0d2",
      "End": "2e0e9ab5640c43a492b1a15323d3445b",
      "Id": "42f8f00661c54a2b80d33aa1f8f34ddd",
      "IsHidden": "False"
    },
    {
      "Start": "8ccaaaeb81e64cf0afd6b6f7368aeef8",
      "End": "02e0bb5b9d0e457ebd53e48eca839e1d",
      "Id": "37b35a86f30a49cd81f14f4fafe24f4c",
      "IsHidden": "False"
    },
    {
      "Start": "8ccaaaeb81e64cf0afd6b6f7368aeef8",
      "End": "5898129ba6e94717bad1c2e9e6b75313",
      "Id": "10fe58e945104e5692d1ceaa4cf1095f",
      "IsHidden": "False"
    },
    {
      "Start": "e2efe09d87f1434eb0f7c9414128ff0c",
      "End": "0ff046ebd624422dad4be5c1cb3a9e98",
      "Id": "8136914391604a27bd6ad1296c1ed539",
      "IsHidden": "False"
    },
    {
      "Start": "416031294e5a4b26a177a3f81301ce5d",
      "End": "08cf3f9b3e5d43e48be4ee2445de11d1",
      "Id": "1922f426881d4b50b3cb9513bb830c66",
      "IsHidden": "False"
    },
    {
      "Start": "b41720919fd0439ea0dd87f71b67080e",
      "End": "bee976de5cac45d9a7729a1dad8b487d",
      "Id": "4ab732f054a348248517e85be07355a5",
      "IsHidden": "False"
    },
    {
      "Start": "b41720919fd0439ea0dd87f71b67080e",
      "End": "2ffc7badc3964fe4b1668daa8972e17a",
      "Id": "4058cb7d256a4c7ea03639e12b3f1643",
      "IsHidden": "False"
    },
    {
      "Start": "343c269326d242598a644214bc9fd722",
      "End": "b1b3d9a6071e4c09a2b8469bc8792426",
      "Id": "97e46ea7833d44bfbb603f1b638eb499",
      "IsHidden": "False"
    },
    {
      "Start": "dbe3d4e0b3c843b381d4619e6b08c419",
      "End": "60e35df0a54d44b2b29f12ffd164e82a",
      "Id": "ad80cd76b281415090a8bccb397ccc36",
      "IsHidden": "False"
    },
    {
      "Start": "1c74ec6256e048dda2ae76e8a8a16d55",
      "End": "7a75d2d18293473e89b54f0ee754c1e5",
      "Id": "ec85764a69f64eadb7a67c81b1d8b250",
      "IsHidden": "False"
    },
    {
      "Start": "5dce84b2c7754a2bbef894ea1de56dd5",
      "End": "90f57e60ceb2474582ae512af066d4ae",
      "Id": "5e64154a9b1946e69a378e1b6ab5fcd9",
      "IsHidden": "False"
    },
    {
      "Start": "5dce84b2c7754a2bbef894ea1de56dd5",
      "End": "0a92beaaaf9e4ccf9cbcace53639c1b5",
      "Id": "90ac7fcba3064d67b6c00e16ebc4a84e",
      "IsHidden": "False"
    },
    {
      "Start": "2a21d79dc4e546c7a5d930f015a1ccf9",
      "End": "7a4717f20e8c4a92bf2544c39b2f6225",
      "Id": "b918aaeca00d4e5f909e2a895827a75b",
      "IsHidden": "False"
    },
    {
      "Start": "75452394259f454aac6b7f0729e4e1f7",
      "End": "893113c989264cd19431bbb81823b560",
      "Id": "47d094e93a994b7696d97cc32e9c5a21",
      "IsHidden": "False"
    },
    {
      "Start": "be1b029e33894bd0902651bb82065169",
      "End": "830fdb6b17c24e5e9b88bcb80c215549",
      "Id": "ac1869ea88b4484a9596e5e99fd6b4a6",
      "IsHidden": "False"
    },
    {
      "Start": "da8b6750c54241e4ae6ec824684ac955",
      "End": "1e51c34b755b4b5daebc49a04c834a02",
      "Id": "bb9f914f2d8d4be8b6adf873f6a885f3",
      "IsHidden": "False"
    },
    {
      "Start": "b345d4e40bdc4e6593a996aa4cb30453",
      "End": "b6b668c063784cf0ba5e742521351658",
      "Id": "92c82fdcb7fb4d06884c1529dea1e794",
      "IsHidden": "False"
    },
    {
      "Start": "fd49bd91c8404815a9c1a36fc411c667",
      "End": "42770b41a2d946509605b16ddcffe4ed",
      "Id": "2ac2633bc8ad4cb99eb6c9d0c456b5d9",
      "IsHidden": "False"
    },
    {
      "Start": "d4b321675a114235bf59cb7e5d0e3e28",
      "End": "1713810eee684d02934f951dc7ba675d",
      "Id": "af0f1438995945a1881c2781b1ada32c",
      "IsHidden": "False"
    },
    {
      "Start": "a2ecfaa19c334eddb1d809fd5b9c21b7",
      "End": "e40fc391bb9543069e39578990171d11",
      "Id": "a9f88fbb8ca84a388c5f3ec827f99950",
      "IsHidden": "False"
    },
    {
      "Start": "112368b6347846d79c81bcc2f9ded6e3",
      "End": "5241a20caa8f481a94fc7be2332e76fc",
      "Id": "676e106a19a8458d9c0b19a2de9fbbf2",
      "IsHidden": "False"
    },
    {
      "Start": "f41c17b57dc4486791d293b996225179",
      "End": "c86c20b170cf41b2b9cfee070d24dc41",
      "Id": "1ed0bc4a9cc74263a323881f163c065e",
      "IsHidden": "False"
    },
    {
      "Start": "fc0b74d5401541c0bc827a65e85ad1a1",
      "End": "17c5e50fcdc64d49a30e6884d4f4a9e0",
      "Id": "4ca8f560e5dd4dd3a7a39ca65024d65d",
      "IsHidden": "False"
    },
    {
      "Start": "3422482c33ca4a8bb54f4221e08c54ac",
      "End": "7d852923babc430fa1d5c8efa5cdde9f",
      "Id": "dd55b23d0df24617826dc5e7c96b711b",
      "IsHidden": "False"
    },
    {
      "Start": "b9b1312780c54a8e89dc026b692e91e8",
      "End": "2a14711119634cb3be308f0f81f8e3c2",
      "Id": "d459863f45cc46f29fb986d325612711",
      "IsHidden": "False"
    },
    {
      "Start": "197c2806328b44c7b389b19b4bf208b1",
      "End": "b24df086c9204ccd9af377fabb5536aa",
      "Id": "b6e0a343b2734cb9a483af6c458abf0a",
      "IsHidden": "False"
    },
    {
      "Start": "0e7bc4b0ebb94439a19e112cec4c9870",
      "End": "c65df92cac4c49448f02fb3db90aca10",
      "Id": "60563eca446148798bfd3211ce74def5",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "플랜트건축팀_BIM_팀 표준 Family List_Rev.0_SQ3_박기범_20230913.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "51b4738620874fe885b1b5ecce1e49b7",
        "79390c9ce7774e469399c480c2fd9540",
        "e4bace56c16d462b8e637e17ad1a1046"
      ]
    },
    {
      "Name": "Total BOQ_20230920.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "ecccb4f11a2543e29cb666423f4f697e",
        "29337ae8d2c94d488ebdc03de0a16ad6"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 61.245059967041016,
      "EyeY": 33.555679321289063,
      "EyeZ": -3.2311515808105469,
      "LookX": -53.736148834228516,
      "LookY": -51.179946899414063,
      "LookZ": -29.405628204345703,
      "UpX": -0.40506431460380554,
      "UpY": 0.88701057434082031,
      "UpZ": -0.22166435420513153
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "1250bd18102c4ebaac9950d60dac8849",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5494.1170761448629,
        "Y": 1960.7580929093729
      },
      {
        "Name": "All ElementsExceptRails",
        "ShowGeometry": true,
        "Id": "c790cfc4c7d943cdb05ca3a612d673c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5137.1170761448629,
        "Y": 1812.7580929093729
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "d78f3dfc768541ab8490b53194e174c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5830.1170761448611,
        "Y": 1960.7580929093729
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "94dc2b3bd4e14a9fa5352e8ad0cbe58b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5137.1170761448629,
        "Y": 1960.7580929093729
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "bf37a72db0e847dba5e3d1c2ed14c8bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4784.1170761448629,
        "Y": 1869.7580929093729
      },
      {
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Id": "1eac1f1717ab40c98ea2a8a9b59421d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5026.4174003608732,
        "Y": 609.89673897733269
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "caccad700bd84d8e8cb198c7fe1545aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5320.4174003608732,
        "Y": 506.89673897733269
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "51b4738620874fe885b1b5ecce1e49b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5963.4174003608732,
        "Y": 506.89673897733269
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "76e75c1cd00342eeb418e14c2410b8f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5320.4174003608732,
        "Y": 802.89673897733269
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "64985def907747329221585392bfc414",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5320.4174003608732,
        "Y": 655.72423897733267
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "9180e2e72a3c4871ad3dcc4c90e647ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4785.2499038330679,
        "Y": 982.92099468066385
      },
      {
        "Name": "Family List 데이터 파싱_물량Param 시트",
        "ShowGeometry": true,
        "Id": "ffe3ce92ec6b41c28dea986fb27302b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3792.4530405595751,
        "Y": 559.07060072276715
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c2e2ffc4ce8c4995823302e2e6edbf6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 773.75382186345882,
        "Y": -1822.1074773245823
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6cc32639f4334079a3ed3015057ed0c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 749.92378866971762,
        "Y": -1668.7160257168089
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "85e664ba9cb643c5b3b2014270272b36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -628.54263624231658,
        "Y": 4068.4530504564436
      },
      {
        "Name": "lang_mode(영/한) select",
        "ShowGeometry": true,
        "Id": "0d04816ca9f34db6a891541712eb1f5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4149.4530405595751,
        "Y": 627.07060072276715
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ab9b7226a471462bbe05f1ffb8d082d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 396.28383401574422,
        "Y": -1671.0143400591096
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "9fac8931a6e44ba394f6b5087edcfafe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1777.5426362423166,
        "Y": 4047.9355504564437
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "995ccef9f1cd4b49aecc810576ba715f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2112.5426362423168,
        "Y": 4047.9355504564437
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "fdb901f20d644088a89f03651e881266",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 449.4573637576832,
        "Y": 4106.4530504564436
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "014417a7a6a74588a86afc4c30d8ea08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 449.4573637576832,
        "Y": 4284.280550456444
      },
      {
        "Name": "setParamElementTypes",
        "ShowGeometry": true,
        "Id": "ee95e619ed6b4a4092d10917064aaf58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 806.4573637576832,
        "Y": 4144.4530504564436
      },
      {
        "Name": "Get_WMCodesAndBriefSpec",
        "ShowGeometry": true,
        "Id": "ad5dc112707a4841a2b44b8eb9c1ca62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 67.457363757683424,
        "Y": 4106.4530504564436
      },
      {
        "Name": "Dictionary.ByKeysValues",
        "ShowGeometry": true,
        "Id": "4eee53a8546c4694abfafd1926920870",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -290.54263624231658,
        "Y": 4034.4530504564436
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "9e1934a59db94d298059a9bc8b9a66b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -290.54263624231658,
        "Y": 4212.280550456444
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5942773aeb824c84bde85b7a139bac6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1477.5426362423166,
        "Y": 4013.9355504564437
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "590996bec97544a8a3c5eaecbf1bbd45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1074.5426362423166,
        "Y": 4102.4530504564436
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ea47f768c4464f6ca17b7b47bc073108",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1477.5426362423166,
        "Y": 4191.9355504564437
      },
      {
        "Name": "물량Param시트 약자-매개변수 정리",
        "ShowGeometry": true,
        "Id": "1bd5112c1ae04bcfb1e2fd87f4860ba7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3326.4530405595751,
        "Y": 559.07060072276715
      },
      {
        "Name": "Family List 데이터 파싱_Category - 물량Param 시트 결합",
        "ShowGeometry": true,
        "Id": "f99474b49e3e486e8933b2ac5d7484fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2814.4530405595751,
        "Y": 616.07060072276715
      },
      {
        "Name": "family list데이터 - Revit 부재 데이터 결합 & Sym_Val Dict 값 업데이트(타입,인스턴스 매개변수)",
        "ShowGeometry": true,
        "Id": "3bf30dcbbca84eb08aafa5ed15d4042e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -257.94364223116736,
        "Y": 600.14405312461463
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3e48607c97ad4d69855c68aad2472202",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 461.68917318885656,
        "Y": -830.903206479516
      },
      {
        "Name": "토공 산출 구간",
        "ShowGeometry": true,
        "Id": "fb1aef36c6274fd48c14e9a3127ec8e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 603.05635776883264,
        "Y": 600.14405312461463
      },
      {
        "Name": "부재/WM 별 산식에 의한 최종 계산",
        "ShowGeometry": true,
        "Id": "0c4ce42b1eec4eed8035d10e12270fc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1002.0563577688326,
        "Y": 600.14405312461463
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "3a2291d54fa74970b0cacd8a3a8a08b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 6051.7922586902987,
        "Y": 180.5546633927116
      },
      {
        "Name": "Family List 데이터 파싱_Category 시트",
        "ShowGeometry": true,
        "Id": "000f06ac5d844412994ef40b4057a11a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3324.7694537276307,
        "Y": 710.62488276337854
      },
      {
        "Name": "WM별 총합 계산 및 엑셀 익스포트 준비",
        "ShowGeometry": true,
        "Id": "df538152d8514dcaab3d75f0734a582b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1691.5093187559514,
        "Y": 593.84176175388075
      },
      {
        "Name": "Dictionary.Components",
        "ShowGeometry": true,
        "Id": "d9de8a61787442ceb4b5e56fe75e7a1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5045.7922586902987,
        "Y": 251.05466339271163
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "ae19779d3103471bb4993d2624fee3c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5392.7922586902987,
        "Y": 373.55466339271157
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0e906b492e964f0388034bb3dba9715c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5045.7922586902987,
        "Y": 433.38216339271162
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "79390c9ce7774e469399c480c2fd9540",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -498.1051001690239,
        "Y": 98.87913056915761
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e4bace56c16d462b8e637e17ad1a1046",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5715.7922586902987,
        "Y": 174.38216339271162
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "43c850fe5b414baaa43fa6abbf66d41a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5715.7922586902987,
        "Y": 322.55466339271163
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2524f0f864744ce88dfa2ab2d9d3e61d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5392.7922586902987,
        "Y": 215.03716339271159
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5439dd63dedb49b3a2f7682ca7a4cdfc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2140.5093187559514,
        "Y": 593.84176175388075
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "92a5d0c5dcc842d7b250f2421b0731ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6477.9105644782385,
        "Y": 3498.4829241849066
      },
      {
        "Name": "WM별 계산결과 및 spec 정리",
        "ShowGeometry": true,
        "Id": "f12f2f24ce254bd0baef14f26c5d20e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7984.2061822182568,
        "Y": 3158.2566806336831
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "ecccb4f11a2543e29cb666423f4f697e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6596.8458059051227,
        "Y": 2463.6215313825805
      },
      {
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Id": "545bdda03ce34cbf8f380aa09996affe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7230.04248408311,
        "Y": 2622.0063286442037
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "23c16e6f54c54461a94198d996b688b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6953.50529264277,
        "Y": 2736.5726818296343
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "cb8eb6bb001d4e018998c1f81063a7b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6944.3604789911324,
        "Y": 2577.2983039544279
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "6a020c54a254430aafe4c69e393e637c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5012.0592591124787,
        "Y": 978.98564507273659
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "91c3545aae754e43b03d7ab2410f3689",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2999.4364390203273,
        "Y": 680.96904790692054
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "14f3ccaaff4b40d6995625fe77a4fefc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2070.3558066147989,
        "Y": 1303.7159304422937
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e1f7183e17d94ac6b722d8c8f5f42ae7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1620.5604366911455,
        "Y": 1297.3503244576918
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6689bfc92b614a86a2438579264ab559",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3753.54458217082,
        "Y": 1963.2681635651104
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "dcbac945a42f4a5c9a9db85369fb5958",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4873.03850535407,
        "Y": 1765.2118382636313
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "abf63584b5df484fa09c861a33e2a423",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4619.03850535407,
        "Y": 1799.0393382636314
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "0a5e14b22e144bed8451ebf583eb117a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5196.03850535407,
        "Y": 1837.2118382636313
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0de826304a0c4eeb88bf431965d3fbff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4873.03850535407,
        "Y": 1943.0393382636312
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "353906790eac4dbe9265acc4fd59f260",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5491.03850535407,
        "Y": 1837.2118382636313
      },
      {
        "Name": "extract_fromWMsheet",
        "ShowGeometry": true,
        "Id": "36b8b78ffdd8496bb8be6839809f94f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4331.6191849577217,
        "Y": 2807.8426937855425
      },
      {
        "Name": "Custom Selection",
        "ShowGeometry": true,
        "Id": "9e1ea02461dd42db9359284f3fb6bd53",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3067.6009558912983,
        "Y": -1626.1774078851306
      },
      {
        "Name": "토공 형상 검토",
        "ShowGeometry": true,
        "Id": "459d10fe5baa468d9226fc41edb2fc12",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3645.2202632586782,
        "Y": -1628.2055084923147
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b32ba32e11b94d07a3439003f54a3c9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3070.1338092733581,
        "Y": -1785.1143350525797
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "10df97388f1c47c99f9d61d15ad19e4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3935.4899589463557,
        "Y": -1602.2812924096047
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b34a66f0d7864ef283856170c2606a12",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3670.2803131205151,
        "Y": -1453.9426966168776
      },
      {
        "Name": "Watch 3D",
        "ShowGeometry": true,
        "Id": "9a893bfeb5bc4b0db0c0365d427b3f85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4149.1883232113823,
        "Y": -1693.8725798212597
      },
      {
        "Name": "Dictionary.Keys",
        "ShowGeometry": true,
        "Id": "0e9dd9cb6fb34e35b5bb8303dbaaffa7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2421.0598276896812,
        "Y": 1962.910100980172
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "e861b848a856496cbce58b3351868c08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3162.0598276896812,
        "Y": 1783.4589814938374
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b8bb7074d1474d5c817d440222fe7c73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3162.0598276896812,
        "Y": 2339.0162204665071
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "a6525529e2854c5da74f8737df2462da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2867.0598276896812,
        "Y": 2515.8123399528417
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "b0d49f5a08ca4d7aa0ec4d85b3c4eb68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2421.0598276896812,
        "Y": 2110.910100980172
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "73b6dea7f2e447e79d14252e5f29c46f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1420.6566185810912,
        "Y": 1714.8990139871682
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5fa4cf5424f741e2afce70431dab7668",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1085.6566185810912,
        "Y": 1714.8990139871682
      },
      {
        "Name": "List.Contains",
        "ShowGeometry": true,
        "Id": "ff9036ffe34e498e92682212d56492b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1975.0598276896812,
        "Y": 2019.910100980172
      },
      {
        "Name": "Total BOQ 데이터 파싱_(AR) BOQ시트",
        "ShowGeometry": true,
        "Id": "6d3257a7ae1544ba96260a2930df41a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7991.4859153896068,
        "Y": 2573.1159874780965
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1d1c6adab25c4ce38795f6d70084638b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5791.03850535407,
        "Y": 1837.2118382636313
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "86d4c756923b4ec5a7a76f44031313e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5195.53850535407,
        "Y": 2164.2118382636318
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "36b72e613f054f51ab44d4a659a11baf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4872.53850535407,
        "Y": 2270.0393382636312
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "522eba1415564c619ea3a722c3bfca63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4872.53850535407,
        "Y": 2092.2118382636318
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "78f0730f98164cf88c95031451db6a2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5490.53850535407,
        "Y": 2164.2118382636318
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f8862fff8dc647619582f6b8e6003793",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4618.53850535407,
        "Y": 2126.0393382636312
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "aae6ee369697433d96978d6f0a38227c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7655.1530904420788,
        "Y": 2477.8141302417048
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6790ac16e9864c6282b9f0a28e4bac80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5790.53850535407,
        "Y": 2164.2118382636318
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "8066549a4a9b47df80e48559f550e5c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6726.5324285373217,
        "Y": 1949.1555129621524
      },
      {
        "Name": "pip test",
        "ShowGeometry": true,
        "Id": "92e3526e93834efd8c29509a613b39e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": -7383.7164559370358,
        "Y": -25.676804507870429
      },
      {
        "Name": "Data formatting for Excel Export___________________________",
        "ShowGeometry": true,
        "Id": "cf52cd359968431c954ef0c1c105f09b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8693.1973786282833,
        "Y": 2399.5449514065308
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "53192363f9da457ca86140d19351bdfb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9585.7062032731665,
        "Y": 1956.6434662040997
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "29337ae8d2c94d488ebdc03de0a16ad6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7670.2141308556584,
        "Y": 1958.2619563814474
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "008b88f58bd548188e4d5668e106d9e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8426.121950536859,
        "Y": 2308.2292951369573
      }
    ],
    "Annotations": [
      {
        "Id": "f70bf264fa0749c79027f550865f41ad",
        "Title": "All Elements in Revit",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1250bd18102c4ebaac9950d60dac8849",
          "c790cfc4c7d943cdb05ca3a612d673c4",
          "d78f3dfc768541ab8490b53194e174c5",
          "94dc2b3bd4e14a9fa5352e8ad0cbe58b",
          "bf37a72db0e847dba5e3d1c2ed14c8bd"
        ],
        "HasNestedGroups": false,
        "Left": -5840.1170761448611,
        "Top": 1696.7580929093729,
        "Width": 1217.9999999999982,
        "Height": 396.0,
        "FontSize": 72.0,
        "InitialTop": 1812.7580929093729,
        "InitialHeight": 293.0,
        "TextblockHeight": 106.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "845648042f7a44b3b450cfa23ec8d632",
        "Title": "All Data in Excel",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1eac1f1717ab40c98ea2a8a9b59421d3",
          "caccad700bd84d8e8cb198c7fe1545aa",
          "51b4738620874fe885b1b5ecce1e49b7",
          "76e75c1cd00342eeb418e14c2410b8f4",
          "64985def907747329221585392bfc414",
          "9180e2e72a3c4871ad3dcc4c90e647ef",
          "6a020c54a254430aafe4c69e393e637c"
        ],
        "HasNestedGroups": false,
        "Left": -5973.4174003608732,
        "Top": 390.89673897733269,
        "Width": 1392.1674965278053,
        "Height": 759.02425570333116,
        "FontSize": 72.0,
        "InitialTop": 506.89673897733269,
        "InitialHeight": 621.02425570333116,
        "TextblockHeight": 106.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "3d2a1efc5b53493ea2da91d1a4544a5c",
        "Title": "Family Type 별 WM 코드 Revit 되먹임",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "85e664ba9cb643c5b3b2014270272b36",
          "fdb901f20d644088a89f03651e881266",
          "014417a7a6a74588a86afc4c30d8ea08",
          "ee95e619ed6b4a4092d10917064aaf58",
          "ad5dc112707a4841a2b44b8eb9c1ca62",
          "4eee53a8546c4694abfafd1926920870",
          "9e1934a59db94d298059a9bc8b9a66b6",
          "5942773aeb824c84bde85b7a139bac6b",
          "590996bec97544a8a3c5eaecbf1bbd45",
          "ea47f768c4464f6ca17b7b47bc073108",
          "995ccef9f1cd4b49aecc810576ba715f",
          "9fac8931a6e44ba394f6b5087edcfafe",
          "0ff82b1632ff4d8cbcded5b0beba520c"
        ],
        "HasNestedGroups": false,
        "Left": -2122.5426362423168,
        "Top": 3940.9355504564437,
        "Width": 3188.0,
        "Height": 648.34500000000025,
        "FontSize": 36.0,
        "InitialTop": 4013.9355504564437,
        "InitialHeight": 415.34500000000025,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8dfa0080961343409c7525d0befec92b",
        "Title": "Excel data dictionarization",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ffe3ce92ec6b41c28dea986fb27302b8",
          "0d04816ca9f34db6a891541712eb1f5d",
          "1bd5112c1ae04bcfb1e2fd87f4860ba7",
          "f99474b49e3e486e8933b2ac5d7484fa",
          "000f06ac5d844412994ef40b4057a11a"
        ],
        "HasNestedGroups": false,
        "Left": -4159.4530405595751,
        "Top": 457.07060072276715,
        "Width": 1840.0,
        "Height": 415.55428204061138,
        "FontSize": 60.0,
        "InitialTop": 559.07060072276715,
        "InitialHeight": 296.55428204061138,
        "TextblockHeight": 92.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "bc0cee792c2f42f5b7feff7ccbb98290",
        "Title": "Family List엑셀파일 물량 기입 구간",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a2291d54fa74970b0cacd8a3a8a08b8",
          "d9de8a61787442ceb4b5e56fe75e7a1d",
          "ae19779d3103471bb4993d2624fee3c8",
          "0e906b492e964f0388034bb3dba9715c",
          "e4bace56c16d462b8e637e17ad1a1046",
          "43c850fe5b414baaa43fa6abbf66d41a",
          "2524f0f864744ce88dfa2ab2d9d3e61d"
        ],
        "HasNestedGroups": false,
        "Left": 5035.7922586902987,
        "Top": -85.617836607288382,
        "Width": 1261.0,
        "Height": 651.0,
        "FontSize": 96.0,
        "InitialTop": 174.38216339271162,
        "InitialHeight": 404.0,
        "TextblockHeight": 250.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "37c5fa300a2c41fb8719914b2749cb9f",
        "Title": "심볼 및 값 추출(토공 포함) / 수식계산 / 익스포트 용 데이터 정리",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3bf30dcbbca84eb08aafa5ed15d4042e",
          "fb1aef36c6274fd48c14e9a3127ec8e9",
          "0c4ce42b1eec4eed8035d10e12270fc2",
          "df538152d8514dcaab3d75f0734a582b",
          "5439dd63dedb49b3a2f7682ca7a4cdfc",
          "7441a8b2f3f14e738ef80ca8786cf6ee",
          "e59d4e8deeea44a0a571183ad690d46a"
        ],
        "HasNestedGroups": false,
        "Left": -267.94364223116736,
        "Top": 477.84176175388075,
        "Width": 2572.4529609871188,
        "Height": 433.30229137073388,
        "FontSize": 72.0,
        "InitialTop": 593.84176175388075,
        "InitialHeight": 384.30229137073388,
        "TextblockHeight": 106.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "72514d3581dd42a3a548b0f42539ef18",
        "Title": "Total BOQ엑셀 파일 물량기입 구간",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "92a5d0c5dcc842d7b250f2421b0731ad"
        ],
        "HasNestedGroups": false,
        "Left": 6467.9105644782385,
        "Top": 3007.4829241849066,
        "Width": 441.0,
        "Height": 623.0,
        "FontSize": 96.0,
        "InitialTop": 3498.4829241849066,
        "InitialHeight": 145.0,
        "TextblockHeight": 481.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "363e231673d140ba99dc941191423210",
        "Title": "토공 형상 검토",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b32ba32e11b94d07a3439003f54a3c9a",
          "459d10fe5baa468d9226fc41edb2fc12",
          "9e1ea02461dd42db9359284f3fb6bd53"
        ],
        "HasNestedGroups": false,
        "Left": 3057.6009558912983,
        "Top": -1901.1143350525797,
        "Width": 773.61930736737986,
        "Height": 434.90882656026497,
        "FontSize": 72.0,
        "InitialTop": -1785.1143350525797,
        "InitialHeight": 303.93692716744908,
        "TextblockHeight": 106.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "e4fb627520384af3b1eabd7a2ac5343b",
        "Title": "필터링 구간 (패밀리 리스트에 없는 이름 제외)",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e861b848a856496cbce58b3351868c08",
          "b8bb7074d1474d5c817d440222fe7c73",
          "a6525529e2854c5da74f8737df2462da",
          "b0d49f5a08ca4d7aa0ec4d85b3c4eb68",
          "73b6dea7f2e447e79d14252e5f29c46f",
          "5fa4cf5424f741e2afce70431dab7668",
          "0e9dd9cb6fb34e35b5bb8303dbaaffa7",
          "ff9036ffe34e498e92682212d56492b0"
        ],
        "HasNestedGroups": false,
        "Left": -3172.0598276896812,
        "Top": 1641.8990139871682,
        "Width": 2314.40320910859,
        "Height": 1035.9133259656735,
        "FontSize": 36.0,
        "InitialTop": 1714.8990139871682,
        "InitialHeight": 945.91332596567349,
        "TextblockHeight": 63.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "ad228548e3e745ce84f6a9637ac7db58",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ecccb4f11a2543e29cb666423f4f697e",
          "545bdda03ce34cbf8f380aa09996affe",
          "23c16e6f54c54461a94198d996b688b8",
          "cb8eb6bb001d4e018998c1f81063a7b3"
        ],
        "HasNestedGroups": false,
        "Left": 6586.8458059051227,
        "Top": 2390.6215313825805,
        "Width": 891.19667817798745,
        "Height": 477.95115044705381,
        "FontSize": 36.0,
        "InitialTop": 2463.6215313825805,
        "InitialHeight": 417.95115044705381,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "0ff82b1632ff4d8cbcded5b0beba520c",
        "Title": "Revit에 있는 Family Type 항목만",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -2112.5426362423168,
        "Top": 4047.9355504564437,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7441a8b2f3f14e738ef80ca8786cf6ee",
        "Title": "UG RC Union 준비(UG 부재 전체 형상 유니온 - PIT, Trench는 내부공동 포함하는 Boundary로)\nexcavation 개별 형상 리스트\n\n트레이에 하나 넣을 때마다,\n처음은 그냥 두고,\n두번째부터는 트레이에 있는 것과 겹치지 않는 부분만 남겨서 해당부분은 다음 코드로 반환 + 트레이 잔존\n    반환된 기초별 유효 터파기 형상을\n    UG RC Union이랑 디퍼런스 하면 백필형상\n\n\n유표 터파기형상 볼륨 - 백필 형상 볼륨 = 디스포잘 값",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 584.66383570823,
        "Top": 619.181442821601,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e59d4e8deeea44a0a571183ad690d46a",
        "Title": "Sym Val Dict에서\n산출식에 사용된 것 이외를\n제거하기",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1002.0563577688326,
        "Top": 841.14405312461463,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "63669713819d404bae525815fc170901",
        "Title": "Work Master Code\r\nGauge Code\r\nDescription : (L03)\r\nSpec. : (L04~L11)\r\nAdditional Spec : (Description 항목 값)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 7241.0945022174492,
        "Top": 3133.2225461954463,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -10096.241051552575,
    "Y": -2101.25944574834,
    "Zoom": 1.0993775925728391
  }
}