{
  "Uuid": "1d6d431a-e8c4-48aa-8b91-a874ff2542a8",
  "IsCustomNode": false,
  "Description": "",
  "Name": "hCalc_rB(20230919)",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "1250bd18102c4ebaac9950d60dac8849",
      "Inputs": [
        {
          "Id": "f2b7450af5914cbf8a28c2a092e6a190",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "912753a782b84f598e120e936fffbd58",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\ndef get_all_BIC():\r\n\r\n    db = [\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Floors,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Roofs,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Walls,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFoundation,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Ceilings,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Doors,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Windows,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Stairs,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Railings,\r\n    ]\r\n    return db\r\n    \r\ndef get_allElems(doc):\r\n    bics = get_all_BIC()\r\n    \r\n    def getElems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        return res\r\n\r\n    def getRailElems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType()\r\n        return res\r\n\r\n    res = map(getElems, bics)\r\n#    res = getRailElems(Autodesk.Revit.DB.BuiltInCategory.OST_RailingSystemRail)\r\n    return res\r\n\r\n\r\nOUT = get_allElems(doc)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "c790cfc4c7d943cdb05ca3a612d673c4",
      "Inputs": [
        {
          "Id": "08594b729317483fab0ab869358cdb3c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4d9d60debe6406cace5eb687f712858",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 441,
      "SelectedString": "OST_StairsRailing",
      "NodeType": "ExtensionNode",
      "Id": "d78f3dfc768541ab8490b53194e174c5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bdc68e6596d64c1bb2ad17af850a8a64",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "94dc2b3bd4e14a9fa5352e8ad0cbe58b",
      "Inputs": [
        {
          "Id": "ae38fed72c0a434eb235268bfba22c03",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07eba95685e249a0a3188444eec253fe",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "bf37a72db0e847dba5e3d1c2ed14c8bd",
      "Inputs": [
        {
          "Id": "efbd6851497a4681a114ca7842d95e6a",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d45870ecc9f4742810ae2af861ad07b",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "266640a8b58449a48603af36addb1282",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "1eac1f1717ab40c98ea2a8a9b59421d3",
      "Inputs": [
        {
          "Id": "c4d740fa206e4ab3b53ba148e9727e8f",
          "Name": "file",
          "Description": "File representing the Excel workbook\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8871f8fef5b841e484fe65aa92aecb9c",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2e3869f91c64b06ab4cff0e2c816de0",
          "Name": "readAsStrings",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da624c3834b64df4a29198439fca082e",
          "Name": "showExcel",
          "Description": "Toggle to show excel's main window\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16f6a93146ee4557a8eec29cac4eb344",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "caccad700bd84d8e8cb198c7fe1545aa",
      "Inputs": [
        {
          "Id": "8d8f529204cd48a5a2210b85d94be686",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb3a2510c5934129baf50771f5bb29a9",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\mk\\mQ\\hecCalc\\2023\\documentum\\플랜트건축팀_BIM_팀 표준 Family List_Rev.0_SQ3_박기범_20230913.xlsx",
      "InputValue": ".\\플랜트건축팀_BIM_팀 표준 Family List_Rev.0_SQ3_박기범_20230913.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "51b4738620874fe885b1b5ecce1e49b7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e3d41cbea388406e9b31fca8184f2a13",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "76e75c1cd00342eeb418e14c2410b8f4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f98969ee45ea4cce8921b553ad57fbc0",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"물량Param\",\n\"1.Floors\",\n\"2.Roofs\",\n\"3.Walls\",\n\"4.St Fdn\",\n\"5.St Col\",\n\"6.St Framing\",\n\"7.Ceilings\",\n\"8.Doors\",\n\"9.Windows\",\n\"10.Stairs\",\n\"11.Railings\"\n//,\"13.Generic\"\n];",
      "Id": "64985def907747329221585392bfc414",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "388e2eaea3fc4ff5a852380f21ea4b1b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.EvaluateFormula@string,string[],var[]",
      "Id": "a0b487cea1c542c2bec9eb7c8895c252",
      "Inputs": [
        {
          "Id": "b6b100a2ab9642b79ac818735c8a86bf",
          "Name": "formulaString",
          "Description": "NCalc formula\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a7344f7947340dfbda9f66443a4b459",
          "Name": "parameters",
          "Description": "Variable names\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9051dcf4d56d4c0aba07fd03ae97f4d0",
          "Name": "arguments",
          "Description": "Variable bindings\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3848e7bed3f48dbbc0632cdc7aee37a",
          "Name": "result",
          "Description": "type: var[]..[] (result of the formula calculation)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Evaluates an NCalc formula with given parameter mappings.\n\nMath.EvaluateFormula (formulaString: string, parameters: string[], arguments: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"a\",\"v\"];",
      "Id": "28c8dd982f5946db846ef1274e8b7b4c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f7931e3f26c347e5ada98b5a0ca372b3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"  a * v\";",
      "Id": "5d59a186d2bb4cc1bc3794f6184b6a73",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a6c10470fa9644d9a4ab809356dbe40e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[15,63];",
      "Id": "5f59335ac2ab4ce9907f0b43beb2e17b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9736b33bef054564bf7b5817c23ae020",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// 부재별로 최종 정리될 서브 리스트 구성 :\n\n// 패밀리 Type 코드\n\n// WM 코드들\n\n// 수식\n\n// 수식 참여 문자\n\n// 수식 참여 문자의 값 (엑셀 입력값 + 레빗 인스턴스 속성 값 + 레빗 타입 속성 값)",
      "Id": "647ec6c2b0be4330954a46b4dfed8fdc",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "9180e2e72a3c4871ad3dcc4c90e647ef",
      "Inputs": [
        {
          "Id": "fb681e08f1034208a2da1a59eef69887",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d4c7b51481348b68b28a4a779f5cca8",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c4c0a55d8a14ffd85d7c51b2c5597ce",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\ndef getCharValue(s):\r\n    # 베이스 케이스\r\n    if not s:\r\n        return 0\r\n \r\n    value = 0\r\n    # 입력 문자열을 대문자로 변환한 후 반복\r\n    for ch in s:\r\n        value = value * 26 + (ord(ch) - ord('A') + 1)\r\n    return value\r\n    \r\n#################################Module For Functional Programing#############################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\n\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    #endidxs_tmp= list(map(lambda x: x[0],res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndb = IN[0]\r\nallCatSheetsNames =IN[1]\r\n#col_idx = getCharValue(IN[2])-2\r\n#sep_rule = IN[3]\r\n\r\nparamSheet = db[0]\r\nallCatSheets = db[1:]\r\n\r\n# Place your code below this line\r\n\r\ndef find_headersAtCatSheet(catSheet):\r\n    headers_CatSheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(catSheet[1])))\r\n    \r\n    return dict(headers_CatSheet)\r\n\r\ndef find_rangesAtCatSheet(catSheet, hdrs_withIdx):\r\n    return find_range_by_columnItem(catSheet, hdrs_withIdx[\"Family Type Name\"], \"H_\")\r\n\r\ndef get_DataOnRangesAtCatSheet(catSheet): \r\n    hdrs_withIdx = find_headersAtCatSheet(catSheet)\r\n    title_idx = map(lambda x: x[0], find_rangesAtCatSheet(catSheet, hdrs_withIdx).values())\r\n    calcType_colDatas = list(map(lambda x: x[hdrs_withIdx[\"Q'ty Cal Type Tag\"]], catSheet))\r\n    calcTypes = list(map(lambda x: calcType_colDatas[x], title_idx))\r\n    rgs_v = list(map(lambda x: x[1], find_rangesAtCatSheet(catSheet, hdrs_withIdx).values()))\r\n    rgs_k = list(map(lambda x: x, find_rangesAtCatSheet(catSheet, hdrs_withIdx).keys()))\r\n    \r\n    hdrs_v = list(hdrs_withIdx.values())\r\n    hdrs_k = list(hdrs_withIdx.keys())\r\n    #tagDatas = list(zip(rgs_k,calcTypes))\r\n    \r\n    datas_allFamType = list(map(lambda x: list(zip(catSheet[x[0]-1:x[1]], range(x[0]-1,x[1]))), rgs_v))\r\n    #datas_allFamType = list(zip(tagDatas, datas_allFamType_))\r\n    \r\n    def setDict_OnEachFamType(data_famType):  ## 최종적으로 산출식 없는 것 걸러내기 추가해야 함\r\n        titleData = list(data_famType).pop(0)[0]\r\n        \r\n        famTypeName = titleData[hdrs_withIdx[\"Family Type Name\"]]\r\n        calcTypeName = titleData[hdrs_withIdx[\"Q'ty Cal Type Tag\"]]\r\n        data_famType_noneless = list(filter(lambda x: x[0][5] != None, data_famType))\r\n        ## WM row 별 header명 과 짝짓기\r\n        data_withHdrsIdx = list(map(lambda y: [list(map(lambda x: y[0][x], hdrs_v)), y[1]], data_famType_noneless))\r\n        hdrs_k.append(\"rIDX\")\r\n        dict_ = list(map(lambda x: dict(zip(hdrs_k, x[0]+[x[1]])), data_withHdrsIdx))\r\n        dicts_noneless = list(map(lambda y: dict(filter(lambda x: x[1]!=None, y.items())),dict_))\r\n        ## dict_gauge, 물량산출식 없는 항목 처리\r\n        dicts_final = []\r\n        needDefault_ColName = \"Gauge Code\"\r\n        noneRemove_ColName = \"Dynamo 물량산출식\"\r\n        for d in dicts_noneless:\r\n            d[\"Family Type Name\"] = famTypeName\r\n            \r\n            if calcTypeName == None:\r\n                pass            \r\n            elif noneRemove_ColName in d.keys():\r\n                d[\"Q'ty Cal Type Tag\"] = calcTypeName\r\n                d[needDefault_ColName] = \"\"\r\n                dicts_final.append(d)\r\n\r\n        \r\n        return dicts_final\r\n        \r\n    dicts_allFamType = list(map(lambda x: setDict_OnEachFamType(list(x)), datas_allFamType))\r\n    ds_famTypesAtCatSheet = dict(zip(rgs_k, dicts_allFamType))\r\n    ds_famTypesAtCatSheet_effCalcType = dict(filter(lambda x: all(list(map(lambda i: \"Q'ty Cal Type Tag\" in i, x[1]))), list(ds_famTypesAtCatSheet.items())))\r\n    ds_famTypesAtCatSheet_noneless = dict(filter(lambda x: len(list(x[1]))!=0, list(ds_famTypesAtCatSheet_effCalcType.items())))\r\n    \r\n    return  ds_famTypesAtCatSheet_noneless\r\n\r\n## AllInOne 딕셔너리에 정리\r\ndataOnRanges_allCat = list(map(get_DataOnRangesAtCatSheet, allCatSheets))\r\ndicts_AllInOne = {}\r\nfor d in dataOnRanges_allCat:\r\n    dict_k_v = d.items()\r\n    for k,v in dict_k_v:\r\n        dicts_AllInOne[k] = v\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dicts_AllInOne\r\n#OUT = get_DataOnRangesAtCatSheet(allCatSheets[0])",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1cf6a1afd7ce4854a4230a961836579d",
      "Inputs": [
        {
          "Id": "d8f51f5cd01d4567b1a00710d64a2961",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a09c7a56958d41b98e3d148266263dd9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b329bcb0cf844739a7e6e5f1a5a9e59",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\ndef getCharValue(s):\r\n    # 베이스 케이스\r\n    if not s:\r\n        return 0\r\n \r\n    value = 0\r\n    # 입력 문자열을 대문자로 변환한 후 반복\r\n    for ch in s:\r\n        value = value * 26 + (ord(ch) - ord('A') + 1)\r\n    return value\r\n    \r\n#################################Module For Functional Programing#############################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\n\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    #endidxs_tmp= list(map(lambda x: x[0],res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndb = IN[0]\r\nallCatSheetsNames =IN[1]\r\nlang_mode = IN[2]\r\n\r\nparamSheet = db[0]\r\nallCatSheets = db[1:]\r\n\r\n# Place your code below this line\r\n\r\ndef find_headersAtCatSheet(catSheet):\r\n    headers_CatSheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(catSheet[1])))\r\n    \r\n    return dict(headers_CatSheet)\r\n\r\ndef find_rangesAtCatSheet(catSheet, hdrs_withIdx):\r\n    return find_range_by_columnItem(catSheet, hdrs_withIdx[\"Q'ty Cal Type Tag\"], \"-\")\r\n\r\ndef get_DataOnRangesAtCatSheet(Sheet):\r\n    \r\n    hdrs_withIdx = find_headersAtCatSheet(Sheet)\r\n    title_idx = map(lambda x: x[0], find_rangesAtCatSheet(Sheet, hdrs_withIdx).values())\r\n    calcType_colDatas = list(map(lambda x: x[hdrs_withIdx[\"Q'ty Cal Type Tag\"]], Sheet))\r\n    calcTypes = list(map(lambda x: calcType_colDatas[x], title_idx))\r\n    rgs_v = list(map(lambda x: x[1], find_rangesAtCatSheet(Sheet, hdrs_withIdx).values()))\r\n    rgs_k = list(map(lambda x: x, find_rangesAtCatSheet(Sheet, hdrs_withIdx).keys()))\r\n    \r\n    hdrs_v = list(hdrs_withIdx.values())\r\n    hdrs_k = list(hdrs_withIdx.keys())\r\n    eff_hdrs_v = hdrs_v[2:]\r\n    eff_hdrs_k = hdrs_k[2:]\r\n    \r\n    datas_allCalType = list(map(lambda x: Sheet[x[0]-1:x[1]], rgs_v))\r\n    \r\n    def setDict_OnEachCalType(data_calType):\r\n        paramName_lang = \"패밀리 매개변수(from Revit) 영문판\" if lang_mode is True else \"패밀리 매개변수(from Revit) 한글판\"\r\n        calcTypeName = data_calType[0][2]\r\n        data_calType_noneless = list(filter(lambda x: x[hdrs_withIdx[\"항목\"]] != None, data_calType))\r\n#        ## WM row 별 header명 과 짝짓기\r\n        data_withHdrsIdx = list(map(lambda y: list(map(lambda x: y[x], eff_hdrs_v)), data_calType_noneless))\r\n        dict_ = list(map(lambda x: dict(zip(eff_hdrs_k, x)), data_withHdrsIdx))\r\n        dicts_noneless = list(map(lambda y: dict(filter(lambda x: x[1]!=None, y.items())),dict_))\r\n#        ## dict_Cal Type 입력처리\r\n        targetColName = \"Q'ty Cal Type Tag\"\r\n        dicts_finalNoneless = []\r\n        for d in dicts_noneless:\r\n            d[\"Q'ty Cal Type Tag\"] = calcTypeName\r\n            \r\n            if \"입력값\" in d.keys():\r\n                d[\"applyForCalc\"] = d[\"입력값\"]\r\n                dicts_finalNoneless.append(d)\r\n            elif paramName_lang in d.keys():\r\n                d[\"applyForCalc\"] = d[paramName_lang]\r\n                dicts_finalNoneless.append(d)\r\n            else:\r\n                pass\r\n        \r\n        return {calcTypeName: dicts_finalNoneless}\r\n        \r\n    return map(setDict_OnEachCalType, datas_allCalType)\r\neach_dict = get_DataOnRangesAtCatSheet(paramSheet)\r\ndicts_AllInOne = {}\r\nfor d in each_dict:\r\n    dict_k_v = d.items()\r\n    for k,v in dict_k_v:\r\n        dicts_AllInOne[k] = v\r\n# Assign your output to the OUT variable.\r\n\r\n\r\nOUT = dicts_AllInOne",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ffe3ce92ec6b41c28dea986fb27302b8",
      "Inputs": [
        {
          "Id": "cbcac752c4ef4adbbf500face4dae780",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8fc2fd075a8f43b5aa80a7c22114b549",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da273f14c52b42558ec17b22c360f024",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10927b3559a04512b2a50eede4045749",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "//모델링 부재랑 만났을때,\n//\"applyForCalc값이 숫자인 경우는 바로 적용\n//숫자가 아닌 경우는 파라미터 값 소환,",
      "Id": "c2e2ffc4ce8c4995823302e2e6edbf6b",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// >>> 레빗 부재 별로 패밀리 타입 엑셀 시트 짝지을때,\n// applyForCalc값 중 매개 변수 에 해당 하는 값을 업데이트 하여 딕셔너리 갱신",
      "Id": "6cc32639f4334079a3ed3015057ed0c0",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "abba167faddc4ae4b7190a20329bc999",
      "Inputs": [
        {
          "Id": "193ab32ba4444bc38b409c75675a617e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "795cd6ab58a64eaaaba58c407d9a0662",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10b9d576b3ad4395925a377ca5a961a0",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "e9de4d33a0f8498aa88925d7de0302be",
      "Inputs": [
        {
          "Id": "7ce72f3e519f465d8ada827987db1860",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22c24cbbe6044bd095c409ff0a1f5059",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "598e3e26be64404d83d0ce9582db84f0",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Type\";\n\"Type Name\";",
      "Id": "e01aca3b31524ecdb2fea0bcd4e569fe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b9f142a179cd4d2fa012c3227e0b972f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1f1b294d2164b04897730bd729ae51a",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "14224d161ba74300b783d019932dc09b",
      "Inputs": [
        {
          "Id": "2a554f9ba2fe450dac0706c6f1d2b201",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6690df8a5a814090a9e8af85ce1f8eb5",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0606daabd3f1417c8fb2699772a58b29",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "85e664ba9cb643c5b3b2014270272b36",
      "Inputs": [
        {
          "Id": "9ba11babb5ef4e12a0e246df296ff645",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5775c1a7f8c45d6911594db84ada28f",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6db5b3198a84514b931f6728da04348",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "28717ffdd04a4f7981357ebce2431665",
      "Inputs": [
        {
          "Id": "38ac5ca068574d219b39e5a07bd309a1",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c37a885e3b874ab5a14dc5b9a9483283",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fffa2e24a3a4dcfaeebd33a89ae6b15",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "896e8dab2bff430e946bcbf6da09b9f7",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"H_SFRH_2400x3000x200\",\n\"H_SFRH_2400x5600x200\",\n\"FTS\",\n\"360x\",\n\"SS101\",\n\"C150x\",\n\"Pit Wall_UG_T150\",\n\"Pit Slab T150\",\n\"SHS-\",\n\"구조 기초\"\n];\ntrue;",
      "Id": "47c8c52edfba464cbc6491f9f5abc7cb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f78730f13a0a491da704c9bb86b397db",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c2b30749fca41a48ce51c698b6663f6",
          "Name": "",
          "Description": "Value of expression at line 13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "32053cf3bae641e2abda33f7464839b9",
      "Inputs": [
        {
          "Id": "c9d0e9ffdc354867b1f275c5d88e7c77",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8dadf4a47264c5f86f3a1f9af105d0e",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "daee18045b714579b8b4547f68499e80",
      "Inputs": [
        {
          "Id": "c01bba0e2e294fd69177c11254b77f35",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "523a6b05a06c490eb7cfa31796723e4f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "0d04816ca9f34db6a891541712eb1f5d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25b11d15e6834c96a298b45cb1bf32a7",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// 최종적으로는\n\n// 부재(FamilyType) 별 WM 항목 마다\n// 1. 물량산출식\n// 2. 산출식 참여 약자 목록 []\n// 3. 약자별 대입 값 목록 []\n\n\n// 이렇게 정리가 되어있어야 한다.",
      "Id": "ab9b7226a471462bbe05f1ffb8d082d3",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.CreateProjectParameterForAllCategories@string,string,Revit.Elements.SpecType,Revit.Elements.GroupType,bool",
      "Id": "041bb51a23734fcfbea1af777dfab763",
      "Inputs": [
        {
          "Id": "9cfd2d9ca5de4474aac059e0d7724083",
          "Name": "parameterName",
          "Description": "Name\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ecfa82e90bc44e08ad8d9044f8cd774a",
          "Name": "groupName",
          "Description": "Group of the parameter for shared parameters\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18eb26d8706045b49fc42fdc08c472c0",
          "Name": "specType",
          "Description": "The type of new parameter.\n\nSpecType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "200e728b72fd45ee99e683ae719e1330",
          "Name": "groupType",
          "Description": "The type of the group to which the parameter belongs.\n\nGroupType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9308cbfdc8414aaf86982a0cef734b5f",
          "Name": "instance",
          "Description": "True if it's an instance parameter, otherwise it's a type parameter\n\nbool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b15f4ff9b5c545b78b8f98cda6784322",
          "Name": "void",
          "Description": "void",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a new Project Parameter in this current Revit document for all applicable categories\n\nParameter.CreateProjectParameterForAllCategories (parameterName: string, groupName: string, specType: SpecType, groupType: GroupType, instance: bool): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"H_Q'ty Cal Type Tag\",\n\"H_WM Code_1\",\n\"H_WM Code_2\",\n\"H_WM Code_3\",\n\"H_WM Code_4\",\n\"H_WM Code_5\",\n\"H_WM Code_6\",\n\"H_WM Code_7\",\n\"H_WM Code_8\",\n\"H_WM Code_9\"\n];\n\"H_WM Code\";\nspecT;\ngroupT;\nfalse;\n//타입;\ntrue;\n//인스턴스;",
      "Id": "cec2f8eaacdf482dbee4a3fba8340394",
      "Inputs": [
        {
          "Id": "de6ea5f0e79a488889bcf832bae235ed",
          "Name": "specT",
          "Description": "specT",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad87b46466e44fc5b272462dd3d0e728",
          "Name": "groupT",
          "Description": "groupT",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "465ce5d4ba544858bc507452a871eff2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7cde65c6861a47c2b12b06a5079baf34",
          "Name": "",
          "Description": "Value of expression at line 13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed538c7016c241b094ec0476eae7f05f",
          "Name": "",
          "Description": "Value of expression at line 14",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64b5246139c648a78421a8065fce7db2",
          "Name": "",
          "Description": "Value of expression at line 15",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e55759f4d15841d0be007e9426de2cf4",
          "Name": "",
          "Description": "Value of expression at line 16",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "485c16e6abad441a89d0ea76f38c97a7",
          "Name": "",
          "Description": "Value of expression at line 18",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.SpecTypes, DSRevitNodesUI",
      "SelectedIndex": 140,
      "SelectedString": "autodesk.spec:spec.string",
      "NodeType": "ExtensionNode",
      "Id": "342eb3169fcc422988afb081f0128848",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c6d559922a0b4bc097bae2593ef4c4b1",
          "Name": "SpecType",
          "Description": "The selected SpecType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Spec type."
    },
    {
      "ConcreteType": "DSRevitNodesUI.GroupTypes, DSRevitNodesUI",
      "SelectedIndex": 63,
      "SelectedString": "autodesk.parameter.group:materials",
      "NodeType": "ExtensionNode",
      "Id": "97eecaa0667140b2b217c07528ffcc32",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1ab94fe25293453f8985cc132859d148",
          "Name": "GroupType",
          "Description": "The selected GroupType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Group Type."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "9fac8931a6e44ba394f6b5087edcfafe",
      "Inputs": [
        {
          "Id": "16ae095d8bb742a1842007898fa8da08",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5cb5f12a9a34c0580335168f950d6a0",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "995ccef9f1cd4b49aecc810576ba715f",
      "Inputs": [
        {
          "Id": "2ffc7badc3964fe4b1668daa8972e17a",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a92beaaaf9e4ccf9cbcace53639c1b5",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d2a0590f2cb4f7e9a74cf1403826133",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb52218899294b78b858cdf419efe4a3",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "fdb901f20d644088a89f03651e881266",
      "Inputs": [
        {
          "Id": "60298be91cbc40aaa4d4c2caf7553ef4",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2eeeec0b990e460c904c7443bf123471",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "704a0615649a4b69a7598e7bf9bbdf71",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"H_Q'ty Cal Type Tag\",\n\"H_WM Code_1\",\n\"H_WM Code_2\",\n\"H_WM Code_3\",\n\"H_WM Code_4\",\n\"H_WM Code_5\",\n\"H_WM Code_6\",\n\"H_WM Code_7\",\n\"H_WM Code_8\",\n\"H_WM Code_9\"\n];",
      "Id": "014417a7a6a74588a86afc4c30d8ea08",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da989cdd240f4026b50103281496dc4c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nfrom Revit.Elements import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemTypes = IN[0]\r\nWMs_perFamTyp = IN[1]\r\nparam_ListForWM = IN[2]\r\n\r\ninput_sets = list(zip(elemTypes, WMs_perFamTyp))\r\n\r\n# Place your code below this line\r\n\r\ndef setParamAnElem(elem, paramNames, paramVals):\r\n    effName_List = paramNames[:len(paramVals)]\r\n    effVals_List = paramVals\r\n    setForParam = list(zip(effName_List, effVals_List))\r\n    res = list(map(lambda x: elem.SetParameterByName(x[0],x[1]), setForParam))\r\n    \r\n    return res\r\n\r\n\r\nfinal = map(lambda x: setParamAnElem(x[0],param_ListForWM,x[1]), input_sets)\r\n\r\n\r\n#res = elemT.GetParameterValueByName(\"Default Thickness\")\r\n# Assign your output to the OUT variable.\r\n#OUT = input_sets\r\nOUT = final",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ee95e619ed6b4a4092d10917064aaf58",
      "Inputs": [
        {
          "Id": "13eef7c2e1884f17bd9a94f727ce0d5e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7eecaa87218489daa29e5f629d3e5f4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c24b6a46f074029ae30973e803423cf",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a4290472fea4213a024469dd6acf27e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndict_aio = IN[0]\r\ncalType_header = IN[1]\r\n# Place your code below this line\r\nfamTypes = list(dict_aio.items())\r\nres_dict = {}\r\n\r\n\r\ndef find_WMspecsPerFamType(k_v):\r\n    k = k_v[0]\r\n    wms = k_v[1]\r\n    res = list(map(lambda x: [x[\"Work Master Code\"]] + x[\"wmSpecs\"], wms))\r\n    res_zeroless = list(map(lambda y: filter(lambda x: x!=0, y), res))\r\n    joined_strs = list(map(lambda x: ' | '.join(x),res_zeroless))\r\n\r\n    return k,joined_strs\r\n\r\nWMspecs = list(map(find_WMspecsPerFamType, famTypes))\r\n\r\nfor k,v in WMspecs:\r\n    res_dict[k] = [dict_aio[k][0][calType_header]] + v\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res_dict",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ad5dc112707a4841a2b44b8eb9c1ca62",
      "Inputs": [
        {
          "Id": "03197cc52c5a41498621cc5cbbdcdda2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1acb0f3536104379b228c0f654ce7eff",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3d8ae3ce29c4ada9cd978071a690e99",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "4eee53a8546c4694abfafd1926920870",
      "Inputs": [
        {
          "Id": "9dd564bcf04b4432a305390a99f356d7",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "affa8e9069d34d359fdc5519189993e3",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b78d9bdee064ca8aa719add76dab153",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Q'ty Cal Type Tag\";",
      "Id": "9e1934a59db94d298059a9bc8b9a66b6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bd1c260823824c3fa942da73cd699d3c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "catSheetDatas;\nUniqElemTypes;",
      "Id": "5942773aeb824c84bde85b7a139bac6b",
      "Inputs": [
        {
          "Id": "e45e7bbab26b4433b5b39ea0019872d8",
          "Name": "catSheetDatas",
          "Description": "catSheetDatas",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b807a40e33d146ed8e1079d77df2f4a2",
          "Name": "UniqElemTypes",
          "Description": "UniqElemTypes",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ffaed7ff9494698a476c77992378425",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4dfc84f116ed401aafa20bbf21bb6813",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "590996bec97544a8a3c5eaecbf1bbd45",
      "Inputs": [
        {
          "Id": "791810c9f38243529a3142e7e7fd2d41",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ab530efab9c434581925fdde0bb806e",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8402fd2e2cf40e18826f7fb710d7abe",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Type\";\n\"Type Name\";",
      "Id": "ea47f768c4464f6ca17b7b47bc073108",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34478aa62bfa4d148cf03d330610f255",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bd9705415654f7e8ac8be1751b2b4e4",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nfrom Revit.Elements import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nparamSheetDic = IN[0]\r\n# Place your code below this line\r\n\r\ndef findDictPerCalType(dicList):\r\n    dic = {}\r\n    for i in dicList:\r\n        dic[i[\"산출수식 약자\"]] = i[\"applyForCalc\"]\r\n    \r\n    return dic\r\n\r\nks_forDic = list(paramSheetDic.keys())\r\nvs_forDic = list(map(findDictPerCalType, paramSheetDic.values()))\r\n\r\nres = dict(zip(ks_forDic, vs_forDic))\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1bd5112c1ae04bcfb1e2fd87f4860ba7",
      "Inputs": [
        {
          "Id": "55f29dd9f2c2400aad315d92c033b933",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5cf52c8def9d401db5e11d43ab6fe5cd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "39f3fec13bdd481ca0f2851304a2cd56",
      "Inputs": [
        {
          "Id": "33fe3d93d4ef4ed18fb97ca157f4554b",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b219264bcb7499e8351221fad77c3fc",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28f37057ec694f93a6f284da04997a53",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c919d1b1818407588b8ae873dac0523",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "filtered;",
      "Id": "a6e18086ddf04b59ab06a3c68dbbca06",
      "Inputs": [
        {
          "Id": "bba74652bf314fe390e17b56f7f38928",
          "Name": "filtered",
          "Description": "filtered",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88821342d4504fcfbd2610710d44b8ec",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nfrom Revit.Elements import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nparamSheetDic = IN[0]\r\ncatSheetDic = IN[1]\r\n\r\n# Place your code below this line\r\nheaders = list(catSheetDic.values())[0][0].Keys\r\nwmspec_headers = list(filter(lambda x: \"Work C\" in x or \"Spec\" in x, headers))\r\n\r\ndef matchWith_paramDic(catSheetDic, paramSheetDic):\r\n    res = {}\r\n    for famType,diclist in catSheetDic.items():\r\n        new_diclist = []\r\n        for d in diclist:\r\n            new_d = {}\r\n            keys = d.Keys\r\n            keys_new = set(keys) - set(wmspec_headers)\r\n            calcType = d[\"Q'ty Cal Type Tag\"]\r\n            new_d[\"Sym_Val Dict\"] = paramSheetDic[calcType]\r\n            new_d[\"wmSpecs\"] = list(map(lambda x: d[x],wmspec_headers))\r\n            for spec in keys_new:\r\n                new_d[spec] = d[spec]\r\n            new_diclist.append(new_d)\r\n        \r\n        res[famType] = new_diclist\r\n        \r\n    return res\r\n    \r\n\r\n#res2 = map(lambda x: x[1], catSheetDic.items())\r\n# Assign your output to the OUT variable.\r\nOUT = matchWith_paramDic(catSheetDic, paramSheetDic)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "f99474b49e3e486e8933b2ac5d7484fa",
      "Inputs": [
        {
          "Id": "413d8e4c6a5b4e0f81d2665f58b5e5b6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4dfe3aa2a2224526a2855fca7f3bad83",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e71cda960604590987dd25291031857",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\n#clr.AddReference('RevitNodes')\r\n#import Revit\r\n#clr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n#doc = DocumentManager.Instance.CurrentDBDocument\r\n#collector1 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nfamlist_dic = IN[0]\r\nrevitElems = IN[1]\r\n\r\n# Place your code below this line\r\ndef matchWith_Elem_Dict(famlist_dic,revitElems):\r\n    res = []\r\n    for i in revitElems:\r\n        tmp = {}\r\n        famTypeName = i.GetParameterValueByName(\"Type\").GetParameterValueByName(\"Type Name\")\r\n        tmp[\"Elem\"] = i\r\n        tmp[\"wms\"] = famlist_dic[famTypeName]\r\n        \r\n        res.append(tmp)\r\n    return res\r\n\r\ndef update_sym_valDict(elemDicts):\r\n    for d in elemDicts:\r\n        elem = d[\"Elem\"]\r\n        wms = d[\"wms\"]\r\n        \r\n        for wm in wms:\r\n            sym_valDict = wm[\"Sym_Val Dict\"]\r\n            sv_keys = sym_valDict.Keys\r\n            sv_vals = sym_valDict.Values\r\n            sv_items = list(zip(sv_keys, sv_vals))\r\n            \r\n            for x in sv_items:\r\n                [k,v] = x\r\n                if isinstance(v, str):\r\n                    if v == \"Level\":\r\n                        #sym_valDict[k] = type(UnwrapElement(elem.GetParameterValueByName(v)))\r\n                        sym_valDict[k] = round(elem.GetParameterValueByName(\"Elevation at Bottom\"),2)\r\n                    elif elem.GetParameterValueByName(v):\r\n                        sym_valDict[k] = elem.GetParameterValueByName(v)\r\n                    elif elem.GetParameterValueByName(\"Type\").GetParameterValueByName(v):\r\n                        sym_valDict[k] = elem.GetParameterValueByName(\"Type\").GetParameterValueByName(v)\r\n                    else:\r\n                        pass\r\n    return elemDicts\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = update_sym_valDict(matchWith_Elem_Dict(famlist_dic,revitElems))",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "3bf30dcbbca84eb08aafa5ed15d4042e",
      "Inputs": [
        {
          "Id": "6bb89a836d794adbb921321ff571e938",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a75d2d18293473e89b54f0ee754c1e5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3849c2f660e4f0d9a1e89d3d58bb89f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[\"H_SF_ACE_Mass_T2500\"];",
      "Id": "3e48607c97ad4d69855c68aad2472202",
      "Inputs": [
        {
          "Id": "1c86f76bf4e449e498eaeaf4e9d6e40f",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "92d9b75e3c174ab1a72714bd22bcbc8f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "//wm 딕셔너리 마다 시트명 포함하게 수정 필요\n//(Family List 데이터 파싱_Category 시트)",
      "Id": "272e316735dc4172b7a5a61e4d4920d7",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n#doc = DocumentManager.Instance.CurrentDBDocument\r\n#collector1 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\nimport copy\r\n###################################################################################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n###########################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDicts = IN[0]\r\n    \r\n\r\n# Place your code below this line\r\n\r\n\r\ndef makeExcaShape(elem, sym_valDict):\r\n    def findBtmCrv(geo, sym_valDict): ##btmOffset = d1 + d2\r\n        offSetDist = sym_valDict[\"D1\"] + sym_valDict[\"D2\"]\r\n        #H2 = sym_valDict[\"H2\"] if sym_valDict[\"H2\"]>=0 else -sym_valDict[\"H2\"]\r\n        h = abs(sym_valDict[\"C1\"] + sym_valDict[\"C2\"] + sym_valDict[\"C3\"])\r\n        bdBox_fdn = BoundingBox.ByGeometry(geo).ToCuboid() ## 형상의 자그마한 요철 무시\r\n        srfs = bdBox_fdn.Explode() ## surface들\r\n        btmSrf = PolySurface.ByJoinedSurfaces(list(filter(lambda x: round(x.NormalAtParameter(0.5,0.5).Z, 3) == -1, srfs)))\r\n        btmCrvs = btmSrf.PerimeterCurves()\r\n        btmPolCrv = PolyCurve.ByJoinedCurves(btmCrvs)\r\n        offseted_btmPolCrv = btmPolCrv.Offset(offSetDist)\r\n        h_modified_btmPolCrv = offseted_btmPolCrv.Translate(0,0,-h-0.3)\r\n        return h_modified_btmPolCrv\r\n    \r\n    def findUprCrv(_btmPolCrv, sym_valDict):\r\n        btmCrvZ = _btmPolCrv.StartPoint.Z\r\n        test = (sym_valDict[\"C1\"] + sym_valDict[\"C2\"] + sym_valDict[\"C3\"])\r\n        #H = abs(sym_valDict[\"H2\"]) + (sym_valDict[\"C1\"] + sym_valDict[\"C2\"] + sym_valDict[\"C3\"])\r\n        H = abs(round(btmCrvZ,2))\r\n        G = sym_valDict[\"G\"]\r\n        offSetDist = (G * H)\r\n        \r\n        uprPolCrv = _btmPolCrv.Translate(0,0,H).Offset(offSetDist)\r\n        uprCrvZ = uprPolCrv.StartPoint.Z\r\n        return uprPolCrv#_btmPolCrv,btmCrvZ,uprPolCrv,uprCrvZ #btmCrvZ,uprCrvZ,test\r\n\r\n\r\n    fdnsGeo = elem.Geometry()[0]\r\n    btmPolCrv = findBtmCrv(fdnsGeo, sym_valDict)\r\n    uprPolCrv = findUprCrv(btmPolCrv, sym_valDict)\r\n    \r\n    return Solid.ByLoft([btmPolCrv,uprPolCrv])\r\n\r\n    \r\ndef addExcaInElemDicts(elemDicts):\r\n    allExcas = []\r\n    for idx,dic in enumerate(elemDicts):\r\n        elem = dic[\"Elem\"]\r\n        wms = dic[\"wms\"]\r\n        excaBln = \"Exca\" in \"\".join(list(map(lambda x: x[\"Dynamo 물량산출식\"], wms)))\r\n        if excaBln:\r\n            sym_valDict = wms[0][\"Sym_Val Dict\"]\r\n            excaGeo = makeExcaShape(elem, sym_valDict)\r\n            try:\r\n                allExcasUni = Solid.ByUnion(allExcas)\r\n                eff_excaGeo = excaGeo.Split(allExcasUni)[0]\r\n                allExcas.append(excaGeo)\r\n            except:\r\n                eff_excaGeo = excaGeo\r\n                allExcas.append(excaGeo)\r\n            dic[\"ExcaGeo\"] = eff_excaGeo\r\n\r\n    return elemDicts\r\n\r\n\r\ndef find_allGeo_UG_elems(elemDicts):\r\n    geoResult = []\r\n    for dic in elemDicts:\r\n        elem = dic[\"Elem\"]\r\n        wms = dic[\"wms\"]\r\n        excaBln = \"Exca\" in \"\".join(list(map(lambda x: x[\"Dynamo 물량산출식\"], wms)))\r\n        famType_ = wms[0][\"Family Type Name\"]\r\n            \r\n        if \"MAT_\" in famType_ or \"Mass_\" in famType_ or \"Pit\" in famType_ or \"Trench\" in famType_:\r\n            if \"Slab\" in famType_ or \"MAT_\" in famType_ or \"Mass_\" in famType_ :\r\n                srfs = elem.Geometry()[0].Explode() ## surface들\r\n                btmSrf = PolySurface.ByJoinedSurfaces(list(filter(lambda x: round(x.NormalAtParameter(0.5,0.5).Z, 3) == -1, srfs)))\r\n                btmCrvs = btmSrf.PerimeterCurves()\r\n                btmPolCrv = PolyCurve.ByJoinedCurves(btmCrvs)\r\n                btmCrvZ = btmPolCrv.StartPoint.Z\r\n                uprPolCrv = btmPolCrv.Translate(0,0,(0-btmCrvZ))\r\n                targetGeo = Solid.ByLoft([btmPolCrv,uprPolCrv])\r\n                geoResult.append(targetGeo)\r\n            else:\r\n                geoResult.append(elem.Geometry()[0])\r\n        elif \"PED_\" in famType_ or \"TG_\" in famType_ or \"SOG_\" in famType_ or \"UG\" in famType_:\r\n            geoResult.append(elem.Geometry()[0])\r\n            pass\r\n        elif excaBln:\r\n            geoResult.append(elem.Geometry()[0])\r\n            pass\r\n\r\n    return geoResult\r\n\r\n\r\ndef add_effExcaInElemDicts(elemDicts):\r\n    \r\n    allGeo_UG_RC_Elems = find_allGeo_UG_elems(elemDicts)\r\n    allUniGeo_UG_RC_Elems = Solid.ByUnion(allGeo_UG_RC_Elems)\r\n    elemDicts_excas = addExcaInElemDicts(elemDicts)\r\n    \r\n    for dic in elemDicts_excas:\r\n        if \"ExcaGeo\" in dic.keys():\r\n            excaGeo = dic[\"ExcaGeo\"]\r\n\r\n            eff_excaGeo = excaGeo\r\n            splitResult = eff_excaGeo.Split(allUniGeo_UG_RC_Elems)\r\n            dic[\"effExcaGeo\"] = eff_excaGeo\r\n            dic[\"effBackfillGeo\"] = splitResult[0]\r\n            try:\r\n                dic[\"effDisposalGeo\"] = splitResult[1]#eff_excaGeo.Intersect(allUniGeo_UG_RC_Elems)\r\n            except:\r\n                dic[\"effDisposalGeo\"] = []\r\n        \r\n        wms = dic[\"wms\"]\r\n        for wm in wms:\r\n            if \"Exca\" in wm[\"Dynamo 물량산출식\"] or\\\r\n               \"Back\" in wm[\"Dynamo 물량산출식\"] or\\\r\n               \"Disp\" in wm[\"Dynamo 물량산출식\"]:\r\n                wm[\"Sym_Val Dict\"][\"Exca\"] = dic[\"effExcaGeo\"].Volume\r\n                wm[\"Sym_Val Dict\"][\"Back\"] = dic[\"effBackfillGeo\"].Volume\r\n\r\n                try:\r\n                    wm[\"Sym_Val Dict\"][\"Disp\"] = dic[\"effDisposalGeo\"][0].Volume\r\n                except:\r\n                    wm[\"Sym_Val Dict\"][\"Disp\"] = 0\r\n\r\n\r\n    return elemDicts_excas\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = add_effExcaInElemDicts(elemDicts)#elemDicts_ExcasWithWholeExcaList\r\n#OUT = allUniGeo_UG_RC_Elems",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "fb1aef36c6274fd48c14e9a3127ec8e9",
      "Inputs": [
        {
          "Id": "f11a15768d5746ea9b3149fa74e9f064",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f91fcafbd74a4726a0feb1b7027b8a3c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[3][180];",
      "Id": "c8992b8a59fb48d39d99dea4abd73a57",
      "Inputs": [
        {
          "Id": "592b4060ee9b4245a446b5d5fd2398af",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc920da784614be5b951a14868ad260f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n#e = UnwrapElement(IN[0])\r\ne = IN[0]\r\n# Place your code below this line\r\nres = e.GetParameterValueByName(\"Level\").GetParameterValueByName(\"Elevation\")\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "6ccd409079af40d585d92d8c9551607f",
      "Inputs": [
        {
          "Id": "1c46fabd2d7446f4a0a84f4e278238a3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7615b150bc784016b21ae144ba7468a0",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Id": "cec4b396e4aa4c32afa9e89182843aad",
      "Inputs": [
        {
          "Id": "b98d1915a27542cc84289cb7a1918f95",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d88fd62669fb405c8c663944c17c4664",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "0545983ab71246a8b6ed9f1c2cdc3345",
      "Inputs": [
        {
          "Id": "0f57bea5dcbd4468b1f20607ab7de172",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "088d5cf2b5324a99b52a40aaae7369c6",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f67127398974248b97b7694ef855e4c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Level\";\n\"Elevation at Bottom\";",
      "Id": "61c4875d9c8f4249b99dd6cae9b33193",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c7f3c2a582424a47adb7c711c247d5e6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e37bffec6f3642f98c323cd57d042105",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "866466e8080e47d09e7ea27c0340a679",
      "Inputs": [
        {
          "Id": "d706af3819744b30aefad733af832a04",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eefe422520064527a36a08fe3d7f21d6",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0dc06d80dda43079024a0fabee413a9",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n#doc = DocumentManager.Instance.CurrentDBDocument\r\n#collector1 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\nimport copy\r\n###################################################################################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n###########################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDicts = IN[0]\r\n\r\ndef clean_SymValDict(elemDicts):\r\n    for dic in elemDicts:\r\n        wms = dic[\"wms\"]\r\n        for wm in wms:\r\n            formula = wm[\"Dynamo 물량산출식\"]\r\n            SymValDicts = wm[\"Sym_Val Dict\"]\r\n            SymValItems = list(zip(SymValDicts.Keys, SymValDicts.Values))\r\n            sym_val_keySets = []\r\n            sym_val_valSets = []\r\n            for k,v in SymValItems:\r\n                if k in formula:\r\n                    sym_val_keySets.append(k)\r\n                    sym_val_valSets.append(v)\r\n            #wm[\"Sym_Val Set\"] = [sym_val_keySets,sym_val_valSets]\r\n            wm[\"Sym_Val Set\"] = dict(zip(sym_val_keySets,sym_val_valSets))\r\n            formula_eqSymRemove = formula.lstrip(\"=\")\r\n            tmp = formula_eqSymRemove\r\n            for k in sym_val_keySets: ## 이 부분은 좀더 범용 처리 필요할수도\r\n                priorSymList = [\"Exca\", \"Back\", \"Disp\"]\r\n                #any(list(map(lambda x: x in tmp, priorList)))\r\n                #if \"Exca\" in tmp or \"Back\" in tmp or \"Disp\" in tmp:\r\n                if any(list(map(lambda x: x in tmp, priorSymList))):\r\n                    appliedSym = list(filter(lambda x: x in tmp, priorSymList))[0]\r\n                    #if len(k) > 1:\r\n                    if k == appliedSym:\r\n                        tmp = tmp.replace(k, str(wm[\"Sym_Val Set\"][k]))\r\n                else:\r\n                    tmp = tmp.replace(k, str(wm[\"Sym_Val Set\"][k]))\r\n                \r\n            \r\n            #wm[\"calcResult\"] = tmp.strip()\r\n            wm[\"calcResult\"] = round(eval(tmp.strip()),3)\r\n    \r\n    return elemDicts\r\n\r\n# Place your code below this line\r\n\r\nelemDicts_withSymValSet = clean_SymValDict(elemDicts)\r\n\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = clean_SymValDict(elemDicts)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "0c4ce42b1eec4eed8035d10e12270fc2",
      "Inputs": [
        {
          "Id": "715d5eb8400a49d68e4675ea776ce995",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d25f86b42589432686f7e0c250268c07",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "3a2291d54fa74970b0cacd8a3a8a08b8",
      "Inputs": [
        {
          "Id": "c2327385dc4d4427ad017aefe187b6f3",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f39659b145d0462482073c7655fe3582",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "99b7a172bab04fcf9e908e78fd92eaf3",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26d7414229104d838c6c46f04092e46f",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "908bb9ba4c4445618470abf4e49c4100",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "bc26711cf2d84b4faf73917768d70b24",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "457260c062b340eeaab5b5dedbfbc540",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1543c714eb7542f6bf73df28c1912c26",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\n#import Autodesk.Revit.DB.\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n#doc = DocumentManager.Instance.CurrentDBDocument\r\n#collector1 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\nimport copy\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nmyDict = {\"A\": 1, \"B\": 2}\r\nstrFormula = \"A + B\"\r\n\r\nstr1 = strFormula.replace(\"A\", str(myDict[\"A\"]))\r\nstr2 = str1.replace(\"B\", str(myDict[\"B\"]))\r\n#Math.EvaluateFormula\r\n# Assign your output to the OUT variable.\r\nOUT = \"b\" in \"Back\"",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "79472a3a437844418f56c340c05c7e8c",
      "Inputs": [
        {
          "Id": "9be718e10c4a4f4089ba8711d97975aa",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9474441ae62d41cb91bb11e82d35f599",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\ndef getCharValue(s):\r\n    # 베이스 케이스\r\n    if not s:\r\n        return 0\r\n \r\n    value = 0\r\n    # 입력 문자열을 대문자로 변환한 후 반복\r\n    for ch in s:\r\n        value = value * 26 + (ord(ch) - ord('A') + 1)\r\n    return value\r\n    \r\n#################################Module For Functional Programing#############################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\n\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    #endidxs_tmp= list(map(lambda x: x[0],res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndb = IN[0]\r\nallCatSheetsNames =IN[1]\r\n\r\n\r\nparamSheet = db[0]\r\nallCatSheets = db[1:]\r\n\r\n# Place your code below this line\r\n\r\ndef find_headersAtCatSheet(catSheet):\r\n    headers_CatSheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(catSheet[1])))\r\n    \r\n    return dict(headers_CatSheet)\r\n\r\ndef find_rangesAtCatSheet(catSheet, hdrs_withIdx):\r\n    return find_range_by_columnItem(catSheet, hdrs_withIdx[\"Family Type Name\"], \"H_\")\r\n\r\ndef get_DataOnRangesAtCatSheet(catSheet): \r\n    hdrs_withIdx = find_headersAtCatSheet(catSheet)\r\n    title_idx = map(lambda x: x[0], find_rangesAtCatSheet(catSheet, hdrs_withIdx).values())\r\n    calcType_colDatas = list(map(lambda x: x[hdrs_withIdx[\"Q'ty Cal Type Tag\"]], catSheet))\r\n    calcTypes = list(map(lambda x: calcType_colDatas[x], title_idx))\r\n    rgs_v = list(map(lambda x: x[1], find_rangesAtCatSheet(catSheet, hdrs_withIdx).values()))\r\n    rgs_k = list(map(lambda x: x, find_rangesAtCatSheet(catSheet, hdrs_withIdx).keys()))\r\n    \r\n    hdrs_v = list(hdrs_withIdx.values())\r\n    hdrs_k = list(hdrs_withIdx.keys())\r\n    #tagDatas = list(zip(rgs_k,calcTypes))\r\n    \r\n    datas_allFamType = list(map(lambda x: list(zip(catSheet[x[0]-1:x[1]], range(x[0]-1,x[1]))), rgs_v))\r\n    #datas_allFamType = list(zip(tagDatas, datas_allFamType_))\r\n    \r\n    def setDict_OnEachFamType(data_famType):  ## 최종적으로 산출식 없는 것 걸러내기 추가해야 함\r\n        titleData = list(data_famType).pop(0)[0]\r\n        \r\n        famTypeName = titleData[hdrs_withIdx[\"Family Type Name\"]]\r\n        calcTypeName = titleData[hdrs_withIdx[\"Q'ty Cal Type Tag\"]]\r\n        data_famType_noneless = list(filter(lambda x: x[0][5] != None, data_famType))\r\n        ## WM row 별 header명 과 짝짓기\r\n        data_withHdrsIdx = list(map(lambda y: [list(map(lambda x: y[0][x], hdrs_v)), y[1]], data_famType_noneless))\r\n        hdrs_k.append(\"rIDX\")\r\n        dict_ = list(map(lambda x: dict(zip(hdrs_k, x[0]+[x[1]])), data_withHdrsIdx))\r\n        dicts_noneless = list(map(lambda y: dict(filter(lambda x: x[1]!=None, y.items())),dict_))\r\n        ## dict_gauge, 물량산출식 없는 항목 처리\r\n        dicts_final = []\r\n        needDefault_ColName = \"Gauge Code\"\r\n        noneRemove_ColName = \"Dynamo 물량산출식\"\r\n        for d in dicts_noneless:\r\n            d[\"Family Type Name\"] = famTypeName\r\n            \r\n            if calcTypeName == None:\r\n                pass            \r\n            elif noneRemove_ColName in d.keys():\r\n                d[\"Q'ty Cal Type Tag\"] = calcTypeName\r\n                d[needDefault_ColName] = \"\"\r\n                dicts_final.append(d)\r\n\r\n        \r\n        return dicts_final\r\n        \r\n    dicts_allFamType = list(map(lambda x: setDict_OnEachFamType(list(x)), datas_allFamType))\r\n    ds_famTypesAtCatSheet = dict(zip(rgs_k, dicts_allFamType))\r\n    ds_famTypesAtCatSheet_effCalcType = dict(filter(lambda x: all(list(map(lambda i: \"Q'ty Cal Type Tag\" in i, x[1]))), list(ds_famTypesAtCatSheet.items())))\r\n    ds_famTypesAtCatSheet_noneless = dict(filter(lambda x: len(list(x[1]))!=0, list(ds_famTypesAtCatSheet_effCalcType.items())))\r\n    \r\n    return  ds_famTypesAtCatSheet_noneless\r\n\r\n## AllInOne 딕셔너리에 정리\r\ndataOnRanges_allCat = list(map(get_DataOnRangesAtCatSheet, allCatSheets))\r\ndataOnRanges_allCat_WithCatNames = list(zip(allCatSheetsNames, dataOnRanges_allCat))\r\ndicts_AllInOne = {}\r\n\r\nfor d in dataOnRanges_allCat_WithCatNames:\r\n    catName = d[0]\r\n    dict_k_v = d[1].items()\r\n    for k,v in dict_k_v:\r\n        for wm in v:\r\n            wm[\"SheetName\"] = catName\r\n        dicts_AllInOne[k] = v\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dicts_AllInOne\r\n#OUT = get_DataOnRangesAtCatSheet(allCatSheets[0])#allCatSheetsWithNames#",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "000f06ac5d844412994ef40b4057a11a",
      "Inputs": [
        {
          "Id": "798645b44b2541869eebb7e2b11c5570",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "866fe130d5be4da3b59bb3722a0dbbc6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6f6808e72c5476eb31874fb60fbd602",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[\"effExcaGeo\"]?i[\"effExcaGeo\"] : \"N/a\";",
      "Id": "203941df416e457983ebdd89b47c4f2e",
      "Inputs": [
        {
          "Id": "7a1ec77e5e724d909d5171204a038a2f",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d15b60c9dd5f472191710489aca91926",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[\"effBackfillGeo\"]?i[\"effBackfillGeo\"] : \"N/a\";",
      "Id": "a814830d4a534b2a924c1e3facf8a431",
      "Inputs": [
        {
          "Id": "832a962155ca410bbbb34414a75d610a",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04a743122d2241bcb65513f3e4c30263",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[\"effDisposalGeo\"]?i[\"effDisposalGeo\"] : \"N/a\";",
      "Id": "bb430ef0c07145289fd9038159b37232",
      "Inputs": [
        {
          "Id": "fddaee8b85ee457fa54efade46be16fa",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa4ef862020f41118fc84f5a4ff0c76e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[35];",
      "Id": "dba9fdd32e7d42c790bb8dbdbfef8bc7",
      "Inputs": [
        {
          "Id": "afc68b9619074f64963a5e0182806616",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9b8c6ef2b08445b8ce38802e9c06683",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport operator\r\nfrom itertools import groupby\r\nimport copy\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDicts = IN[0]\r\n# Place your code below this line\r\ndef extractCalcResult(elemDicts):\r\n    res = []\r\n    for d in elemDicts:\r\n        wms = d[\"wms\"]\r\n        for wm in wms:\r\n            keys = [\"SheetName\", \"rIDX\", \"Work Master Code\", \"Family Type Name\", \"calcResult\"]\r\n            vals = list(map(lambda x: wm[x],keys))\r\n            k_v = list(zip(keys, vals))\r\n            res.append(dict(k_v))\r\n        \r\n    return res\r\n\r\n\r\ndef make_dict_groupBy_Sheet_WM(elemDicts):\r\n    extractedDicts = extractCalcResult(elemDicts)\r\n    sortedDicts_sheet = sorted(extractedDicts, key=operator.itemgetter(\"SheetName\"))\r\n    grpDicts_Sheet = groupby(sortedDicts_sheet, lambda x: x[\"SheetName\"])\r\n    \r\n    res = {}\r\n    for k, g in grpDicts_Sheet:\r\n        sorted_g = sorted(list(g), key=operator.itemgetter(\"rIDX\"))\r\n        grped_g = groupby(sorted_g, lambda x: x[\"rIDX\"])\r\n        tmp = []\r\n        for k_,g_ in grped_g:\r\n            gg = copy.deepcopy(list(g_))\r\n            calcSum = sum(map(lambda x: x[\"calcResult\"],gg))\r\n            rIDX = gg[0][\"rIDX\"]\r\n            tmp.append((rIDX,calcSum))\r\n            \r\n        res[k] = tmp\r\n    return res\r\n\r\ndef fill_dict_emptySlot(dic):\r\n    tmp = []\r\n    for k, v in dic.items():\r\n#        for d in v:\r\n#            all_idxs = list(map(lambda x: x[0],v))\r\n#            max_idx = max(all_idxs)\r\n#            full_range = range(0, max_idx+1)\r\n        all_idxs = list(map(lambda x: x[0],v))\r\n        max_idx = max(all_idxs)\r\n        full_range = range(0, max_idx+1)\r\n        \r\n        for i in full_range:\r\n            if i not in all_idxs:\r\n                v.append([i, \"\"])\r\n        tmp.append(sorted(v, key=operator.itemgetter(0)))\r\n        \r\n    res = list(zip(dic.keys(),tmp))\r\n    return dict(res)\r\n\r\n\r\n\r\ndict_groupBy_Sheet_WM = make_dict_groupBy_Sheet_WM(elemDicts)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = fill_dict_emptySlot(dict_groupBy_Sheet_WM)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "df538152d8514dcaab3d75f0734a582b",
      "Inputs": [
        {
          "Id": "a26d934531764b6fa9513dcabfe0e2f2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ecd0a9d586d84b0ea205aa4d38047209",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "d9de8a61787442ceb4b5e56fe75e7a1d",
      "Inputs": [
        {
          "Id": "c24104869fb5431bacfe98eac9722e96",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ddaee91b731249a990626eee2bce9ca4",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32031adf5ee64bc49ae7c3d65dc89ca3",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ae19779d3103471bb4993d2624fee3c8",
      "Inputs": [
        {
          "Id": "b4d9a9e2970e4ba7a0adf077ee9264e5",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "c5bae2a161c44dbab17d406f3fc7e8d6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b75b3669acf47baab8e27b5432293d5",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "0e906b492e964f0388034bb3dba9715c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fbe496ff58b5496bab3d818170be9b90",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "file_path;",
      "Id": "79390c9ce7774e469399c480c2fd9540",
      "Inputs": [
        {
          "Id": "f9f782fc2baf4e9a9eeaf109ac5875b7",
          "Name": "file_path",
          "Description": "file_path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "859d68f38a9e4150ba95406d0e5a28cd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "file_path;",
      "Id": "e4bace56c16d462b8e637e17ad1a1046",
      "Inputs": [
        {
          "Id": "83e98e90705349c8b13048c1f1cfe7c0",
          "Name": "file_path",
          "Description": "file_path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3ef7f68ea224374834c39ddb549b2ca",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "43c850fe5b414baaa43fa6abbf66d41a",
      "Inputs": [
        {
          "Id": "9e003a398c744cf489ca6cf87328c986",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6b9ac6c86e794528a8f432bda91bb2d7",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66334226642f44b19bfe040f61500a5c",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "6;\n31;",
      "Id": "2524f0f864744ce88dfa2ab2d9d3e61d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "724b257b6e404ed585ee188d157145ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfa2bdde29b94030aa701b88ab3ca988",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "912753a782b84f598e120e936fffbd58",
      "End": "ae38fed72c0a434eb235268bfba22c03",
      "Id": "2f9fd4adb6444d8e9c24cd4a536bbbf2",
      "IsHidden": "False"
    },
    {
      "Start": "e4d9d60debe6406cace5eb687f712858",
      "End": "efbd6851497a4681a114ca7842d95e6a",
      "Id": "2483c846c22f4026a33d2bffb611b5e1",
      "IsHidden": "False"
    },
    {
      "Start": "bdc68e6596d64c1bb2ad17af850a8a64",
      "End": "f2b7450af5914cbf8a28c2a092e6a190",
      "Id": "e1261a8d8e0640709812536bf93bfcb4",
      "IsHidden": "False"
    },
    {
      "Start": "07eba95685e249a0a3188444eec253fe",
      "End": "2d45870ecc9f4742810ae2af861ad07b",
      "Id": "9aeb66891ebe4d4ca89e07933da9a02d",
      "IsHidden": "False"
    },
    {
      "Start": "266640a8b58449a48603af36addb1282",
      "End": "193ab32ba4444bc38b409c75675a617e",
      "Id": "de23b2abcdfb4fae8063260ab4c8253d",
      "IsHidden": "False"
    },
    {
      "Start": "266640a8b58449a48603af36addb1282",
      "End": "592b4060ee9b4245a446b5d5fd2398af",
      "Id": "cc24cc99960e457b862b95f513de45a8",
      "IsHidden": "False"
    },
    {
      "Start": "16f6a93146ee4557a8eec29cac4eb344",
      "End": "d8f51f5cd01d4567b1a00710d64a2961",
      "Id": "e63f36a17c2d445ea7346df2930d19e9",
      "IsHidden": "False"
    },
    {
      "Start": "16f6a93146ee4557a8eec29cac4eb344",
      "End": "cbcac752c4ef4adbbf500face4dae780",
      "Id": "fa5b938ede8a4671bb6ae0d22253dd0b",
      "IsHidden": "False"
    },
    {
      "Start": "16f6a93146ee4557a8eec29cac4eb344",
      "End": "798645b44b2541869eebb7e2b11c5570",
      "Id": "c9547823ce264377a9e42d796d8d6f4c",
      "IsHidden": "False"
    },
    {
      "Start": "eb3a2510c5934129baf50771f5bb29a9",
      "End": "c4d740fa206e4ab3b53ba148e9727e8f",
      "Id": "0708e80f5c0f475aa73809bfc8d71053",
      "IsHidden": "False"
    },
    {
      "Start": "e3d41cbea388406e9b31fca8184f2a13",
      "End": "8d8f529204cd48a5a2210b85d94be686",
      "Id": "aea2bbf0844a421eac38d674664254a7",
      "IsHidden": "False"
    },
    {
      "Start": "e3d41cbea388406e9b31fca8184f2a13",
      "End": "f9f782fc2baf4e9a9eeaf109ac5875b7",
      "Id": "eafa2240e806488fbd17faf4c8cfd800",
      "IsHidden": "False"
    },
    {
      "Start": "f98969ee45ea4cce8921b553ad57fbc0",
      "End": "da624c3834b64df4a29198439fca082e",
      "Id": "056e91bb2fca4d81af853578b822a2fa",
      "IsHidden": "False"
    },
    {
      "Start": "388e2eaea3fc4ff5a852380f21ea4b1b",
      "End": "8871f8fef5b841e484fe65aa92aecb9c",
      "Id": "a45a9380a6214d09b37556e254d59381",
      "IsHidden": "False"
    },
    {
      "Start": "388e2eaea3fc4ff5a852380f21ea4b1b",
      "End": "fb681e08f1034208a2da1a59eef69887",
      "Id": "cf8abee9e8404b53a52a8e965b6e3e78",
      "IsHidden": "False"
    },
    {
      "Start": "f7931e3f26c347e5ada98b5a0ca372b3",
      "End": "9a7344f7947340dfbda9f66443a4b459",
      "Id": "24ba3e913ea848318c12b462ac342bd3",
      "IsHidden": "False"
    },
    {
      "Start": "a6c10470fa9644d9a4ab809356dbe40e",
      "End": "b6b100a2ab9642b79ac818735c8a86bf",
      "Id": "137471a4ff694166bdaaf52285587ed5",
      "IsHidden": "False"
    },
    {
      "Start": "9736b33bef054564bf7b5817c23ae020",
      "End": "9051dcf4d56d4c0aba07fd03ae97f4d0",
      "Id": "7d8becb6a73444cba63e4e5f9fb41282",
      "IsHidden": "False"
    },
    {
      "Start": "7d4c7b51481348b68b28a4a779f5cca8",
      "End": "8fc2fd075a8f43b5aa80a7c22114b549",
      "Id": "758db14748464307bcd2f9bfee28d63e",
      "IsHidden": "False"
    },
    {
      "Start": "4c4c0a55d8a14ffd85d7c51b2c5597ce",
      "End": "a09c7a56958d41b98e3d148266263dd9",
      "Id": "62a60d2eaead4926b5a18ece72de5d8f",
      "IsHidden": "False"
    },
    {
      "Start": "4c4c0a55d8a14ffd85d7c51b2c5597ce",
      "End": "866fe130d5be4da3b59bb3722a0dbbc6",
      "Id": "445a1d0cfa4e4c6f9a63de2f51b4fefa",
      "IsHidden": "False"
    },
    {
      "Start": "10927b3559a04512b2a50eede4045749",
      "End": "55f29dd9f2c2400aad315d92c033b933",
      "Id": "fd4a4199c451446fb68c683ac788c324",
      "IsHidden": "False"
    },
    {
      "Start": "10b9d576b3ad4395925a377ca5a961a0",
      "End": "7ce72f3e519f465d8ada827987db1860",
      "Id": "642787f285b44bd68501b7bc6989e652",
      "IsHidden": "False"
    },
    {
      "Start": "10b9d576b3ad4395925a377ca5a961a0",
      "End": "33fe3d93d4ef4ed18fb97ca157f4554b",
      "Id": "b77d31b98e154a48a13d6dd747ea7290",
      "IsHidden": "False"
    },
    {
      "Start": "598e3e26be64404d83d0ce9582db84f0",
      "End": "2a554f9ba2fe450dac0706c6f1d2b201",
      "Id": "eafa8b93b1894c9daa1c3c2de58e77e5",
      "IsHidden": "False"
    },
    {
      "Start": "598e3e26be64404d83d0ce9582db84f0",
      "End": "2ffc7badc3964fe4b1668daa8972e17a",
      "Id": "fabfbba593784e2a9e71c7e4914ba38a",
      "IsHidden": "False"
    },
    {
      "Start": "b9f142a179cd4d2fa012c3227e0b972f",
      "End": "22c24cbbe6044bd095c409ff0a1f5059",
      "Id": "bd7e787661af49f4b0ca01a89f108e6a",
      "IsHidden": "False"
    },
    {
      "Start": "d1f1b294d2164b04897730bd729ae51a",
      "End": "6690df8a5a814090a9e8af85ce1f8eb5",
      "Id": "aedcb82886db4e0398355d0d55daf2de",
      "IsHidden": "False"
    },
    {
      "Start": "0606daabd3f1417c8fb2699772a58b29",
      "End": "c01bba0e2e294fd69177c11254b77f35",
      "Id": "35a9a35c7ed644e289e5243ad3524cf8",
      "IsHidden": "False"
    },
    {
      "Start": "a6db5b3198a84514b931f6728da04348",
      "End": "affa8e9069d34d359fdc5519189993e3",
      "Id": "d7265a7aa81143e980dbc9fb2f067d7f",
      "IsHidden": "False"
    },
    {
      "Start": "896e8dab2bff430e946bcbf6da09b9f7",
      "End": "c9d0e9ffdc354867b1f275c5d88e7c77",
      "Id": "53771fac8c604b8f843c8372ac28957b",
      "IsHidden": "False"
    },
    {
      "Start": "f78730f13a0a491da704c9bb86b397db",
      "End": "c37a885e3b874ab5a14dc5b9a9483283",
      "Id": "82ff856b98444050867674cff64d0d77",
      "IsHidden": "False"
    },
    {
      "Start": "e8dadf4a47264c5f86f3a1f9af105d0e",
      "End": "0a92beaaaf9e4ccf9cbcace53639c1b5",
      "Id": "db7c128fb635456ba982c33651aacc58",
      "IsHidden": "False"
    },
    {
      "Start": "e8dadf4a47264c5f86f3a1f9af105d0e",
      "End": "9b219264bcb7499e8351221fad77c3fc",
      "Id": "3b54bd45441040f992ceb5db03e77f59",
      "IsHidden": "False"
    },
    {
      "Start": "523a6b05a06c490eb7cfa31796723e4f",
      "End": "38ac5ca068574d219b39e5a07bd309a1",
      "Id": "540669894b724ad09877ebacdf887066",
      "IsHidden": "False"
    },
    {
      "Start": "25b11d15e6834c96a298b45cb1bf32a7",
      "End": "da273f14c52b42558ec17b22c360f024",
      "Id": "b790e826848349b3999761b5dbe7aeb7",
      "IsHidden": "False"
    },
    {
      "Start": "465ce5d4ba544858bc507452a871eff2",
      "End": "9cfd2d9ca5de4474aac059e0d7724083",
      "Id": "a0c5e12b67ef48cd847e6b09749fc675",
      "IsHidden": "False"
    },
    {
      "Start": "7cde65c6861a47c2b12b06a5079baf34",
      "End": "ecfa82e90bc44e08ad8d9044f8cd774a",
      "Id": "063c57de079d4629850ec68968fc31c8",
      "IsHidden": "False"
    },
    {
      "Start": "ed538c7016c241b094ec0476eae7f05f",
      "End": "18eb26d8706045b49fc42fdc08c472c0",
      "Id": "64b2acf964134baeb6f063fdc24bb2bb",
      "IsHidden": "False"
    },
    {
      "Start": "64b5246139c648a78421a8065fce7db2",
      "End": "200e728b72fd45ee99e683ae719e1330",
      "Id": "107e720b2c924d9c83536415de8b7458",
      "IsHidden": "False"
    },
    {
      "Start": "e55759f4d15841d0be007e9426de2cf4",
      "End": "9308cbfdc8414aaf86982a0cef734b5f",
      "Id": "671296383a4841d882764fd3e6969a5a",
      "IsHidden": "False"
    },
    {
      "Start": "c6d559922a0b4bc097bae2593ef4c4b1",
      "End": "de6ea5f0e79a488889bcf832bae235ed",
      "Id": "025ee864c97e4f4a868de2f85fae2022",
      "IsHidden": "False"
    },
    {
      "Start": "1ab94fe25293453f8985cc132859d148",
      "End": "ad87b46466e44fc5b272462dd3d0e728",
      "Id": "448e372c363544ae8d3d08c18e88d010",
      "IsHidden": "False"
    },
    {
      "Start": "f5cb5f12a9a34c0580335168f950d6a0",
      "End": "b807a40e33d146ed8e1079d77df2f4a2",
      "Id": "c5747d2463794114aac18de569ebdc9c",
      "IsHidden": "False"
    },
    {
      "Start": "bb52218899294b78b858cdf419efe4a3",
      "End": "16ae095d8bb742a1842007898fa8da08",
      "Id": "219e6f201f7242b69e763ff133bab9fc",
      "IsHidden": "False"
    },
    {
      "Start": "704a0615649a4b69a7598e7bf9bbdf71",
      "End": "d7eecaa87218489daa29e5f629d3e5f4",
      "Id": "c6c8b668c94b4fd3a8d836d7f59c30ef",
      "IsHidden": "False"
    },
    {
      "Start": "da989cdd240f4026b50103281496dc4c",
      "End": "5c24b6a46f074029ae30973e803423cf",
      "Id": "5780c2d647e0468b9a4416956c5d1de7",
      "IsHidden": "False"
    },
    {
      "Start": "a3d8ae3ce29c4ada9cd978071a690e99",
      "End": "60298be91cbc40aaa4d4c2caf7553ef4",
      "Id": "44d3a61834ea4fdc87d49c2b7853293c",
      "IsHidden": "False"
    },
    {
      "Start": "2b78d9bdee064ca8aa719add76dab153",
      "End": "03197cc52c5a41498621cc5cbbdcdda2",
      "Id": "3222e9cb93354ef584433d5298ef1779",
      "IsHidden": "False"
    },
    {
      "Start": "bd1c260823824c3fa942da73cd699d3c",
      "End": "1acb0f3536104379b228c0f654ce7eff",
      "Id": "bee2b8173f32457e87e183a9072558bc",
      "IsHidden": "False"
    },
    {
      "Start": "0ffaed7ff9494698a476c77992378425",
      "End": "9ba11babb5ef4e12a0e246df296ff645",
      "Id": "54ca60e73be04ea1a84cc3d9610d1437",
      "IsHidden": "False"
    },
    {
      "Start": "4dfc84f116ed401aafa20bbf21bb6813",
      "End": "791810c9f38243529a3142e7e7fd2d41",
      "Id": "f3c0180c2ad04c3e8bb0b6262bf1fb4f",
      "IsHidden": "False"
    },
    {
      "Start": "4dfc84f116ed401aafa20bbf21bb6813",
      "End": "13eef7c2e1884f17bd9a94f727ce0d5e",
      "Id": "f3455b73a07e4f86aee74da478e9fdbb",
      "IsHidden": "False"
    },
    {
      "Start": "d8402fd2e2cf40e18826f7fb710d7abe",
      "End": "e5775c1a7f8c45d6911594db84ada28f",
      "Id": "4ca3ebe2dc6b435aaa3f0a73607db136",
      "IsHidden": "False"
    },
    {
      "Start": "d8402fd2e2cf40e18826f7fb710d7abe",
      "End": "9dd564bcf04b4432a305390a99f356d7",
      "Id": "b204c1ced1514f68ba43e37d0b19c58c",
      "IsHidden": "False"
    },
    {
      "Start": "d8402fd2e2cf40e18826f7fb710d7abe",
      "End": "2eeeec0b990e460c904c7443bf123471",
      "Id": "4234ace9fb904db4bd3319cdbe148d71",
      "IsHidden": "False"
    },
    {
      "Start": "3bd9705415654f7e8ac8be1751b2b4e4",
      "End": "9ab530efab9c434581925fdde0bb806e",
      "Id": "bb946722da4c4973837208e6ea593923",
      "IsHidden": "False"
    },
    {
      "Start": "5cf52c8def9d401db5e11d43ab6fe5cd",
      "End": "413d8e4c6a5b4e0f81d2665f58b5e5b6",
      "Id": "45abac9d707d4c78b9dbe92dece5d907",
      "IsHidden": "False"
    },
    {
      "Start": "5c919d1b1818407588b8ae873dac0523",
      "End": "bba74652bf314fe390e17b56f7f38928",
      "Id": "fe72b01bc3c3470aaeddbf51ff806271",
      "IsHidden": "False"
    },
    {
      "Start": "88821342d4504fcfbd2610710d44b8ec",
      "End": "7a75d2d18293473e89b54f0ee754c1e5",
      "Id": "1bce5534305b49ab8a21b6a4e3ebf1ed",
      "IsHidden": "False"
    },
    {
      "Start": "9e71cda960604590987dd25291031857",
      "End": "6bb89a836d794adbb921321ff571e938",
      "Id": "f571bc79199e4fbdb053d743c62fae36",
      "IsHidden": "False"
    },
    {
      "Start": "9e71cda960604590987dd25291031857",
      "End": "e45e7bbab26b4433b5b39ea0019872d8",
      "Id": "5ad28eb7162a4089a8c617d9fac698a6",
      "IsHidden": "False"
    },
    {
      "Start": "9e71cda960604590987dd25291031857",
      "End": "1c86f76bf4e449e498eaeaf4e9d6e40f",
      "Id": "aea4170ff73f4e60b31559b6f1a53565",
      "IsHidden": "False"
    },
    {
      "Start": "f3849c2f660e4f0d9a1e89d3d58bb89f",
      "End": "f11a15768d5746ea9b3149fa74e9f064",
      "Id": "85b5073206fa40b0909d82e6560567ef",
      "IsHidden": "False"
    },
    {
      "Start": "f91fcafbd74a4726a0feb1b7027b8a3c",
      "End": "715d5eb8400a49d68e4675ea776ce995",
      "Id": "b591698e1d774f829bd3c9d04887aa2c",
      "IsHidden": "False"
    },
    {
      "Start": "bc920da784614be5b951a14868ad260f",
      "End": "1c46fabd2d7446f4a0a84f4e278238a3",
      "Id": "a2abbc5c07b24b21ab8acaa38a528561",
      "IsHidden": "False"
    },
    {
      "Start": "bc920da784614be5b951a14868ad260f",
      "End": "b98d1915a27542cc84289cb7a1918f95",
      "Id": "1bef3b558163400fb595e1a41bcc9708",
      "IsHidden": "False"
    },
    {
      "Start": "bc920da784614be5b951a14868ad260f",
      "End": "0f57bea5dcbd4468b1f20607ab7de172",
      "Id": "22d730d49a904c0381f1c5477a9f7c04",
      "IsHidden": "False"
    },
    {
      "Start": "bc920da784614be5b951a14868ad260f",
      "End": "d706af3819744b30aefad733af832a04",
      "Id": "fdb9de9f532a49dea08e847144c05383",
      "IsHidden": "False"
    },
    {
      "Start": "c7f3c2a582424a47adb7c711c247d5e6",
      "End": "088d5cf2b5324a99b52a40aaae7369c6",
      "Id": "b2f265dfca964f1f874ccddcc7695871",
      "IsHidden": "False"
    },
    {
      "Start": "e37bffec6f3642f98c323cd57d042105",
      "End": "eefe422520064527a36a08fe3d7f21d6",
      "Id": "023518a02f214040bcdeaf8d341ad96d",
      "IsHidden": "False"
    },
    {
      "Start": "d25f86b42589432686f7e0c250268c07",
      "End": "7a1ec77e5e724d909d5171204a038a2f",
      "Id": "1c840018d1124456923228c5cd87b37a",
      "IsHidden": "False"
    },
    {
      "Start": "d25f86b42589432686f7e0c250268c07",
      "End": "832a962155ca410bbbb34414a75d610a",
      "Id": "a6e7c818038f47c7a6dbba8d29723992",
      "IsHidden": "False"
    },
    {
      "Start": "d25f86b42589432686f7e0c250268c07",
      "End": "fddaee8b85ee457fa54efade46be16fa",
      "Id": "3c47093041be49a3b6886bd957367bab",
      "IsHidden": "False"
    },
    {
      "Start": "d25f86b42589432686f7e0c250268c07",
      "End": "a26d934531764b6fa9513dcabfe0e2f2",
      "Id": "ecff7ae3706d4f168d14ee453febca19",
      "IsHidden": "False"
    },
    {
      "Start": "a6f6808e72c5476eb31874fb60fbd602",
      "End": "4dfe3aa2a2224526a2855fca7f3bad83",
      "Id": "2d402a09a1794363b5b65ae576ba7a64",
      "IsHidden": "False"
    },
    {
      "Start": "d15b60c9dd5f472191710489aca91926",
      "End": "afc68b9619074f64963a5e0182806616",
      "Id": "7e9378b088b140a4be2e40804ccc8622",
      "IsHidden": "False"
    },
    {
      "Start": "ecd0a9d586d84b0ea205aa4d38047209",
      "End": "c24104869fb5431bacfe98eac9722e96",
      "Id": "241737854969451c9b980d41c05239fb",
      "IsHidden": "False"
    },
    {
      "Start": "ddaee91b731249a990626eee2bce9ca4",
      "End": "f39659b145d0462482073c7655fe3582",
      "Id": "bb10b8b155574fc1b28d8e50bdb1ec9d",
      "IsHidden": "False"
    },
    {
      "Start": "32031adf5ee64bc49ae7c3d65dc89ca3",
      "End": "b4d9a9e2970e4ba7a0adf077ee9264e5",
      "Id": "5ee870b4a1c24e509f74c3a382712baa",
      "IsHidden": "False"
    },
    {
      "Start": "8b75b3669acf47baab8e27b5432293d5",
      "End": "9e003a398c744cf489ca6cf87328c986",
      "Id": "fe94b593700f427ab2952453c3ad657b",
      "IsHidden": "False"
    },
    {
      "Start": "fbe496ff58b5496bab3d818170be9b90",
      "End": "c5bae2a161c44dbab17d406f3fc7e8d6",
      "Id": "ef473d909f8f47ec8564e892527483d8",
      "IsHidden": "False"
    },
    {
      "Start": "859d68f38a9e4150ba95406d0e5a28cd",
      "End": "83e98e90705349c8b13048c1f1cfe7c0",
      "Id": "5bdf069881b94f4dbc310aebe401e127",
      "IsHidden": "False"
    },
    {
      "Start": "a3ef7f68ea224374834c39ddb549b2ca",
      "End": "c2327385dc4d4427ad017aefe187b6f3",
      "Id": "13de535de37b4fd4b9cd3f6c03cf65b2",
      "IsHidden": "False"
    },
    {
      "Start": "66334226642f44b19bfe040f61500a5c",
      "End": "908bb9ba4c4445618470abf4e49c4100",
      "Id": "628f0fc69ff44a33aa30b4dc5dcc1d83",
      "IsHidden": "False"
    },
    {
      "Start": "724b257b6e404ed585ee188d157145ba",
      "End": "99b7a172bab04fcf9e908e78fd92eaf3",
      "Id": "9340680534104457a1394df00fe0b8c3",
      "IsHidden": "False"
    },
    {
      "Start": "724b257b6e404ed585ee188d157145ba",
      "End": "6b9ac6c86e794528a8f432bda91bb2d7",
      "Id": "9a391cab697f4f719602fc3d68579349",
      "IsHidden": "False"
    },
    {
      "Start": "bfa2bdde29b94030aa701b88ab3ca988",
      "End": "26d7414229104d838c6c46f04092e46f",
      "Id": "a6a3a45e5f85428cab6f2525462d295a",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "플랜트건축팀_BIM_팀 표준 Family List_Rev.0_SQ3_박기범_20230913.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "51b4738620874fe885b1b5ecce1e49b7",
        "79390c9ce7774e469399c480c2fd9540",
        "e4bace56c16d462b8e637e17ad1a1046"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 64.999740600585938,
      "EyeY": 13.429191589355469,
      "EyeZ": -3.4033946990966797,
      "LookX": -56.824951171875,
      "LookY": -52.241268157958984,
      "LookZ": -20.333433151245117,
      "UpX": -0.449260950088501,
      "UpY": 0.87881755828857422,
      "UpZ": -0.16076153516769409
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "1250bd18102c4ebaac9950d60dac8849",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3995.66226582738,
        "Y": 1548.3273537118573
      },
      {
        "Name": "All ElementsExceptRails",
        "ShowGeometry": true,
        "Id": "c790cfc4c7d943cdb05ca3a612d673c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3638.66226582738,
        "Y": 1400.3273537118573
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "d78f3dfc768541ab8490b53194e174c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4331.6622658273791,
        "Y": 1548.3273537118573
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "94dc2b3bd4e14a9fa5352e8ad0cbe58b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3638.66226582738,
        "Y": 1548.3273537118573
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "bf37a72db0e847dba5e3d1c2ed14c8bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3285.66226582738,
        "Y": 1457.3273537118573
      },
      {
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Id": "1eac1f1717ab40c98ea2a8a9b59421d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3400.5486975732852,
        "Y": 300.12517693814777
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "caccad700bd84d8e8cb198c7fe1545aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3694.5486975732852,
        "Y": 197.12517693814777
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "51b4738620874fe885b1b5ecce1e49b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4337.5486975732856,
        "Y": 197.12517693814777
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "76e75c1cd00342eeb418e14c2410b8f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3694.5486975732852,
        "Y": 493.12517693814783
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "64985def907747329221585392bfc414",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3694.5486975732852,
        "Y": 345.9526769381477
      },
      {
        "Name": "Math.EvaluateFormula",
        "ShowGeometry": true,
        "Id": "a0b487cea1c542c2bec9eb7c8895c252",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4067.1840267382649,
        "Y": -1434.4339232516247
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "28c8dd982f5946db846ef1274e8b7b4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4310.1968409539058,
        "Y": -1396.8998170528155
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5d59a186d2bb4cc1bc3794f6184b6a73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4302.559831904975,
        "Y": -1564.4459415253548
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5f59335ac2ab4ce9907f0b43beb2e17b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4301.2845406460774,
        "Y": -1256.6642125256656
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "647ec6c2b0be4330954a46b4dfed8fdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3493.876919399283,
        "Y": -1763.8646957959459
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "9180e2e72a3c4871ad3dcc4c90e647ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3360.83706024558,
        "Y": 533.526559928548
      },
      {
        "Name": "Family List 데이터 파싱_Category 시트",
        "ShowGeometry": true,
        "Id": "1cf6a1afd7ce4854a4230a961836579d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1073.2804859166522,
        "Y": 51.799198229031447
      },
      {
        "Name": "Family List 데이터 파싱_물량Param 시트",
        "ShowGeometry": true,
        "Id": "ffe3ce92ec6b41c28dea986fb27302b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1538.1840296205664,
        "Y": 600.05731001256743
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c2e2ffc4ce8c4995823302e2e6edbf6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 773.75382186345882,
        "Y": -1822.1074773245823
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6cc32639f4334079a3ed3015057ed0c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 749.92378866971762,
        "Y": -1668.7160257168089
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "abba167faddc4ae4b7190a20329bc999",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2712.5937214550222,
        "Y": 1209.5253463447273
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "e9de4d33a0f8498aa88925d7de0302be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2417.5937214550222,
        "Y": 1288.5253463447273
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e01aca3b31524ecdb2fea0bcd4e569fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2712.5937214550222,
        "Y": 1387.3872213447273
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "14224d161ba74300b783d019932dc09b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1971.5937214550222,
        "Y": 1276.939096344727
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "85e664ba9cb643c5b3b2014270272b36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1084.0641929685726,
        "Y": 2367.0715285735541
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "28717ffdd04a4f7981357ebce2431665",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1161.5937214550222,
        "Y": 1334.1115963447266
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "47c8c52edfba464cbc6491f9f5abc7cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1525.5937214550222,
        "Y": 1424.939096344727
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": true,
        "Id": "32053cf3bae641e2abda33f7464839b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -840.59372145502221,
        "Y": 1334.1115963447266
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "daee18045b714579b8b4547f68499e80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1525.5937214550222,
        "Y": 1276.939096344727
      },
      {
        "Name": "lang_mode(영/한) select",
        "ShowGeometry": true,
        "Id": "0d04816ca9f34db6a891541712eb1f5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1895.1840296205664,
        "Y": 668.05731001256743
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ab9b7226a471462bbe05f1ffb8d082d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 396.28383401574422,
        "Y": -1671.0143400591096
      },
      {
        "Name": "Parameter.CreateProjectParameterForAllCategories",
        "ShowGeometry": true,
        "Id": "041bb51a23734fcfbea1af777dfab763",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": -1141.5396162187837,
        "Y": 4677.817819139691
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "cec2f8eaacdf482dbee4a3fba8340394",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1569.2239656531021,
        "Y": 4545.0022067943155
      },
      {
        "Name": "Spec Types",
        "ShowGeometry": true,
        "Id": "342eb3169fcc422988afb081f0128848",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1894.5851039275908,
        "Y": 4547.3623966353734
      },
      {
        "Name": "Group Types",
        "ShowGeometry": true,
        "Id": "97eecaa0667140b2b217c07528ffcc32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1895.7070343317937,
        "Y": 4677.5063235229445
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "9fac8931a6e44ba394f6b5087edcfafe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -222.09420639074597,
        "Y": 2541.5320243568681
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "995ccef9f1cd4b49aecc810576ba715f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -720.73976143693881,
        "Y": 2507.7719408563016
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "fdb901f20d644088a89f03651e881266",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2162.0641929685726,
        "Y": 2405.0715285735541
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "014417a7a6a74588a86afc4c30d8ea08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2142.38538883876,
        "Y": 2876.1132101077642
      },
      {
        "Name": "setParamElementTypes",
        "ShowGeometry": true,
        "Id": "ee95e619ed6b4a4092d10917064aaf58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 2519.064192968573,
        "Y": 2443.0715285735541
      },
      {
        "Name": "Get_WMCodesAndBriefSpec",
        "ShowGeometry": true,
        "Id": "ad5dc112707a4841a2b44b8eb9c1ca62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1780.0641929685726,
        "Y": 2405.0715285735541
      },
      {
        "Name": "Dictionary.ByKeysValues",
        "ShowGeometry": true,
        "Id": "4eee53a8546c4694abfafd1926920870",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1422.0641929685726,
        "Y": 2333.0715285735541
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "9e1934a59db94d298059a9bc8b9a66b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1422.0641929685726,
        "Y": 2510.899028573554
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5942773aeb824c84bde85b7a139bac6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 235.06419296857257,
        "Y": 2312.5540285735542
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "590996bec97544a8a3c5eaecbf1bbd45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 638.06419296857257,
        "Y": 2401.0715285735541
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ea47f768c4464f6ca17b7b47bc073108",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 235.06419296857257,
        "Y": 2490.5540285735542
      },
      {
        "Name": "물량Param시트 약자-매개변수 정리",
        "ShowGeometry": true,
        "Id": "1bd5112c1ae04bcfb1e2fd87f4860ba7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1072.1840296205664,
        "Y": 600.05731001256743
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "39f3fec13bdd481ca0f2851304a2cd56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -564.59372145502221,
        "Y": 1254.8184713447274
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a6e18086ddf04b59ab06a3c68dbbca06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -229.59372145502221,
        "Y": 1288.8184713447274
      },
      {
        "Name": "Family List 데이터 파싱_Category - 물량Param 시트 결합",
        "ShowGeometry": true,
        "Id": "f99474b49e3e486e8933b2ac5d7484fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -560.18402962056643,
        "Y": 657.05731001256743
      },
      {
        "Name": "family list데이터 - Revit 부재 데이터 결합 & Sym_Val Dict 값 업데이트(타입,인스턴스 매개변수)",
        "ShowGeometry": true,
        "Id": "3bf30dcbbca84eb08aafa5ed15d4042e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 746.76102821501365,
        "Y": 670.4049710034011
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3e48607c97ad4d69855c68aad2472202",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 26.970557187810527,
        "Y": -1077.1262173149109
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "272e316735dc4172b7a5a61e4d4920d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -682.31858006910443,
        "Y": 942.71190253920872
      },
      {
        "Name": "토공 산출 구간",
        "ShowGeometry": true,
        "Id": "fb1aef36c6274fd48c14e9a3127ec8e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1696.3407004606404,
        "Y": 698.83748550556629
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c8992b8a59fb48d39d99dea4abd73a57",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7088.8952594279926,
        "Y": 3350.3855107094778
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "6ccd409079af40d585d92d8c9551607f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6840.4843378312808,
        "Y": 3214.9502363243987
      },
      {
        "Name": "Element.Parameters",
        "ShowGeometry": true,
        "Id": "cec4b396e4aa4c32afa9e89182843aad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -7048.5243232149969,
        "Y": 3616.3644774808536
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "0545983ab71246a8b6ed9f1c2cdc3345",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6497.8045541575066,
        "Y": 3367.6552469146955
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "61c4875d9c8f4249b99dd6cae9b33193",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6869.339260451372,
        "Y": 3473.5764501015433
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "866466e8080e47d09e7ea27c0340a679",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6496.317469736865,
        "Y": 3669.0471544597635
      },
      {
        "Name": "부재/WM 별 산식에 의한 최종 계산",
        "ShowGeometry": true,
        "Id": "0c4ce42b1eec4eed8035d10e12270fc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2061.9685911428292,
        "Y": 695.20281973868907
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "3a2291d54fa74970b0cacd8a3a8a08b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4419.9595355748179,
        "Y": 414.69372004745367
      },
      {
        "Name": "eval test",
        "ShowGeometry": true,
        "Id": "79472a3a437844418f56c340c05c7e8c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1599.5608596513546,
        "Y": 1156.3203704819057
      },
      {
        "Name": "Family List 데이터 파싱_Category 시트",
        "ShowGeometry": true,
        "Id": "000f06ac5d844412994ef40b4057a11a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1070.500442788622,
        "Y": 751.61159205317881
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "203941df416e457983ebdd89b47c4f2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4327.4168155480911,
        "Y": 2835.5804528331673
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "a814830d4a534b2a924c1e3facf8a431",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4304.9119208979455,
        "Y": 3399.9142439162815
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "bb430ef0c07145289fd9038159b37232",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4327.9734025353846,
        "Y": 3845.24414651371
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "dba9fdd32e7d42c790bb8dbdbfef8bc7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5200.3373359798443,
        "Y": 2802.402384792987
      },
      {
        "Name": "WM별 총합 계산 및 엑셀 익스포트 준비",
        "ShowGeometry": true,
        "Id": "df538152d8514dcaab3d75f0734a582b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2563.2885131975527,
        "Y": 659.9651649661738
      },
      {
        "Name": "Dictionary.Components",
        "ShowGeometry": true,
        "Id": "d9de8a61787442ceb4b5e56fe75e7a1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3047.6931098754553,
        "Y": 659.11191176146292
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "ae19779d3103471bb4993d2624fee3c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3429.016933212381,
        "Y": 910.1398495164517
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0e906b492e964f0388034bb3dba9715c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3119.2991871883464,
        "Y": 1144.8001548212674
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "79390c9ce7774e469399c480c2fd9540",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1559.52786470412,
        "Y": -578.69420446523429
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e4bace56c16d462b8e637e17ad1a1046",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2753.5421829070156,
        "Y": -7.1615438186892106
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "43c850fe5b414baaa43fa6abbf66d41a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3915.8190958740515,
        "Y": 822.08247967855573
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2524f0f864744ce88dfa2ab2d9d3e61d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3552.5858433888152,
        "Y": 512.25341070748846
      }
    ],
    "Annotations": [
      {
        "Id": "f70bf264fa0749c79027f550865f41ad",
        "Title": "All Elements in Revit",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1250bd18102c4ebaac9950d60dac8849",
          "c790cfc4c7d943cdb05ca3a612d673c4",
          "d78f3dfc768541ab8490b53194e174c5",
          "94dc2b3bd4e14a9fa5352e8ad0cbe58b",
          "bf37a72db0e847dba5e3d1c2ed14c8bd"
        ],
        "HasNestedGroups": false,
        "Left": -4341.6622658273791,
        "Top": 1284.3273537118573,
        "Width": 1217.9999999999991,
        "Height": 396.0,
        "FontSize": 72.0,
        "InitialTop": 1400.3273537118573,
        "InitialHeight": 293.0,
        "TextblockHeight": 106.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "845648042f7a44b3b450cfa23ec8d632",
        "Title": "All Data in Excel",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1eac1f1717ab40c98ea2a8a9b59421d3",
          "caccad700bd84d8e8cb198c7fe1545aa",
          "51b4738620874fe885b1b5ecce1e49b7",
          "76e75c1cd00342eeb418e14c2410b8f4",
          "64985def907747329221585392bfc414",
          "9180e2e72a3c4871ad3dcc4c90e647ef"
        ],
        "HasNestedGroups": false,
        "Left": -4347.5486975732856,
        "Top": 81.125176938147774,
        "Width": 1195.0000000000005,
        "Height": 619.40138299040018,
        "FontSize": 72.0,
        "InitialTop": 197.12517693814777,
        "InitialHeight": 481.40138299040018,
        "TextblockHeight": 106.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "cc900d62e13942f799fbe062ae858fa0",
        "Title": "Math.EvaluateFormula 테스트",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a0b487cea1c542c2bec9eb7c8895c252",
          "28c8dd982f5946db846ef1274e8b7b4c",
          "5d59a186d2bb4cc1bc3794f6184b6a73",
          "5f59335ac2ab4ce9907f0b43beb2e17b"
        ],
        "HasNestedGroups": false,
        "Left": -4320.1968409539058,
        "Top": -1637.4459415253548,
        "Width": 508.0128142156409,
        "Height": 512.78172899968922,
        "FontSize": 36.0,
        "InitialTop": -1564.4459415253548,
        "InitialHeight": 452.78172899968922,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "bfcf5a2480bb4d73bde3d29a19fe5c14",
        "Title": "임시필터링 구간 (패밀리 리스트에 없는 이름 제외)",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "28717ffdd04a4f7981357ebce2431665",
          "47c8c52edfba464cbc6491f9f5abc7cb",
          "32053cf3bae641e2abda33f7464839b9",
          "daee18045b714579b8b4547f68499e80",
          "abba167faddc4ae4b7190a20329bc999",
          "e01aca3b31524ecdb2fea0bcd4e569fe",
          "e9de4d33a0f8498aa88925d7de0302be",
          "14224d161ba74300b783d019932dc09b",
          "39f3fec13bdd481ca0f2851304a2cd56",
          "a6e18086ddf04b59ab06a3c68dbbca06"
        ],
        "HasNestedGroups": false,
        "Left": -2722.5937214550222,
        "Top": 1136.5253463447273,
        "Width": 2721.0,
        "Height": 609.41374999999971,
        "FontSize": 36.0,
        "InitialTop": 1209.5253463447273,
        "InitialHeight": 360.41374999999971,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2e5354d2f5624544a71a43cb85d65d53",
        "Title": "임시 - WM 파라미터 생성",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "041bb51a23734fcfbea1af777dfab763",
          "cec2f8eaacdf482dbee4a3fba8340394",
          "342eb3169fcc422988afb081f0128848",
          "97eecaa0667140b2b217c07528ffcc32"
        ],
        "HasNestedGroups": false,
        "Left": -1905.7070343317937,
        "Top": 4472.0022067943155,
        "Width": 1230.16741811301,
        "Height": 492.0,
        "FontSize": 36.0,
        "InitialTop": 4545.0022067943155,
        "InitialHeight": 277.81561234537548,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "3d2a1efc5b53493ea2da91d1a4544a5c",
        "Title": "Family Type 별 WM 코드 Revit 되먹임",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "85e664ba9cb643c5b3b2014270272b36",
          "fdb901f20d644088a89f03651e881266",
          "014417a7a6a74588a86afc4c30d8ea08",
          "ee95e619ed6b4a4092d10917064aaf58",
          "ad5dc112707a4841a2b44b8eb9c1ca62",
          "4eee53a8546c4694abfafd1926920870",
          "9e1934a59db94d298059a9bc8b9a66b6",
          "5942773aeb824c84bde85b7a139bac6b",
          "590996bec97544a8a3c5eaecbf1bbd45",
          "ea47f768c4464f6ca17b7b47bc073108"
        ],
        "HasNestedGroups": false,
        "Left": 225.06419296857257,
        "Top": 2239.5540285735542,
        "Width": 2553.0000000000005,
        "Height": 941.55918153421,
        "FontSize": 36.0,
        "InitialTop": 2312.5540285735542,
        "InitialHeight": 708.55918153421,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8dfa0080961343409c7525d0befec92b",
        "Title": "Excel data dictionarization",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ffe3ce92ec6b41c28dea986fb27302b8",
          "0d04816ca9f34db6a891541712eb1f5d",
          "1bd5112c1ae04bcfb1e2fd87f4860ba7",
          "f99474b49e3e486e8933b2ac5d7484fa",
          "000f06ac5d844412994ef40b4057a11a"
        ],
        "HasNestedGroups": false,
        "Left": -1905.1840296205664,
        "Top": 498.05731001256743,
        "Width": 1840.0,
        "Height": 415.55428204061138,
        "FontSize": 60.0,
        "InitialTop": 600.05731001256743,
        "InitialHeight": 296.55428204061138,
        "TextblockHeight": 92.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "8f1d678bff834a5596596ecb0022efe6",
        "Title": "디버깅용",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c8992b8a59fb48d39d99dea4abd73a57",
          "6ccd409079af40d585d92d8c9551607f",
          "cec4b396e4aa4c32afa9e89182843aad",
          "0545983ab71246a8b6ed9f1c2cdc3345",
          "61c4875d9c8f4249b99dd6cae9b33193",
          "866466e8080e47d09e7ea27c0340a679"
        ],
        "HasNestedGroups": false,
        "Left": -7098.8952594279926,
        "Top": 3098.9502363243987,
        "Width": 958.57778969112769,
        "Height": 732.09691813536483,
        "FontSize": 72.0,
        "InitialTop": 3214.9502363243987,
        "InitialHeight": 599.09691813536483,
        "TextblockHeight": 106.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "af196d3cfcf640ecacf589428cb12e6a",
        "Title": "<Double click here to edit group title>",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "203941df416e457983ebdd89b47c4f2e",
          "a814830d4a534b2a924c1e3facf8a431",
          "bb430ef0c07145289fd9038159b37232",
          "dba9fdd32e7d42c790bb8dbdbfef8bc7"
        ],
        "HasNestedGroups": false,
        "Left": 4294.9119208979455,
        "Top": 2729.402384792987,
        "Width": 1073.4254150818988,
        "Height": 1259.8417617207228,
        "FontSize": 36.0,
        "InitialTop": 2802.402384792987,
        "InitialHeight": 1187.8417617207228,
        "TextblockHeight": 63.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "0ff82b1632ff4d8cbcded5b0beba520c",
        "Title": "Revit에 있는 Family Type 항목만",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -702.58072510885449,
        "Top": 2412.8932017169345,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7441a8b2f3f14e738ef80ca8786cf6ee",
        "Title": "UG RC Union 준비(UG 부재 전체 형상 유니온 - PIT, Trench는 내부공동 포함하는 Boundary로)\r\nexcavation 개별 형상 리스트\r\n\r\n하나 꺼내서\r\n\r\n 남은 나머지들 합쳐서 디퍼런스로 남기고 (기초별 유효 excavation 형상)\r\n\t\r\n\tUG RC Union이랑 디퍼런스 하면 백필\r\n\tUG RC Union이랑 인터섹트 하면 디스포잘",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1606.2629793047281,
        "Top": 503.02596084891843,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e59d4e8deeea44a0a571183ad690d46a",
        "Title": "Sym Val Dict에서\n산출식에 사용된 것 이외를\n제거하기",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 2186.294043983808,
        "Top": 416.532407347078,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -2486.1157879100424,
    "Y": 141.58645421478087,
    "Zoom": 0.84341321780226242
  }
}