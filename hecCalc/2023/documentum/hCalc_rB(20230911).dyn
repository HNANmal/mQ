{
  "Uuid": "1d6d431a-e8c4-48aa-8b91-a874ff2542a8",
  "IsCustomNode": false,
  "Description": "",
  "Name": "hCalc_rB(20230911)",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "1250bd18102c4ebaac9950d60dac8849",
      "Inputs": [
        {
          "Id": "f2b7450af5914cbf8a28c2a092e6a190",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "912753a782b84f598e120e936fffbd58",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\ndef get_all_BIC():\r\n\r\n    db = [\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Floors,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Roofs,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Walls,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFoundation,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Ceilings,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Doors,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Windows,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Stairs,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Railings,\r\n    ]\r\n    return db\r\n    \r\ndef get_allElems(doc):\r\n    bics = get_all_BIC()\r\n    \r\n    def getElems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        return res\r\n\r\n    def getRailElems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType()\r\n        return res\r\n\r\n    res = map(getElems, bics)\r\n#    res = getRailElems(Autodesk.Revit.DB.BuiltInCategory.OST_RailingSystemRail)\r\n    return res\r\n\r\n\r\nOUT = get_allElems(doc)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "c790cfc4c7d943cdb05ca3a612d673c4",
      "Inputs": [
        {
          "Id": "08594b729317483fab0ab869358cdb3c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4d9d60debe6406cace5eb687f712858",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 441,
      "SelectedString": "OST_StairsRailing",
      "NodeType": "ExtensionNode",
      "Id": "d78f3dfc768541ab8490b53194e174c5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bdc68e6596d64c1bb2ad17af850a8a64",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "94dc2b3bd4e14a9fa5352e8ad0cbe58b",
      "Inputs": [
        {
          "Id": "ae38fed72c0a434eb235268bfba22c03",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07eba95685e249a0a3188444eec253fe",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "bf37a72db0e847dba5e3d1c2ed14c8bd",
      "Inputs": [
        {
          "Id": "efbd6851497a4681a114ca7842d95e6a",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d45870ecc9f4742810ae2af861ad07b",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "266640a8b58449a48603af36addb1282",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "1eac1f1717ab40c98ea2a8a9b59421d3",
      "Inputs": [
        {
          "Id": "c4d740fa206e4ab3b53ba148e9727e8f",
          "Name": "file",
          "Description": "File representing the Excel workbook\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8871f8fef5b841e484fe65aa92aecb9c",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2e3869f91c64b06ab4cff0e2c816de0",
          "Name": "readAsStrings",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da624c3834b64df4a29198439fca082e",
          "Name": "showExcel",
          "Description": "Toggle to show excel's main window\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16f6a93146ee4557a8eec29cac4eb344",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "caccad700bd84d8e8cb198c7fe1545aa",
      "Inputs": [
        {
          "Id": "8d8f529204cd48a5a2210b85d94be686",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb3a2510c5934129baf50771f5bb29a9",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\mk\\mQ\\hecCalc\\2023\\documentum\\플랜트건축팀_BIM_팀 표준 Family List_Rev.0_SQ2_박기범_20230904.xlsx",
      "InputValue": ".\\플랜트건축팀_BIM_팀 표준 Family List_Rev.0_SQ2_박기범_20230904.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "51b4738620874fe885b1b5ecce1e49b7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e3d41cbea388406e9b31fca8184f2a13",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "76e75c1cd00342eeb418e14c2410b8f4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f98969ee45ea4cce8921b553ad57fbc0",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"물량Param\",\n\"1.Floors\",\n\"2.Roofs\",\n\"3.Walls\",\n\"4.St Fdn\",\n\"5.St Col\",\n\"6.St Framing\",\n\"7.Ceilings\",\n\"8.Doors\",\n\"9.Windows\",\n\"10.Stairs\",\n\"11.Railings\"\n//,\"13.Generic\"\n];",
      "Id": "64985def907747329221585392bfc414",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "388e2eaea3fc4ff5a852380f21ea4b1b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.EvaluateFormula@string,string[],var[]",
      "Id": "a0b487cea1c542c2bec9eb7c8895c252",
      "Inputs": [
        {
          "Id": "b6b100a2ab9642b79ac818735c8a86bf",
          "Name": "formulaString",
          "Description": "NCalc formula\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a7344f7947340dfbda9f66443a4b459",
          "Name": "parameters",
          "Description": "Variable names\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9051dcf4d56d4c0aba07fd03ae97f4d0",
          "Name": "arguments",
          "Description": "Variable bindings\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3848e7bed3f48dbbc0632cdc7aee37a",
          "Name": "result",
          "Description": "type: var[]..[] (result of the formula calculation)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Evaluates an NCalc formula with given parameter mappings.\n\nMath.EvaluateFormula (formulaString: string, parameters: string[], arguments: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"a\",\"v\"];",
      "Id": "28c8dd982f5946db846ef1274e8b7b4c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f7931e3f26c347e5ada98b5a0ca372b3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"  a * v\";",
      "Id": "5d59a186d2bb4cc1bc3794f6184b6a73",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a6c10470fa9644d9a4ab809356dbe40e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[15,63];",
      "Id": "5f59335ac2ab4ce9907f0b43beb2e17b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9736b33bef054564bf7b5817c23ae020",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// 부재별로 최종 정리될 서브 리스트 구성 :\n\n// 패밀리 Type 코드\n\n// WM 코드들\n\n// 수식\n\n// 수식 참여 문자\n\n// 수식 참여 문자의 값 (엑셀 입력값 + 레빗 인스턴스 속성 값 + 레빗 타입 속성 값)",
      "Id": "647ec6c2b0be4330954a46b4dfed8fdc",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "9180e2e72a3c4871ad3dcc4c90e647ef",
      "Inputs": [
        {
          "Id": "fb681e08f1034208a2da1a59eef69887",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d4c7b51481348b68b28a4a779f5cca8",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c4c0a55d8a14ffd85d7c51b2c5597ce",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\ndef getCharValue(s):\r\n    # 베이스 케이스\r\n    if not s:\r\n        return 0\r\n \r\n    value = 0\r\n    # 입력 문자열을 대문자로 변환한 후 반복\r\n    for ch in s:\r\n        value = value * 26 + (ord(ch) - ord('A') + 1)\r\n    return value\r\n    \r\n#################################Module For Functional Programing#############################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\n\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    #endidxs_tmp= list(map(lambda x: x[0],res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndb = IN[0]\r\nallCatSheetsNames =IN[1]\r\n#col_idx = getCharValue(IN[2])-2\r\n#sep_rule = IN[3]\r\n\r\nparamSheet = db[0]\r\nallCatSheets = db[1:]\r\n\r\n# Place your code below this line\r\n\r\ndef find_headersAtCatSheet(catSheet):\r\n    headers_CatSheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(catSheet[1])))\r\n    \r\n    return dict(headers_CatSheet)\r\n\r\ndef find_rangesAtCatSheet(catSheet, hdrs_withIdx):\r\n    return find_range_by_columnItem(catSheet, hdrs_withIdx[\"Family Type Name\"], \"H_\")\r\n\r\ndef get_DataOnRangesAtCatSheet(catSheet): \r\n    hdrs_withIdx = find_headersAtCatSheet(catSheet)\r\n    title_idx = map(lambda x: x[0], find_rangesAtCatSheet(catSheet, hdrs_withIdx).values())\r\n    calcType_colDatas = list(map(lambda x: x[hdrs_withIdx[\"Q'ty Cal Type Tag\"]], catSheet))\r\n    calcTypes = list(map(lambda x: calcType_colDatas[x], title_idx))\r\n    rgs_v = list(map(lambda x: x[1], find_rangesAtCatSheet(catSheet, hdrs_withIdx).values()))\r\n    rgs_k = list(map(lambda x: x, find_rangesAtCatSheet(catSheet, hdrs_withIdx).keys()))\r\n    \r\n    hdrs_v = list(hdrs_withIdx.values())\r\n    hdrs_k = list(hdrs_withIdx.keys())\r\n    #tagDatas = list(zip(rgs_k,calcTypes))\r\n    \r\n    datas_allFamType = list(map(lambda x: list(zip(catSheet[x[0]-1:x[1]], range(x[0]-1,x[1]))), rgs_v))\r\n    #datas_allFamType = list(zip(tagDatas, datas_allFamType_))\r\n    \r\n    def setDict_OnEachFamType(data_famType):  ## 최종적으로 산출식 없는 것 걸러내기 추가해야 함\r\n        titleData = list(data_famType).pop(0)[0]\r\n        \r\n        famTypeName = titleData[hdrs_withIdx[\"Family Type Name\"]]\r\n        calcTypeName = titleData[hdrs_withIdx[\"Q'ty Cal Type Tag\"]]\r\n        data_famType_noneless = list(filter(lambda x: x[0][5] != None, data_famType))\r\n        ## WM row 별 header명 과 짝짓기\r\n        data_withHdrsIdx = list(map(lambda y: [list(map(lambda x: y[0][x], hdrs_v)), y[1]], data_famType_noneless))\r\n        hdrs_k.append(\"rIDX\")\r\n        dict_ = list(map(lambda x: dict(zip(hdrs_k, x[0]+[x[1]])), data_withHdrsIdx))\r\n        dicts_noneless = list(map(lambda y: dict(filter(lambda x: x[1]!=None, y.items())),dict_))\r\n        ## dict_gauge, 물량산출식 없는 항목 처리\r\n        dicts_final = []\r\n        needDefault_ColName = \"Guage Code\"\r\n        noneRemove_ColName = \"Dynamo 물량산출식\"\r\n        for d in dicts_noneless:\r\n            d[\"Family Type Name\"] = famTypeName\r\n            \r\n            if calcTypeName == None:\r\n                pass            \r\n            elif noneRemove_ColName in d.keys():\r\n                d[\"Q'ty Cal Type Tag\"] = calcTypeName\r\n                d[needDefault_ColName] = \"\"\r\n                dicts_final.append(d)\r\n\r\n        \r\n        return dicts_final\r\n        \r\n    dicts_allFamType = list(map(lambda x: setDict_OnEachFamType(list(x)), datas_allFamType))\r\n    ds_famTypesAtCatSheet = dict(zip(rgs_k, dicts_allFamType))\r\n    ds_famTypesAtCatSheet_effCalcType = dict(filter(lambda x: all(list(map(lambda i: \"Q'ty Cal Type Tag\" in i, x[1]))), list(ds_famTypesAtCatSheet.items())))\r\n    ds_famTypesAtCatSheet_noneless = dict(filter(lambda x: len(list(x[1]))!=0, list(ds_famTypesAtCatSheet_effCalcType.items())))\r\n    \r\n    return  ds_famTypesAtCatSheet_noneless\r\n\r\n## AllInOne 딕셔너리에 정리\r\ndataOnRanges_allCat = list(map(get_DataOnRangesAtCatSheet, allCatSheets))\r\ndicts_AllInOne = {}\r\nfor d in dataOnRanges_allCat:\r\n    dict_k_v = d.items()\r\n    for k,v in dict_k_v:\r\n        dicts_AllInOne[k] = v\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dicts_AllInOne\r\n#OUT = get_DataOnRangesAtCatSheet(allCatSheets[0])",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1cf6a1afd7ce4854a4230a961836579d",
      "Inputs": [
        {
          "Id": "d8f51f5cd01d4567b1a00710d64a2961",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a09c7a56958d41b98e3d148266263dd9",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b329bcb0cf844739a7e6e5f1a5a9e59",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\ndef getCharValue(s):\r\n    # 베이스 케이스\r\n    if not s:\r\n        return 0\r\n \r\n    value = 0\r\n    # 입력 문자열을 대문자로 변환한 후 반복\r\n    for ch in s:\r\n        value = value * 26 + (ord(ch) - ord('A') + 1)\r\n    return value\r\n    \r\n#################################Module For Functional Programing#############################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\n\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    #endidxs_tmp= list(map(lambda x: x[0],res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndb = IN[0]\r\nallCatSheetsNames =IN[1]\r\nlang_mode = IN[2]\r\n\r\nparamSheet = db[0]\r\nallCatSheets = db[1:]\r\n\r\n# Place your code below this line\r\n\r\ndef find_headersAtCatSheet(catSheet):\r\n    headers_CatSheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(catSheet[1])))\r\n    \r\n    return dict(headers_CatSheet)\r\n\r\ndef find_rangesAtCatSheet(catSheet, hdrs_withIdx):\r\n    return find_range_by_columnItem(catSheet, hdrs_withIdx[\"Q'ty Cal Type Tag\"], \"-\")\r\n\r\ndef get_DataOnRangesAtCatSheet(Sheet):\r\n    \r\n    hdrs_withIdx = find_headersAtCatSheet(Sheet)\r\n    title_idx = map(lambda x: x[0], find_rangesAtCatSheet(Sheet, hdrs_withIdx).values())\r\n    calcType_colDatas = list(map(lambda x: x[hdrs_withIdx[\"Q'ty Cal Type Tag\"]], Sheet))\r\n    calcTypes = list(map(lambda x: calcType_colDatas[x], title_idx))\r\n    rgs_v = list(map(lambda x: x[1], find_rangesAtCatSheet(Sheet, hdrs_withIdx).values()))\r\n    rgs_k = list(map(lambda x: x, find_rangesAtCatSheet(Sheet, hdrs_withIdx).keys()))\r\n    \r\n    hdrs_v = list(hdrs_withIdx.values())\r\n    hdrs_k = list(hdrs_withIdx.keys())\r\n    eff_hdrs_v = hdrs_v[2:]\r\n    eff_hdrs_k = hdrs_k[2:]\r\n    \r\n    datas_allCalType = list(map(lambda x: Sheet[x[0]-1:x[1]], rgs_v))\r\n    \r\n    def setDict_OnEachCalType(data_calType):\r\n        paramName_lang = \"패밀리 매개변수(from Revit) 영문판\" if lang_mode is True else \"패밀리 매개변수(from Revit) 한글판\"\r\n        calcTypeName = data_calType[0][2]\r\n        data_calType_noneless = list(filter(lambda x: x[hdrs_withIdx[\"항목\"]] != None, data_calType))\r\n#        ## WM row 별 header명 과 짝짓기\r\n        data_withHdrsIdx = list(map(lambda y: list(map(lambda x: y[x], eff_hdrs_v)), data_calType_noneless))\r\n        dict_ = list(map(lambda x: dict(zip(eff_hdrs_k, x)), data_withHdrsIdx))\r\n        dicts_noneless = list(map(lambda y: dict(filter(lambda x: x[1]!=None, y.items())),dict_))\r\n#        ## dict_Cal Type 입력처리\r\n        targetColName = \"Q'ty Cal Type Tag\"\r\n        dicts_finalNoneless = []\r\n        for d in dicts_noneless:\r\n            d[\"Q'ty Cal Type Tag\"] = calcTypeName\r\n            \r\n            if \"입력값\" in d.keys():\r\n                d[\"applyForCalc\"] = d[\"입력값\"]\r\n                dicts_finalNoneless.append(d)\r\n            elif paramName_lang in d.keys():\r\n                d[\"applyForCalc\"] = d[paramName_lang]\r\n                dicts_finalNoneless.append(d)\r\n            else:\r\n                pass\r\n        \r\n        return {calcTypeName: dicts_finalNoneless}\r\n        \r\n    return map(setDict_OnEachCalType, datas_allCalType)\r\neach_dict = get_DataOnRangesAtCatSheet(paramSheet)\r\ndicts_AllInOne = {}\r\nfor d in each_dict:\r\n    dict_k_v = d.items()\r\n    for k,v in dict_k_v:\r\n        dicts_AllInOne[k] = v\r\n# Assign your output to the OUT variable.\r\n\r\n\r\nOUT = dicts_AllInOne",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ffe3ce92ec6b41c28dea986fb27302b8",
      "Inputs": [
        {
          "Id": "cbcac752c4ef4adbbf500face4dae780",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8fc2fd075a8f43b5aa80a7c22114b549",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da273f14c52b42558ec17b22c360f024",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10927b3559a04512b2a50eede4045749",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "//모델링 부재랑 만났을때,\n//\"applyForCalc값이 숫자인 경우는 바로 적용\n//숫자가 아닌 경우는 파라미터 값 소환,",
      "Id": "c2e2ffc4ce8c4995823302e2e6edbf6b",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// >>> 레빗 부재 별로 패밀리 타입 엑셀 시트 짝지을때,\n// applyForCalc값 중 매개 변수 에 해당 하는 값을 업데이트 하여 딕셔너리 갱신",
      "Id": "6cc32639f4334079a3ed3015057ed0c0",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "abba167faddc4ae4b7190a20329bc999",
      "Inputs": [
        {
          "Id": "193ab32ba4444bc38b409c75675a617e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "795cd6ab58a64eaaaba58c407d9a0662",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "10b9d576b3ad4395925a377ca5a961a0",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "e9de4d33a0f8498aa88925d7de0302be",
      "Inputs": [
        {
          "Id": "7ce72f3e519f465d8ada827987db1860",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22c24cbbe6044bd095c409ff0a1f5059",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "598e3e26be64404d83d0ce9582db84f0",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Type\";\n\"Type Name\";",
      "Id": "e01aca3b31524ecdb2fea0bcd4e569fe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b9f142a179cd4d2fa012c3227e0b972f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d1f1b294d2164b04897730bd729ae51a",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "14224d161ba74300b783d019932dc09b",
      "Inputs": [
        {
          "Id": "2a554f9ba2fe450dac0706c6f1d2b201",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6690df8a5a814090a9e8af85ce1f8eb5",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0606daabd3f1417c8fb2699772a58b29",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "85e664ba9cb643c5b3b2014270272b36",
      "Inputs": [
        {
          "Id": "9ba11babb5ef4e12a0e246df296ff645",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5775c1a7f8c45d6911594db84ada28f",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6db5b3198a84514b931f6728da04348",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "28717ffdd04a4f7981357ebce2431665",
      "Inputs": [
        {
          "Id": "38ac5ca068574d219b39e5a07bd309a1",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c37a885e3b874ab5a14dc5b9a9483283",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fffa2e24a3a4dcfaeebd33a89ae6b15",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "896e8dab2bff430e946bcbf6da09b9f7",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"H_SFRH_2400x3000x200\",\n\"H_SFRH_2400x5600x200\",\n\"FTS\",\n\"360x\",\n\"SS101\",\n\"C150x\",\n\"구조 기초\"\n];\ntrue;",
      "Id": "47c8c52edfba464cbc6491f9f5abc7cb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9c3a59dbd4eb49b6ac9ac530044d16cf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ca7006a34034911bd38ecbda6e98afe",
          "Name": "",
          "Description": "Value of expression at line 10",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "32053cf3bae641e2abda33f7464839b9",
      "Inputs": [
        {
          "Id": "c9d0e9ffdc354867b1f275c5d88e7c77",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8dadf4a47264c5f86f3a1f9af105d0e",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "daee18045b714579b8b4547f68499e80",
      "Inputs": [
        {
          "Id": "c01bba0e2e294fd69177c11254b77f35",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "523a6b05a06c490eb7cfa31796723e4f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "0d04816ca9f34db6a891541712eb1f5d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25b11d15e6834c96a298b45cb1bf32a7",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "// 최종적으로는\n\n// 부재(FamilyType) 별 WM 항목 마다\n// 1. 물량산출식\n// 2. 산출식 참여 약자 목록 []\n// 3. 약자별 대입 값 목록 []\n\n\n// 이렇게 정리가 되어있어야 한다.",
      "Id": "ab9b7226a471462bbe05f1ffb8d082d3",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.CreateProjectParameterForAllCategories@string,string,Revit.Elements.SpecType,Revit.Elements.GroupType,bool",
      "Id": "041bb51a23734fcfbea1af777dfab763",
      "Inputs": [
        {
          "Id": "9cfd2d9ca5de4474aac059e0d7724083",
          "Name": "parameterName",
          "Description": "Name\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ecfa82e90bc44e08ad8d9044f8cd774a",
          "Name": "groupName",
          "Description": "Group of the parameter for shared parameters\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18eb26d8706045b49fc42fdc08c472c0",
          "Name": "specType",
          "Description": "The type of new parameter.\n\nSpecType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "200e728b72fd45ee99e683ae719e1330",
          "Name": "groupType",
          "Description": "The type of the group to which the parameter belongs.\n\nGroupType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9308cbfdc8414aaf86982a0cef734b5f",
          "Name": "instance",
          "Description": "True if it's an instance parameter, otherwise it's a type parameter\n\nbool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b15f4ff9b5c545b78b8f98cda6784322",
          "Name": "void",
          "Description": "void",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a new Project Parameter in this current Revit document for all applicable categories\n\nParameter.CreateProjectParameterForAllCategories (parameterName: string, groupName: string, specType: SpecType, groupType: GroupType, instance: bool): void"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"H_Q'ty Cal Type Tag\",\n\"H_WM Code_1\",\n\"H_WM Code_2\",\n\"H_WM Code_3\",\n\"H_WM Code_4\",\n\"H_WM Code_5\",\n\"H_WM Code_6\",\n\"H_WM Code_7\",\n\"H_WM Code_8\",\n\"H_WM Code_9\"\n];\n\"H_WM Code\";\nspecT;\ngroupT;\nfalse;\n//타입;\ntrue;\n//인스턴스;",
      "Id": "cec2f8eaacdf482dbee4a3fba8340394",
      "Inputs": [
        {
          "Id": "de6ea5f0e79a488889bcf832bae235ed",
          "Name": "specT",
          "Description": "specT",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad87b46466e44fc5b272462dd3d0e728",
          "Name": "groupT",
          "Description": "groupT",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "465ce5d4ba544858bc507452a871eff2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7cde65c6861a47c2b12b06a5079baf34",
          "Name": "",
          "Description": "Value of expression at line 13",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed538c7016c241b094ec0476eae7f05f",
          "Name": "",
          "Description": "Value of expression at line 14",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64b5246139c648a78421a8065fce7db2",
          "Name": "",
          "Description": "Value of expression at line 15",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e55759f4d15841d0be007e9426de2cf4",
          "Name": "",
          "Description": "Value of expression at line 16",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "485c16e6abad441a89d0ea76f38c97a7",
          "Name": "",
          "Description": "Value of expression at line 18",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.SpecTypes, DSRevitNodesUI",
      "SelectedIndex": 140,
      "SelectedString": "autodesk.spec:spec.string",
      "NodeType": "ExtensionNode",
      "Id": "342eb3169fcc422988afb081f0128848",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c6d559922a0b4bc097bae2593ef4c4b1",
          "Name": "SpecType",
          "Description": "The selected SpecType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Spec type."
    },
    {
      "ConcreteType": "DSRevitNodesUI.GroupTypes, DSRevitNodesUI",
      "SelectedIndex": 63,
      "SelectedString": "autodesk.parameter.group:materials",
      "NodeType": "ExtensionNode",
      "Id": "97eecaa0667140b2b217c07528ffcc32",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1ab94fe25293453f8985cc132859d148",
          "Name": "GroupType",
          "Description": "The selected GroupType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Group Type."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "9fac8931a6e44ba394f6b5087edcfafe",
      "Inputs": [
        {
          "Id": "16ae095d8bb742a1842007898fa8da08",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5cb5f12a9a34c0580335168f950d6a0",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "995ccef9f1cd4b49aecc810576ba715f",
      "Inputs": [
        {
          "Id": "2ffc7badc3964fe4b1668daa8972e17a",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a92beaaaf9e4ccf9cbcace53639c1b5",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d2a0590f2cb4f7e9a74cf1403826133",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb52218899294b78b858cdf419efe4a3",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "fdb901f20d644088a89f03651e881266",
      "Inputs": [
        {
          "Id": "60298be91cbc40aaa4d4c2caf7553ef4",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2eeeec0b990e460c904c7443bf123471",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "704a0615649a4b69a7598e7bf9bbdf71",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"H_Q'ty Cal Type Tag\",\n\"H_WM Code_1\",\n\"H_WM Code_2\",\n\"H_WM Code_3\",\n\"H_WM Code_4\",\n\"H_WM Code_5\",\n\"H_WM Code_6\",\n\"H_WM Code_7\",\n\"H_WM Code_8\",\n\"H_WM Code_9\"\n];",
      "Id": "014417a7a6a74588a86afc4c30d8ea08",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "274cec9b4a024aa09ef1e8b8998f3ade",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nfrom Revit.Elements import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemTypes = IN[0]\r\nWMs_perFamTyp = IN[1]\r\nparam_ListForWM = IN[2]\r\n\r\ninput_sets = list(zip(elemTypes, WMs_perFamTyp))\r\n\r\n# Place your code below this line\r\n\r\ndef setParamAnElem(elem, paramNames, paramVals):\r\n    effName_List = paramNames[:len(paramVals)]\r\n    effVals_List = paramVals\r\n    setForParam = list(zip(effName_List, effVals_List))\r\n    res = list(map(lambda x: elem.SetParameterByName(x[0],x[1]), setForParam))\r\n    \r\n    return res\r\n\r\n\r\nfinal = map(lambda x: setParamAnElem(x[0],param_ListForWM,x[1]), input_sets)\r\n\r\n\r\n#res = elemT.GetParameterValueByName(\"Default Thickness\")\r\n# Assign your output to the OUT variable.\r\n#OUT = input_sets\r\nOUT = final",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ee95e619ed6b4a4092d10917064aaf58",
      "Inputs": [
        {
          "Id": "13eef7c2e1884f17bd9a94f727ce0d5e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7eecaa87218489daa29e5f629d3e5f4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c24b6a46f074029ae30973e803423cf",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a4290472fea4213a024469dd6acf27e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndict_aio = IN[0]\r\nkeys_findTarget = IN[1][1:]\r\ncalType_header = IN[1][0]\r\n# Place your code below this line\r\nfamTypes = list(dict_aio.items())\r\nres_dict = {}\r\n\r\n\r\ndef find_WMspecsPerFamType(k_v):\r\n    k = k_v[0]\r\n    wms = k_v[1]\r\n    res = list(map(lambda y: map(lambda x: x[y], wms),keys_findTarget))\r\n    tr_res = list(zip(*res))\r\n    tr_res_zeroless = list(map(lambda y: filter(lambda x: x!=0, y), tr_res))\r\n    joined_strs = list(map(lambda x: ' | '.join(x),tr_res_zeroless))\r\n    return k,joined_strs\r\n\r\nWMspecs = list(map(find_WMspecsPerFamType, famTypes))\r\n\r\nfor k,v in WMspecs:\r\n    res_dict[k] = [dict_aio[k][0][calType_header]] + v\r\n\r\n#res = map(lambda x: dict_aio[x], keys_findTarget)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res_dict#find_WMspecsPerFamType(famTypes[1])",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ad5dc112707a4841a2b44b8eb9c1ca62",
      "Inputs": [
        {
          "Id": "03197cc52c5a41498621cc5cbbdcdda2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1acb0f3536104379b228c0f654ce7eff",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3d8ae3ce29c4ada9cd978071a690e99",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "4eee53a8546c4694abfafd1926920870",
      "Inputs": [
        {
          "Id": "9dd564bcf04b4432a305390a99f356d7",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "affa8e9069d34d359fdc5519189993e3",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b78d9bdee064ca8aa719add76dab153",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"Q'ty Cal Type Tag\",\n\"Work Master Code\",\n\"Work Category-L3\",\n\"Spec. 1- L4\",\n\"Spec. 2- L5\",\n\"Spec. 3- L6\",\n\"Spec. 4- L7\",\n\"Spec. 5- L8\",\n\"Spec. 6- L9\",\n\"Spec. 7- L10\",\n\"Spec. 8- L11\",\n\"BOQ Spec1\",\n\"BOQ Spec2\",\n\"BOQ Spec3\",\n\"BOQ Spec4\",\n\"BOQ Spec5\",\n\"BOQ Spec6\",\n\"BOQ Spec7\",\n\"BOQ Spec8\",\n\"BOQ Spec9\"\n];",
      "Id": "9e1934a59db94d298059a9bc8b9a66b6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "62fa15a1c68a460abbbe7017e304f877",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "catSheetDatas;\nUniqElemTypes;",
      "Id": "5942773aeb824c84bde85b7a139bac6b",
      "Inputs": [
        {
          "Id": "ea05f71ece874273a5dddc9b8dc68ebd",
          "Name": "catSheetDatas",
          "Description": "catSheetDatas",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "27292fd82f2243dcad2c8d84d16eff33",
          "Name": "UniqElemTypes",
          "Description": "UniqElemTypes",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0ea9ac3155141a280d75b19e91ded86",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58b5cb21b6014b7890c942933d561ba5",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "590996bec97544a8a3c5eaecbf1bbd45",
      "Inputs": [
        {
          "Id": "791810c9f38243529a3142e7e7fd2d41",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ab530efab9c434581925fdde0bb806e",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8402fd2e2cf40e18826f7fb710d7abe",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Type\";\n\"Type Name\";",
      "Id": "ea47f768c4464f6ca17b7b47bc073108",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d8d0e52393124d4d910d9a4b14526b9d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9fd9a6f797b046f1848e089b1a2d45fc",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nfrom Revit.Elements import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nparamSheetDic = IN[0]\r\ncatSheetDic = IN[1]\r\n\r\n# Place your code below this line\r\n\r\nres = {}\r\nfor famType,diclist in catSheetDic.items():\r\n    for d in diclist:\r\n        calcType = d[\"Q'ty Cal Type Tag\"]\r\n        d[\"Sym_Val Dict\"] = paramSheetDic[calcType]\r\n    \r\n    res[famType] = diclist\r\n\r\n#res2 = map(lambda x: x[1], catSheetDic.items())\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "a7284d01866648aa82fdad7506b69446",
      "Inputs": [
        {
          "Id": "bc7147cb34634d548d503faf1cbafa06",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e637bbc3b7e4ff38a64c68763d4815a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1fcf008d2254d5fbd43f29f333a0d61",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nfrom Revit.Elements import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nparamSheetDic = IN[0]\r\n# Place your code below this line\r\n\r\ndef findDictPerCalType(dicList):\r\n    dic = {}\r\n    for i in dicList:\r\n        dic[i[\"산출수식 약자\"]] = i[\"applyForCalc\"]\r\n    \r\n    return dic\r\n\r\nks_forDic = list(paramSheetDic.keys())\r\nvs_forDic = list(map(findDictPerCalType, paramSheetDic.values()))\r\n\r\nres = dict(zip(ks_forDic, vs_forDic))\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "1bd5112c1ae04bcfb1e2fd87f4860ba7",
      "Inputs": [
        {
          "Id": "55f29dd9f2c2400aad315d92c033b933",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5cf52c8def9d401db5e11d43ab6fe5cd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "39f3fec13bdd481ca0f2851304a2cd56",
      "Inputs": [
        {
          "Id": "33fe3d93d4ef4ed18fb97ca157f4554b",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9b219264bcb7499e8351221fad77c3fc",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28f37057ec694f93a6f284da04997a53",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c919d1b1818407588b8ae873dac0523",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "filtered;",
      "Id": "a6e18086ddf04b59ab06a3c68dbbca06",
      "Inputs": [
        {
          "Id": "bba74652bf314fe390e17b56f7f38928",
          "Name": "filtered",
          "Description": "filtered",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88821342d4504fcfbd2610710d44b8ec",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nfrom Revit.Elements import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nfamlist_dic = IN[0]\r\nrevitElems = IN[1]\r\n\r\n#allNames = list(map(lambda x: x.GetParameterValueByName(\"Type\").GetParameterValueByName(\"Type Name\"), revitElems))\r\n# Place your code below this line\r\nres = []\r\nfor i in revitElems:\r\n    tmp = {}\r\n    famTypeName = i.GetParameterValueByName(\"Type\").GetParameterValueByName(\"Type Name\")\r\n    tmp[\"Elem\"] = i\r\n    tmp[\"wms\"] = famlist_dic[famTypeName]\r\n    \r\n    res.append(tmp)\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "133158fdcead4a29bea8da975ca27c31",
      "Inputs": [
        {
          "Id": "354680cfa5b84d5a9c601680a956931a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04c0892ee4944c1394d2ad1a450eb878",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bad3f087e62f4247bd337b6e8c27d1b8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nfrom Revit.Elements import *\r\n\r\nclr.AddReference(\"DSCoreNodes\")\r\nimport DSCore\r\nfrom DSCore import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDicts = IN[0]\r\n# Place your code below this line\r\nres = []\r\nfor d in elemDicts:\r\n    elem = d[\"Elem\"]\r\n    wms = d[\"wms\"]\r\n    \r\n    for wm in wms:\r\n        sym_valDict = wm[\"Sym_Val Dict\"]\r\n        sv_keys = sym_valDict.Keys\r\n        sv_vals = sym_valDict.Values\r\n        sv_items = list(zip(sv_keys, sv_vals))\r\n        \r\n        for x in sv_items:\r\n            [k,v] = x\r\n            if isinstance(v, str):\r\n                if v == \"Level\":\r\n                    sym_valDict[k] = elem.GetParameterValueByName(\"Elevation at Bottom\")\r\n                elif elem.GetParameterValueByName(v):\r\n                    sym_valDict[k] = elem.GetParameterValueByName(v)\r\n                elif elem.GetParameterValueByName(\"Type\").GetParameterValueByName(v):\r\n                    sym_valDict[k] = elem.GetParameterValueByName(\"Type\").GetParameterValueByName(v)\r\n                else:\r\n                    pass\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = elemDicts[0][\"Sym_Val Dict\"]\r\nOUT = elemDicts",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "671505ce45224e55aafcdb80f62eea87",
      "Inputs": [
        {
          "Id": "270dec1e9d6e466e884b694ac816e834",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a53e92b2254401cafbdd5fbab70525f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "1eaa75ab78d0470ea49e22e82df694c0",
      "Inputs": [
        {
          "Id": "ce82e58746c64cbb8dcc9480509cc410",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b20a20969a24fd0955757ae5d323ce7",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\n\r\ndef getCharValue(s):\r\n    # 베이스 케이스\r\n    if not s:\r\n        return 0\r\n \r\n    value = 0\r\n    # 입력 문자열을 대문자로 변환한 후 반복\r\n    for ch in s:\r\n        value = value * 26 + (ord(ch) - ord('A') + 1)\r\n    return value\r\n    \r\n#################################Module For Functional Programing#############################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\n\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    #endidxs_tmp= list(map(lambda x: x[0],res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndb = IN[0]\r\nallCatSheetsNames =IN[1]\r\n#col_idx = getCharValue(IN[2])-2\r\n#sep_rule = IN[3]\r\n\r\nparamSheet = db[0]\r\nallCatSheets = db[1:]\r\n\r\n# Place your code below this line\r\n\r\ndef find_headersAtCatSheet(catSheet):\r\n    headers_CatSheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(catSheet[1])))\r\n    \r\n    return dict(headers_CatSheet)\r\n\r\ndef find_rangesAtCatSheet(catSheet, hdrs_withIdx):\r\n    return find_range_by_columnItem(catSheet, hdrs_withIdx[\"Family Type Name\"], \"H_\")\r\n\r\ndef get_DataOnRangesAtCatSheet(catSheet): \r\n    hdrs_withIdx = find_headersAtCatSheet(catSheet)\r\n    title_idx = map(lambda x: x[0], find_rangesAtCatSheet(catSheet, hdrs_withIdx).values())\r\n    calcType_colDatas = list(map(lambda x: x[hdrs_withIdx[\"Q'ty Cal Type Tag\"]], catSheet))\r\n    calcTypes = list(map(lambda x: calcType_colDatas[x], title_idx))\r\n    rgs_v = list(map(lambda x: x[1], find_rangesAtCatSheet(catSheet, hdrs_withIdx).values()))\r\n    rgs_k = list(map(lambda x: x, find_rangesAtCatSheet(catSheet, hdrs_withIdx).keys()))\r\n    \r\n    hdrs_v = list(hdrs_withIdx.values())\r\n    hdrs_k = list(hdrs_withIdx.keys())\r\n    #tagDatas = list(zip(rgs_k,calcTypes))\r\n    \r\n    datas_allFamType = list(map(lambda x: catSheet[x[0]-1:x[1]], rgs_v))\r\n    #datas_allFamType = list(zip(tagDatas, datas_allFamType_))\r\n    \r\n    def setDict_OnEachFamType(data_famType):  ## 최종적으로 산출식 없는 것 걸러내기 추가해야 함\r\n        titleData = data_famType.pop(0)\r\n        \r\n        famTypeName = titleData[hdrs_withIdx[\"Family Type Name\"]]\r\n        calcTypeName = titleData[hdrs_withIdx[\"Q'ty Cal Type Tag\"]]\r\n        data_famType_noneless = list(filter(lambda x: x[5] != None, data_famType))\r\n        ## WM row 별 header명 과 짝짓기\r\n        data_withHdrsIdx = list(map(lambda y: list(map(lambda x: y[x], hdrs_v)), data_famType_noneless))\r\n        dict_ = list(map(lambda x: dict(zip(hdrs_k, x)), data_withHdrsIdx))\r\n        dicts_noneless = list(map(lambda y: dict(filter(lambda x: x[1]!=None, y.items())),dict_))\r\n        ## dict_gauge, 물량산출식 없는 항목 처리\r\n        dicts_final = []\r\n        needDefault_ColName = \"Guage Code\"\r\n        noneRemove_ColName = \"Dynamo 물량산출식\"\r\n        for d in dicts_noneless:\r\n            d[\"Family Type Name\"] = famTypeName\r\n            if calcTypeName == None:\r\n                pass            \r\n            elif noneRemove_ColName in d.keys():\r\n                d[\"Q'ty Cal Type Tag\"] = calcTypeName\r\n                d[needDefault_ColName] = \"\"\r\n                dicts_final.append(d)\r\n\r\n        \r\n        return dicts_final\r\n        \r\n    dicts_allFamType = list(map(lambda x: setDict_OnEachFamType(x), datas_allFamType))\r\n    ds_famTypesAtCatSheet = dict(zip(rgs_k, dicts_allFamType))\r\n    ds_famTypesAtCatSheet_effCalcType = dict(filter(lambda x: all(list(map(lambda i: \"Q'ty Cal Type Tag\" in i, x[1]))), list(ds_famTypesAtCatSheet.items())))\r\n    ds_famTypesAtCatSheet_noneless = dict(filter(lambda x: len(list(x[1]))!=0, list(ds_famTypesAtCatSheet_effCalcType.items())))\r\n    \r\n    return ds_famTypesAtCatSheet_noneless\r\n\r\n## AllInOne 딕셔너리에 정리\r\ndataOnRanges_allCat = list(map(get_DataOnRangesAtCatSheet, allCatSheets))\r\ndicts_AllInOne = {}\r\nfor d in dataOnRanges_allCat:\r\n    dict_k_v = d.items()\r\n    for k,v in dict_k_v:\r\n        dicts_AllInOne[k] = v\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dicts_AllInOne",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "50bce050a05542f29e0561c9bfa7a29c",
      "Inputs": [
        {
          "Id": "4a437d3544ba48c482d0547b890baefd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28fc0ef0ac7a44c8840b0d996ceac045",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f90dba6749ab40a5831fe4daa60024ca",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[\"wms\"][\"Q'ty Cal Type Tag\"]==\"SB-Q3\";",
      "Id": "eec4b4e3e3ad4252a5125b338123cd00",
      "Inputs": [
        {
          "Id": "dab6d062027b477aa2ca43fb26621b0f",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d16e283b8284a28a3e96e66b5b94269",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "e1d18e101351496ba5d4b8d822b2111e",
      "Inputs": [
        {
          "Id": "7cea65e062a244178e66602b78cf0657",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16ce2ad0ba6b4a5dbeaecbb94532be24",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "972046cf740e4d1383092478b89c4dd7",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "61830d75182f42f2b81ed3ba001dbbe7",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "3ef10b272b2740d0a75e62ab2fc02425",
      "Inputs": [
        {
          "Id": "8ac12b02ebfb40218f802d6a90f4a63e",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d77bbd6ef11a45b9868098868dde02a9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "47f1eb9c0ea64efb8edcc83a4eb1f517",
      "Inputs": [
        {
          "Id": "a7404130a2b14313b30f7a7bd520db43",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a91e74b122843309841834e20b0cc14",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    }
  ],
  "Connectors": [
    {
      "Start": "912753a782b84f598e120e936fffbd58",
      "End": "ae38fed72c0a434eb235268bfba22c03",
      "Id": "2f9fd4adb6444d8e9c24cd4a536bbbf2",
      "IsHidden": "False"
    },
    {
      "Start": "e4d9d60debe6406cace5eb687f712858",
      "End": "efbd6851497a4681a114ca7842d95e6a",
      "Id": "2483c846c22f4026a33d2bffb611b5e1",
      "IsHidden": "False"
    },
    {
      "Start": "bdc68e6596d64c1bb2ad17af850a8a64",
      "End": "f2b7450af5914cbf8a28c2a092e6a190",
      "Id": "e1261a8d8e0640709812536bf93bfcb4",
      "IsHidden": "False"
    },
    {
      "Start": "07eba95685e249a0a3188444eec253fe",
      "End": "2d45870ecc9f4742810ae2af861ad07b",
      "Id": "9aeb66891ebe4d4ca89e07933da9a02d",
      "IsHidden": "False"
    },
    {
      "Start": "266640a8b58449a48603af36addb1282",
      "End": "193ab32ba4444bc38b409c75675a617e",
      "Id": "de23b2abcdfb4fae8063260ab4c8253d",
      "IsHidden": "False"
    },
    {
      "Start": "16f6a93146ee4557a8eec29cac4eb344",
      "End": "d8f51f5cd01d4567b1a00710d64a2961",
      "Id": "e63f36a17c2d445ea7346df2930d19e9",
      "IsHidden": "False"
    },
    {
      "Start": "16f6a93146ee4557a8eec29cac4eb344",
      "End": "cbcac752c4ef4adbbf500face4dae780",
      "Id": "fa5b938ede8a4671bb6ae0d22253dd0b",
      "IsHidden": "False"
    },
    {
      "Start": "16f6a93146ee4557a8eec29cac4eb344",
      "End": "4a437d3544ba48c482d0547b890baefd",
      "Id": "856e81fd851642eb86d17590370af6bc",
      "IsHidden": "False"
    },
    {
      "Start": "eb3a2510c5934129baf50771f5bb29a9",
      "End": "c4d740fa206e4ab3b53ba148e9727e8f",
      "Id": "0708e80f5c0f475aa73809bfc8d71053",
      "IsHidden": "False"
    },
    {
      "Start": "e3d41cbea388406e9b31fca8184f2a13",
      "End": "8d8f529204cd48a5a2210b85d94be686",
      "Id": "aea2bbf0844a421eac38d674664254a7",
      "IsHidden": "False"
    },
    {
      "Start": "f98969ee45ea4cce8921b553ad57fbc0",
      "End": "da624c3834b64df4a29198439fca082e",
      "Id": "056e91bb2fca4d81af853578b822a2fa",
      "IsHidden": "False"
    },
    {
      "Start": "388e2eaea3fc4ff5a852380f21ea4b1b",
      "End": "8871f8fef5b841e484fe65aa92aecb9c",
      "Id": "a45a9380a6214d09b37556e254d59381",
      "IsHidden": "False"
    },
    {
      "Start": "388e2eaea3fc4ff5a852380f21ea4b1b",
      "End": "fb681e08f1034208a2da1a59eef69887",
      "Id": "cf8abee9e8404b53a52a8e965b6e3e78",
      "IsHidden": "False"
    },
    {
      "Start": "f7931e3f26c347e5ada98b5a0ca372b3",
      "End": "9a7344f7947340dfbda9f66443a4b459",
      "Id": "24ba3e913ea848318c12b462ac342bd3",
      "IsHidden": "False"
    },
    {
      "Start": "a6c10470fa9644d9a4ab809356dbe40e",
      "End": "b6b100a2ab9642b79ac818735c8a86bf",
      "Id": "137471a4ff694166bdaaf52285587ed5",
      "IsHidden": "False"
    },
    {
      "Start": "9736b33bef054564bf7b5817c23ae020",
      "End": "9051dcf4d56d4c0aba07fd03ae97f4d0",
      "Id": "7d8becb6a73444cba63e4e5f9fb41282",
      "IsHidden": "False"
    },
    {
      "Start": "7d4c7b51481348b68b28a4a779f5cca8",
      "End": "8fc2fd075a8f43b5aa80a7c22114b549",
      "Id": "758db14748464307bcd2f9bfee28d63e",
      "IsHidden": "False"
    },
    {
      "Start": "4c4c0a55d8a14ffd85d7c51b2c5597ce",
      "End": "a09c7a56958d41b98e3d148266263dd9",
      "Id": "62a60d2eaead4926b5a18ece72de5d8f",
      "IsHidden": "False"
    },
    {
      "Start": "4c4c0a55d8a14ffd85d7c51b2c5597ce",
      "End": "28fc0ef0ac7a44c8840b0d996ceac045",
      "Id": "6b02ab37b31f4974a37d03d044a477cd",
      "IsHidden": "False"
    },
    {
      "Start": "7b329bcb0cf844739a7e6e5f1a5a9e59",
      "End": "ea05f71ece874273a5dddc9b8dc68ebd",
      "Id": "42bdc4adfb014129b3acadc6388b9aba",
      "IsHidden": "False"
    },
    {
      "Start": "7b329bcb0cf844739a7e6e5f1a5a9e59",
      "End": "0e637bbc3b7e4ff38a64c68763d4815a",
      "Id": "cb58dbc738f440e691f3ef22e673f5da",
      "IsHidden": "False"
    },
    {
      "Start": "10927b3559a04512b2a50eede4045749",
      "End": "55f29dd9f2c2400aad315d92c033b933",
      "Id": "fd4a4199c451446fb68c683ac788c324",
      "IsHidden": "False"
    },
    {
      "Start": "10b9d576b3ad4395925a377ca5a961a0",
      "End": "7ce72f3e519f465d8ada827987db1860",
      "Id": "642787f285b44bd68501b7bc6989e652",
      "IsHidden": "False"
    },
    {
      "Start": "10b9d576b3ad4395925a377ca5a961a0",
      "End": "33fe3d93d4ef4ed18fb97ca157f4554b",
      "Id": "b77d31b98e154a48a13d6dd747ea7290",
      "IsHidden": "False"
    },
    {
      "Start": "598e3e26be64404d83d0ce9582db84f0",
      "End": "2a554f9ba2fe450dac0706c6f1d2b201",
      "Id": "eafa8b93b1894c9daa1c3c2de58e77e5",
      "IsHidden": "False"
    },
    {
      "Start": "598e3e26be64404d83d0ce9582db84f0",
      "End": "2ffc7badc3964fe4b1668daa8972e17a",
      "Id": "fabfbba593784e2a9e71c7e4914ba38a",
      "IsHidden": "False"
    },
    {
      "Start": "b9f142a179cd4d2fa012c3227e0b972f",
      "End": "22c24cbbe6044bd095c409ff0a1f5059",
      "Id": "bd7e787661af49f4b0ca01a89f108e6a",
      "IsHidden": "False"
    },
    {
      "Start": "d1f1b294d2164b04897730bd729ae51a",
      "End": "6690df8a5a814090a9e8af85ce1f8eb5",
      "Id": "aedcb82886db4e0398355d0d55daf2de",
      "IsHidden": "False"
    },
    {
      "Start": "0606daabd3f1417c8fb2699772a58b29",
      "End": "c01bba0e2e294fd69177c11254b77f35",
      "Id": "35a9a35c7ed644e289e5243ad3524cf8",
      "IsHidden": "False"
    },
    {
      "Start": "a6db5b3198a84514b931f6728da04348",
      "End": "affa8e9069d34d359fdc5519189993e3",
      "Id": "d7265a7aa81143e980dbc9fb2f067d7f",
      "IsHidden": "False"
    },
    {
      "Start": "896e8dab2bff430e946bcbf6da09b9f7",
      "End": "c9d0e9ffdc354867b1f275c5d88e7c77",
      "Id": "53771fac8c604b8f843c8372ac28957b",
      "IsHidden": "False"
    },
    {
      "Start": "9c3a59dbd4eb49b6ac9ac530044d16cf",
      "End": "c37a885e3b874ab5a14dc5b9a9483283",
      "Id": "ca1358411d3b44828d7bee26279d81aa",
      "IsHidden": "False"
    },
    {
      "Start": "e8dadf4a47264c5f86f3a1f9af105d0e",
      "End": "0a92beaaaf9e4ccf9cbcace53639c1b5",
      "Id": "db7c128fb635456ba982c33651aacc58",
      "IsHidden": "False"
    },
    {
      "Start": "e8dadf4a47264c5f86f3a1f9af105d0e",
      "End": "9b219264bcb7499e8351221fad77c3fc",
      "Id": "3b54bd45441040f992ceb5db03e77f59",
      "IsHidden": "False"
    },
    {
      "Start": "523a6b05a06c490eb7cfa31796723e4f",
      "End": "38ac5ca068574d219b39e5a07bd309a1",
      "Id": "540669894b724ad09877ebacdf887066",
      "IsHidden": "False"
    },
    {
      "Start": "25b11d15e6834c96a298b45cb1bf32a7",
      "End": "da273f14c52b42558ec17b22c360f024",
      "Id": "b790e826848349b3999761b5dbe7aeb7",
      "IsHidden": "False"
    },
    {
      "Start": "465ce5d4ba544858bc507452a871eff2",
      "End": "9cfd2d9ca5de4474aac059e0d7724083",
      "Id": "a0c5e12b67ef48cd847e6b09749fc675",
      "IsHidden": "False"
    },
    {
      "Start": "7cde65c6861a47c2b12b06a5079baf34",
      "End": "ecfa82e90bc44e08ad8d9044f8cd774a",
      "Id": "063c57de079d4629850ec68968fc31c8",
      "IsHidden": "False"
    },
    {
      "Start": "ed538c7016c241b094ec0476eae7f05f",
      "End": "18eb26d8706045b49fc42fdc08c472c0",
      "Id": "64b2acf964134baeb6f063fdc24bb2bb",
      "IsHidden": "False"
    },
    {
      "Start": "64b5246139c648a78421a8065fce7db2",
      "End": "200e728b72fd45ee99e683ae719e1330",
      "Id": "107e720b2c924d9c83536415de8b7458",
      "IsHidden": "False"
    },
    {
      "Start": "e55759f4d15841d0be007e9426de2cf4",
      "End": "9308cbfdc8414aaf86982a0cef734b5f",
      "Id": "671296383a4841d882764fd3e6969a5a",
      "IsHidden": "False"
    },
    {
      "Start": "c6d559922a0b4bc097bae2593ef4c4b1",
      "End": "de6ea5f0e79a488889bcf832bae235ed",
      "Id": "025ee864c97e4f4a868de2f85fae2022",
      "IsHidden": "False"
    },
    {
      "Start": "1ab94fe25293453f8985cc132859d148",
      "End": "ad87b46466e44fc5b272462dd3d0e728",
      "Id": "448e372c363544ae8d3d08c18e88d010",
      "IsHidden": "False"
    },
    {
      "Start": "f5cb5f12a9a34c0580335168f950d6a0",
      "End": "27292fd82f2243dcad2c8d84d16eff33",
      "Id": "c5747d2463794114aac18de569ebdc9c",
      "IsHidden": "False"
    },
    {
      "Start": "bb52218899294b78b858cdf419efe4a3",
      "End": "16ae095d8bb742a1842007898fa8da08",
      "Id": "219e6f201f7242b69e763ff133bab9fc",
      "IsHidden": "False"
    },
    {
      "Start": "704a0615649a4b69a7598e7bf9bbdf71",
      "End": "d7eecaa87218489daa29e5f629d3e5f4",
      "Id": "c6c8b668c94b4fd3a8d836d7f59c30ef",
      "IsHidden": "False"
    },
    {
      "Start": "274cec9b4a024aa09ef1e8b8998f3ade",
      "End": "5c24b6a46f074029ae30973e803423cf",
      "Id": "5780c2d647e0468b9a4416956c5d1de7",
      "IsHidden": "False"
    },
    {
      "Start": "a3d8ae3ce29c4ada9cd978071a690e99",
      "End": "60298be91cbc40aaa4d4c2caf7553ef4",
      "Id": "44d3a61834ea4fdc87d49c2b7853293c",
      "IsHidden": "False"
    },
    {
      "Start": "2b78d9bdee064ca8aa719add76dab153",
      "End": "03197cc52c5a41498621cc5cbbdcdda2",
      "Id": "e69d7b6fbc014ab68bb8876067dccbba",
      "IsHidden": "False"
    },
    {
      "Start": "62fa15a1c68a460abbbe7017e304f877",
      "End": "1acb0f3536104379b228c0f654ce7eff",
      "Id": "aaf1461d87cd425b9ced3de1cab40511",
      "IsHidden": "False"
    },
    {
      "Start": "d0ea9ac3155141a280d75b19e91ded86",
      "End": "9ba11babb5ef4e12a0e246df296ff645",
      "Id": "54ca60e73be04ea1a84cc3d9610d1437",
      "IsHidden": "False"
    },
    {
      "Start": "58b5cb21b6014b7890c942933d561ba5",
      "End": "791810c9f38243529a3142e7e7fd2d41",
      "Id": "f3c0180c2ad04c3e8bb0b6262bf1fb4f",
      "IsHidden": "False"
    },
    {
      "Start": "58b5cb21b6014b7890c942933d561ba5",
      "End": "13eef7c2e1884f17bd9a94f727ce0d5e",
      "Id": "f3455b73a07e4f86aee74da478e9fdbb",
      "IsHidden": "False"
    },
    {
      "Start": "d8402fd2e2cf40e18826f7fb710d7abe",
      "End": "e5775c1a7f8c45d6911594db84ada28f",
      "Id": "4ca3ebe2dc6b435aaa3f0a73607db136",
      "IsHidden": "False"
    },
    {
      "Start": "d8402fd2e2cf40e18826f7fb710d7abe",
      "End": "9dd564bcf04b4432a305390a99f356d7",
      "Id": "b204c1ced1514f68ba43e37d0b19c58c",
      "IsHidden": "False"
    },
    {
      "Start": "d8402fd2e2cf40e18826f7fb710d7abe",
      "End": "2eeeec0b990e460c904c7443bf123471",
      "Id": "4234ace9fb904db4bd3319cdbe148d71",
      "IsHidden": "False"
    },
    {
      "Start": "9fd9a6f797b046f1848e089b1a2d45fc",
      "End": "9ab530efab9c434581925fdde0bb806e",
      "Id": "bb946722da4c4973837208e6ea593923",
      "IsHidden": "False"
    },
    {
      "Start": "e1fcf008d2254d5fbd43f29f333a0d61",
      "End": "354680cfa5b84d5a9c601680a956931a",
      "Id": "37f4767d777747af8f215356adfdf080",
      "IsHidden": "False"
    },
    {
      "Start": "5cf52c8def9d401db5e11d43ab6fe5cd",
      "End": "bc7147cb34634d548d503faf1cbafa06",
      "Id": "904078a8d01b44b3b5ba75af6a04964e",
      "IsHidden": "False"
    },
    {
      "Start": "5c919d1b1818407588b8ae873dac0523",
      "End": "bba74652bf314fe390e17b56f7f38928",
      "Id": "fe72b01bc3c3470aaeddbf51ff806271",
      "IsHidden": "False"
    },
    {
      "Start": "88821342d4504fcfbd2610710d44b8ec",
      "End": "04c0892ee4944c1394d2ad1a450eb878",
      "Id": "0e4608ad4e0043e081f5001b30b0fdff",
      "IsHidden": "False"
    },
    {
      "Start": "bad3f087e62f4247bd337b6e8c27d1b8",
      "End": "270dec1e9d6e466e884b694ac816e834",
      "Id": "c4b39c35cd4647509cf1b14627247b73",
      "IsHidden": "False"
    },
    {
      "Start": "2a53e92b2254401cafbdd5fbab70525f",
      "End": "ce82e58746c64cbb8dcc9480509cc410",
      "Id": "0d4afc3aef544a71b20f3c27039cb727",
      "IsHidden": "False"
    },
    {
      "Start": "2a53e92b2254401cafbdd5fbab70525f",
      "End": "7cea65e062a244178e66602b78cf0657",
      "Id": "9487ff05fb104acda3da6c8d66e12dcf",
      "IsHidden": "False"
    },
    {
      "Start": "2a53e92b2254401cafbdd5fbab70525f",
      "End": "dab6d062027b477aa2ca43fb26621b0f",
      "Id": "06da55b6295b4130a7a30aebc21e3410",
      "IsHidden": "False"
    },
    {
      "Start": "7d16e283b8284a28a3e96e66b5b94269",
      "End": "a7404130a2b14313b30f7a7bd520db43",
      "Id": "1debc6fb9c2549ea888d9ce42d89877d",
      "IsHidden": "False"
    },
    {
      "Start": "972046cf740e4d1383092478b89c4dd7",
      "End": "8ac12b02ebfb40218f802d6a90f4a63e",
      "Id": "e69036be1c744fadb665e064c7f576ff",
      "IsHidden": "False"
    },
    {
      "Start": "9a91e74b122843309841834e20b0cc14",
      "End": "16ce2ad0ba6b4a5dbeaecbb94532be24",
      "Id": "960fb14d69c140fdaad3b12a0e805400",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "플랜트건축팀_BIM_팀 표준 Family List_Rev.0_SQ2_박기범_20230904.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "51b4738620874fe885b1b5ecce1e49b7"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "1250bd18102c4ebaac9950d60dac8849",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4029.3277836109523,
        "Y": 1559.5491929730481
      },
      {
        "Name": "All ElementsExceptRails",
        "ShowGeometry": true,
        "Id": "c790cfc4c7d943cdb05ca3a612d673c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3672.3277836109523,
        "Y": 1411.5491929730481
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "d78f3dfc768541ab8490b53194e174c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4365.3277836109519,
        "Y": 1559.5491929730481
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "94dc2b3bd4e14a9fa5352e8ad0cbe58b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3672.3277836109523,
        "Y": 1559.5491929730481
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "bf37a72db0e847dba5e3d1c2ed14c8bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3319.3277836109523,
        "Y": 1468.5491929730481
      },
      {
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Id": "1eac1f1717ab40c98ea2a8a9b59421d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3400.5486975732852,
        "Y": 300.12517693814777
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "caccad700bd84d8e8cb198c7fe1545aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3694.5486975732852,
        "Y": 197.12517693814777
      },
      {
        "Name": "File Path",
        "ShowGeometry": true,
        "Id": "51b4738620874fe885b1b5ecce1e49b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4337.5486975732856,
        "Y": 197.12517693814777
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "76e75c1cd00342eeb418e14c2410b8f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3694.5486975732852,
        "Y": 493.12517693814783
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "64985def907747329221585392bfc414",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3694.5486975732852,
        "Y": 345.9526769381477
      },
      {
        "Name": "Math.EvaluateFormula",
        "ShowGeometry": true,
        "Id": "a0b487cea1c542c2bec9eb7c8895c252",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4067.1840267382649,
        "Y": -1434.4339232516247
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "28c8dd982f5946db846ef1274e8b7b4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4310.1968409539058,
        "Y": -1396.8998170528155
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5d59a186d2bb4cc1bc3794f6184b6a73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4302.559831904975,
        "Y": -1564.4459415253548
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5f59335ac2ab4ce9907f0b43beb2e17b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4301.2845406460774,
        "Y": -1256.6642125256656
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "647ec6c2b0be4330954a46b4dfed8fdc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3493.876919399283,
        "Y": -1763.8646957959459
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "9180e2e72a3c4871ad3dcc4c90e647ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3360.83706024558,
        "Y": 533.526559928548
      },
      {
        "Name": "Family List 데이터 파싱_Category 시트_수정후",
        "ShowGeometry": true,
        "Id": "1cf6a1afd7ce4854a4230a961836579d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1193.452335475924,
        "Y": 820.84115401362465
      },
      {
        "Name": "Family List 데이터 파싱_물량Param 시트",
        "ShowGeometry": true,
        "Id": "ffe3ce92ec6b41c28dea986fb27302b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1492.1549395222664,
        "Y": 573.42609302177425
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c2e2ffc4ce8c4995823302e2e6edbf6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 773.75382186345882,
        "Y": -1822.1074773245823
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6cc32639f4334079a3ed3015057ed0c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 749.92378866971762,
        "Y": -1668.7160257168089
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "abba167faddc4ae4b7190a20329bc999",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2712.5937214550222,
        "Y": 1209.5253463447273
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "e9de4d33a0f8498aa88925d7de0302be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2417.5937214550222,
        "Y": 1288.5253463447273
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e01aca3b31524ecdb2fea0bcd4e569fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2712.5937214550222,
        "Y": 1387.3872213447273
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "14224d161ba74300b783d019932dc09b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1971.5937214550222,
        "Y": 1276.939096344727
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "85e664ba9cb643c5b3b2014270272b36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1682.0247515153928,
        "Y": 2530.416300763221
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "28717ffdd04a4f7981357ebce2431665",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1161.5937214550222,
        "Y": 1334.1115963447266
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "47c8c52edfba464cbc6491f9f5abc7cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1525.5937214550222,
        "Y": 1424.939096344727
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": true,
        "Id": "32053cf3bae641e2abda33f7464839b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -840.59372145502221,
        "Y": 1334.1115963447266
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "daee18045b714579b8b4547f68499e80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1525.5937214550222,
        "Y": 1276.939096344727
      },
      {
        "Name": "lang_mode(영/한) select",
        "ShowGeometry": true,
        "Id": "0d04816ca9f34db6a891541712eb1f5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1849.1549395222664,
        "Y": 641.42609302177425
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ab9b7226a471462bbe05f1ffb8d082d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 396.28383401574422,
        "Y": -1671.0143400591096
      },
      {
        "Name": "Parameter.CreateProjectParameterForAllCategories",
        "ShowGeometry": true,
        "Id": "041bb51a23734fcfbea1af777dfab763",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 240.66801443072814,
        "Y": 3277.9115047138539
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "cec2f8eaacdf482dbee4a3fba8340394",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -187.01633500359026,
        "Y": 3145.0958923684784
      },
      {
        "Name": "Spec Types",
        "ShowGeometry": true,
        "Id": "342eb3169fcc422988afb081f0128848",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -512.37747327807892,
        "Y": 3147.4560822095355
      },
      {
        "Name": "Group Types",
        "ShowGeometry": true,
        "Id": "97eecaa0667140b2b217c07528ffcc32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -513.49940368228181,
        "Y": 3277.6000090971074
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "9fac8931a6e44ba394f6b5087edcfafe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 407.19350932400175,
        "Y": 2669.1033588419541
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "995ccef9f1cd4b49aecc810576ba715f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -95.34993509788228,
        "Y": 2481.7898185496751
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "fdb901f20d644088a89f03651e881266",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2762.3786774445143,
        "Y": 2704.9440046522691
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "014417a7a6a74588a86afc4c30d8ea08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2767.0865293027568,
        "Y": 2958.0971343841575
      },
      {
        "Name": "setParamElementTypes",
        "ShowGeometry": true,
        "Id": "ee95e619ed6b4a4092d10917064aaf58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 3098.7082772187814,
        "Y": 2606.416300763221
      },
      {
        "Name": "Get_WMCodesAndBriefSpec",
        "ShowGeometry": true,
        "Id": "ad5dc112707a4841a2b44b8eb9c1ca62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2378.0247515153928,
        "Y": 2568.416300763221
      },
      {
        "Name": "Dictionary.ByKeysValues",
        "ShowGeometry": true,
        "Id": "4eee53a8546c4694abfafd1926920870",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2020.0247515153928,
        "Y": 2496.416300763221
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "9e1934a59db94d298059a9bc8b9a66b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2020.0247515153928,
        "Y": 2674.2438007632209
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5942773aeb824c84bde85b7a139bac6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 833.02475151539284,
        "Y": 2475.8988007632215
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "590996bec97544a8a3c5eaecbf1bbd45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1236.0247515153928,
        "Y": 2564.416300763221
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ea47f768c4464f6ca17b7b47bc073108",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 833.02475151539284,
        "Y": 2653.8988007632215
      },
      {
        "Name": "Family List 데이터 파싱_Category - 물량Param 시트 결합",
        "ShowGeometry": true,
        "Id": "a7284d01866648aa82fdad7506b69446",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -572.15493952226643,
        "Y": 573.42609302177425
      },
      {
        "Name": "물량Param시트 약자-매개변수 정리",
        "ShowGeometry": true,
        "Id": "1bd5112c1ae04bcfb1e2fd87f4860ba7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1026.1549395222664,
        "Y": 573.42609302177425
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "39f3fec13bdd481ca0f2851304a2cd56",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -564.59372145502221,
        "Y": 1254.8184713447274
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a6e18086ddf04b59ab06a3c68dbbca06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -229.59372145502221,
        "Y": 1288.8184713447274
      },
      {
        "Name": "family list데이터 - Revit 부재 데이터 결합",
        "ShowGeometry": true,
        "Id": "133158fdcead4a29bea8da975ca27c31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 313.51495164151765,
        "Y": 953.178692863358
      },
      {
        "Name": "부재Dict별 Sym_Val Dict 값 업데이트(타입,인스턴스 매개변수)",
        "ShowGeometry": true,
        "Id": "671505ce45224e55aafcdb80f62eea87",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 756.34276206531956,
        "Y": 952.38602731417313
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "1eaa75ab78d0470ea49e22e82df694c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1907.6057916753391,
        "Y": 262.95342149586861
      },
      {
        "Name": "Family List 데이터 파싱_Category 시트_수정전",
        "ShowGeometry": true,
        "Id": "50bce050a05542f29e0561c9bfa7a29c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1172.957008404941,
        "Y": -367.097970686678
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "eec4b4e3e3ad4252a5125b338123cd00",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1419.9795022584929,
        "Y": 1284.8893791030482
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "e1d18e101351496ba5d4b8d822b2111e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2208.55160856987,
        "Y": 958.20502318133117
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3ef10b272b2740d0a75e62ab2fc02425",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2594.0426595654926,
        "Y": 1148.6288225484075
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": true,
        "Id": "47f1eb9c0ea64efb8edcc83a4eb1f517",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1924.1604081250082,
        "Y": 1337.8939568330186
      }
    ],
    "Annotations": [
      {
        "Id": "f70bf264fa0749c79027f550865f41ad",
        "Title": "All Elements in Revit",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1250bd18102c4ebaac9950d60dac8849",
          "c790cfc4c7d943cdb05ca3a612d673c4",
          "d78f3dfc768541ab8490b53194e174c5",
          "94dc2b3bd4e14a9fa5352e8ad0cbe58b",
          "bf37a72db0e847dba5e3d1c2ed14c8bd"
        ],
        "HasNestedGroups": false,
        "Left": -4375.3277836109519,
        "Top": 1295.5491929730481,
        "Width": 1217.9999999999995,
        "Height": 396.0,
        "FontSize": 72.0,
        "InitialTop": 1411.5491929730481,
        "InitialHeight": 293.0,
        "TextblockHeight": 106.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "845648042f7a44b3b450cfa23ec8d632",
        "Title": "All Data in Excel",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1eac1f1717ab40c98ea2a8a9b59421d3",
          "caccad700bd84d8e8cb198c7fe1545aa",
          "51b4738620874fe885b1b5ecce1e49b7",
          "76e75c1cd00342eeb418e14c2410b8f4",
          "64985def907747329221585392bfc414",
          "9180e2e72a3c4871ad3dcc4c90e647ef"
        ],
        "HasNestedGroups": false,
        "Left": -4347.5486975732856,
        "Top": 81.125176938147774,
        "Width": 1195.0000000000005,
        "Height": 619.40138299040018,
        "FontSize": 72.0,
        "InitialTop": 197.12517693814777,
        "InitialHeight": 481.40138299040018,
        "TextblockHeight": 106.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "cc900d62e13942f799fbe062ae858fa0",
        "Title": "Math.EvaluateFormula 테스트",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a0b487cea1c542c2bec9eb7c8895c252",
          "28c8dd982f5946db846ef1274e8b7b4c",
          "5d59a186d2bb4cc1bc3794f6184b6a73",
          "5f59335ac2ab4ce9907f0b43beb2e17b"
        ],
        "HasNestedGroups": false,
        "Left": -4320.1968409539058,
        "Top": -1637.4459415253548,
        "Width": 508.0128142156409,
        "Height": 512.78172899968922,
        "FontSize": 36.0,
        "InitialTop": -1564.4459415253548,
        "InitialHeight": 452.78172899968922,
        "TextblockHeight": 63.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "bfcf5a2480bb4d73bde3d29a19fe5c14",
        "Title": "임시필터링 구간 (패밀리 리스트에 없는 이름 제외)",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "28717ffdd04a4f7981357ebce2431665",
          "47c8c52edfba464cbc6491f9f5abc7cb",
          "32053cf3bae641e2abda33f7464839b9",
          "daee18045b714579b8b4547f68499e80",
          "abba167faddc4ae4b7190a20329bc999",
          "e01aca3b31524ecdb2fea0bcd4e569fe",
          "e9de4d33a0f8498aa88925d7de0302be",
          "14224d161ba74300b783d019932dc09b",
          "39f3fec13bdd481ca0f2851304a2cd56",
          "a6e18086ddf04b59ab06a3c68dbbca06"
        ],
        "HasNestedGroups": false,
        "Left": -2722.5937214550222,
        "Top": 1136.5253463447273,
        "Width": 2721.0,
        "Height": 560.41374999999971,
        "FontSize": 36.0,
        "InitialTop": 1209.5253463447273,
        "InitialHeight": 360.41374999999971,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2e5354d2f5624544a71a43cb85d65d53",
        "Title": "임시 - WM 파라미터 생성",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "041bb51a23734fcfbea1af777dfab763",
          "cec2f8eaacdf482dbee4a3fba8340394",
          "342eb3169fcc422988afb081f0128848",
          "97eecaa0667140b2b217c07528ffcc32"
        ],
        "HasNestedGroups": false,
        "Left": -523.49940368228181,
        "Top": 3072.0958923684784,
        "Width": 1230.16741811301,
        "Height": 492.0,
        "FontSize": 36.0,
        "InitialTop": 3145.0958923684784,
        "InitialHeight": 277.504116728629,
        "TextblockHeight": 63.0,
        "Background": "#FFBB87C6"
      },
      {
        "Id": "3d2a1efc5b53493ea2da91d1a4544a5c",
        "Title": "Family Type 별 WM 코드 Revit 되먹임",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "85e664ba9cb643c5b3b2014270272b36",
          "fdb901f20d644088a89f03651e881266",
          "014417a7a6a74588a86afc4c30d8ea08",
          "ee95e619ed6b4a4092d10917064aaf58",
          "ad5dc112707a4841a2b44b8eb9c1ca62",
          "4eee53a8546c4694abfafd1926920870",
          "9e1934a59db94d298059a9bc8b9a66b6",
          "5942773aeb824c84bde85b7a139bac6b",
          "590996bec97544a8a3c5eaecbf1bbd45",
          "ea47f768c4464f6ca17b7b47bc073108"
        ],
        "HasNestedGroups": false,
        "Left": 823.02475151539284,
        "Top": 2402.8988007632215,
        "Width": 2534.6835257033886,
        "Height": 860.198333620936,
        "FontSize": 36.0,
        "InitialTop": 2475.8988007632215,
        "InitialHeight": 415.34499999999935,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8dfa0080961343409c7525d0befec92b",
        "Title": "Excel data dictionarization",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1cf6a1afd7ce4854a4230a961836579d",
          "ffe3ce92ec6b41c28dea986fb27302b8",
          "0d04816ca9f34db6a891541712eb1f5d",
          "a7284d01866648aa82fdad7506b69446",
          "1bd5112c1ae04bcfb1e2fd87f4860ba7"
        ],
        "HasNestedGroups": false,
        "Left": -1859.1549395222664,
        "Top": 471.42609302177425,
        "Width": 1782.0,
        "Height": 511.4150609918504,
        "FontSize": 60.0,
        "InitialTop": 573.42609302177425,
        "InitialHeight": 392.4150609918504,
        "TextblockHeight": 92.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "0ff82b1632ff4d8cbcded5b0beba520c",
        "Title": "Revit에 있는 Family Type 항목만",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -73.293009394106718,
        "Top": 2372.2939942514668,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -202.77451887963946,
    "Y": -84.230687835826132,
    "Zoom": 0.40705080689650508
  }
}