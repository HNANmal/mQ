{
  "Uuid": "1d6d431a-e8c4-48aa-8b91-a874ff2542a8",
  "IsCustomNode": false,
  "Description": "Auto Calculating the Quantities of each Element As per the Family List",
  "Name": "hCalc_rF(20231027)",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "51b4738620874fe885b1b5ecce1e49b7",
      "Name": "Family List 경로 입력",
      "Type": "string",
      "Type2": "string",
      "Value": ".\\플랜트건축팀_BIM_팀 표준 Family List_Rev.0_시연용_20231107.xlsx",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "ecccb4f11a2543e29cb666423f4f697e",
      "Name": "Total BOQ sheet 경로 입력",
      "Type": "string",
      "Type2": "string",
      "Value": ".\\Total BOQ_GAH_STB.xlsx",
      "Description": "Allows you to select a file on the system to get its file path.",
      "SelectedIndex": 0
    },
    {
      "Id": "aae6ee369697433d96978d6f0a38227c",
      "Name": "건물명 입력",
      "Type": "string",
      "Type2": "string",
      "Value": "Steam Turbine Building",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "739b18232b3647c3a93bc9903af06c1d",
      "Name": "토공 산출 모드 선택",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "개별 터파기",
      "Description": "A dropdown menu with customizable values.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "53192363f9da457ca86140d19351bdfb",
      "Name": "Export to Total BOQ",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "1250bd18102c4ebaac9950d60dac8849",
      "Inputs": [
        {
          "Id": "f2b7450af5914cbf8a28c2a092e6a190",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "912753a782b84f598e120e936fffbd58",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\ndef get_all_BIC():\r\n\r\n    db = [\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Floors,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Roofs,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Walls,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFoundation,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralColumns,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_StructuralFraming,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Ceilings,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Doors,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Windows,\r\n    Autodesk.Revit.DB.BuiltInCategory.OST_Stairs,\r\n    #Autodesk.Revit.DB.BuiltInCategory.OST_Railings,\r\n    ]\r\n    return db\r\n    \r\ndef get_allElems(doc):\r\n    bics = get_all_BIC()\r\n    \r\n    def getElems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType().ToElements()\r\n        return res\r\n\r\n    def getRailElems(x):\r\n        collector = FilteredElementCollector(doc)\r\n        res = collector.OfCategory(x).WhereElementIsNotElementType()\r\n        return res\r\n\r\n    res = map(getElems, bics)\r\n#    res = getRailElems(Autodesk.Revit.DB.BuiltInCategory.OST_RailingSystemRail)\r\n    return res\r\n\r\n\r\nOUT = get_allElems(doc)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "c790cfc4c7d943cdb05ca3a612d673c4",
      "Inputs": [
        {
          "Id": "08594b729317483fab0ab869358cdb3c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4d9d60debe6406cace5eb687f712858",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 441,
      "SelectedString": "OST_StairsRailing",
      "NodeType": "ExtensionNode",
      "Id": "d78f3dfc768541ab8490b53194e174c5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bdc68e6596d64c1bb2ad17af850a8a64",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "94dc2b3bd4e14a9fa5352e8ad0cbe58b",
      "Inputs": [
        {
          "Id": "ae38fed72c0a434eb235268bfba22c03",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07eba95685e249a0a3188444eec253fe",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "bf37a72db0e847dba5e3d1c2ed14c8bd",
      "Inputs": [
        {
          "Id": "efbd6851497a4681a114ca7842d95e6a",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d45870ecc9f4742810ae2af861ad07b",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "266640a8b58449a48603af36addb1282",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "1eac1f1717ab40c98ea2a8a9b59421d3",
      "Inputs": [
        {
          "Id": "c4d740fa206e4ab3b53ba148e9727e8f",
          "Name": "file",
          "Description": "File representing the Excel workbook\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8871f8fef5b841e484fe65aa92aecb9c",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2e3869f91c64b06ab4cff0e2c816de0",
          "Name": "readAsStrings",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da624c3834b64df4a29198439fca082e",
          "Name": "showExcel",
          "Description": "Toggle to show excel's main window\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16f6a93146ee4557a8eec29cac4eb344",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "caccad700bd84d8e8cb198c7fe1545aa",
      "Inputs": [
        {
          "Id": "8d8f529204cd48a5a2210b85d94be686",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb3a2510c5934129baf50771f5bb29a9",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\mk\\mQ\\hecCalc\\2023\\documentum\\플랜트건축팀_BIM_팀 표준 Family List_Rev.0_시연용_20231107.xlsx",
      "InputValue": ".\\플랜트건축팀_BIM_팀 표준 Family List_Rev.0_시연용_20231107.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "51b4738620874fe885b1b5ecce1e49b7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e3d41cbea388406e9b31fca8184f2a13",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "76e75c1cd00342eeb418e14c2410b8f4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f98969ee45ea4cce8921b553ad57fbc0",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"WM-AR\"\n,\"물량Param\"\n,\"1.Floors\"\n,\"2.Roofs\"\n,\"3.Walls\"\n,\"4.St Fdn\"\n,\"5.St Col\"\n,\"6.St Framing\"\n,\"7.Ceilings\"\n,\"8.Doors\"\n,\"9.Windows\"\n,\"10.Stairs\"\n,\"11.Railings\"\n//,\"13.Generic\"\n];",
      "Id": "64985def907747329221585392bfc414",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "65f005d270e742a5906ad09029786a2e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "85e664ba9cb643c5b3b2014270272b36",
      "Inputs": [
        {
          "Id": "9ba11babb5ef4e12a0e246df296ff645",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5775c1a7f8c45d6911594db84ada28f",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6db5b3198a84514b931f6728da04348",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "9fac8931a6e44ba394f6b5087edcfafe",
      "Inputs": [
        {
          "Id": "16ae095d8bb742a1842007898fa8da08",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5cb5f12a9a34c0580335168f950d6a0",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "995ccef9f1cd4b49aecc810576ba715f",
      "Inputs": [
        {
          "Id": "2ffc7badc3964fe4b1668daa8972e17a",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a92beaaaf9e4ccf9cbcace53639c1b5",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d2a0590f2cb4f7e9a74cf1403826133",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb52218899294b78b858cdf419efe4a3",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ValueAtKey@string",
      "Id": "fdb901f20d644088a89f03651e881266",
      "Inputs": [
        {
          "Id": "60298be91cbc40aaa4d4c2caf7553ef4",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2eeeec0b990e460c904c7443bf123471",
          "Name": "key",
          "Description": "The key in the Dictionary to obtain value for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "704a0615649a4b69a7598e7bf9bbdf71",
          "Name": "value",
          "Description": "Value at the specified key or null if it is not set",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the value at a specified key\n\nDictionary.ValueAtKey (key: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n\"H_Q'ty Cal Type Tag\",\n\"H_WM Code_1\",\n\"H_WM Code_2\",\n\"H_WM Code_3\",\n\"H_WM Code_4\",\n\"H_WM Code_5\",\n\"H_WM Code_6\",\n\"H_WM Code_7\",\n\"H_WM Code_8\",\n\"H_WM Code_9\"\n];",
      "Id": "014417a7a6a74588a86afc4c30d8ea08",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da989cdd240f4026b50103281496dc4c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nfrom Revit.Elements import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemTypes = IN[0]\r\nWMs_perFamTyp = IN[1]\r\nparam_ListForWM = IN[2]\r\n\r\ninput_sets = list(zip(elemTypes, WMs_perFamTyp))\r\n\r\n# Place your code below this line\r\n\r\ndef setParamAnElem(elem, paramNames, paramVals):\r\n    effName_List = paramNames[:len(paramVals)]\r\n    effVals_List = paramVals\r\n    setForParam = list(zip(effName_List, effVals_List))\r\n    res = list(map(lambda x: elem.SetParameterByName(x[0],x[1]), setForParam))\r\n    \r\n    return res\r\n\r\n\r\nfinal = map(lambda x: setParamAnElem(x[0],param_ListForWM,x[1]), input_sets)\r\n\r\n\r\n#res = elemT.GetParameterValueByName(\"Default Thickness\")\r\n# Assign your output to the OUT variable.\r\n#OUT = input_sets\r\nOUT = final",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ee95e619ed6b4a4092d10917064aaf58",
      "Inputs": [
        {
          "Id": "13eef7c2e1884f17bd9a94f727ce0d5e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7eecaa87218489daa29e5f629d3e5f4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5c24b6a46f074029ae30973e803423cf",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a4290472fea4213a024469dd6acf27e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ndict_aio = IN[0]\r\ncalType_header = IN[1]\r\n# Place your code below this line\r\nfamTypes = list(dict_aio.items())\r\nres_dict = {}\r\n\r\n\r\ndef find_WMspecsPerFamType(k_v):\r\n    k = k_v[0]\r\n    wms = k_v[1]\r\n    res = list(map(lambda x: [x[\"Work Master Code\"]] + x[\"wmSpecs\"], wms))\r\n    res_zeroless = list(map(lambda y: filter(lambda x: x!=0, y), res))\r\n    joined_strs = list(map(lambda x: ' | '.join(x),res_zeroless))\r\n\r\n    return k,joined_strs\r\n\r\nWMspecs = list(map(find_WMspecsPerFamType, famTypes))\r\n\r\nfor k,v in WMspecs:\r\n    res_dict[k] = [dict_aio[k][0][calType_header]] + v\r\n\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res_dict",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "ad5dc112707a4841a2b44b8eb9c1ca62",
      "Inputs": [
        {
          "Id": "03197cc52c5a41498621cc5cbbdcdda2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1acb0f3536104379b228c0f654ce7eff",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3d8ae3ce29c4ada9cd978071a690e99",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.ByKeysValues@string[],var[]..[]",
      "Id": "4eee53a8546c4694abfafd1926920870",
      "Inputs": [
        {
          "Id": "9dd564bcf04b4432a305390a99f356d7",
          "Name": "keys",
          "Description": "Keys of dictionary\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "affa8e9069d34d359fdc5519189993e3",
          "Name": "values",
          "Description": "Values of dictionary\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b78d9bdee064ca8aa719add76dab153",
          "Name": "dictionary",
          "Description": "Dictionary from keys and values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a Dictionary with the supplied keys and values. The number of entries is the shorter of keys or values.\n\nDictionary.ByKeysValues (keys: string[], values: var[]..[]): Dictionary"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Q'ty Cal Type Tag\";",
      "Id": "9e1934a59db94d298059a9bc8b9a66b6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bd1c260823824c3fa942da73cd699d3c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "catSheetDatas;\nUniqElemTypes;",
      "Id": "5942773aeb824c84bde85b7a139bac6b",
      "Inputs": [
        {
          "Id": "e45e7bbab26b4433b5b39ea0019872d8",
          "Name": "catSheetDatas",
          "Description": "catSheetDatas",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b807a40e33d146ed8e1079d77df2f4a2",
          "Name": "UniqElemTypes",
          "Description": "UniqElemTypes",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ffaed7ff9494698a476c77992378425",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4dfc84f116ed401aafa20bbf21bb6813",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "590996bec97544a8a3c5eaecbf1bbd45",
      "Inputs": [
        {
          "Id": "791810c9f38243529a3142e7e7fd2d41",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ab530efab9c434581925fdde0bb806e",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8402fd2e2cf40e18826f7fb710d7abe",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Type\";\n\"Type Name\";",
      "Id": "ea47f768c4464f6ca17b7b47bc073108",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34478aa62bfa4d148cf03d330610f255",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bd9705415654f7e8ac8be1751b2b4e4",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\n#clr.AddReference('RevitNodes')\r\n#import Revit\r\n#clr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n#doc = DocumentManager.Instance.CurrentDBDocument\r\n#collector1 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nfamlist_dic = IN[0]\r\nrevitElems = IN[1]\r\n\r\n# Place your code below this line\r\ndef matchWith_Elem_Dict(famlist_dic,revitElems):\r\n    res = []\r\n    for i in revitElems:\r\n        tmp = {}\r\n        famTypeName = i.GetParameterValueByName(\"Type\").GetParameterValueByName(\"Type Name\")\r\n        tmp[\"Elem\"] = i\r\n        tmp[\"wms\"] = famlist_dic[famTypeName]\r\n        \r\n        res.append(tmp)\r\n    return res\r\n\r\ndef update_sym_valDict(elemDicts):\r\n    for d in elemDicts:\r\n        elem = d[\"Elem\"]\r\n        wms = d[\"wms\"]\r\n        \r\n        for wm in wms:\r\n            sym_valDict = wm[\"Sym_Val Dict\"]\r\n            sv_keys = sym_valDict.Keys\r\n            sv_vals = sym_valDict.Values\r\n            sv_items = list(zip(sv_keys, sv_vals))\r\n            \r\n            for x in sv_items:\r\n                [k,v] = x\r\n                if isinstance(v, str):\r\n                    if v == \"Level\":\r\n                        #sym_valDict[k] = type(UnwrapElement(elem.GetParameterValueByName(v)))\r\n                        sym_valDict[k] = round(elem.GetParameterValueByName(\"Elevation at Bottom\"),2)\r\n                    elif elem.GetParameterValueByName(v):\r\n                        sym_valDict[k] = elem.GetParameterValueByName(v)\r\n                    elif elem.GetParameterValueByName(\"Type\").GetParameterValueByName(v):\r\n                        sym_valDict[k] = elem.GetParameterValueByName(\"Type\").GetParameterValueByName(v)\r\n                    else:\r\n                        pass\r\n    return elemDicts\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = update_sym_valDict(matchWith_Elem_Dict(famlist_dic,revitElems))",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "3bf30dcbbca84eb08aafa5ed15d4042e",
      "Inputs": [
        {
          "Id": "6bb89a836d794adbb921321ff571e938",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a75d2d18293473e89b54f0ee754c1e5",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3849c2f660e4f0d9a1e89d3d58bb89f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n#doc = DocumentManager.Instance.CurrentDBDocument\r\n#collector1 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\nimport copy\r\n###################################################################################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n###########################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nearthWork_calcMode = IN[0]\r\nelemDicts = IN[1]\r\n\r\n# Place your code below this line\r\n\r\n\r\ndef makeExcaShape(elem, sym_valDict, surv_base_Gap):\r\n    def findBtmCrv(geo, sym_valDict): ##btmOffset = d1 + d2\r\n        offSetDist = sym_valDict[\"D1\"] + sym_valDict[\"D2\"]\r\n        #H2 = sym_valDict[\"H2\"] if sym_valDict[\"H2\"]>=0 else -sym_valDict[\"H2\"]\r\n        h = abs(sym_valDict[\"C1\"] + sym_valDict[\"C2\"] + sym_valDict[\"C3\"])\r\n        bdBox_fdn = BoundingBox.ByGeometry(geo).ToCuboid() ## 형상의 자그마한 요철 무시\r\n        srfs = bdBox_fdn.Explode() ## surface들\r\n        btmSrf = PolySurface.ByJoinedSurfaces(list(filter(lambda x: round(x.NormalAtParameter(0.5,0.5).Z, 3) == -1, srfs)))\r\n        btmCrvs = btmSrf.PerimeterCurves()\r\n        btmPolCrv = PolyCurve.ByJoinedCurves(btmCrvs)\r\n        offseted_btmPolCrv = btmPolCrv.Offset(offSetDist)\r\n        h_modified_btmPolCrv = offseted_btmPolCrv.Translate(0,0,-h-0.3)\r\n        return h_modified_btmPolCrv\r\n    \r\n    def findUprCrv(_btmPolCrv, sym_valDict):\r\n        btmCrvZ = _btmPolCrv.StartPoint.Z\r\n        test = (sym_valDict[\"C1\"] + sym_valDict[\"C2\"] + sym_valDict[\"C3\"])\r\n        #H = abs(sym_valDict[\"H2\"]) + (sym_valDict[\"C1\"] + sym_valDict[\"C2\"] + sym_valDict[\"C3\"])\r\n        H = abs(round(btmCrvZ,2))\r\n        G = sym_valDict[\"G\"]\r\n        offSetDist = (G * H)\r\n        \r\n        uprPolCrv = _btmPolCrv.Translate(0,0,H).Offset(offSetDist)\r\n        uprCrvZ = uprPolCrv.StartPoint.Z\r\n        return uprPolCrv#_btmPolCrv,btmCrvZ,uprPolCrv,uprCrvZ #btmCrvZ,uprCrvZ,test\r\n\r\n\r\n    fdnsGeo = elem.Geometry()[0]\r\n    btmPolCrv = findBtmCrv(fdnsGeo, sym_valDict)\r\n    uprPolCrv = findUprCrv(btmPolCrv, sym_valDict)\r\n    res = Solid.ByLoft([btmPolCrv,uprPolCrv]).Translate(0,0,surv_base_Gap)\r\n    return res\r\n\r\n    \r\ndef addExcaInElemDicts(elemDicts, surv_base_Gap):\r\n    allExcas = []\r\n    for idx,dic in enumerate(elemDicts):\r\n        elem = dic[\"Elem\"]\r\n        wms = dic[\"wms\"]\r\n        excaBln = \"Exca\" in \"\".join(list(map(lambda x: x[\"Dynamo 물량산출식\"], wms)))\r\n        if excaBln:\r\n            sym_valDict = wms[0][\"Sym_Val Dict\"]\r\n            excaGeo = makeExcaShape(elem, sym_valDict, surv_base_Gap)\r\n            try:\r\n                allExcasUni = Solid.ByUnion(allExcas)\r\n                eff_excaGeo = excaGeo.Split(allExcasUni)[0]\r\n                allExcas.append(excaGeo)\r\n            except:\r\n                eff_excaGeo = excaGeo\r\n                allExcas.append(excaGeo)\r\n            dic[\"ExcaGeo\"] = eff_excaGeo\r\n\r\n    return elemDicts\r\n\r\n\r\ndef find_allGeo_UG_elems(elemDicts):\r\n    geoResult = []\r\n    for dic in elemDicts:\r\n        elem = dic[\"Elem\"]\r\n        wms = dic[\"wms\"]\r\n        excaBln = \"Exca\" in \"\".join(list(map(lambda x: x[\"Dynamo 물량산출식\"], wms)))\r\n        famType_ = wms[0][\"Family Type Name\"]\r\n            \r\n        if \"MAT_\" in famType_ or \"Mass_\" in famType_ or \"Pit\" in famType_ or \"Trench\" in famType_:\r\n            if \"Slab\" in famType_ or \"MAT_\" in famType_ or \"Mass_\" in famType_ : ## 내부 빈공간 있는 RC부재는 꽉채워서 공제 \r\n                srfs = elem.Geometry()[0].Explode() ## surface들\r\n                btmSrf = PolySurface.ByJoinedSurfaces(list(filter(lambda x: round(x.NormalAtParameter(0.5,0.5).Z, 3) == -1, srfs)))\r\n                btmCrvs = btmSrf.PerimeterCurves()\r\n                btmPolCrv = PolyCurve.ByJoinedCurves(btmCrvs)\r\n                btmCrvZ = btmPolCrv.StartPoint.Z\r\n                uprPolCrv = btmPolCrv.Translate(0,0,(0-btmCrvZ))\r\n                targetGeo = Solid.ByLoft([btmPolCrv,uprPolCrv])\r\n                geoResult.append(targetGeo)\r\n            else:\r\n                geoResult.append(elem.Geometry()[0])\r\n        elif \"PED_\" in famType_ or \"TG_\" in famType_ or \"SOG_\" in famType_ or \"UG\" in famType_:\r\n            geoResult.append(elem.Geometry()[0])\r\n            \r\n        elif excaBln:\r\n            geoResult.append(elem.Geometry()[0])\r\n            \r\n\r\n    return geoResult\r\n\r\n\r\ndef add_effExcaInElemDicts(elemDicts):\r\n    ## 서베이 포인트와 프로젝트 포인트의 Z값 차이로 인한 형상 높이 오류 수정값\r\n    surv_base_Gap = Revit.Elements.Coordinates.BasePoint().Z - Revit.Elements.Coordinates.SurveyPoint().Z\r\n    allGeo_UG_RC_Elems = find_allGeo_UG_elems(elemDicts)\r\n    allUniGeo_UG_RC_Elems = Solid.ByUnion(allGeo_UG_RC_Elems)\r\n    elemDicts_excas = addExcaInElemDicts(elemDicts, surv_base_Gap)\r\n    \r\n    for dic in elemDicts_excas:\r\n        if \"ExcaGeo\" in dic.keys():\r\n            excaGeo = dic[\"ExcaGeo\"]\r\n\r\n            eff_excaGeo = excaGeo\r\n            splitResult = eff_excaGeo.Split(allUniGeo_UG_RC_Elems)\r\n            dic[\"effExcaGeo\"] = eff_excaGeo\r\n            dic[\"effBackfillGeo\"] = splitResult[0]\r\n            #try:\r\n            #    dic[\"effDisposalGeo\"] = splitResult[1]#eff_excaGeo.Intersect(allUniGeo_UG_RC_Elems)\r\n            #except:\r\n            #    dic[\"effDisposalGeo\"] = []\r\n        \r\n        wms = dic[\"wms\"]\r\n        for wm in wms:\r\n            if \"Exca\" in wm[\"Dynamo 물량산출식\"] or\\\r\n               \"Back\" in wm[\"Dynamo 물량산출식\"] or\\\r\n               \"Disp\" in wm[\"Dynamo 물량산출식\"]:\r\n                wm[\"Sym_Val Dict\"][\"Exca\"] = dic[\"effExcaGeo\"].Volume\r\n                wm[\"Sym_Val Dict\"][\"Back\"] = dic[\"effBackfillGeo\"].Volume\r\n                wm[\"Sym_Val Dict\"][\"Disp\"] = dic[\"effExcaGeo\"].Volume - dic[\"effBackfillGeo\"].Volume\r\n\r\n                #try:\r\n                #    wm[\"Sym_Val Dict\"][\"Disp\"] = dic[\"effDisposalGeo\"].Volume\r\n                #except:\r\n                #    wm[\"Sym_Val Dict\"][\"Disp\"] = 0\r\n\r\n\r\n    return elemDicts_excas\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nif earthWork_calcMode:\r\n    OUT = 0\r\nelse:\r\n    OUT = add_effExcaInElemDicts(elemDicts)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "fb1aef36c6274fd48c14e9a3127ec8e9",
      "Inputs": [
        {
          "Id": "f11a15768d5746ea9b3149fa74e9f064",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70c3ece33dd6402ba9528d8fac3a78ef",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f91fcafbd74a4726a0feb1b7027b8a3c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuiapp = DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n#collector1 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\nimport copy\r\n###################################################################################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n###########################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nelemDicts_eachEarth = IN[0]\r\nelemDicts_wholeEarth = IN[1]\r\n\r\nif elemDicts_eachEarth:\r\n    elemDicts = elemDicts_eachEarth\r\nelse:\r\n    elemDicts = elemDicts_wholeEarth\r\n\r\ndef clean_SymValDict(elemDicts):\r\n    for dic in elemDicts:\r\n        wms = dic[\"wms\"]\r\n        for wm in wms:\r\n            formula = wm[\"Dynamo 물량산출식\"]\r\n            SymValDicts = wm[\"Sym_Val Dict\"]\r\n            SymValItems = list(zip(SymValDicts.Keys, SymValDicts.Values))\r\n            sym_val_keySets = []\r\n            sym_val_valSets = []\r\n            for k,v in SymValItems:\r\n                if k in formula:\r\n                    sym_val_keySets.append(k)\r\n                    sym_val_valSets.append(v)\r\n            #wm[\"Sym_Val Set\"] = [sym_val_keySets,sym_val_valSets]\r\n            wm[\"Sym_Val Set\"] = dict(zip(sym_val_keySets,sym_val_valSets))\r\n            formula_eqSymRemove = formula.lstrip(\"=\")\r\n            tmp = formula_eqSymRemove\r\n            for k in sym_val_keySets: ## 이 부분은 좀더 범용 처리 필요할수도\r\n                priorSymList = [\"Exca\", \"Back\", \"Disp\"]\r\n                #any(list(map(lambda x: x in tmp, priorList)))\r\n                #if \"Exca\" in tmp or \"Back\" in tmp or \"Disp\" in tmp:\r\n                if any(list(map(lambda x: x in tmp, priorSymList))):\r\n                    appliedSym = list(filter(lambda x: x in tmp, priorSymList))[0]\r\n                    #if len(k) > 1:\r\n                    if k == appliedSym:\r\n                        tmp = tmp.replace(k, str(wm[\"Sym_Val Set\"][k]))\r\n                else:\r\n                    tmp = tmp.replace(k, str(wm[\"Sym_Val Set\"][k]))\r\n                \r\n            \r\n            #wm[\"calcResult\"] = tmp.strip()\r\n            wm[\"calcResult\"] = round(eval(tmp.strip()),3)\r\n    \r\n    return elemDicts\r\n\r\n# Place your code below this line\r\n\r\nelemDicts_withSymValSet = clean_SymValDict(elemDicts)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = clean_SymValDict(elemDicts)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "0c4ce42b1eec4eed8035d10e12270fc2",
      "Inputs": [
        {
          "Id": "715d5eb8400a49d68e4675ea776ce995",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "feeba59b23ad49008487887365381aee",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d25f86b42589432686f7e0c250268c07",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ExportToExcel@string,string,int,int,var[][],bool,bool",
      "Id": "3a2291d54fa74970b0cacd8a3a8a08b8",
      "Inputs": [
        {
          "Id": "c2327385dc4d4427ad017aefe187b6f3",
          "Name": "filePath",
          "Description": "File representing the Excel workbook\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f39659b145d0462482073c7655fe3582",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "99b7a172bab04fcf9e908e78fd92eaf3",
          "Name": "startRow",
          "Description": "Start row for writing data. Enter 0 for Row 1, 1 for Row 2, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26d7414229104d838c6c46f04092e46f",
          "Name": "startColumn",
          "Description": "Start column for writing data. Enter 0 for Column A, 1 for Column B, etc.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "908bb9ba4c4445618470abf4e49c4100",
          "Name": "data",
          "Description": "Data to write to the spreadsheet\n\nvar[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "bc26711cf2d84b4faf73917768d70b24",
          "Name": "overWrite",
          "Description": "Toggle to clear spreadsheet before writing\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "457260c062b340eeaab5b5dedbfbc540",
          "Name": "writeAsString",
          "Description": "Toggle to switch between writing Excel file as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1543c714eb7542f6bf73df28c1912c26",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Write data to a Microsoft Excel spreadsheet. Data is written by row with sublists to be written in successive rows. Rows and columns are zero-indexed; for example, the value in the data list at [0,0] will be written to cell A1. Null values and empty lists are written to Excel as empty cells. This node requires Microsoft Excel to be installed.\n\nData.ExportToExcel (filePath: string, sheetName: string, startRow: int, startColumn: int, data: var[][], overWrite: bool = false, writeAsString: bool = false): var[][]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport operator\r\nfrom itertools import groupby\r\nimport copy\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDicts = IN[0]\r\n# Place your code below this line\r\ndef extractCalcResult(elemDicts):\r\n    res = []\r\n    for d in elemDicts:\r\n        wms = d[\"wms\"]\r\n        for wm in wms:\r\n            keys = [\"SheetName\", \"rIDX\", \"Work Master Code\", \"Family Type Name\", \"calcResult\"]\r\n            vals = list(map(lambda x: wm[x],keys))\r\n            k_v = list(zip(keys, vals))\r\n            res.append(dict(k_v))\r\n        \r\n    return res\r\n\r\n\r\ndef make_dict_groupBy_Sheet_WM(elemDicts):\r\n    extractedDicts = extractCalcResult(elemDicts)\r\n    sortedDicts_sheet = sorted(extractedDicts, key=operator.itemgetter(\"SheetName\"))\r\n    grpDicts_Sheet = groupby(sortedDicts_sheet, lambda x: x[\"SheetName\"])\r\n    \r\n    res = {}\r\n    for k, g in grpDicts_Sheet:\r\n        sorted_g = sorted(list(g), key=operator.itemgetter(\"rIDX\"))\r\n        grped_g = groupby(sorted_g, lambda x: x[\"rIDX\"])\r\n        tmp = []\r\n        for k_,g_ in grped_g:\r\n            gg = copy.deepcopy(list(g_))\r\n            calcSum = round(sum(map(lambda x: x[\"calcResult\"],gg)),3)\r\n            rIDX = gg[0][\"rIDX\"]\r\n            tmp.append((rIDX,calcSum))\r\n            \r\n        res[k] = tmp\r\n    return res\r\n\r\ndef fill_dict_emptySlot(dic):\r\n    tmp = []\r\n    for k, v in dic.items():\r\n#        for d in v:\r\n#            all_idxs = list(map(lambda x: x[0],v))\r\n#            max_idx = max(all_idxs)\r\n#            full_range = range(0, max_idx+1)\r\n        all_idxs = list(map(lambda x: x[0],v))\r\n        max_idx = max(all_idxs)\r\n        full_range = range(0, max_idx+1)\r\n        \r\n        for i in full_range:\r\n            if i not in all_idxs:\r\n                v.append([i, \"\"])\r\n        tmp.append(sorted(v, key=operator.itemgetter(0)))\r\n        \r\n    res = list(zip(dic.keys(),tmp))\r\n    return dict(res)\r\n\r\n\r\n\r\ndict_groupBy_Sheet_WM = make_dict_groupBy_Sheet_WM(elemDicts)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = [fill_dict_emptySlot(dict_groupBy_Sheet_WM), elemDicts]",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "df538152d8514dcaab3d75f0734a582b",
      "Inputs": [
        {
          "Id": "a26d934531764b6fa9513dcabfe0e2f2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ecd0a9d586d84b0ea205aa4d38047209",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Components",
      "Id": "d9de8a61787442ceb4b5e56fe75e7a1d",
      "Inputs": [
        {
          "Id": "c24104869fb5431bacfe98eac9722e96",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ddaee91b731249a990626eee2bce9ca4",
          "Name": "keys",
          "Description": "Keys of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32031adf5ee64bc49ae7c3d65dc89ca3",
          "Name": "values",
          "Description": "Values of the dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the components of a Dictionary. The reverse of Dictionary.ByKeysValues.\n\nDictionary.Components ( ): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ae19779d3103471bb4993d2624fee3c8",
      "Inputs": [
        {
          "Id": "b4d9a9e2970e4ba7a0adf077ee9264e5",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "c5bae2a161c44dbab17d406f3fc7e8d6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b75b3669acf47baab8e27b5432293d5",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "0e906b492e964f0388034bb3dba9715c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fbe496ff58b5496bab3d818170be9b90",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "file_path;",
      "Id": "79390c9ce7774e469399c480c2fd9540",
      "Inputs": [
        {
          "Id": "f9f782fc2baf4e9a9eeaf109ac5875b7",
          "Name": "file_path",
          "Description": "file_path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "859d68f38a9e4150ba95406d0e5a28cd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "file_path;",
      "Id": "e4bace56c16d462b8e637e17ad1a1046",
      "Inputs": [
        {
          "Id": "83e98e90705349c8b13048c1f1cfe7c0",
          "Name": "file_path",
          "Description": "file_path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3ef7f68ea224374834c39ddb549b2ca",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "43c850fe5b414baaa43fa6abbf66d41a",
      "Inputs": [
        {
          "Id": "9e003a398c744cf489ca6cf87328c986",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6b9ac6c86e794528a8f432bda91bb2d7",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "66334226642f44b19bfe040f61500a5c",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "6;\n31;",
      "Id": "2524f0f864744ce88dfa2ab2d9d3e61d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "724b257b6e404ed585ee188d157145ba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfa2bdde29b94030aa701b88ab3ca988",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];\ni[1];",
      "Id": "5439dd63dedb49b3a2f7682ca7a4cdfc",
      "Inputs": [
        {
          "Id": "1ce92a82549b4a7881e2473bb2f20665",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0c19bfc50d245b9adf2ff5a9727d352",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18752638cd7f402a99de28e3a2a49ddc",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "dict_groupBy_Sheet_WM;",
      "Id": "92a5d0c5dcc842d7b250f2421b0731ad",
      "Inputs": [
        {
          "Id": "966c11318b8a4a43afa0e303f1b32ac8",
          "Name": "dict_groupBy_Sheet_WM",
          "Description": "dict_groupBy_Sheet_WM",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e09582488be4705b6ac572c258d018e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport operator\r\nfrom itertools import groupby\r\nimport copy\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDicts = IN[0]\r\n# Place your code below this line\r\ndef extractCalcResult(elemDicts):\r\n    res = []\r\n    for d in elemDicts:\r\n        wms = d[\"wms\"]\r\n        for wm in wms:\r\n            keys = [\"SheetName\", \"rIDX\", \"Work Master Code\", \"Gauge Code\", \"wmSpecs\", \"Family Type Name\", \"calcResult\"]\r\n            vals = list(map(lambda x: wm[x],keys))\r\n            k_v = list(zip(keys, vals))\r\n            res_d = dict(k_v)\r\n            if \"Description\" in wm.Keys:\r\n                res_d[\"Description\"] = wm[\"Description\"]\r\n            else:\r\n                res_d[\"Description\"] = \"\"\r\n            res_d[\"wmcANDgauge\"] = \"\".join([wm[\"Work Master Code\"],wm[\"Gauge Code\"]])\r\n            res_d[\"UoM\"] = wm[\"Unit\"]\r\n            res.append(res_d)\r\n        \r\n    return res\r\n\r\ndef make_dict_groupBy_WM(elemDicts):\r\n    extractedDicts = extractCalcResult(elemDicts)\r\n    sortedDicts_WMC = sorted(extractedDicts, key=operator.itemgetter(\"wmcANDgauge\"))\r\n    grpDicts_WMC = groupby(sortedDicts_WMC, key=operator.itemgetter(\"wmcANDgauge\"))\r\n    \r\n    res = []\r\n    for k, g in grpDicts_WMC: \r\n        wmCode = k\r\n        gg = copy.deepcopy(list(g))\r\n        calcSum = round(sum(map(lambda x: x[\"calcResult\"], gg)),3)\r\n        wmSpecs = gg[0][\"wmSpecs\"]\r\n        catStr = \"_\".join([wmSpecs[0],wmSpecs[1]])\r\n        specOnly = list(filter(lambda x: x!=0, wmSpecs))[3:]\r\n        addSpec = gg[0][\"Description\"]\r\n        dict_res = {\r\n            \"catStr\": catStr,\r\n            \"Work Master Code\": wmCode,\r\n            \"Gauge Code\": gg[0][\"Gauge Code\"],\r\n            \"Description\": wmSpecs[2],\r\n            \"Spec.\": \"\\n\".join(specOnly),\r\n            \"Additional Spec.\": addSpec,\r\n            \"calcVal\": calcSum,\r\n            \"UoM\": gg[0][\"UoM\"]\r\n            #\"wmSpecs\": wmSpecs,\r\n            }\r\n        res.append(dict_res)\r\n    \r\n    \r\n    return res\r\n\r\nextDicts = extractCalcResult(elemDicts)\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = make_dict_groupBy_WM(elemDicts)\r\n#OUT = sorted(set(map(lambda x: x[\"Work Master Code\"], extDicts)))",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "f12f2f24ce254bd0baef14f26c5d20e9",
      "Inputs": [
        {
          "Id": "eb38296ae8b4424f892c47d4c8380597",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9f7652d7dcd49818455cfcb11afd4d5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\mk\\mQ\\hecCalc\\2023\\documentum\\Total BOQ_GAH_STB.xlsx",
      "InputValue": ".\\Total BOQ_GAH_STB.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "ecccb4f11a2543e29cb666423f4f697e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "095ac27cee8044e7a2f1a3250bb3ef14",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "545bdda03ce34cbf8f380aa09996affe",
      "Inputs": [
        {
          "Id": "60314121b72e4091a067f4ad720e1648",
          "Name": "file",
          "Description": "File representing the Excel workbook\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "809aab676bdd45759176cd7fc1b7287c",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing data\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e88f8bd2a3704b26b0a47f1a4af42085",
          "Name": "readAsStrings",
          "Description": "Toggle to read cells as strings\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c46c0fce7ef4f3b9d77f0c79a6d570a",
          "Name": "showExcel",
          "Description": "Toggle to show excel's main window\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e5bac32700234c6d9ed167d8d9c8f586",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"(AR) BOQ\";\nfalse;",
      "Id": "23c16e6f54c54461a94198d996b688b8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b6d47b8f9ac240dfae1f3aa0b2ae6664",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c9727449e64f48e69788fef8ef486d53",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "cb8eb6bb001d4e018998c1f81063a7b3",
      "Inputs": [
        {
          "Id": "ca3839e498cc41deb8e9225ab7ab8210",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e30bb663437641e092989a1db00f22eb",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "wm_sheetDatas;",
      "Id": "14f3ccaaff4b40d6995625fe77a4fefc",
      "Inputs": [
        {
          "Id": "328222afafa543d68afcfdc2f53476d0",
          "Name": "wm_sheetDatas",
          "Description": "wm_sheetDatas",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01cf442cc25e44a3937621ee3fddaaed",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "wm_sheetDatas;",
      "Id": "e1f7183e17d94ac6b722d8c8f5f42ae7",
      "Inputs": [
        {
          "Id": "7dc96717c51d4f9eaac5abcc8680a77d",
          "Name": "wm_sheetDatas",
          "Description": "wm_sheetDatas",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18bef21345f64804b4e31abad6496667",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "wm_sheetDatas;",
      "Id": "6689bfc92b614a86a2438579264ab559",
      "Inputs": [
        {
          "Id": "8c0251f3a93a45e3af2c10b715fdc9fc",
          "Name": "wm_sheetDatas",
          "Description": "wm_sheetDatas",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c8a37b2461841eebfd7ca01ff4cbbcb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "dcbac945a42f4a5c9a9db85369fb5958",
      "Inputs": [
        {
          "Id": "c9e1a9717b414fb18cba11de5a217a51",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "15939b39f28f4e619a0eb5412fcc19b8",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bd85b9cebae40d887ecf33249bfa9ea",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "abf63584b5df484fa09c861a33e2a423",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b56e73df83b44e3e99d4218e0c900f86",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "0a5e14b22e144bed8451ebf583eb117a",
      "Inputs": [
        {
          "Id": "e5be3df534fc4ffca7597213d53ae45a",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "524b1b7f02034b7e9f83fd908cc91185",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65c451db8acc4de497ba72e61d8cd1ed",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "6;",
      "Id": "0de826304a0c4eeb88bf431965d3fbff",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "52e9ec6674db4af88586c7799cfe0b57",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "353906790eac4dbe9265acc4fd59f260",
      "Inputs": [
        {
          "Id": "a4bfa9cbcd0b41e78735db0e5ca3876c",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e3824f6d5f54568850402f597fa43b7",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Keys",
      "Id": "0e9dd9cb6fb34e35b5bb8303dbaaffa7",
      "Inputs": [
        {
          "Id": "a2812fed94d14546ab79190346f3a1ab",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "848bebf74a5b471892ccbed05551e0d2",
          "Name": "keys",
          "Description": "Keys of the Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the keys in a Dictionary.\n\nDictionary.Keys: string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e861b848a856496cbce58b3351868c08",
      "Inputs": [
        {
          "Id": "e4473f11a1094475b798c856c23211f3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "200e8c0696ef4ed5a750d77b90d8adb2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ccaaaeb81e64cf0afd6b6f7368aeef8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Type\";\n\"Type Name\";",
      "Id": "b8bb7074d1474d5c817d440222fe7c73",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b1004f3eba744651bbdaac31efd7d762",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31bda9e709804f23bbcf11179ac70749",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "a6525529e2854c5da74f8737df2462da",
      "Inputs": [
        {
          "Id": "02e0bb5b9d0e457ebd53e48eca839e1d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ff046ebd624422dad4be5c1cb3a9e98",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b41720919fd0439ea0dd87f71b67080e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "b0d49f5a08ca4d7aa0ec4d85b3c4eb68",
      "Inputs": [
        {
          "Id": "bee976de5cac45d9a7729a1dad8b487d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08cf3f9b3e5d43e48be4ee2445de11d1",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "343c269326d242598a644214bc9fd722",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "73b6dea7f2e447e79d14252e5f29c46f",
      "Inputs": [
        {
          "Id": "5898129ba6e94717bad1c2e9e6b75313",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90f57e60ceb2474582ae512af066d4ae",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dbe3d4e0b3c843b381d4619e6b08c419",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "220d3bdb4cb2425baa34694c41b40bf4",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "filtered;",
      "Id": "5fa4cf5424f741e2afce70431dab7668",
      "Inputs": [
        {
          "Id": "dbe3e681e84f4831b7dab244ee31115d",
          "Name": "filtered",
          "Description": "filtered",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f811ed0700d54255b83c12394870eeff",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Contains@var[]..[],var[]..[]",
      "Id": "ff9036ffe34e498e92682212d56492b0",
      "Inputs": [
        {
          "Id": "2e0e9ab5640c43a492b1a15323d3445b",
          "Name": "list",
          "Description": "List to search in\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1b3d9a6071e4c09a2b8469bc8792426",
          "Name": "item",
          "Description": "Item to look for\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5dce84b2c7754a2bbef894ea1de56dd5",
          "Name": "bool",
          "Description": "True if list contains item, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list contains the given item. This function searches through the sublists contained in it.\n\nList.Contains (list: var[]..[], item: var[]..[]): bool"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\nfrom string import ascii_lowercase\r\nimport itertools\r\nfrom itertools import chain\r\nimport re\r\n    \r\n#################################Module For Functional Programing#############################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\n        \r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n##############################################################################################################\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\n        \r\ndef find_IsInList(List, str):\r\n    if str == None or List == None:\r\n        pass\r\n    else:\r\n        res = str in List\r\n        return res\r\n\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    #endidxs_tmp= list(map(lambda x: x[0],res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n    \r\ndef find_range_by_columnItem_discrim(db, col_idx, 판별항목):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInList(판별항목, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    #endidxs_tmp= list(map(lambda x: x[0],res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nbd_name = IN[0]\r\ndescr판별항목 = IN[1]\r\n판별항목lv1 = descr판별항목[0]\r\n판별항목lv2 = descr판별항목[1]\r\ndb = IN[2]\r\n\r\n\r\n# Place your code below this line\r\ndef Is_newSheet(Sheet):\r\n    \r\n    hdrs_withIdx = dict(list(find_headersAtSheet(Sheet).items()) + list(find_headers_Building(Sheet, bd_name).items()))\r\n    datasOnWMCodeCol = list(map(lambda x: x[hdrs_withIdx[\"Work Master Code\"]], Sheet))\r\n    \r\n    p = re.compile('\\w{8}-\\w{5}')\r\n    IsNewSheet = not(any(list(map(lambda x: p.match(str(x)), datasOnWMCodeCol))))\r\n    \r\n    \r\n    return [IsNewSheet,datasOnWMCodeCol]\r\n    \r\ndef find_headersAtSheet(Sheet):\r\n    headers_Sheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(Sheet[2])))\r\n    res = dict(headers_Sheet)\r\n    del res[\"_\"]\r\n    \r\n    return res\r\n    \r\ndef find_headers_Building(Sheet, bd_name):\r\n    headers_bd = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(Sheet[3])))\r\n    headers_targetBD = list(filter(lambda x: x[0] == bd_name, headers_bd))\r\n    res = {}\r\n    res[\"targetBD\"] = headers_targetBD[0][1]\r\n    return res\r\n\r\ndef find_rangesAtSheet(Sheet, hdrs_withIdx, 판별항목):\r\n    return find_range_by_columnItem_discrim(Sheet, hdrs_withIdx[\"Description\"], 판별항목)\r\n\r\ndef get_DataOnRangesAtSheet(Sheet):\r\n    \r\n    hdrs_withIdx = dict(list(find_headersAtSheet(Sheet).items()) + list(find_headers_Building(Sheet, bd_name).items()))\r\n    rgs_v_lv1 = list(map(lambda x: x[1], find_rangesAtSheet(Sheet, hdrs_withIdx, 판별항목lv1).values()))\r\n    rgs_v_lv2 = list(map(lambda x: x[1], find_rangesAtSheet(Sheet, hdrs_withIdx, 판별항목lv2).values()))\r\n    \r\n    idxs_v_lv1 = list(map(lambda x: range(x[0],x[1]+1), rgs_v_lv1))\r\n\r\n    datas_lv1 = []\r\n    col_datas = list(map(lambda x: x[hdrs_withIdx[\"Description\"]], Sheet))\r\n    for rg in idxs_v_lv1:\r\n        lv1_str = col_datas[rg[0]-1]\r\n        tmp = []\r\n        for i in rg:\r\n            tmp.append([i, lv1_str, col_datas[i]])\r\n        \r\n        datas_lv1.append(tmp)\r\n\r\n    datas_lv2 = []\r\n    for rg in datas_lv1:\r\n        tmp = []\r\n        for idx,v in enumerate(rg):\r\n            if v[2] == None:\r\n                tmp.append([v[0],v[1],tmp[idx-1][2]])\r\n            else:\r\n                tmp.append(v)\r\n        datas_lv2.append(tmp)\r\n\r\n    flatten_res = list(chain(*datas_lv2))\r\n    rres = itertools.groupby(flatten_res, lambda x: [x[1], x[2]])\r\n    \r\n    res = {}\r\n    for k, g in rres:\r\n        #print(list(g))\r\n        removedfirstelem_g = list(g)[1:]\r\n        res[\"_\".join(k)] = [removedfirstelem_g[0][0],removedfirstelem_g[-1][0]]\r\n        #res[\"_\".join(k)] = removedfirstelem_g\r\n    \r\n    return res\r\n\r\n\r\nhdrs_withIdx = dict(list(find_headersAtSheet(db).items()) + list(find_headers_Building(db, bd_name).items()))\r\n\r\nif Is_newSheet(db)[0]:\r\n    OUT = hdrs_withIdx, [Is_newSheet(db)[0],get_DataOnRangesAtSheet(db)]\r\nelse:\r\n    OUT = hdrs_withIdx, Is_newSheet(db)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "6d3257a7ae1544ba96260a2930df41a0",
      "Inputs": [
        {
          "Id": "e40fc391bb9543069e39578990171d11",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c86c20b170cf41b2b9cfee070d24dc41",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec0e917339cb4f81875e476c63e9f5d3",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a21d79dc4e546c7a5d930f015a1ccf9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "description판별항목1;",
      "Id": "1d1c6adab25c4ce38795f6d70084638b",
      "Inputs": [
        {
          "Id": "4e559b0185dc4491b7280e9af4d25100",
          "Name": "description판별항목1",
          "Description": "description판별항목1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75452394259f454aac6b7f0729e4e1f7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "86d4c756923b4ec5a7a76f44031313e3",
      "Inputs": [
        {
          "Id": "b6b668c063784cf0ba5e742521351658",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e51c34b755b4b5daebc49a04c834a02",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be1b029e33894bd0902651bb82065169",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "6;",
      "Id": "36b72e613f054f51ab44d4a659a11baf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da8b6750c54241e4ae6ec824684ac955",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "522eba1415564c619ea3a722c3bfca63",
      "Inputs": [
        {
          "Id": "85ac0d8fca71462086880054318c5da1",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1713810eee684d02934f951dc7ba675d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b345d4e40bdc4e6593a996aa4cb30453",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "78f0730f98164cf88c95031451db6a2e",
      "Inputs": [
        {
          "Id": "830fdb6b17c24e5e9b88bcb80c215549",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd49bd91c8404815a9c1a36fc411c667",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "5;",
      "Id": "f8862fff8dc647619582f6b8e6003793",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d4b321675a114235bf59cb7e5d0e3e28",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Steam Turbine Building",
      "Id": "aae6ee369697433d96978d6f0a38227c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a2ecfaa19c334eddb1d809fd5b9c21b7",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "description판별항목2;",
      "Id": "6790ac16e9864c6282b9f0a28e4bac80",
      "Inputs": [
        {
          "Id": "42770b41a2d946509605b16ddcffe4ed",
          "Name": "description판별항목2",
          "Description": "description판별항목2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "112368b6347846d79c81bcc2f9ded6e3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "8066549a4a9b47df80e48559f550e5c6",
      "Inputs": [
        {
          "Id": "893113c989264cd19431bbb81823b560",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5241a20caa8f481a94fc7be2332e76fc",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f41c17b57dc4486791d293b996225179",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import groupby\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nIsNewSheet = IN[0][0]\r\ninputDatas = IN[0][1]\r\nwmsDicts = IN[1]\r\n# Place your code below this line\r\n\r\ndef get_wmsGrped_sorted_idxed(rangeDicts, wmsDicts):\r\n    wmsSorted = sorted(wmsDicts, key=lambda x: x[\"Work Master Code\"])\r\n    wmsGrped = groupby(wmsDicts, lambda x: x[\"catStr\"])\r\n    wmsGrped_sorted = []\r\n    \r\n    for k,v in wmsGrped:\r\n        grp_sorted = sorted(list(v), key=lambda x: x[\"Work Master Code\"])\r\n        stt_idx = rangeDicts[k][0]\r\n        length_grp = len(grp_sorted)\r\n        idxs = range(stt_idx, stt_idx+length_grp)\r\n        zip_grp_idxs = list(zip(idxs, grp_sorted))\r\n        for i in zip_grp_idxs:\r\n            d = i[1]\r\n            d[\"rIDX\"] = i[0]\r\n        \r\n        wmsGrped_sorted.append(grp_sorted)\r\n        \r\n    wmsGrped_sorted_idxed = list(chain(*wmsGrped_sorted))\r\n    return wmsGrped_sorted_idxed\r\n\r\ndef match_DictWithIdx(datasOnWMCodeCol, wmsDicts):\r\n    idxWithDatasOnWMCode = enumerate(datasOnWMCodeCol)\r\n    for d in wmsDicts:\r\n        d[\"rIDX\"] = datasOnWMCodeCol.index(d[\"Work Master Code\"])\r\n        \r\n    res = wmsDicts\r\n    return res\r\n\r\n# Assign your output to the OUT variable.\r\nif IsNewSheet:\r\n    rangeDicts = inputDatas\r\n    res = get_wmsGrped_sorted_idxed(rangeDicts, wmsDicts)\r\nelse:\r\n    datasOnWMCodeCol = inputDatas\r\n    res = match_DictWithIdx(datasOnWMCodeCol, wmsDicts)\r\n\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "cf52cd359968431c954ef0c1c105f09b",
      "Inputs": [
        {
          "Id": "c65df92cac4c49448f02fb3db90aca10",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5d6a579e11fc46ff81e2a20afbd033ad",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc0b74d5401541c0bc827a65e85ad1a1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import groupby\r\n\r\nimport DSOffice\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nfilePath = IN[0]\r\nsheetName = IN[1]\r\nhdrs_withIdx = IN[2]\r\nIsNewSheet = IN[3][0]\r\ndictList = IN[4]\r\n\r\n# Place your code below this line\r\nexportToExcel = DSOffice.Data.ExportToExcel\r\n#print(hdrs_withIdx)\r\n\r\nhdrsColIdxs = [\r\n        hdrs_withIdx[\"Work Master Code\"],\r\n        hdrs_withIdx[\"Gauge Code\"],\r\n        hdrs_withIdx[\"Description\"],\r\n        hdrs_withIdx[\"Spec.\"],\r\n        hdrs_withIdx[\"Additional Spec.(설계자 작성)\"],\r\n        hdrs_withIdx[\"UoM\"],\r\n        hdrs_withIdx[\"targetBD\"],\r\n            ]\r\n\r\ndef writeToNewSheet(dictList):\r\n    dictList_grped = groupby(dictList, lambda x: x[\"catStr\"])\r\n    \r\n    dictList_grpedList = []\r\n    for k,grp in dictList_grped:\r\n        dictList_grpedList.append(list(grp))\r\n    \r\n    def writeExcel(keys,startColhdr, grpedList):\r\n        for i in dictList_grpedList:\r\n            #keys = [\"Work Master Code\", \"Gauge Code\", \"Description\", \"Spec.\", \"Additional Spec.\", ]\r\n            startCol = hdrs_withIdx[startColhdr]\r\n            startRow = i[0][\"rIDX\"]\r\n    \r\n            datas = list(zip(*map(lambda y: map(lambda x: x[y], list(i)), keys)))\r\n            #res.append(datas)\r\n            exportToExcel(filePath, sheetName, startRow, startCol, datas)\r\n    \r\n    keys1 = [\"Work Master Code\", \"Gauge Code\", \"Description\", \"Spec.\", \"Additional Spec.\", ]\r\n    keys2 = [\"UoM\"]\r\n    keys3 = [\"calcVal\"]\r\n    \r\n    writeExcel(keys1,\"Work Master Code\", dictList_grpedList)\r\n    writeExcel(keys2,\"UoM\", dictList_grpedList)\r\n    writeExcel(keys3,\"targetBD\", dictList_grpedList)\r\n    \r\n    return dictList_grpedList\r\n    \r\ndef writeToExistSheet(dictList):\r\n    dictList_grped = groupby(dictList, lambda x: x[\"catStr\"])\r\n    \r\n    dictList_grpedList = []\r\n    for k,grp in dictList_grped:\r\n        dictList_grpedList.append(list(grp))\r\n    \r\n    def writeExcel(keys,startColhdr, grpedList):\r\n        for i in dictList_grpedList:\r\n            #keys = [\"Work Master Code\", \"Gauge Code\", \"Description\", \"Spec.\", \"Additional Spec.\", ]\r\n            startCol = hdrs_withIdx[startColhdr]\r\n            startRow = i[0][\"rIDX\"]\r\n    \r\n            datas = list(zip(*map(lambda y: map(lambda x: x[y], list(i)), keys)))\r\n            #res.append(datas)\r\n            exportToExcel(filePath, sheetName, startRow, startCol, datas)\r\n    \r\n#    keys1 = [\"Work Master Code\", \"Gauge Code\", \"Description\", \"Spec.\", \"Additional Spec.\", ]\r\n#    keys2 = [\"UoM\"]\r\n    keys3 = [\"calcVal\"]\r\n    \r\n#    writeExcel(keys1,\"Work Master Code\", dictList_grpedList)\r\n#    writeExcel(keys2,\"UoM\", dictList_grpedList)\r\n    writeExcel(keys3,\"targetBD\", dictList_grpedList)\r\n    \r\n    return dictList_grpedList\r\n# Assign your output to the OUT variable.\r\n\r\nif IsNewSheet:\r\n    OUT = writeToNewSheet(dictList)\r\nelse:\r\n    OUT = writeToExistSheet(dictList)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "53192363f9da457ca86140d19351bdfb",
      "Inputs": [
        {
          "Id": "7d852923babc430fa1d5c8efa5cdde9f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a14711119634cb3be308f0f81f8e3c2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b24df086c9204ccd9af377fabb5536aa",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17c5e50fcdc64d49a30e6884d4f4a9e0",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f9bfde3838746b5aef0d8d9f60bfcfe",
          "Name": "IN[4]",
          "Description": "Input #4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f86a6da172074bfd8722962d69214204",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "filePath;\nsheetName;",
      "Id": "29337ae8d2c94d488ebdc03de0a16ad6",
      "Inputs": [
        {
          "Id": "f36f58acbd9d4a98a75c350160b56455",
          "Name": "filePath",
          "Description": "filePath",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66b06265d43b492688394beaf19bea9d",
          "Name": "sheetName",
          "Description": "sheetName",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3422482c33ca4a8bb54f4221e08c54ac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9b1312780c54a8e89dc026b692e91e8",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];\ni[1];\n//구간 rIdx;",
      "Id": "008b88f58bd548188e4d5668e106d9e3",
      "Inputs": [
        {
          "Id": "8eccee2da9d44095b4a5a8165d65e5e9",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5910d662ad6e4a1087d938c1a9ce900a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3480272d2ec471a96af2b99b4778507",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "//WM code 채워진 상황에서 일치하는  칸에 값 기입하는 로직 추가 필요\n//현재는 비워진 시트 기준으로 자동 채움 기능 구현",
      "Id": "585ec18cd18f42599489c992855c056f",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom functools import reduce\r\nfrom functools import partial\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nlang_mode = IN[0]\r\nwholeDatas = IN[1]\r\ndb = wholeDatas[1:]\r\nallCatSheetsNames = IN[2][2:]\r\n\r\nparamSheet = db[0]\r\nallCatSheets = db[1:]\r\n\r\n#db\r\n# Place your code below this line\r\ndef make_UnifiedDict(dictsList):\r\n    dicts_AllInOne = {}\r\n    for d in dictsList:\r\n        dict_k_v = d.items()\r\n        for k,v in dict_k_v:\r\n            dicts_AllInOne[k] = v\r\n    return dicts_AllInOne\r\n\r\ndef find_IsInStr(target, str):\r\n    if target == None or str == None:\r\n        pass\r\n    else:\r\n        res = target in str\r\n        return res\r\ndef find_range_by_columnItem(db, col_idx, sep_rule):\r\n    tdb = list(map(lambda x: x[col_idx], db))\r\n    last_idx_tdb = len(tdb)-1\r\n    tdb_enum = enumerate(tdb)\r\n    res = list(filter(lambda x: find_IsInStr(sep_rule, x[1]), tdb_enum))\r\n    endidxs_tmp= list(map(lambda x: x[0]-1,res))\r\n    endidxs_tmp.pop(0)\r\n    endidxs = endidxs_tmp + [last_idx_tdb]\r\n    famTypeNames = list(map(lambda x: x[1],res))\r\n    famTypeNamesIdxs = list(map(lambda x: x[0],res))\r\n    rangeSttIdxs = list(map(lambda x: x[0]+1,res))\r\n    rangeEndIdxs = endidxs\r\n    result = dict(zip(famTypeNames, zip(famTypeNamesIdxs, zip(rangeSttIdxs,rangeEndIdxs))))\r\n    return result\r\n    \r\n    \r\ndef find_headersAtSheet(sheet):\r\n    headers_sheet = map(lambda x: [x[1].replace(\"\\n\",\"\"),x[0]], filter(lambda x: x[1] != None, enumerate(sheet[1])))\r\n    \r\n    return dict(headers_sheet)\r\n\r\ndef find_rangesAtSheet(sheet, hdrs_withIdx, trgt_hdr, trgt_str):\r\n    return find_range_by_columnItem(sheet, hdrs_withIdx[trgt_hdr], trgt_str)\r\n\r\n\r\ndef get_DataOnRangesAtParamSheet(sheet):\r\n    \r\n    hdrs_withIdx = find_headersAtSheet(sheet)\r\n    rangesATSheet = find_rangesAtSheet(sheet, hdrs_withIdx, \"Q'ty Cal Type Tag\", \"-\")\r\n    title_idx = map(lambda x: x[0], rangesATSheet.values())\r\n    calcType_colDatas = list(map(lambda x: x[hdrs_withIdx[\"Q'ty Cal Type Tag\"]], sheet))\r\n    calcTypes = list(map(lambda x: calcType_colDatas[x], title_idx))\r\n    rgs_v = list(map(lambda x: x[1], rangesATSheet.values()))\r\n    rgs_k = list(map(lambda x: x, rangesATSheet.keys()))\r\n    \r\n    hdrs_v = list(hdrs_withIdx.values())\r\n    hdrs_k = list(hdrs_withIdx.keys())\r\n    eff_hdrs_v = hdrs_v[2:]\r\n    eff_hdrs_k = hdrs_k[2:]\r\n    \r\n    datas_allCalType = list(map(lambda x: sheet[x[0]-1:x[1]], rgs_v))\r\n    \r\n    def setDict_OnEachCalType(data_calType):\r\n        paramName_lang = \"패밀리 매개변수(from Revit) 영문판\" if lang_mode is True else \"패밀리 매개변수(from Revit) 한글판\"\r\n        calcTypeName = data_calType[0][2]\r\n        data_calType_noneless = list(filter(lambda x: x[hdrs_withIdx[\"항목\"]] != None, data_calType))\r\n#        ## WM row 별 header명 과 짝짓기\r\n        data_withHdrsIdx = list(map(lambda y: list(map(lambda x: y[x], eff_hdrs_v)), data_calType_noneless))\r\n        dict_ = list(map(lambda x: dict(zip(eff_hdrs_k, x)), data_withHdrsIdx))\r\n        dicts_noneless = list(map(lambda y: dict(filter(lambda x: x[1]!=None, y.items())),dict_))\r\n#        ## dict_Cal Type 입력처리\r\n        targetColName = \"Q'ty Cal Type Tag\"\r\n        dicts_finalNoneless = []\r\n        for d in dicts_noneless:\r\n            d[\"Q'ty Cal Type Tag\"] = calcTypeName\r\n            \r\n            if \"입력값\" in d.keys():\r\n                d[\"applyForCalc\"] = d[\"입력값\"]\r\n                dicts_finalNoneless.append(d)\r\n            elif paramName_lang in d.keys():\r\n                d[\"applyForCalc\"] = d[paramName_lang]\r\n                dicts_finalNoneless.append(d)\r\n            else:\r\n                pass\r\n        \r\n        return {calcTypeName: dicts_finalNoneless}\r\n        \r\n    return map(setDict_OnEachCalType, datas_allCalType)\r\n    \r\n\r\n\r\ndef get_SymValDict_PerCalcType(dic):\r\n    def findDictPerCalcType(dicList):\r\n            dic = {}\r\n            for i in dicList:\r\n                dic[i[\"산출수식 약자\"]] = i[\"applyForCalc\"]\r\n            return dic\r\n    \r\n    ks_forDic = list(dic.keys())\r\n    vs_forDic = list(map(findDictPerCalcType, dic.values()))\r\n    res = dict(zip(ks_forDic, vs_forDic))\r\n    return res\r\n\r\n\r\ndef get_DataOnRangesAtCatSheet(catSheet):\r\n    hdrs_withIdx = find_headersAtSheet(catSheet)\r\n    rangesATSheet = find_rangesAtSheet(catSheet, hdrs_withIdx, \"Family Type Name\", \"H_\")\r\n    title_idx = map(lambda x: x[0], rangesATSheet.values())\r\n    calcType_colDatas = list(map(lambda x: x[hdrs_withIdx[\"Q'ty Cal Type Tag\"]], catSheet))\r\n    calcTypes = list(map(lambda x: calcType_colDatas[x], title_idx))\r\n    rgs_v = list(map(lambda x: x[1], rangesATSheet.values()))\r\n    rgs_k = list(map(lambda x: x, rangesATSheet.keys()))\r\n    \r\n    hdrs_v = list(hdrs_withIdx.values())\r\n    hdrs_k = list(hdrs_withIdx.keys())\r\n    \r\n    datas_allFamType = list(map(lambda x: list(zip(catSheet[x[0]-1:x[1]], range(x[0]-1,x[1]))), rgs_v))\r\n    \r\n    def setDict_OnEachFamType(data_famType):  ## 최종적으로 산출식 없는 것 걸러내기 추가해야 함\r\n        titleData = list(data_famType).pop(0)[0]\r\n        \r\n        famTypeName = titleData[hdrs_withIdx[\"Family Type Name\"]]\r\n        calcTypeName = titleData[hdrs_withIdx[\"Q'ty Cal Type Tag\"]]\r\n        data_famType_noneless = list(filter(lambda x: x[0][5] != None, data_famType))\r\n        ## WM row 별 header명 과 짝짓기\r\n        data_withHdrsIdx = list(map(lambda y: [list(map(lambda x: y[0][x], hdrs_v)), y[1]], data_famType_noneless))\r\n        hdrs_k.append(\"rIDX\")\r\n        dict_ = list(map(lambda x: dict(zip(hdrs_k, x[0]+[x[1]])), data_withHdrsIdx))\r\n        dicts_noneless = list(map(lambda y: dict(filter(lambda x: x[1]!=None, y.items())),dict_))\r\n        ## dict_gauge, 물량산출식 없는 항목 처리\r\n        dicts_final = []\r\n        needDefault_ColName = \"Gauge Code\"\r\n        noneRemove_ColName = \"Dynamo 물량산출식\"\r\n        for d in dicts_noneless:\r\n            d[\"Family Type Name\"] = famTypeName\r\n            \r\n            if calcTypeName == None:\r\n                pass            \r\n            elif noneRemove_ColName in d.keys():\r\n                d[\"Q'ty Cal Type Tag\"] = calcTypeName\r\n                d[needDefault_ColName] = \"\"\r\n                dicts_final.append(d)\r\n\r\n        return dicts_final\r\n        \r\n    dicts_allFamType = list(map(lambda x: setDict_OnEachFamType(list(x)), datas_allFamType))\r\n    ds_famTypesAtCatSheet = dict(zip(rgs_k, dicts_allFamType))\r\n    ds_famTypesAtCatSheet_effCalcType = dict(filter(lambda x: all(list(map(lambda i: \"Q'ty Cal Type Tag\" in i, x[1]))), list(ds_famTypesAtCatSheet.items())))\r\n    ds_famTypesAtCatSheet_noneless = dict(filter(lambda x: len(list(x[1]))!=0, list(ds_famTypesAtCatSheet_effCalcType.items())))\r\n    \r\n    return  ds_famTypesAtCatSheet_noneless\r\n\r\ndef make_AIOdic(allCatSheets):\r\n\r\n    dataOnRanges_allCat = list(map(get_DataOnRangesAtCatSheet, allCatSheets))\r\n    dataOnRanges_allCat_WithCatNames = list(zip(allCatSheetsNames, dataOnRanges_allCat))\r\n    \r\n    AIOdic = {}\r\n    for d in dataOnRanges_allCat_WithCatNames:\r\n        catName = d[0]\r\n        dict_k_v = d[1].items()\r\n        for k,v in dict_k_v:\r\n            for wm in v:\r\n                wm[\"SheetName\"] = catName\r\n            AIOdic[k] = v\r\n    return AIOdic\r\n\r\n\r\n\r\ndef matchWith_paramDic(catSheetDic, paramSheetDic):\r\n    headers = list(catSheetDic.values())[0][0].keys()\r\n    wmspec_headers = list(filter(lambda x: \"Work C\" in x or \"Spec\" in x, headers))\r\n    res = {}\r\n    for famType,diclist in catSheetDic.items():\r\n        new_diclist = []\r\n        for d in diclist:\r\n            new_d = {}\r\n            keys = d.keys()\r\n            keys_new = set(keys) - set(wmspec_headers)\r\n            calcType = d[\"Q'ty Cal Type Tag\"]\r\n            new_d[\"Sym_Val Dict\"] = paramSheetDic[calcType]\r\n            new_d[\"wmSpecs\"] = list(map(lambda x: d[x],wmspec_headers))\r\n            for spec in keys_new:\r\n                new_d[spec] = d[spec]\r\n            new_diclist.append(new_d)\r\n        \r\n        res[famType] = new_diclist\r\n        \r\n    return res\r\n\r\ncalcTypeDictsList = get_DataOnRangesAtParamSheet(paramSheet)\r\ncalcTypeDict = make_UnifiedDict(calcTypeDictsList)\r\nparamSheetDic = get_SymValDict_PerCalcType(calcTypeDict) \r\n\r\ncatSheetDic = make_AIOdic(allCatSheets)\r\ncatFam_paramDic = matchWith_paramDic(catSheetDic, paramSheetDic)\r\n\r\n# Assign your output to the OUT variable.\r\n\r\nOUT = [catFam_paramDic,paramSheetDic, catSheetDic]",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "37d98a0573ca4e45bc768f0e30503018",
      "Inputs": [
        {
          "Id": "1252dffffa95417194b7d58f4c2ff833",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3eea371e38d46639e46bd1439c9565a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d7f8b1f397b4879a35ea0f165a3a043",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d118fc22345b4457ad77d512e3de8783",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "5c6408d2dc324480ad293743e0e51f10",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "323f7caf7ca34686a14fb4e51c84e0ca",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "754f8c62f313424485c7342eacc1cd4a",
      "Inputs": [
        {
          "Id": "60cd8c44df3e49219b09c56a53c466de",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "970a442dbaf948f7a5500cce67b1c1e9",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "9c00d037545a47ff9e257e7d759f44ae",
      "Inputs": [
        {
          "Id": "2eff0a76393647059b43cdb815c2689a",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d2a3304c84b4cc0b08efe519908c58c",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ad5dfff614f4eef9cd4ff5d2b25e31d",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c3f401707a84bebabd6f102e7741db6",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7db0be430fef4226a6517e8b94f43cba",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 264,
      "SelectedString": "OST_GenericModel",
      "NodeType": "ExtensionNode",
      "Id": "cc04cf0106e74649a78c7d32340974f0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d70d40203d8243dc83382e650fd69e2b",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.ColorPalette, CoreNodeModels",
      "InputValue": {
        "R": 255,
        "G": 20,
        "B": 147,
        "A": 255
      },
      "NodeType": "ColorInputNode",
      "Id": "34ea96b2fc534db2970d37cf666e17fa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a9ed82406bc84045abb263c53882030d",
          "Name": "Color",
          "Description": "Selected Color.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a Color from the palette"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.OverrideColorInView@DSCore.Color",
      "Id": "06885c5624264cd2be8f78ccedf339fd",
      "Inputs": [
        {
          "Id": "26a5a7694c2a4a81891f71ebce263721",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c52e242a69bb42cfb1a77c59eeabc6eb",
          "Name": "color",
          "Description": "The color to apply to a solid fill on the element.\n\nColor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "419f458b37194c58be7338a17de25f1c",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Override the element's color in the active view.\n\nElement.OverrideColorInView (color: Color): Element"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\n#doc = DocumentManager.Instance.CurrentDBDocument\r\n#collector1 = FilteredElementCollector(doc)\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\nimport copy\r\n###################################################################################################\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\n\r\ngo = lambda *args: reduce(lambda a,f: f(a), args) ## 함수도 축약 가능 ##\r\n###########################################\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nearthWork_calcMode = IN[0]\r\nparamSheetDic = IN[1]\r\nelemDicts = IN[2]\r\nsurv_base_Gap = Revit.Elements.Coordinates.BasePoint().Z - Revit.Elements.Coordinates.SurveyPoint().Z\r\n\r\n# Place your code below this line\r\ndef find_allGeo_UG_elems(elemDicts):\r\n    geoResult = []\r\n    for dic in elemDicts:\r\n        elem = dic[\"Elem\"]\r\n        wms = dic[\"wms\"]\r\n        excaBln = \"Exca\" in \"\".join(list(map(lambda x: x[\"Dynamo 물량산출식\"], wms)))\r\n        famType_ = wms[0][\"Family Type Name\"]\r\n            \r\n        if \"MAT_\" in famType_ or \"Mass_\" in famType_ or \"Pit\" in famType_ or \"Trench\" in famType_:\r\n            if \"Slab\" in famType_ or \"MAT_\" in famType_ or \"Mass_\" in famType_ : ## 내부 빈공간 있는 RC부재는 꽉채워서 공제 \r\n                srfs = elem.Geometry()[0].Explode() ## surface들\r\n                btmSrf = PolySurface.ByJoinedSurfaces(list(filter(lambda x: round(x.NormalAtParameter(0.5,0.5).Z, 3) == -1, srfs)))\r\n                btmCrvs = btmSrf.PerimeterCurves()\r\n                btmPolCrv = PolyCurve.ByJoinedCurves(btmCrvs)\r\n                btmCrvZ = btmPolCrv.StartPoint.Z\r\n                uprPolCrv = btmPolCrv.Translate(0,0,(0-btmCrvZ))\r\n                targetGeo = Solid.ByLoft([btmPolCrv,uprPolCrv])\r\n                geoResult.append(targetGeo)\r\n            else:\r\n                geoResult.append(elem.Geometry()[0])\r\n        elif \"PED_\" in famType_ or \"TG_\" in famType_ or \"SOG_\" in famType_ or \"UG\" in famType_:\r\n            geoResult.append(elem.Geometry()[0])\r\n            \r\n        elif excaBln:\r\n            geoResult.append(elem.Geometry()[0])\r\n            \r\n\r\n    return geoResult\r\n\r\ndef makeExcaShape_whole(elemDicts, paramSheetDic):\r\n    sym_valDict = paramSheetDic[\"SF-Q1\"]\r\n    def findBtmCrv(geo, sym_valDict): ##btmOffset = d1 + d2\r\n        offSetDist = sym_valDict[\"D1\"] + sym_valDict[\"D2\"]\r\n        \r\n        h = abs(sym_valDict[\"C1\"] + sym_valDict[\"C2\"] + sym_valDict[\"C3\"])\r\n        bdBox_fdn = BoundingBox.ByGeometry(geo).ToCuboid() ## 형상의 자그마한 요철 무시\r\n        srfs = bdBox_fdn.Explode() ## surface들\r\n        btmSrf = PolySurface.ByJoinedSurfaces(list(filter(lambda x: round(x.NormalAtParameter(0.5,0.5).Z, 3) == -1, srfs)))\r\n        btmCrvs = btmSrf.PerimeterCurves()\r\n        btmPolCrv = PolyCurve.ByJoinedCurves(btmCrvs)\r\n        offseted_btmPolCrv = btmPolCrv.Offset(offSetDist)\r\n        h_modified_btmPolCrv = offseted_btmPolCrv.Translate(0,0,-h-0.3)\r\n        return h_modified_btmPolCrv\r\n    \r\n    def findUprCrv(_btmPolCrv, sym_valDict):\r\n        btmCrvZ = _btmPolCrv.StartPoint.Z\r\n        test = (sym_valDict[\"C1\"] + sym_valDict[\"C2\"] + sym_valDict[\"C3\"])\r\n        \r\n        H = abs(round(btmCrvZ,2))\r\n        G = sym_valDict[\"G\"]\r\n        offSetDist = (G * H)\r\n        \r\n        uprPolCrv = _btmPolCrv.Translate(0,0,H).Offset(offSetDist)\r\n        uprCrvZ = uprPolCrv.StartPoint.Z\r\n        return uprPolCrv\r\n        \r\n    def findExcaShapeByColFnds():\r\n        all_ColFdnElems = list(map(lambda x: x[\"Elem\"].Geometry()[0], filter(lambda dic: \"ACF_W\" in dic[\"wms\"][0][\"Family Type Name\"], elemDicts)))\r\n        resBdBox = BoundingBox.ByGeometry(all_ColFdnElems).ToCuboid()\r\n        \r\n        btmPolCrv = findBtmCrv(resBdBox, sym_valDict)\r\n        uprPolCrv = findUprCrv(btmPolCrv, sym_valDict)\r\n        res = Solid.ByLoft([btmPolCrv,uprPolCrv]).Translate(0,0,surv_base_Gap)\r\n        \r\n        return res\r\n\r\n    def findExcaShapeByMass():\r\n        all_MassElems = list(map(lambda x: x[\"Elem\"].Geometry()[0], filter(lambda dic: \"ACE_Mass\" in dic[\"wms\"][0][\"Family Type Name\"], elemDicts)))\r\n        if all_MassElems:\r\n            resBdBox = BoundingBox.ByGeometry(all_MassElems).ToCuboid()\r\n            btmPolCrv = findBtmCrv(resBdBox, sym_valDict)\r\n            uprPolCrv = findUprCrv(btmPolCrv, sym_valDict)\r\n            res = Solid.ByLoft([btmPolCrv,uprPolCrv]).Translate(0,0,surv_base_Gap)\r\n        else:\r\n            res = []\r\n        \r\n        \r\n        \r\n        return res\r\n\r\n    def findExcaShapeByPit():\r\n        all_PitElems = list(map(lambda x: x[\"Elem\"].Geometry()[0], filter(lambda dic: \"ACP_Pit Slab\" in dic[\"wms\"][0][\"Family Type Name\"], elemDicts)))\r\n        if all_PitElems:\r\n            resBdBox = BoundingBox.ByGeometry(all_PitElems).ToCuboid()\r\n            \r\n            btmPolCrv = findBtmCrv(resBdBox, sym_valDict)\r\n            uprPolCrv = findUprCrv(btmPolCrv, sym_valDict)\r\n            res = Solid.ByLoft([btmPolCrv,uprPolCrv]).Translate(0,0,surv_base_Gap)\r\n        else:\r\n            res = []\r\n        return res\r\n        \r\n    finalTarget = list(filter(lambda x: x!=[] ,[findExcaShapeByColFnds(),findExcaShapeByMass(),findExcaShapeByPit()]))\r\n    res = Solid.ByUnion(finalTarget)\r\n    \r\n    return res\r\n\r\ndef makeDispShape_whole(elemDicts, paramSheetDic):\r\n    total_ExcaGeo = makeExcaShape_whole(elemDicts, paramSheetDic)\r\n    allGeo_UG_union = Solid.ByUnion(find_allGeo_UG_elems(elemDicts))\r\n    dispShape = allGeo_UG_union.Split(total_ExcaGeo)[-1]\r\n    backFillShape = total_ExcaGeo.Split(allGeo_UG_union)[0]\r\n    return [dispShape, backFillShape]\r\n\r\ndef findBtmSrfs(geo):\r\n    srfs = geo.Explode()\r\n    btmSrf = PolySurface.ByJoinedSurfaces(list(filter(lambda x: round(x.NormalAtParameter(0.5,0.5).Z, 3) == -1, srfs)))\r\n    return btmSrf\r\n    \r\ndef calc_EarthWorkValue_InElemDicts(elemDicts, surv_base_Gap, paramSheetDic):\r\n    allEarthRelatedElemsBtmSrfs = list(\r\n        map(lambda x: findBtmSrfs(x[\"Elem\"].Geometry()[0]), \r\n            filter(lambda dic: \"ACF_W\" in dic[\"wms\"][0][\"Family Type Name\"] or \\\r\n                               \"ACB_TG\" in dic[\"wms\"][0][\"Family Type Name\"] or \\\r\n                               \"ACS_SOG\" in dic[\"wms\"][0][\"Family Type Name\"] or \\\r\n                               \"ACE_Mass\" in dic[\"wms\"][0][\"Family Type Name\"] or \\\r\n                               \"ACP_Pit Slab\" in dic[\"wms\"][0][\"Family Type Name\"], \\\r\n                elemDicts)))\r\n    total_btmSrfsArea = sum(map(lambda x: x.Area, allEarthRelatedElemsBtmSrfs))\r\n    total_Exca = makeExcaShape_whole(elemDicts, paramSheetDic)\r\n    total_ExcaVolume = total_Exca.Volume\r\n    total_Disp = makeDispShape_whole(elemDicts, paramSheetDic)[0]\r\n    total_DispVolume = total_Disp.Volume\r\n    total_BackFill = makeDispShape_whole(elemDicts, paramSheetDic)[1]\r\n    total_BackFillVolume = total_BackFill.Volume\r\n    \r\n    for dic in elemDicts:\r\n        elem = dic[\"Elem\"]\r\n        wms = dic[\"wms\"]\r\n        famType = wms[0][\"Family Type Name\"]\r\n        for wm in wms:\r\n            if \"Exca\" in wm[\"Dynamo 물량산출식\"] or\\\r\n               \"Back\" in wm[\"Dynamo 물량산출식\"] or\\\r\n               \"Disp\" in wm[\"Dynamo 물량산출식\"] : ### 토공 산출 대상 부재에는 Exca Back Disp 세트로 포함하도록\r\n                elem_btmSrfArea = findBtmSrfs(elem.Geometry()[0]).Area\r\n                wm[\"Sym_Val Dict\"][\"Exca\"] = total_ExcaVolume * (elem_btmSrfArea / total_btmSrfsArea)\r\n                wm[\"Sym_Val Dict\"][\"Back\"] = total_BackFillVolume * (elem_btmSrfArea / total_btmSrfsArea)\r\n                wm[\"Sym_Val Dict\"][\"Disp\"] = total_DispVolume * (elem_btmSrfArea / total_btmSrfsArea)\r\n    \r\n    return [elemDicts, [total_Exca, total_BackFill]]\r\n# Assign your output to the OUT variable.\r\nif earthWork_calcMode:\r\n    OUT = calc_EarthWorkValue_InElemDicts(elemDicts, surv_base_Gap, paramSheetDic)\r\nelse:\r\n    OUT = [0,0]\r\n    \r\n#OUT = makeDispShape_whole(elemDicts, paramSheetDic)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "2412da53536a449db8e644d4eec82228",
      "Inputs": [
        {
          "Id": "d9af8e4edf4f40b3a1882f913c18c1ed",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cfe724f96a54baaad782a3b8a0da782",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "62023cb472f54c8db19f010b8b93609d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7774ba6630ff403f9becde86c732494f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "paramSheetDic;",
      "Id": "8f8b06f8cc7a4d6294c8564c6fdf5f17",
      "Inputs": [
        {
          "Id": "2a89d775a32a4b27ab012d0abd5be9ac",
          "Name": "paramSheetDic",
          "Description": "paramSheetDic",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ad2e7e5e94a4c259c4590a5bb09bb62",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "b8554357e6504e2c98f38051e1260c3e",
      "Inputs": [
        {
          "Id": "2c59e4bee5cd41cd89fda6e062b9cf8c",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "faf75b6cffd545a18a04608ac8e6cc0c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[1];",
      "Id": "5391682d83bf47e7857a03aefc4abd8d",
      "Inputs": [
        {
          "Id": "22f5fa1c20f7455ea21665a22a48d9fd",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9623ac4db54a4339a923f9667e129e78",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.CustomSelection, CoreNodeModels",
      "SerializedItems": [
        {
          "Name": "개별 터파기",
          "Item": "0"
        },
        {
          "Name": "온통 터파기",
          "Item": "1"
        }
      ],
      "SelectedIndex": 0,
      "SelectedString": "개별 터파기",
      "NodeType": "ExtensionNode",
      "Id": "739b18232b3647c3a93bc9903af06c1d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cd0186c0110e45efbff32b76a9bb3a55",
          "Name": "value",
          "Description": "Selected value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A dropdown menu with customizable values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "earthWork_calcMode;",
      "Id": "04b858aefce14c6795522dcd602cb6f5",
      "Inputs": [
        {
          "Id": "0127ebbcb03b43efb3bb5dca643ad467",
          "Name": "earthWork_calcMode",
          "Description": "earthWork_calcMode",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3149bda6bcdf4fad90c9798d5c5df517",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ntgt_key = IN[0]\r\n\r\nelemDicts_eachEarth = IN[1]\r\nshape_wholeEarth = IN[2]\r\n# Place your code below this line\r\n\r\ndict_for_shape_wholeEarth = {\r\n    \"effExcaGeo\": 0,\r\n    \"effBackfillGeo\": 1\r\n    }\r\n\r\nif shape_wholeEarth:\r\n    res = shape_wholeEarth[dict_for_shape_wholeEarth[tgt_key]]\r\nelse:\r\n    onlyExcaDicts = list(filter(lambda x: tgt_key in x.keys(), elemDicts_eachEarth))\r\n    res = Solid.ByUnion(list(map(lambda x: x[tgt_key], onlyExcaDicts)))\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = res",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "a98e12398d394ec4b92bd9ea62678b9d",
      "Inputs": [
        {
          "Id": "10cfb17f2e9a4b0d8b284059bef4f090",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af1d13a585544d9698f633310782bf28",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab283307135f4c17855961c85abc4c60",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0aecc2e46d294a3686e8fae43e459cde",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "e47947b56c604d3b9e4724da689579ac",
      "Inputs": [
        {
          "Id": "bbe76a0fe46e47cfbe261f0aed89b5b1",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f24aa119b1c948a5b358112c522c184a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[1];",
      "Id": "46423e109bbf4282bfedf4a127625a04",
      "Inputs": [
        {
          "Id": "db67b35c93264ad2b713bd6dc4cfdcff",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af9634c2ebf3447a91699df96d91d2f5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.CustomSelection, CoreNodeModels",
      "SerializedItems": [
        {
          "Name": "터파기 형상",
          "Item": "effExcaGeo"
        },
        {
          "Name": "되메우기 형상",
          "Item": "effBackfillGeo"
        }
      ],
      "SelectedIndex": 1,
      "SelectedString": "되메우기 형상",
      "NodeType": "ExtensionNode",
      "Id": "8af0cee8caff4f8cad732d22ae0a9c53",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9e27a611d9d144839114abd0623ede72",
          "Name": "value",
          "Description": "Selected value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A dropdown menu with customizable values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "file_path;",
      "Id": "7f5e0c25b593402094aa786410d940b1",
      "Inputs": [
        {
          "Id": "cdd5b3ba3dca46d2903fdb0bb343ca4d",
          "Name": "file_path",
          "Description": "file_path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab25c5fd093e4ef88174429852daa320",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[2];",
      "Id": "aceb5143cc9046c6ad7c0cc61ed9e4a7",
      "Inputs": [
        {
          "Id": "b35b3940419a42c7a5112291214ac213",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24ee4412548341dcb1fcf9422cdac41d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport operator\r\nfrom itertools import groupby\r\nfrom itertools import chain\r\nimport copy\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nelemDicts = IN[0]\r\nfamTypeDict = IN[1]\r\nwmDicts = list(chain(*famTypeDict.values()))\r\n# Place your code below this line\r\ndef merge_dicts(*dict_args):\r\n    \"\"\"\r\n    Given any number of dictionaries, shallow copy and merge into a new dict,\r\n    precedence goes to key-value pairs in latter dictionaries.\r\n    \"\"\"\r\n    result = {}\r\n    for dictionary in dict_args:\r\n        result.update(dictionary)\r\n    return result\r\n\r\ndef getUnique_wmDicts(wmDicts):\r\n    headers = wmDicts[0].Keys\r\n    wmspec_headers = list(filter(lambda x: \"Work C\" in x or \"Spec\" in x, headers))\r\n    noNeedKeys = [\"Family Type Name\", \"Quantity\", \"rIDX\", \"Dynamo 물량산출식\", \"SheetName\", \"Q'ty Cal Type Tag\"]\r\n    def refineDicts(dicts, noNeedKeys):\r\n        dicts_refined = []\r\n        for d in dicts:\r\n            new_d = {}\r\n            keys,vals = d.Keys,d.Values\r\n            keys_new = set(keys) - set(wmspec_headers)\r\n            items = zip(keys, vals)  \r\n            for k,v in items:\r\n                if k not in noNeedKeys+wmspec_headers:\r\n                    new_d[k] = v\r\n                    new_d[\"wmSpecs\"] = list(map(lambda x: d[x], wmspec_headers))\r\n            dicts_refined.append(new_d)\r\n        return dicts_refined\r\n    wmDicts_refined = refineDicts(wmDicts, noNeedKeys)\r\n        \r\n    allWMcodes = list(map(lambda x: x[\"Work Master Code\"], wmDicts_refined))\r\n    uniqueWMcodes = set(allWMcodes)\r\n    \r\n    def getUnique(dicts, tgt_key):\r\n        res = []\r\n        tmp = []\r\n        for d in dicts:\r\n            if d[tgt_key] not in tmp:\r\n                tmp.append(d[tgt_key])\r\n                res.append(d)\r\n        return res\r\n    \r\n    unique_wmDicts = getUnique(wmDicts_refined, \"Work Master Code\")\r\n\r\n        \r\n    return unique_wmDicts\r\n    \r\n\r\n    \r\ndef reformatDicts(wmDicts):\r\n    res = []\r\n\r\n    for wm in wmDicts:\r\n        keys = [\"Work Master Code\", \"Gauge Code\", \"wmSpecs\"]\r\n        vals = list(map(lambda x: wm[x],keys))\r\n        items = list(zip(keys, vals))\r\n        res_d = dict(items)\r\n        \r\n        if \"Description\" in wm.keys():\r\n            res_d[\"Description\"] = wm[\"Description\"]\r\n        else:\r\n            res_d[\"Description\"] = \"\"\r\n        res_d[\"wmcANDgauge\"] = \"\".join([wm[\"Work Master Code\"],wm[\"Gauge Code\"]])\r\n        res_d[\"UoM\"] = wm[\"Unit\"]\r\n        res.append(res_d)\r\n        \r\n    return res\r\n\r\ndef make_dict_groupBy_WM(wmDicts, elemDicts):\r\n    unique_wmDicts = getUnique_wmDicts(wmDicts)\r\n    reformated_dicts = reformatDicts(unique_wmDicts)\r\n    sortedDicts_WMC = sorted(reformated_dicts, key=operator.itemgetter(\"wmcANDgauge\"))\r\n    grpDicts_WMC = groupby(sortedDicts_WMC, key=operator.itemgetter(\"wmcANDgauge\"))\r\n    \r\n    wm_valDicts = {}\r\n    for x in elemDicts:\r\n        wm_valDicts[x[\"Work Master Code\"]] = x[\"calcVal\"]\r\n    \r\n    \r\n    res = []\r\n    for k, g in grpDicts_WMC: \r\n        wmCode = k\r\n        gg = copy.deepcopy(list(g))\r\n        wmSpecs = gg[0][\"wmSpecs\"]\r\n        catStr = \"_\".join([wmSpecs[0],wmSpecs[1]])\r\n        specOnly = list(filter(lambda x: x!=0, wmSpecs))[3:]\r\n        addSpec = gg[0][\"Description\"]\r\n        if wm_valDicts.get(k):\r\n            dict_res = {\r\n                \"catStr\": catStr,\r\n                \"Work Master Code\": wmCode,\r\n                \"Gauge Code\": gg[0][\"Gauge Code\"],\r\n                \"Description\": wmSpecs[2],\r\n                \"Spec.\": \"\\n\".join(specOnly),\r\n                \"Additional Spec.\": addSpec,\r\n                \"calcVal\": wm_valDicts[k],\r\n                \"UoM\": gg[0][\"UoM\"]\r\n                #\"wmSpecs\": wmSpecs,\r\n                }\r\n        else:\r\n            dict_res = {\r\n                \"catStr\": catStr,\r\n                \"Work Master Code\": wmCode,\r\n                \"Gauge Code\": gg[0][\"Gauge Code\"],\r\n                \"Description\": wmSpecs[2],\r\n                \"Spec.\": \"\\n\".join(specOnly),\r\n                \"Additional Spec.\": addSpec,\r\n                \"calcVal\": \"\",\r\n                \"UoM\": gg[0][\"UoM\"]\r\n                #\"wmSpecs\": wmSpecs,\r\n                }\r\n        res.append(dict_res)\r\n    \r\n    \r\n    return res\r\n\r\n\r\n# Assign your output to the OUT variable.\r\n#OUT = make_dict_groupBy_WM(wmsList)\r\nOUT = make_dict_groupBy_WM(wmDicts, elemDicts)",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "756a672a7cef4e9e91d11c4c0279ab0a",
      "Inputs": [
        {
          "Id": "22a14fba8f194143a2aaef45fb512ae7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc4ee34aba664fcb8efda003708f0790",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ae84853d9e043699e6f4ca77f9d976d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "famTypeDic;",
      "Id": "7edcee4a274841a8a889d4611bbeb8fa",
      "Inputs": [
        {
          "Id": "5ff94de387ee41dc92b2e876bd4d39b5",
          "Name": "famTypeDic",
          "Description": "famTypeDic",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2756c01d322843f18cd5658665d69f79",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport datetime\r\nimport shutil\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\norigin_pathStr = IN[0]\r\nIsNewSheet = IN[1][0]\r\n# Place your code below this line\r\n\r\ndef copy_fromNewSheet():\r\n    now = datetime.datetime.now()\r\n    strList = origin_pathStr.split('.')\r\n    \r\n    add_str = now.strftime(\"%m%d-%I%M%S\")\r\n    add_res = \"\".join([\"_\",add_str,\".\"])\r\n    strList.insert(1, add_res)\r\n    res = \"\".join(strList)\r\n    \r\n    source = origin_pathStr\r\n    destination = res\r\n    shutil.copyfile(source, destination)\r\n    \r\n    return res\r\n\r\n# Assign your output to the OUT variable.\r\n\r\nif IsNewSheet:\r\n    OUT = copy_fromNewSheet()\r\nelse:\r\n    OUT = origin_pathStr",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "11184f601ab1440f92b47f1dcda08f3f",
      "Inputs": [
        {
          "Id": "3adefa72172f4d0e94c423abf3e4051d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81b00a4bed47445eb92bccff5549b468",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1afdad0b610045f49d9918563aa08dd5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Gate House\";",
      "Id": "5b26f33fb50d4441b2dc495fc028521e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "83108fbc678b4a0b82f96e42f1cf9b75",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "//레빗 프로젝트 단위 중 길이가 m 여야 한다",
      "Id": "b0d2ff2d9c5f4d63a07bfdf8b46f74bd",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "912753a782b84f598e120e936fffbd58",
      "End": "ae38fed72c0a434eb235268bfba22c03",
      "Id": "2f9fd4adb6444d8e9c24cd4a536bbbf2",
      "IsHidden": "False"
    },
    {
      "Start": "e4d9d60debe6406cace5eb687f712858",
      "End": "efbd6851497a4681a114ca7842d95e6a",
      "Id": "2483c846c22f4026a33d2bffb611b5e1",
      "IsHidden": "False"
    },
    {
      "Start": "bdc68e6596d64c1bb2ad17af850a8a64",
      "End": "f2b7450af5914cbf8a28c2a092e6a190",
      "Id": "e1261a8d8e0640709812536bf93bfcb4",
      "IsHidden": "False"
    },
    {
      "Start": "07eba95685e249a0a3188444eec253fe",
      "End": "2d45870ecc9f4742810ae2af861ad07b",
      "Id": "9aeb66891ebe4d4ca89e07933da9a02d",
      "IsHidden": "False"
    },
    {
      "Start": "266640a8b58449a48603af36addb1282",
      "End": "e4473f11a1094475b798c856c23211f3",
      "Id": "adcf7ca898144a3b8f77115c0a663e7f",
      "IsHidden": "False"
    },
    {
      "Start": "16f6a93146ee4557a8eec29cac4eb344",
      "End": "b3eea371e38d46639e46bd1439c9565a",
      "Id": "64a9f688905c4588a75e78209f5d42fd",
      "IsHidden": "False"
    },
    {
      "Start": "16f6a93146ee4557a8eec29cac4eb344",
      "End": "60cd8c44df3e49219b09c56a53c466de",
      "Id": "5408529dfc524323b2da4501cda2de5d",
      "IsHidden": "False"
    },
    {
      "Start": "eb3a2510c5934129baf50771f5bb29a9",
      "End": "c4d740fa206e4ab3b53ba148e9727e8f",
      "Id": "0708e80f5c0f475aa73809bfc8d71053",
      "IsHidden": "False"
    },
    {
      "Start": "e3d41cbea388406e9b31fca8184f2a13",
      "End": "8d8f529204cd48a5a2210b85d94be686",
      "Id": "aea2bbf0844a421eac38d674664254a7",
      "IsHidden": "False"
    },
    {
      "Start": "e3d41cbea388406e9b31fca8184f2a13",
      "End": "cdd5b3ba3dca46d2903fdb0bb343ca4d",
      "Id": "b28e3f7ce6784cf6bab2cc8a2931024f",
      "IsHidden": "False"
    },
    {
      "Start": "f98969ee45ea4cce8921b553ad57fbc0",
      "End": "da624c3834b64df4a29198439fca082e",
      "Id": "056e91bb2fca4d81af853578b822a2fa",
      "IsHidden": "False"
    },
    {
      "Start": "65f005d270e742a5906ad09029786a2e",
      "End": "8871f8fef5b841e484fe65aa92aecb9c",
      "Id": "494aee2559f04a46b0d8c7ee9e733d67",
      "IsHidden": "False"
    },
    {
      "Start": "65f005d270e742a5906ad09029786a2e",
      "End": "2d7f8b1f397b4879a35ea0f165a3a043",
      "Id": "410dfb87d57b49b8b99a4fdfbca6af60",
      "IsHidden": "False"
    },
    {
      "Start": "a6db5b3198a84514b931f6728da04348",
      "End": "affa8e9069d34d359fdc5519189993e3",
      "Id": "d7265a7aa81143e980dbc9fb2f067d7f",
      "IsHidden": "False"
    },
    {
      "Start": "f5cb5f12a9a34c0580335168f950d6a0",
      "End": "b807a40e33d146ed8e1079d77df2f4a2",
      "Id": "c5747d2463794114aac18de569ebdc9c",
      "IsHidden": "False"
    },
    {
      "Start": "8d2a0590f2cb4f7e9a74cf1403826133",
      "End": "16ae095d8bb742a1842007898fa8da08",
      "Id": "69843f6ba0c244dda039144208d1ec34",
      "IsHidden": "False"
    },
    {
      "Start": "704a0615649a4b69a7598e7bf9bbdf71",
      "End": "d7eecaa87218489daa29e5f629d3e5f4",
      "Id": "c6c8b668c94b4fd3a8d836d7f59c30ef",
      "IsHidden": "False"
    },
    {
      "Start": "da989cdd240f4026b50103281496dc4c",
      "End": "5c24b6a46f074029ae30973e803423cf",
      "Id": "5780c2d647e0468b9a4416956c5d1de7",
      "IsHidden": "False"
    },
    {
      "Start": "a3d8ae3ce29c4ada9cd978071a690e99",
      "End": "60298be91cbc40aaa4d4c2caf7553ef4",
      "Id": "44d3a61834ea4fdc87d49c2b7853293c",
      "IsHidden": "False"
    },
    {
      "Start": "2b78d9bdee064ca8aa719add76dab153",
      "End": "03197cc52c5a41498621cc5cbbdcdda2",
      "Id": "3222e9cb93354ef584433d5298ef1779",
      "IsHidden": "False"
    },
    {
      "Start": "bd1c260823824c3fa942da73cd699d3c",
      "End": "1acb0f3536104379b228c0f654ce7eff",
      "Id": "bee2b8173f32457e87e183a9072558bc",
      "IsHidden": "False"
    },
    {
      "Start": "0ffaed7ff9494698a476c77992378425",
      "End": "9ba11babb5ef4e12a0e246df296ff645",
      "Id": "54ca60e73be04ea1a84cc3d9610d1437",
      "IsHidden": "False"
    },
    {
      "Start": "4dfc84f116ed401aafa20bbf21bb6813",
      "End": "791810c9f38243529a3142e7e7fd2d41",
      "Id": "f3c0180c2ad04c3e8bb0b6262bf1fb4f",
      "IsHidden": "False"
    },
    {
      "Start": "4dfc84f116ed401aafa20bbf21bb6813",
      "End": "13eef7c2e1884f17bd9a94f727ce0d5e",
      "Id": "f3455b73a07e4f86aee74da478e9fdbb",
      "IsHidden": "False"
    },
    {
      "Start": "d8402fd2e2cf40e18826f7fb710d7abe",
      "End": "e5775c1a7f8c45d6911594db84ada28f",
      "Id": "4ca3ebe2dc6b435aaa3f0a73607db136",
      "IsHidden": "False"
    },
    {
      "Start": "d8402fd2e2cf40e18826f7fb710d7abe",
      "End": "9dd564bcf04b4432a305390a99f356d7",
      "Id": "b204c1ced1514f68ba43e37d0b19c58c",
      "IsHidden": "False"
    },
    {
      "Start": "d8402fd2e2cf40e18826f7fb710d7abe",
      "End": "2eeeec0b990e460c904c7443bf123471",
      "Id": "4234ace9fb904db4bd3319cdbe148d71",
      "IsHidden": "False"
    },
    {
      "Start": "3bd9705415654f7e8ac8be1751b2b4e4",
      "End": "9ab530efab9c434581925fdde0bb806e",
      "Id": "bb946722da4c4973837208e6ea593923",
      "IsHidden": "False"
    },
    {
      "Start": "f3849c2f660e4f0d9a1e89d3d58bb89f",
      "End": "70c3ece33dd6402ba9528d8fac3a78ef",
      "Id": "6a84032c4e5a45dbbaec9cbf462071c0",
      "IsHidden": "False"
    },
    {
      "Start": "f3849c2f660e4f0d9a1e89d3d58bb89f",
      "End": "62023cb472f54c8db19f010b8b93609d",
      "Id": "e65e5acf778f442ead2d92a9986d8c5e",
      "IsHidden": "False"
    },
    {
      "Start": "f91fcafbd74a4726a0feb1b7027b8a3c",
      "End": "715d5eb8400a49d68e4675ea776ce995",
      "Id": "256b61c2e6ed4536a6d76e5fb64b09d1",
      "IsHidden": "False"
    },
    {
      "Start": "f91fcafbd74a4726a0feb1b7027b8a3c",
      "End": "af1d13a585544d9698f633310782bf28",
      "Id": "68b03ac7c4b34765a27a5877d38be6e5",
      "IsHidden": "False"
    },
    {
      "Start": "d25f86b42589432686f7e0c250268c07",
      "End": "a26d934531764b6fa9513dcabfe0e2f2",
      "Id": "ecff7ae3706d4f168d14ee453febca19",
      "IsHidden": "False"
    },
    {
      "Start": "ecd0a9d586d84b0ea205aa4d38047209",
      "End": "1ce92a82549b4a7881e2473bb2f20665",
      "Id": "9cb7f8b21a58400299a223bc8add9c09",
      "IsHidden": "False"
    },
    {
      "Start": "ddaee91b731249a990626eee2bce9ca4",
      "End": "f39659b145d0462482073c7655fe3582",
      "Id": "bb10b8b155574fc1b28d8e50bdb1ec9d",
      "IsHidden": "False"
    },
    {
      "Start": "32031adf5ee64bc49ae7c3d65dc89ca3",
      "End": "b4d9a9e2970e4ba7a0adf077ee9264e5",
      "Id": "5ee870b4a1c24e509f74c3a382712baa",
      "IsHidden": "False"
    },
    {
      "Start": "8b75b3669acf47baab8e27b5432293d5",
      "End": "9e003a398c744cf489ca6cf87328c986",
      "Id": "fe94b593700f427ab2952453c3ad657b",
      "IsHidden": "False"
    },
    {
      "Start": "fbe496ff58b5496bab3d818170be9b90",
      "End": "c5bae2a161c44dbab17d406f3fc7e8d6",
      "Id": "ef473d909f8f47ec8564e892527483d8",
      "IsHidden": "False"
    },
    {
      "Start": "859d68f38a9e4150ba95406d0e5a28cd",
      "End": "83e98e90705349c8b13048c1f1cfe7c0",
      "Id": "5bdf069881b94f4dbc310aebe401e127",
      "IsHidden": "False"
    },
    {
      "Start": "a3ef7f68ea224374834c39ddb549b2ca",
      "End": "c2327385dc4d4427ad017aefe187b6f3",
      "Id": "13de535de37b4fd4b9cd3f6c03cf65b2",
      "IsHidden": "False"
    },
    {
      "Start": "66334226642f44b19bfe040f61500a5c",
      "End": "908bb9ba4c4445618470abf4e49c4100",
      "Id": "628f0fc69ff44a33aa30b4dc5dcc1d83",
      "IsHidden": "False"
    },
    {
      "Start": "724b257b6e404ed585ee188d157145ba",
      "End": "99b7a172bab04fcf9e908e78fd92eaf3",
      "Id": "9340680534104457a1394df00fe0b8c3",
      "IsHidden": "False"
    },
    {
      "Start": "724b257b6e404ed585ee188d157145ba",
      "End": "6b9ac6c86e794528a8f432bda91bb2d7",
      "Id": "9a391cab697f4f719602fc3d68579349",
      "IsHidden": "False"
    },
    {
      "Start": "bfa2bdde29b94030aa701b88ab3ca988",
      "End": "26d7414229104d838c6c46f04092e46f",
      "Id": "a6a3a45e5f85428cab6f2525462d295a",
      "IsHidden": "False"
    },
    {
      "Start": "f0c19bfc50d245b9adf2ff5a9727d352",
      "End": "c24104869fb5431bacfe98eac9722e96",
      "Id": "a877848a20224541a37a9d3b335b8563",
      "IsHidden": "False"
    },
    {
      "Start": "18752638cd7f402a99de28e3a2a49ddc",
      "End": "966c11318b8a4a43afa0e303f1b32ac8",
      "Id": "bcc78099a0c24f06bd68907ae744dad9",
      "IsHidden": "False"
    },
    {
      "Start": "1e09582488be4705b6ac572c258d018e",
      "End": "eb38296ae8b4424f892c47d4c8380597",
      "Id": "f4af9c3841ea48c08f2e8550c5297d8e",
      "IsHidden": "False"
    },
    {
      "Start": "d9f7652d7dcd49818455cfcb11afd4d5",
      "End": "22a14fba8f194143a2aaef45fb512ae7",
      "Id": "626bf182effb482b80a7dc640f56561c",
      "IsHidden": "False"
    },
    {
      "Start": "095ac27cee8044e7a2f1a3250bb3ef14",
      "End": "ca3839e498cc41deb8e9225ab7ab8210",
      "Id": "3507dc859328499a9a70256b268c8f40",
      "IsHidden": "False"
    },
    {
      "Start": "095ac27cee8044e7a2f1a3250bb3ef14",
      "End": "f36f58acbd9d4a98a75c350160b56455",
      "Id": "da521293760640a6944015d2b99c5d3b",
      "IsHidden": "False"
    },
    {
      "Start": "e5bac32700234c6d9ed167d8d9c8f586",
      "End": "ec0e917339cb4f81875e476c63e9f5d3",
      "Id": "e612ac9c5b1e4f5da9953e4e986bda04",
      "IsHidden": "False"
    },
    {
      "Start": "b6d47b8f9ac240dfae1f3aa0b2ae6664",
      "End": "809aab676bdd45759176cd7fc1b7287c",
      "Id": "4e0adf6fd2e74ea2ad154da17bb893e5",
      "IsHidden": "False"
    },
    {
      "Start": "b6d47b8f9ac240dfae1f3aa0b2ae6664",
      "End": "66b06265d43b492688394beaf19bea9d",
      "Id": "a4b0a62e4e2d47c1a548fd62f7a9a7d1",
      "IsHidden": "False"
    },
    {
      "Start": "c9727449e64f48e69788fef8ef486d53",
      "End": "1c46c0fce7ef4f3b9d77f0c79a6d570a",
      "Id": "9ee29338d6ee42e98abcfe2d8389b171",
      "IsHidden": "False"
    },
    {
      "Start": "e30bb663437641e092989a1db00f22eb",
      "End": "60314121b72e4091a067f4ad720e1648",
      "Id": "0483fec52e294191a9fbc53fac0015c9",
      "IsHidden": "False"
    },
    {
      "Start": "01cf442cc25e44a3937621ee3fddaaed",
      "End": "7dc96717c51d4f9eaac5abcc8680a77d",
      "Id": "fcaea59360bc4fdca95ebe75830a4576",
      "IsHidden": "False"
    },
    {
      "Start": "18bef21345f64804b4e31abad6496667",
      "End": "8c0251f3a93a45e3af2c10b715fdc9fc",
      "Id": "2142adfdb73244b49b5f14c493d4a427",
      "IsHidden": "False"
    },
    {
      "Start": "8c8a37b2461841eebfd7ca01ff4cbbcb",
      "End": "c9e1a9717b414fb18cba11de5a217a51",
      "Id": "2841eaf5dd4a4786a970acde91428eac",
      "IsHidden": "False"
    },
    {
      "Start": "8c8a37b2461841eebfd7ca01ff4cbbcb",
      "End": "85ac0d8fca71462086880054318c5da1",
      "Id": "2b4898dd04724928bceda9e8c8f653cf",
      "IsHidden": "False"
    },
    {
      "Start": "8bd85b9cebae40d887ecf33249bfa9ea",
      "End": "e5be3df534fc4ffca7597213d53ae45a",
      "Id": "8c4ae19e61304e3989e225276fea049e",
      "IsHidden": "False"
    },
    {
      "Start": "b56e73df83b44e3e99d4218e0c900f86",
      "End": "15939b39f28f4e619a0eb5412fcc19b8",
      "Id": "d0ac131505264be1bed92a0be74ebc1f",
      "IsHidden": "False"
    },
    {
      "Start": "65c451db8acc4de497ba72e61d8cd1ed",
      "End": "a4bfa9cbcd0b41e78735db0e5ca3876c",
      "Id": "9d557bbd38024f47ba36d72731a3ebc8",
      "IsHidden": "False"
    },
    {
      "Start": "52e9ec6674db4af88586c7799cfe0b57",
      "End": "524b1b7f02034b7e9f83fd908cc91185",
      "Id": "a70c0bd1baa7405cb1189ae877b879ec",
      "IsHidden": "False"
    },
    {
      "Start": "9e3824f6d5f54568850402f597fa43b7",
      "End": "4e559b0185dc4491b7280e9af4d25100",
      "Id": "144a89029f714c0890c1d469d4130e31",
      "IsHidden": "False"
    },
    {
      "Start": "848bebf74a5b471892ccbed05551e0d2",
      "End": "2e0e9ab5640c43a492b1a15323d3445b",
      "Id": "42f8f00661c54a2b80d33aa1f8f34ddd",
      "IsHidden": "False"
    },
    {
      "Start": "8ccaaaeb81e64cf0afd6b6f7368aeef8",
      "End": "02e0bb5b9d0e457ebd53e48eca839e1d",
      "Id": "37b35a86f30a49cd81f14f4fafe24f4c",
      "IsHidden": "False"
    },
    {
      "Start": "8ccaaaeb81e64cf0afd6b6f7368aeef8",
      "End": "5898129ba6e94717bad1c2e9e6b75313",
      "Id": "10fe58e945104e5692d1ceaa4cf1095f",
      "IsHidden": "False"
    },
    {
      "Start": "b1004f3eba744651bbdaac31efd7d762",
      "End": "0ff046ebd624422dad4be5c1cb3a9e98",
      "Id": "8136914391604a27bd6ad1296c1ed539",
      "IsHidden": "False"
    },
    {
      "Start": "31bda9e709804f23bbcf11179ac70749",
      "End": "08cf3f9b3e5d43e48be4ee2445de11d1",
      "Id": "1922f426881d4b50b3cb9513bb830c66",
      "IsHidden": "False"
    },
    {
      "Start": "b41720919fd0439ea0dd87f71b67080e",
      "End": "bee976de5cac45d9a7729a1dad8b487d",
      "Id": "4ab732f054a348248517e85be07355a5",
      "IsHidden": "False"
    },
    {
      "Start": "b41720919fd0439ea0dd87f71b67080e",
      "End": "2ffc7badc3964fe4b1668daa8972e17a",
      "Id": "4058cb7d256a4c7ea03639e12b3f1643",
      "IsHidden": "False"
    },
    {
      "Start": "343c269326d242598a644214bc9fd722",
      "End": "b1b3d9a6071e4c09a2b8469bc8792426",
      "Id": "97e46ea7833d44bfbb603f1b638eb499",
      "IsHidden": "False"
    },
    {
      "Start": "dbe3d4e0b3c843b381d4619e6b08c419",
      "End": "dbe3e681e84f4831b7dab244ee31115d",
      "Id": "ad80cd76b281415090a8bccb397ccc36",
      "IsHidden": "False"
    },
    {
      "Start": "f811ed0700d54255b83c12394870eeff",
      "End": "7a75d2d18293473e89b54f0ee754c1e5",
      "Id": "ec85764a69f64eadb7a67c81b1d8b250",
      "IsHidden": "False"
    },
    {
      "Start": "5dce84b2c7754a2bbef894ea1de56dd5",
      "End": "90f57e60ceb2474582ae512af066d4ae",
      "Id": "5e64154a9b1946e69a378e1b6ab5fcd9",
      "IsHidden": "False"
    },
    {
      "Start": "5dce84b2c7754a2bbef894ea1de56dd5",
      "End": "0a92beaaaf9e4ccf9cbcace53639c1b5",
      "Id": "90ac7fcba3064d67b6c00e16ebc4a84e",
      "IsHidden": "False"
    },
    {
      "Start": "2a21d79dc4e546c7a5d930f015a1ccf9",
      "End": "8eccee2da9d44095b4a5a8165d65e5e9",
      "Id": "a9bdcb89a0024e8ba280143b36aba394",
      "IsHidden": "False"
    },
    {
      "Start": "75452394259f454aac6b7f0729e4e1f7",
      "End": "893113c989264cd19431bbb81823b560",
      "Id": "47d094e93a994b7696d97cc32e9c5a21",
      "IsHidden": "False"
    },
    {
      "Start": "be1b029e33894bd0902651bb82065169",
      "End": "830fdb6b17c24e5e9b88bcb80c215549",
      "Id": "ac1869ea88b4484a9596e5e99fd6b4a6",
      "IsHidden": "False"
    },
    {
      "Start": "da8b6750c54241e4ae6ec824684ac955",
      "End": "1e51c34b755b4b5daebc49a04c834a02",
      "Id": "bb9f914f2d8d4be8b6adf873f6a885f3",
      "IsHidden": "False"
    },
    {
      "Start": "b345d4e40bdc4e6593a996aa4cb30453",
      "End": "b6b668c063784cf0ba5e742521351658",
      "Id": "92c82fdcb7fb4d06884c1529dea1e794",
      "IsHidden": "False"
    },
    {
      "Start": "fd49bd91c8404815a9c1a36fc411c667",
      "End": "42770b41a2d946509605b16ddcffe4ed",
      "Id": "2ac2633bc8ad4cb99eb6c9d0c456b5d9",
      "IsHidden": "False"
    },
    {
      "Start": "d4b321675a114235bf59cb7e5d0e3e28",
      "End": "1713810eee684d02934f951dc7ba675d",
      "Id": "af0f1438995945a1881c2781b1ada32c",
      "IsHidden": "False"
    },
    {
      "Start": "a2ecfaa19c334eddb1d809fd5b9c21b7",
      "End": "e40fc391bb9543069e39578990171d11",
      "Id": "b1748701fb9d45728696cc3ef47fc33a",
      "IsHidden": "False"
    },
    {
      "Start": "112368b6347846d79c81bcc2f9ded6e3",
      "End": "5241a20caa8f481a94fc7be2332e76fc",
      "Id": "676e106a19a8458d9c0b19a2de9fbbf2",
      "IsHidden": "False"
    },
    {
      "Start": "f41c17b57dc4486791d293b996225179",
      "End": "c86c20b170cf41b2b9cfee070d24dc41",
      "Id": "1ed0bc4a9cc74263a323881f163c065e",
      "IsHidden": "False"
    },
    {
      "Start": "fc0b74d5401541c0bc827a65e85ad1a1",
      "End": "1f9bfde3838746b5aef0d8d9f60bfcfe",
      "Id": "b8bc0ae49f734faf98daf04bb3999559",
      "IsHidden": "False"
    },
    {
      "Start": "3422482c33ca4a8bb54f4221e08c54ac",
      "End": "3adefa72172f4d0e94c423abf3e4051d",
      "Id": "32866a54ba3e4c5298ec070b9e226d63",
      "IsHidden": "False"
    },
    {
      "Start": "b9b1312780c54a8e89dc026b692e91e8",
      "End": "2a14711119634cb3be308f0f81f8e3c2",
      "Id": "d459863f45cc46f29fb986d325612711",
      "IsHidden": "False"
    },
    {
      "Start": "5910d662ad6e4a1087d938c1a9ce900a",
      "End": "b24df086c9204ccd9af377fabb5536aa",
      "Id": "fb977e719284480cbbae5e552c205f32",
      "IsHidden": "False"
    },
    {
      "Start": "b3480272d2ec471a96af2b99b4778507",
      "End": "c65df92cac4c49448f02fb3db90aca10",
      "Id": "90440f99732b45c0ac5dfdcd596cffbf",
      "IsHidden": "False"
    },
    {
      "Start": "b3480272d2ec471a96af2b99b4778507",
      "End": "81b00a4bed47445eb92bccff5549b468",
      "Id": "3964c033df0f41dabdf1a52c055e9ff1",
      "IsHidden": "False"
    },
    {
      "Start": "b3480272d2ec471a96af2b99b4778507",
      "End": "17c5e50fcdc64d49a30e6884d4f4a9e0",
      "Id": "42a10f4a2369486fa9a078670588ab6a",
      "IsHidden": "False"
    },
    {
      "Start": "d118fc22345b4457ad77d512e3de8783",
      "End": "22f5fa1c20f7455ea21665a22a48d9fd",
      "Id": "a798d3edf89d412182d1427d5a48a42e",
      "IsHidden": "False"
    },
    {
      "Start": "d118fc22345b4457ad77d512e3de8783",
      "End": "2c59e4bee5cd41cd89fda6e062b9cf8c",
      "Id": "e3326b54094a4459b557838f72e3ccd9",
      "IsHidden": "False"
    },
    {
      "Start": "d118fc22345b4457ad77d512e3de8783",
      "End": "b35b3940419a42c7a5112291214ac213",
      "Id": "076809e39763483bb601f081740e7421",
      "IsHidden": "False"
    },
    {
      "Start": "323f7caf7ca34686a14fb4e51c84e0ca",
      "End": "1252dffffa95417194b7d58f4c2ff833",
      "Id": "55b0e998cc4d40ff80eb685725ad3921",
      "IsHidden": "False"
    },
    {
      "Start": "970a442dbaf948f7a5500cce67b1c1e9",
      "End": "328222afafa543d68afcfdc2f53476d0",
      "Id": "90298140022c4cd1a997f4175926c797",
      "IsHidden": "False"
    },
    {
      "Start": "7db0be430fef4226a6517e8b94f43cba",
      "End": "26a5a7694c2a4a81891f71ebce263721",
      "Id": "818d0e7854ca4174b1714d66bba524bd",
      "IsHidden": "False"
    },
    {
      "Start": "d70d40203d8243dc83382e650fd69e2b",
      "End": "2d2a3304c84b4cc0b08efe519908c58c",
      "Id": "117f12849e4f45a9aedd1f1b889e561f",
      "IsHidden": "False"
    },
    {
      "Start": "a9ed82406bc84045abb263c53882030d",
      "End": "c52e242a69bb42cfb1a77c59eeabc6eb",
      "Id": "0890ad70a0124240ad362715ffd64777",
      "IsHidden": "False"
    },
    {
      "Start": "7774ba6630ff403f9becde86c732494f",
      "End": "bbe76a0fe46e47cfbe261f0aed89b5b1",
      "Id": "61da3b148428415e8fd67f3e4c9c0527",
      "IsHidden": "False"
    },
    {
      "Start": "7774ba6630ff403f9becde86c732494f",
      "End": "db67b35c93264ad2b713bd6dc4cfdcff",
      "Id": "dd3bbfdade554bd79ffc22edfdd3e73b",
      "IsHidden": "False"
    },
    {
      "Start": "2ad2e7e5e94a4c259c4590a5bb09bb62",
      "End": "8cfe724f96a54baaad782a3b8a0da782",
      "Id": "3a1a6915b2d74d41a5a54451253ac29a",
      "IsHidden": "False"
    },
    {
      "Start": "faf75b6cffd545a18a04608ac8e6cc0c",
      "End": "a2812fed94d14546ab79190346f3a1ab",
      "Id": "65abe185b6a5492e80dde3673ac8868a",
      "IsHidden": "False"
    },
    {
      "Start": "faf75b6cffd545a18a04608ac8e6cc0c",
      "End": "e45e7bbab26b4433b5b39ea0019872d8",
      "Id": "e7916a4aec6d4638bc60643600796176",
      "IsHidden": "False"
    },
    {
      "Start": "faf75b6cffd545a18a04608ac8e6cc0c",
      "End": "6bb89a836d794adbb921321ff571e938",
      "Id": "5253568d6b334f978944e4c108c69d0a",
      "IsHidden": "False"
    },
    {
      "Start": "9623ac4db54a4339a923f9667e129e78",
      "End": "2a89d775a32a4b27ab012d0abd5be9ac",
      "Id": "6a54ba02abe041e7add3419caa8fefe2",
      "IsHidden": "False"
    },
    {
      "Start": "cd0186c0110e45efbff32b76a9bb3a55",
      "End": "0127ebbcb03b43efb3bb5dca643ad467",
      "Id": "e1c7367184d94a18ab7725a04137573f",
      "IsHidden": "False"
    },
    {
      "Start": "3149bda6bcdf4fad90c9798d5c5df517",
      "End": "d9af8e4edf4f40b3a1882f913c18c1ed",
      "Id": "9a52fb7de3f54c91a311e07b89d4fcac",
      "IsHidden": "False"
    },
    {
      "Start": "3149bda6bcdf4fad90c9798d5c5df517",
      "End": "f11a15768d5746ea9b3149fa74e9f064",
      "Id": "c0235d20ffc74ed0995223a3d679416d",
      "IsHidden": "False"
    },
    {
      "Start": "0aecc2e46d294a3686e8fae43e459cde",
      "End": "2eff0a76393647059b43cdb815c2689a",
      "Id": "7b401ac45d854420914f60ae61164c25",
      "IsHidden": "False"
    },
    {
      "Start": "f24aa119b1c948a5b358112c522c184a",
      "End": "feeba59b23ad49008487887365381aee",
      "Id": "609923b0bea548ff990931c5f00e3346",
      "IsHidden": "False"
    },
    {
      "Start": "af9634c2ebf3447a91699df96d91d2f5",
      "End": "ab283307135f4c17855961c85abc4c60",
      "Id": "1bc36b3590004eccbaea1e4347d2efc1",
      "IsHidden": "False"
    },
    {
      "Start": "9e27a611d9d144839114abd0623ede72",
      "End": "10cfb17f2e9a4b0d8b284059bef4f090",
      "Id": "11521d53ed0a4b728c2bc0ddaa3ae71c",
      "IsHidden": "False"
    },
    {
      "Start": "ab25c5fd093e4ef88174429852daa320",
      "End": "f9f782fc2baf4e9a9eeaf109ac5875b7",
      "Id": "32875778ddfd437aabd60da6e6ad5966",
      "IsHidden": "False"
    },
    {
      "Start": "24ee4412548341dcb1fcf9422cdac41d",
      "End": "5ff94de387ee41dc92b2e876bd4d39b5",
      "Id": "4e79c175ddfb4dfeaebf11c3b3c3c135",
      "IsHidden": "False"
    },
    {
      "Start": "2ae84853d9e043699e6f4ca77f9d976d",
      "End": "5d6a579e11fc46ff81e2a20afbd033ad",
      "Id": "5648294224774922b634fe87d59f3a44",
      "IsHidden": "False"
    },
    {
      "Start": "2756c01d322843f18cd5658665d69f79",
      "End": "cc4ee34aba664fcb8efda003708f0790",
      "Id": "9630c62a5de54ad2b01679774a0c1696",
      "IsHidden": "False"
    },
    {
      "Start": "1afdad0b610045f49d9918563aa08dd5",
      "End": "7d852923babc430fa1d5c8efa5cdde9f",
      "Id": "226d9684561f479592641fc389395bf6",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "플랜트건축팀_BIM_팀 표준 Family List_Rev.0_시연용_20231107.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "51b4738620874fe885b1b5ecce1e49b7",
        "79390c9ce7774e469399c480c2fd9540",
        "e4bace56c16d462b8e637e17ad1a1046",
        "7f5e0c25b593402094aa786410d940b1"
      ]
    },
    {
      "Name": "Total BOQ_GAH_STB.xlsx",
      "ReferenceType": "External",
      "Nodes": [
        "ecccb4f11a2543e29cb666423f4f697e",
        "29337ae8d2c94d488ebdc03de0a16ad6"
      ]
    }
  ],
  "Thumbnail": "
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "MK Jang",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -31.814431699416019,
      "EyeY": 74.243797757857308,
      "EyeZ": -117.2668551591599,
      "LookX": 56.264431031844,
      "LookY": -76.493493774168954,
      "LookZ": 87.267335811015371,
      "UpX": 0.22039921581745148,
      "UpY": 0.91354435682296753,
      "UpZ": 0.34184926748275757
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "1250bd18102c4ebaac9950d60dac8849",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5546.4309676338926,
        "Y": 1787.4683273519636
      },
      {
        "Name": "All ElementsExceptRails",
        "ShowGeometry": true,
        "Id": "c790cfc4c7d943cdb05ca3a612d673c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5189.4309676338926,
        "Y": 1639.4683273519636
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "d78f3dfc768541ab8490b53194e174c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5882.4309676338908,
        "Y": 1787.4683273519636
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "94dc2b3bd4e14a9fa5352e8ad0cbe58b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5189.4309676338926,
        "Y": 1787.4683273519636
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "bf37a72db0e847dba5e3d1c2ed14c8bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4836.4309676338926,
        "Y": 1696.4683273519636
      },
      {
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Id": "1eac1f1717ab40c98ea2a8a9b59421d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5110.0447414019063,
        "Y": 452.77065700275693
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "caccad700bd84d8e8cb198c7fe1545aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5404.0447414019063,
        "Y": 349.77065700275693
      },
      {
        "Name": "Family List 경로 입력",
        "ShowGeometry": true,
        "Id": "51b4738620874fe885b1b5ecce1e49b7",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6047.0447414019063,
        "Y": 349.77065700275693
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "76e75c1cd00342eeb418e14c2410b8f4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5404.0447414019063,
        "Y": 645.77065700275693
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "64985def907747329221585392bfc414",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5615.5250615462792,
        "Y": 523.90349445592972
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "85e664ba9cb643c5b3b2014270272b36",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1300.0489047498806,
        "Y": 4181.6552747312526
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "9fac8931a6e44ba394f6b5087edcfafe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 151.04890474988065,
        "Y": 4161.1377747312526
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "995ccef9f1cd4b49aecc810576ba715f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -183.95109525011958,
        "Y": 4161.1377747312526
      },
      {
        "Name": "Dictionary.ValueAtKey",
        "ShowGeometry": true,
        "Id": "fdb901f20d644088a89f03651e881266",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2378.0489047498804,
        "Y": 4219.6552747312526
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "014417a7a6a74588a86afc4c30d8ea08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2378.0489047498804,
        "Y": 4397.482774731252
      },
      {
        "Name": "setParamElementTypes",
        "ShowGeometry": true,
        "Id": "ee95e619ed6b4a4092d10917064aaf58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 2735.0489047498804,
        "Y": 4257.6552747312526
      },
      {
        "Name": "Get_WMCodesAndBriefSpec",
        "ShowGeometry": true,
        "Id": "ad5dc112707a4841a2b44b8eb9c1ca62",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1996.0489047498804,
        "Y": 4219.6552747312526
      },
      {
        "Name": "Dictionary.ByKeysValues",
        "ShowGeometry": true,
        "Id": "4eee53a8546c4694abfafd1926920870",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1638.0489047498804,
        "Y": 4147.6552747312526
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "9e1934a59db94d298059a9bc8b9a66b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1638.0489047498804,
        "Y": 4325.482774731252
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5942773aeb824c84bde85b7a139bac6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 451.04890474988042,
        "Y": 4127.1377747312526
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "590996bec97544a8a3c5eaecbf1bbd45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 854.04890474988042,
        "Y": 4215.6552747312526
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ea47f768c4464f6ca17b7b47bc073108",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 451.04890474988042,
        "Y": 4305.1377747312526
      },
      {
        "Name": "family list데이터 - Revit 부재 데이터 결합 & Sym_Val Dict 값 업데이트(타입,인스턴스 매개변수)",
        "ShowGeometry": true,
        "Id": "3bf30dcbbca84eb08aafa5ed15d4042e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -392.45864084059849,
        "Y": 655.69040539506477
      },
      {
        "Name": "Dynamo 형상기반 별도 산출 구간(토공 + etc) 개별터파기",
        "ShowGeometry": false,
        "Id": "fb1aef36c6274fd48c14e9a3127ec8e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 896.65706054633529,
        "Y": 127.8800596323232
      },
      {
        "Name": "부재/WM 별 산식에 의한 최종 계산",
        "ShowGeometry": true,
        "Id": "0c4ce42b1eec4eed8035d10e12270fc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2436.9440414963583,
        "Y": 434.38503283422136
      },
      {
        "Name": "Data.ExportToExcel",
        "ShowGeometry": true,
        "Id": "3a2291d54fa74970b0cacd8a3a8a08b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6394.4937171277725,
        "Y": -235.33739576560129
      },
      {
        "Name": "WM별 총합 계산 및 엑셀 익스포트 준비",
        "ShowGeometry": true,
        "Id": "df538152d8514dcaab3d75f0734a582b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3363.6105669437038,
        "Y": 584.68714331025933
      },
      {
        "Name": "Dictionary.Components",
        "ShowGeometry": true,
        "Id": "d9de8a61787442ceb4b5e56fe75e7a1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5033.72586466587,
        "Y": -170.68521750947878
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "ae19779d3103471bb4993d2624fee3c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5380.72586466587,
        "Y": -48.185217509478775
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0e906b492e964f0388034bb3dba9715c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5033.72586466587,
        "Y": 11.642282490521211
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "79390c9ce7774e469399c480c2fd9540",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3964.5163900096377,
        "Y": -904.35353463334775
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e4bace56c16d462b8e637e17ad1a1046",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5703.72586466587,
        "Y": -247.35771750947879
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "43c850fe5b414baaa43fa6abbf66d41a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5703.72586466587,
        "Y": -99.185217509478775
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2524f0f864744ce88dfa2ab2d9d3e61d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5380.72586466587,
        "Y": -206.70271750947879
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5439dd63dedb49b3a2f7682ca7a4cdfc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3812.6105669437038,
        "Y": 584.68714331025933
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "92a5d0c5dcc842d7b250f2421b0731ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6929.0589093062044,
        "Y": 1307.5384563313889
      },
      {
        "Name": "WM별 계산결과 및 spec 정리 from Element",
        "ShowGeometry": true,
        "Id": "f12f2f24ce254bd0baef14f26c5d20e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7506.5438395735273,
        "Y": 1306.455735658782
      },
      {
        "Name": "Total BOQ sheet 경로 입력",
        "ShowGeometry": true,
        "Id": "ecccb4f11a2543e29cb666423f4f697e",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5978.4291866789308,
        "Y": 794.0975941851691
      },
      {
        "Name": "Data.ImportExcel",
        "ShowGeometry": true,
        "Id": "545bdda03ce34cbf8f380aa09996affe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6645.5438395735273,
        "Y": 914.2832356587819
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "23c16e6f54c54461a94198d996b688b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6365.5438395735273,
        "Y": 1005.1107356587818
      },
      {
        "Name": "File From Path",
        "ShowGeometry": true,
        "Id": "cb8eb6bb001d4e018998c1f81063a7b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6365.5438395735273,
        "Y": 857.2832356587819
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "14f3ccaaff4b40d6995625fe77a4fefc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2070.3558066147989,
        "Y": 1303.7159304422937
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e1f7183e17d94ac6b722d8c8f5f42ae7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -19.142767416127072,
        "Y": 1801.8743872599284
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6689bfc92b614a86a2438579264ab559",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1135.7922651304825,
        "Y": 1792.9030645137032
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "dcbac945a42f4a5c9a9db85369fb5958",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2255.286188313733,
        "Y": 1594.8467392122238
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "abf63584b5df484fa09c861a33e2a423",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2001.286188313733,
        "Y": 1628.6742392122242
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "0a5e14b22e144bed8451ebf583eb117a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2578.286188313733,
        "Y": 1666.8467392122238
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0de826304a0c4eeb88bf431965d3fbff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2255.286188313733,
        "Y": 1772.6742392122237
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "353906790eac4dbe9265acc4fd59f260",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2873.286188313733,
        "Y": 1666.8467392122238
      },
      {
        "Name": "Dictionary.Keys",
        "ShowGeometry": true,
        "Id": "0e9dd9cb6fb34e35b5bb8303dbaaffa7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2304.21029964097,
        "Y": 2455.9065028908831
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "e861b848a856496cbce58b3351868c08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3512.6866776193897,
        "Y": 2361.6730358667264
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b8bb7074d1474d5c817d440222fe7c73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3301.4820695435496,
        "Y": 2672.624272839003
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "a6525529e2854c5da74f8737df2462da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2911.2498475539696,
        "Y": 2666.425142227703
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "b0d49f5a08ca4d7aa0ec4d85b3c4eb68",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2301.8243317276197,
        "Y": 2592.7694599493029
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "73b6dea7f2e447e79d14252e5f29c46f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1487.9825887891197,
        "Y": 2368.6303961946769
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5fa4cf5424f741e2afce70431dab7668",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1152.9825887891197,
        "Y": 2368.6303961946769
      },
      {
        "Name": "List.Contains",
        "ShowGeometry": true,
        "Id": "ff9036ffe34e498e92682212d56492b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1858.2102996409699,
        "Y": 2512.9065028908831
      },
      {
        "Name": "Total BOQ 데이터 파싱_(AR) BOQ시트",
        "ShowGeometry": true,
        "Id": "6d3257a7ae1544ba96260a2930df41a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6985.5438395735273,
        "Y": 1094.2832356587819
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1d1c6adab25c4ce38795f6d70084638b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3173.286188313733,
        "Y": 1666.8467392122238
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "86d4c756923b4ec5a7a76f44031313e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2577.786188313733,
        "Y": 1993.8467392122243
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "36b72e613f054f51ab44d4a659a11baf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2254.786188313733,
        "Y": 2099.6742392122237
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "522eba1415564c619ea3a722c3bfca63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2254.786188313733,
        "Y": 1921.8467392122243
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "78f0730f98164cf88c95031451db6a2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2872.786188313733,
        "Y": 1993.8467392122243
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f8862fff8dc647619582f6b8e6003793",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2000.786188313733,
        "Y": 1955.6742392122237
      },
      {
        "Name": "건물명 입력",
        "ShowGeometry": true,
        "Id": "aae6ee369697433d96978d6f0a38227c",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6645.5438395735273,
        "Y": 1160.0881190357611
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6790ac16e9864c6282b9f0a28e4bac80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3172.786188313733,
        "Y": 1993.8467392122243
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "8066549a4a9b47df80e48559f550e5c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6640.00428810479,
        "Y": 1303.7436841900451
      },
      {
        "Name": "Data formatting for Excel Export___________________________",
        "ShowGeometry": true,
        "Id": "cf52cd359968431c954ef0c1c105f09b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8697.0913476805545,
        "Y": 1284.4247282697729
      },
      {
        "Name": "Export to Total BOQ",
        "ShowGeometry": true,
        "Id": "53192363f9da457ca86140d19351bdfb",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 9398.08669098557,
        "Y": 959.94102670221878
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "29337ae8d2c94d488ebdc03de0a16ad6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7506.5438395735273,
        "Y": 914.2832356587819
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "008b88f58bd548188e4d5668e106d9e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7506.5438395735273,
        "Y": 1094.2832356587819
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "585ec18cd18f42599489c992855c056f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8282.9890142624063,
        "Y": 659.1526795794482
      },
      {
        "Name": "Excel data dictionarization",
        "ShowGeometry": true,
        "Id": "37d98a0573ca4e45bc768f0e30503018",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3520.1531238545704,
        "Y": 561.53803838221847
      },
      {
        "Name": "lang_mode(영/한) select",
        "ShowGeometry": true,
        "Id": "5c6408d2dc324480ad293743e0e51f10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3877.1531238545749,
        "Y": 561.53803838221893
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "754f8c62f313424485c7342eacc1cd4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4064.959276963491,
        "Y": 1295.534543459946
      },
      {
        "Name": "DirectShape.ByGeometry",
        "ShowGeometry": true,
        "Id": "9c00d037545a47ff9e257e7d759f44ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2606.2720717923817,
        "Y": -595.76739162615138
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "cc04cf0106e74649a78c7d32340974f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2234.6091896976491,
        "Y": -450.90949614873455
      },
      {
        "Name": "Color Palette",
        "ShowGeometry": true,
        "Id": "34ea96b2fc534db2970d37cf666e17fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2606.2720717923817,
        "Y": -347.76739162615138
      },
      {
        "Name": "Element.OverrideColorInView",
        "ShowGeometry": true,
        "Id": "06885c5624264cd2be8f78ccedf339fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2966.2720717923817,
        "Y": -488.76739162615138
      },
      {
        "Name": "Dynamo 형상기반 별도 산출 구간(토공 + etc)_온통터파기",
        "ShowGeometry": false,
        "Id": "2412da53536a449db8e644d4eec82228",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 876.435162205712,
        "Y": 587.96220065076534
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8f8b06f8cc7a4d6294c8564c6fdf5f17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -382.81989778821571,
        "Y": 432.29654425545334
      },
      {
        "Name": "elemDicts",
        "ShowGeometry": true,
        "Id": "b8554357e6504e2c98f38051e1260c3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3022.5547712520297,
        "Y": 633.38345994098574
      },
      {
        "Name": "paramSheetDic",
        "ShowGeometry": true,
        "Id": "5391682d83bf47e7857a03aefc4abd8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3031.4646182546239,
        "Y": 425.61087066055217
      },
      {
        "Name": "토공 산출 모드 선택",
        "ShowGeometry": true,
        "Id": "739b18232b3647c3a93bc9903af06c1d",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1141.0757035939926,
        "Y": 120.64546730089603
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "04b858aefce14c6795522dcd602cb6f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -386.71850461752229,
        "Y": 245.39317946798644
      },
      {
        "Name": "토공 형상 검토",
        "ShowGeometry": true,
        "Id": "a98e12398d394ec4b92bd9ea62678b9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2270.2720717923817,
        "Y": -684.76739162615138
      },
      {
        "Name": "elemDicts",
        "ShowGeometry": true,
        "Id": "e47947b56c604d3b9e4724da689579ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1690.4588141823656,
        "Y": 666.77215260388039
      },
      {
        "Name": "totalEarthShape",
        "ShowGeometry": false,
        "Id": "46423e109bbf4282bfedf4a127625a04",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1673.1113760098585,
        "Y": 393.71145526631659
      },
      {
        "Name": "Custom Selection",
        "ShowGeometry": true,
        "Id": "8af0cee8caff4f8cad732d22ae0a9c53",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1848.2720717923817,
        "Y": -684.76739162615138
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7f5e0c25b593402094aa786410d940b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1160.4154357440934,
        "Y": -898.209298579612
      },
      {
        "Name": "famTypeDic",
        "ShowGeometry": true,
        "Id": "aceb5143cc9046c6ad7c0cc61ed9e4a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3011.7866655383418,
        "Y": 1014.4517926587638
      },
      {
        "Name": "WM별 spec 정리 from Family List",
        "ShowGeometry": true,
        "Id": "756a672a7cef4e9e91d11c4c0279ab0a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8082.5601460096568,
        "Y": 1501.5174185548051
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7edcee4a274841a8a889d4611bbeb8fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2950.907333998337,
        "Y": 1041.6113298981968
      },
      {
        "Name": "Total BOQ복사 및 경로 반환",
        "ShowGeometry": true,
        "Id": "11184f601ab1440f92b47f1dcda08f3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8472.9297778246328,
        "Y": 311.83155150992627
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5b26f33fb50d4441b2dc495fc028521e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6408.0730321985411,
        "Y": 1159.4637023568769
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b0d2ff2d9c5f4d63a07bfdf8b46f74bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7478.0,
        "Y": 228.0
      }
    ],
    "Annotations": [
      {
        "Id": "f70bf264fa0749c79027f550865f41ad",
        "Title": "All Elements in Revit",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1250bd18102c4ebaac9950d60dac8849",
          "c790cfc4c7d943cdb05ca3a612d673c4",
          "d78f3dfc768541ab8490b53194e174c5",
          "94dc2b3bd4e14a9fa5352e8ad0cbe58b",
          "bf37a72db0e847dba5e3d1c2ed14c8bd"
        ],
        "HasNestedGroups": false,
        "Left": -5892.4309676338908,
        "Top": 1523.4683273519636,
        "Width": 1217.9999999999982,
        "Height": 396.0,
        "FontSize": 72.0,
        "InitialTop": 1639.4683273519636,
        "InitialHeight": 293.0,
        "TextblockHeight": 106.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "845648042f7a44b3b450cfa23ec8d632",
        "Title": "All Data in Excel",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1eac1f1717ab40c98ea2a8a9b59421d3",
          "caccad700bd84d8e8cb198c7fe1545aa",
          "51b4738620874fe885b1b5ecce1e49b7",
          "76e75c1cd00342eeb418e14c2410b8f4",
          "64985def907747329221585392bfc414"
        ],
        "HasNestedGroups": false,
        "Left": -6057.0447414019063,
        "Top": 204.77065700275693,
        "Width": 1195.0,
        "Height": 689.13283745317278,
        "FontSize": 96.0,
        "InitialTop": 349.77065700275693,
        "InitialHeight": 441.0,
        "TextblockHeight": 135.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "3d2a1efc5b53493ea2da91d1a4544a5c",
        "Title": "Family Type 별 WM 코드 Revit 되먹임",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "85e664ba9cb643c5b3b2014270272b36",
          "fdb901f20d644088a89f03651e881266",
          "014417a7a6a74588a86afc4c30d8ea08",
          "ee95e619ed6b4a4092d10917064aaf58",
          "ad5dc112707a4841a2b44b8eb9c1ca62",
          "4eee53a8546c4694abfafd1926920870",
          "9e1934a59db94d298059a9bc8b9a66b6",
          "5942773aeb824c84bde85b7a139bac6b",
          "590996bec97544a8a3c5eaecbf1bbd45",
          "ea47f768c4464f6ca17b7b47bc073108",
          "995ccef9f1cd4b49aecc810576ba715f",
          "9fac8931a6e44ba394f6b5087edcfafe",
          "0ff82b1632ff4d8cbcded5b0beba520c"
        ],
        "HasNestedGroups": false,
        "Left": -193.95109525011958,
        "Top": 3978.8814637150044,
        "Width": 3188.0,
        "Height": 723.60131101624756,
        "FontSize": 96.0,
        "InitialTop": 4123.8814637150044,
        "InitialHeight": 418.60131101624756,
        "TextblockHeight": 135.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bc0cee792c2f42f5b7feff7ccbb98290",
        "Title": "Family List엑셀파일 물량 기입 구간",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a2291d54fa74970b0cacd8a3a8a08b8",
          "d9de8a61787442ceb4b5e56fe75e7a1d",
          "ae19779d3103471bb4993d2624fee3c8",
          "0e906b492e964f0388034bb3dba9715c",
          "e4bace56c16d462b8e637e17ad1a1046",
          "43c850fe5b414baaa43fa6abbf66d41a",
          "2524f0f864744ce88dfa2ab2d9d3e61d"
        ],
        "HasNestedGroups": false,
        "Left": 5023.72586466587,
        "Top": -392.35771750947879,
        "Width": 1615.7678524619023,
        "Height": 536.0,
        "FontSize": 96.0,
        "InitialTop": -247.35771750947879,
        "InitialHeight": 404.0,
        "TextblockHeight": 135.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "37c5fa300a2c41fb8719914b2749cb9f",
        "Title": "심볼 및 값 추출(토공 포함) / 수식계산 / 익스포트 용 데이터 정리",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3bf30dcbbca84eb08aafa5ed15d4042e",
          "fb1aef36c6274fd48c14e9a3127ec8e9",
          "0c4ce42b1eec4eed8035d10e12270fc2",
          "df538152d8514dcaab3d75f0734a582b",
          "5439dd63dedb49b3a2f7682ca7a4cdfc",
          "2412da53536a449db8e644d4eec82228",
          "8f8b06f8cc7a4d6294c8564c6fdf5f17",
          "04b858aefce14c6795522dcd602cb6f5",
          "e47947b56c604d3b9e4724da689579ac",
          "46423e109bbf4282bfedf4a127625a04",
          "e59d4e8deeea44a0a571183ad690d46a",
          "8b2acc66020a4ec3b983d42af1cad06e",
          "7441a8b2f3f14e738ef80ca8786cf6ee",
          "613ab6cbd1e245fc94f0837e0f6382e6"
        ],
        "HasNestedGroups": false,
        "Left": -402.45864084059849,
        "Top": -17.119940367676804,
        "Width": 4379.0692077843023,
        "Height": 924.4744771218185,
        "FontSize": 96.0,
        "InitialTop": 127.8800596323232,
        "InitialHeight": 875.4744771218185,
        "TextblockHeight": 135.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "e4fb627520384af3b1eabd7a2ac5343b",
        "Title": "필터링 구간 (패밀리 리스트에 없는 이름 제외)",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e861b848a856496cbce58b3351868c08",
          "b8bb7074d1474d5c817d440222fe7c73",
          "a6525529e2854c5da74f8737df2462da",
          "b0d49f5a08ca4d7aa0ec4d85b3c4eb68",
          "73b6dea7f2e447e79d14252e5f29c46f",
          "5fa4cf5424f741e2afce70431dab7668",
          "0e9dd9cb6fb34e35b5bb8303dbaaffa7",
          "ff9036ffe34e498e92682212d56492b0"
        ],
        "HasNestedGroups": false,
        "Left": -3522.6866776193897,
        "Top": 2216.6730358667264,
        "Width": 2597.70408883027,
        "Height": 611.75210636097654,
        "FontSize": 96.0,
        "InitialTop": 2361.6730358667264,
        "InitialHeight": 455.95123697227655,
        "TextblockHeight": 135.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "687f7420ca1d42b789e3f2697ffb8cfe",
        "Title": "[WM-AR] 시트 데이터 정리",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6689bfc92b614a86a2438579264ab559",
          "dcbac945a42f4a5c9a9db85369fb5958",
          "abf63584b5df484fa09c861a33e2a423",
          "0a5e14b22e144bed8451ebf583eb117a",
          "0de826304a0c4eeb88bf431965d3fbff",
          "353906790eac4dbe9265acc4fd59f260",
          "1d1c6adab25c4ce38795f6d70084638b",
          "86d4c756923b4ec5a7a76f44031313e3",
          "36b72e613f054f51ab44d4a659a11baf",
          "522eba1415564c619ea3a722c3bfca63",
          "78f0730f98164cf88c95031451db6a2e",
          "f8862fff8dc647619582f6b8e6003793",
          "6790ac16e9864c6282b9f0a28e4bac80"
        ],
        "HasNestedGroups": false,
        "Left": 1125.7922651304825,
        "Top": 1449.8467392122238,
        "Width": 2434.9939231832504,
        "Height": 781.82749999999987,
        "FontSize": 96.0,
        "InitialTop": 1594.8467392122238,
        "InitialHeight": 649.82749999999987,
        "TextblockHeight": 135.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "4f489a0f179442bf8c968744942b4907",
        "Title": "Excel data dictionarization",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "37d98a0573ca4e45bc768f0e30503018",
          "5c6408d2dc324480ad293743e0e51f10"
        ],
        "HasNestedGroups": false,
        "Left": -3887.1531238545749,
        "Top": 301.53803838221847,
        "Width": 674.5533333333334,
        "Height": 457.0,
        "FontSize": 96.0,
        "InitialTop": 561.53803838221847,
        "InitialHeight": 145.00000000000045,
        "TextblockHeight": 250.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "d6d423b5078b4eaa9ae93dd66054f3cd",
        "Title": "토공 형상 검토 및 DirectShape Revit 생성",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9c00d037545a47ff9e257e7d759f44ae",
          "cc04cf0106e74649a78c7d32340974f0",
          "34ea96b2fc534db2970d37cf666e17fa",
          "06885c5624264cd2be8f78ccedf339fd",
          "a98e12398d394ec4b92bd9ea62678b9d",
          "8af0cee8caff4f8cad732d22ae0a9c53"
        ],
        "HasNestedGroups": false,
        "Left": 1838.2720717923817,
        "Top": -757.76739162615138,
        "Width": 1432.0,
        "Height": 542.0,
        "FontSize": 36.0,
        "InitialTop": -684.76739162615138,
        "InitialHeight": 482.0,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "75a4f3a4d6094b6bbe1e9826bd99fb2d",
        "Title": "Total BOQ 엑셀파일 물량 기입 구간",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "92a5d0c5dcc842d7b250f2421b0731ad",
          "f12f2f24ce254bd0baef14f26c5d20e9",
          "ecccb4f11a2543e29cb666423f4f697e",
          "545bdda03ce34cbf8f380aa09996affe",
          "23c16e6f54c54461a94198d996b688b8",
          "cb8eb6bb001d4e018998c1f81063a7b3",
          "6d3257a7ae1544ba96260a2930df41a0",
          "aae6ee369697433d96978d6f0a38227c",
          "8066549a4a9b47df80e48559f550e5c6",
          "cf52cd359968431c954ef0c1c105f09b",
          "53192363f9da457ca86140d19351bdfb",
          "29337ae8d2c94d488ebdc03de0a16ad6",
          "008b88f58bd548188e4d5668e106d9e3",
          "585ec18cd18f42599489c992855c056f",
          "756a672a7cef4e9e91d11c4c0279ab0a",
          "5b26f33fb50d4441b2dc495fc028521e",
          "63669713819d404bae525815fc170901"
        ],
        "HasNestedGroups": false,
        "Left": 5968.4291866789308,
        "Top": 514.1526795794482,
        "Width": 3659.6575043066396,
        "Height": 1149.3647389753569,
        "FontSize": 96.0,
        "InitialTop": 659.1526795794482,
        "InitialHeight": 987.36473897535689,
        "TextblockHeight": 135.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0ff82b1632ff4d8cbcded5b0beba520c",
        "Title": "Revit에 있는 Family Type 항목만",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -181.1647799152388,
        "Top": 4131.8814637150044,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7441a8b2f3f14e738ef80ca8786cf6ee",
        "Title": "UG RC Union 준비(UG 부재 전체 형상 유니온 - PIT, Trench는 내부공동 포함하는 Boundary로)\nexcavation 개별 형상 리스트\n\n트레이에 하나 넣을 때마다,\n처음은 그냥 두고,\n두번째부터는 트레이에 있는 것과 겹치지 않는 부분만 남겨서 해당부분은 다음 코드로 반환 + 트레이 잔존\n    반환된 기초별 유효 터파기 형상을\n    UG RC Union이랑 디퍼런스 하면 백필형상\n\n\n유표 터파기형상 볼륨 - 백필 형상 볼륨 = 디스포잘 값",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 486.12530162650182,
        "Top": 239.3733332483344,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e59d4e8deeea44a0a571183ad690d46a",
        "Title": "Sym Val Dict에서\n산출식에 사용된 것 이외를\n제거하고 Sym-Val Set 딕셔너리로 저장하기",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 2145.5223973839757,
        "Top": 623.98783188212587,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "63669713819d404bae525815fc170901",
        "Title": "Work Master Code\r\nGauge Code\r\nDescription : (L03)\r\nSpec. : (L04~L11)\r\nAdditional Spec : (Description 항목 값)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 6567.3234033178969,
        "Top": 687.58122338105909,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8b2acc66020a4ec3b983d42af1cad06e",
        "Title": "Stair / Rails 등 추가 예정",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1403.1244909168836,
        "Top": 866.35453675414169,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "613ab6cbd1e245fc94f0837e0f6382e6",
        "Title": "%터파기 형상은 바닥부재에서 비롯됨\r\n\r\n1. 전체 터파기 형상 만들기\r\n2. 전체 디스포잘 형상 만들기\r\n3. 전체 터파기와 디스포잘 볼륨값을 각 \"바닥 부재의 면적/전체터파기 참여 바닥 부재 면적합\" 으로 분개하여 개별 터파기 및 개별 디스포잘 값 산출\r\n4. 개별 터파기 - 개별 디스포잘 하여 개별 백필 물량 산출\r\n",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 505.43557969971607,
        "Top": 671.4826690635665,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -2232.6358938422718,
    "Y": -219.61995537346036,
    "Zoom": 0.43661367770053455
  }
}