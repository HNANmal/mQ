(ns joy.ch5-2
  (:gen-class)
  (:require [clojure.string :as str-]))

;; ### 5.2.1 벡터 만들기

;; 벡터가 꺽쇠 괄호([ ]) 문법을 사용하는 것은 배열에서 벡터를 사용하게 만드는 이유가 되기도 한다. 만일 문자 벡터 대신 문자 배열 바인딩을 사용한다면 let 구문을 사용하는 것과 거의 동일한 구현으로 완벽하게 잘 동작한다. 그러나 꺽쇠 괄호는 let 구문 자체를 둘러싸고 있는 일반적인 괄호와는 다르게 생겼을 뿐만 아니라 let 구문의 몸체로부터 함수를 호출하는 것과도 비슷해서 유용하게 사용될 수 있다. let, with-open, fn 등 바인딩 선언의 용도로 벡터를 사용하는 것은 클로저에 맞는 활용 방법이자 비슷한 매크로를 작성할 때도 따르기를 권장하는 패턴이다.

;; 벡터를 생성하는 가장 일반적인 방법은 [1 2 3] 과 같은 문법을 사용하는 것이다. 그러나 많은 경우에서 다른 종류의 컬렉션 타입으로 선언된 벡터 외부 값들로 생성하고 싶을 때도 있다. 이런 때는 vec 함수를 사용한다.

(vec (range 10))

(class (range 10))

;; 이미 생성된 벡터에 다른 값들을 넣고 싶으면 into를 사용하면 된다.
;; 벡터에 다른 값을 넣고 싶으면 into 함수
(let [my-vector [:a :b :c]]
  (into my-vector (range 10)))