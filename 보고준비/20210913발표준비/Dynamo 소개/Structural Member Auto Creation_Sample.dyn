{
  "Uuid": "bed37b3a-7b99-4907-8a39-9c066319d9bf",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Structural Member Auto Creation_Sample",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Family.ByName@string",
      "Id": "7c031874a0b442dfb4765caa91bbd4f7",
      "Inputs": [
        {
          "Id": "fc88f888261a4da79c8f270ce0ebc36a",
          "Name": "name",
          "Description": "The name of the family in the current document\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ab613ac90904bcfa47c9f5f48391ae2",
          "Name": "Family",
          "Description": "Family",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain a Family from the current document given it's name\n\nFamily.ByName (name: string): Family"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Family.Types",
      "Id": "9836e4a39674438db9a1a1234b4de692",
      "Inputs": [
        {
          "Id": "14f847bcd28847a5a968edbaba8831d7",
          "Name": "family",
          "Description": "Revit.Elements.Family",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a075af2d69144600a134ebe851aa5451",
          "Name": "FamilyType[]",
          "Description": "FamilyType[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain the FamilyTypes from this Family\n\nFamily.Types: FamilyType[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 269,
      "SelectedString": "OST_Grids",
      "NodeType": "ExtensionNode",
      "Id": "59309871ecee403a97edbfe87de847c3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "60fd178b03ca4bb8a8421405604fe4b0",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "a0f95242229c466eaa86dc0855ab2a4a",
      "Inputs": [
        {
          "Id": "c2577a9b1b8d48289626c3331bed22a1",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d89683aa3464b2fb7b54a3d3c7f47fe",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "6c2ddf95f209481c97a7b8b662ab5855",
      "Inputs": [
        {
          "Id": "6dea8fbf56464979a5663edcbe323ec6",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6ffc359e8b44a28a88d4ea4b6e4f3c7",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d2237fccc1247eeb520b03817b088d7",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "ef8bdc11ffe84d48b75b49551504f60f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "87690904fe9944df8a12dbc6a2bbec51",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "d4e7374d92574b7a80f138115e05db45",
      "Inputs": [
        {
          "Id": "02a78eec277d43f2ab38fd868628a9d0",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9d9d5d5c8a649f3a09203d29747258b",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "d1f9b17aad8248ffbba0baa05a0e2c1f",
      "Inputs": [
        {
          "Id": "c9db5be340884964ba9a17767f85f5f8",
          "Name": "list",
          "Description": "List to get the last item of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b05c43b825f4e05a5d039a58597a396",
          "Name": "last",
          "Description": "Last item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Grid.Curve",
      "Id": "01d10db7664541f2b99990f273600121",
      "Inputs": [
        {
          "Id": "3467e63991ac4a8ebaf223534477fee8",
          "Name": "grid",
          "Description": "Revit.Elements.Grid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "73e964890eaa489cb8928038c7cfe7d9",
          "Name": "Curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the underlying Curve geometry from this Element\n\nGrid.Curve: Curve"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "11f231c7a8564dae9d06473ea4919cae",
      "Inputs": [
        {
          "Id": "2ecab3ac0d2b4bcea2efbd48f39b946a",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6b7ea84453043cfa3fa21cd7dd2cd98",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.ByPointAndLevel@Revit.Elements.FamilyType,Autodesk.DesignScript.Geometry.Point,Revit.Elements.Level",
      "Id": "604e312e6a2349e4b10fc72b5fd28a23",
      "Inputs": [
        {
          "Id": "b7684b20842f4261bceab0605c893468",
          "Name": "familyType",
          "Description": "Family Type. Also called Family Symbol.\n\nFamilyType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "bc56d36bdbec41ec845544726bd49d85",
          "Name": "point",
          "Description": "Point in meters.\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fbd8ca124944f7bb3b6b46b4b3fdf64",
          "Name": "level",
          "Description": "Level to host Family Instance.\n\nLevel",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77b0a6d6556d4361a29ff424dc7e251e",
          "Name": "FamilyInstance",
          "Description": "FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Place a Revit FamilyInstance given the FamilyType (also known as the FamilySymbol in the Revit API), it's coordinates in world space, and the Level\n\nFamilyInstance.ByPointAndLevel (familyType: FamilyType, point: Point, level: Level): FamilyInstance"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\Users\\pjmk0\\Downloads\\MK\\mQ\\보고준비\\20210913발표준비\\Dynamo 소개\\Sample.xlsx",
      "InputValue": ".\\Sample.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "216da795175d4c8f97dc9142c98ff6a6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bf386599ffda467db22371fb9ee5beb8",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a2387c961ba247d6a92887399c3c7824",
      "Inputs": [
        {
          "Id": "d05a12df042243b5ad01e5e85b36ca32",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3015cbd2764e488688fb147e3f1f40a6",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Sheet1\";",
      "Id": "e494a7d1fb2f41a8be161412343c73bb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "914aa8f087f948efbc8abd13a736d2af",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "b3268f0b8d2c4f399e3e074fdab0245b",
      "Inputs": [
        {
          "Id": "dea8f8f556564f2fb34ddc49b5c8a544",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b221f1308314acfbaa89817da669530",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4cef66d71a64194a0739a48732393eb",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f2b5dae1c394144bd0c69328e958d9d",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8cbc9bcf64f402eb31f3b578049b948",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "eb103f47b46549b2b94099f0a6c995a8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ae37e7272a16461abdae0fd7b3ff983c",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "f737e78204894db1b550d28bc137be3f",
      "Inputs": [
        {
          "Id": "518f449e46394fd991ccd2300773e0ea",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c3b510ea17b141fca59ac3b96669395d",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "802b793adcb3477e98c44940ffa6bb40",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "590207b8ec0946b782c0700815a626a6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4a85b42f437240ab876617140212ca3e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "35f0d5c3157e477b9ebae62a064628a8",
      "Inputs": [
        {
          "Id": "3cea65dbedf947159d60c3b19b8868fd",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c41273ff9de46ecae7f92ed5674908d",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a91d5e8d1b8b4dcc873644e59ce461db",
      "Inputs": [
        {
          "Id": "e936f7e56e02460fb9113b29e4b861da",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "844c58b8026a48da9c3f4cbd3fb79a2a",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "00edb97dc41d45c49b41e1378f02ec79",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0ca6095fa27c4db0b3fbebc064adb74d",
      "Inputs": [
        {
          "Id": "eefbb4e42aa44592a572f327145c535c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "03758de1f1ec446080221e738a79a6ee",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71fd1e6ddd924eb2a4aa197ac0dc84de",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "7fc431dde43a4baa90c81ce1a04601cb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "74118afc4db54fff8865055c11c69961",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "813353f6c5b142cba7ad4024400e25f7",
      "Inputs": [
        {
          "Id": "3d7e9a6e72c14efd8b44ef899361d141",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f85f038cd6d461b870a05c62a81bb0a",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "4;",
      "Id": "87bc4728c5144da49851ffdd81e50e45",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d41e017595df4464a3ef6dda70dd45d9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "f6345a3824084ab9a8028a87e0dd8df3",
      "Inputs": [
        {
          "Id": "cb5371b058274fa9990629212b533b77",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "be9476581d79474182a06ff736847bfc",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4243a465bbf4374903e8bc8196eee98",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "02bd22c671cb477998d5fe37cfd587ce",
      "Inputs": [
        {
          "Id": "aced0ff6fbe04ce7b44a0756b0060e87",
          "Name": "str",
          "Description": "String to search in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2da7740ac0d24e5ebcf9ca55e394901c",
          "Name": "searchFor",
          "Description": "Substring to search for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73d5e0c9b7cf46708ff3de4a05668aa9",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d40e172a69fb470b9319a1a0740f87d1",
          "Name": "bool",
          "Description": "Whether the string contains the substring.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (str: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "14c825606ea94a0dadc35f3405d955b2",
      "Inputs": [
        {
          "Id": "93f71c6a540a48e8abca4af61714a89f",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e942c29fdd9d441ea98c2425b5707d5b",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "f94b50952e7e48088733e4694ef37d3f",
      "Inputs": [
        {
          "Id": "52bfd788132a426b9888fbee464ede62",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "579b2bf405aa4c71a4f1e00de5e0155d",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "a4e5262ca03d41cd9909f422f221843d",
      "Inputs": [
        {
          "Id": "be4c6f536be640609404079a2d93e2d2",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "6eb5e733d14b491a8d79d550469e47f2",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8098f5dd51d4448b4f8c39fe76cc440",
          "Name": "var[]..[]",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "1bd9cc74d4ba40fba37bbe7fd336a98b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d8238eb1fea4c4f90be79a0e55125d1",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b0a3e5f1e59449e38e793ed0615ae6e5",
      "Inputs": [
        {
          "Id": "a015737d5d534f36af1e6148299726da",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1875d83b04c42bebf3e2da5d183fb0f",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f1c2aa618a64344be2621c376772c6b",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "df2be82efd7b4abd84ed36397e292140",
      "Inputs": [
        {
          "Id": "9654f03b18224703bdbf3e8091d4887f",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d76f81c2f744f12be4e26e35229335c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac2839b1421e44788048f37ee85b5a5d",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "5f74446b77b0442e97c7eab70b2425d8",
      "Inputs": [
        {
          "Id": "21b9ab08fb324baeb65ee5c30bd1e70e",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37d9834d7c254283b44cea1da1f9a038",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 287,
      "SelectedString": "OST_Levels",
      "NodeType": "ExtensionNode",
      "Id": "82684e9d6d95404fb6a60e4e7d71cbc8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "984483a9819449d4a6c2adffbcfb6450",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "bc118cc980b9405a98a6fc0ab9a7b820",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "00e78cc7743c4299bfbce788da931c9d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "e434963b84d940c3831075218f75e34d",
      "Inputs": [
        {
          "Id": "6c6cae47956342b3b5a93327e17dfef0",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "6e504c0c982047e68252096d06ce2694",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0121ecf11806482a9f78f00ce16f76eb",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c8d3b158f4b04cc295ce062b3ecb37e1",
      "Inputs": [
        {
          "Id": "ea53d07ec12a4aafae64db78e12d2a32",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9035fbf3d3dd4cd0bd73b3dd17122267",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "1834813cc79a4dccab62d65600dcb344",
      "Inputs": [
        {
          "Id": "f4cebf41e3194bdda95854181e39d0ba",
          "Name": "str",
          "Description": "String to search in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e34b36847ee4c839ddd31866355b13c",
          "Name": "searchFor",
          "Description": "Substring to search for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee17bdca474649cf8ec74eb6119f7efc",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c9d7fc58a844bd39cad48ddd2f30fea",
          "Name": "bool",
          "Description": "Whether the string contains the substring.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (str: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "87cc033b14564ef1ad92877bbd1a7773",
      "Inputs": [
        {
          "Id": "59d9ff4fba234803b9958926157e5404",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f21abe4e8a104a128ef680b56ca47af1",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "cafa3559a56e41f7b801f59d088d94f5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b2a07044048e4560844764e9a68baa20",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "3c683d57b745481a90ebadedafd69952",
      "Inputs": [
        {
          "Id": "dc4ba196aa6e451fab73cc89a2fcb154",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "2ea4081fb5ed4b0f95e0849541c0fbeb",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba2afbff2e314079bacff4814175a8dd",
          "Name": "var[]..[]",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e49c6062736e4c16ae2d64c41ca2d3e6",
      "Inputs": [
        {
          "Id": "911c33e36a754e1b8ccbea12bd9eb9fa",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "faeb7dab86424a29a7d265670c5f4026",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c807ba8f7734d6896786f4721487e7f",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "88d8da1c53444e5882b4a67b43ef73c6",
      "Inputs": [
        {
          "Id": "3862c9b2af4246f69d90c7546b9a77ae",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92ee75a8c0c94a3eae8c6fe1f46c0b5b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42a8d803c5fb449bbc96c8eac49f672b",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Id": "e715e34a449e45d98cdc23d2144cefee",
      "Inputs": [
        {
          "Id": "28e1d1c0639c482aaaf4f52e861c01eb",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23a73bd643554a3d895e8e75644f61fe",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Id": "1e32c409dfca48a8a6d748c0cdf6dce9",
      "Inputs": [
        {
          "Id": "7b2b0116ff61482eb4236cd3103d84b6",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f20ce3673464dfa9d63c255a68efd05",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Id": "c707a71017674a85b97afb133c96a129",
      "Inputs": [
        {
          "Id": "4ec57c48bf2d4eaf9e907f2fe6da5b08",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a6150f234154035865579c18fdc1ec3",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "64533c50674f40aaa4a40864ccbeec93",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eb3b1a8d8b224af0b8388bbf1bfd2e7e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "e5c748cffa074e9096b021315241016b",
      "Inputs": [
        {
          "Id": "61270bcb3059457e8715c8334f10507e",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0f744c4c397944b28fb030fe2e2da6fb",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec8b5bdccd59451d9df75195d6eb3416",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "fb1cad76553749a29e7e95e8c9ad26fb",
      "Inputs": [
        {
          "Id": "a8d11c3ef4b54be08c188061656045b7",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e219b0481c864bd5ab83ffec8e2c1bea",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "a7ef78f06a1445c685a52e7d617b851d",
      "Inputs": [
        {
          "Id": "c7869de99f444a8ebbbe1e9cfde1a579",
          "Name": "str",
          "Description": "String to search in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "752819028fd2428784ca049400085731",
          "Name": "searchFor",
          "Description": "Substring to search for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3ae192d95bf4034a1d6b5def0e6a89b",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d2255865e7f24514aec6b5622dad74f9",
          "Name": "bool",
          "Description": "Whether the string contains the substring.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (str: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "a93d1d160f3f4e5fb7ba73d759eab432",
      "Inputs": [
        {
          "Id": "4d0752a0842b4b7c895b9287e6b02ffc",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1875b9473a447179b90f0d5c937c75a",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "05baff316a4f4bd590b89ce6702a23c0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25d2072d5614462e9b0e48fb6ee2c8b5",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "526408af2f4348958dbdfcaa0f9321f0",
      "Inputs": [
        {
          "Id": "fb61c36357b1446787f1a9c53890a2e4",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "b20500b3c9ff4a5fb33c97595e9c0ecb",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "564d5c059e9d4db39c2e3e98baade400",
          "Name": "var[]..[]",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e50643f47aa641bd855a53ef85786cf4",
      "Inputs": [
        {
          "Id": "1ef62fd0f87640deb7a78c3de6e93fce",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6517e8beab3b43ec9ad663e42fd0888e",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "faf4b461ec8f498a91caa8f4dc89b561",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "d1f5879643f746499088ebb4fd71f1d8",
      "Inputs": [
        {
          "Id": "2f0ff91d31c1432491e040786847a36e",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f3d1df3302d41efa0bdefe7b091ce29",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3b37e5f01274ca1a096c2f67827c80f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "0ae57a5ebb384eeba2f014ba24d55035",
      "Inputs": [
        {
          "Id": "08abeba940354f1da75a7905977dfdc1",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3b87293c7da44ba9f8872533f1eceaf",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "35ffa48b5ce249829a42c14dfddada28",
      "Inputs": [
        {
          "Id": "3b34dff8a79641b08436a2a800598d79",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b249486d1b0a45b688078f4a4d95311a",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "b6aae151f08345cd856273378526c585",
      "Inputs": [
        {
          "Id": "8db27ad8cb7849a39a1b22466ea19765",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f976677840b4d67baa3f1a059413225",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[1];",
      "Id": "d72da01f1b7a4d628d6de8733b3bc439",
      "Inputs": [
        {
          "Id": "39a407086c824fb097235e2fa950f3d1",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc7a5110d4f346cf95a0a01e4881c49b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "f210fd5c4cda4bc1a541983b2574c427",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "78cd2988ff7e42f7b778bf6f2adc0c0a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "8a19f9048809424d96c70855bbd52fa1",
      "Inputs": [
        {
          "Id": "cad9c42dbedd40c6891d720d17bb0cb9",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "ba015c9e75664cf6ae460ff518bf248a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74b06d1dc106471097d5e2e8d1fae71e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "3b74e41490e646faaf64513de81ef0ee",
      "Inputs": [
        {
          "Id": "adb1ed825c304b228f558d084fb20c52",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c02a5fb34ce4a76a61bbdc1792594f6",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "b0d8ddd6789c48bdb9c6d6b67ba337f9",
      "Inputs": [
        {
          "Id": "0bd82692785b4714a273133d7fb5a98c",
          "Name": "str",
          "Description": "String to search in.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed9248c1119b41459cc92a132b3a067c",
          "Name": "searchFor",
          "Description": "Substring to search for.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fef18cf79f194449ba429536918a6279",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c054615e9d14779b0e659ca4815702c",
          "Name": "bool",
          "Description": "Whether the string contains the substring.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (str: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "6c5cfaed6d2f4466a6aacc1100b94e52",
      "Inputs": [
        {
          "Id": "b75a7934830c4c0f9103be664df66642",
          "Name": "lists",
          "Description": "A list of lists to be transposed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc3dafbc21924beabb2790d75d25a73a",
          "Name": "lists",
          "Description": "A list of transposed lists.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "7e31047b1e69418ba9cbf9c6b00f4d28",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1a3dd9428a5347d6b829ddb3314cc4e2",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "d69555028ffa4ed8ac15a2f46ac66ef0",
      "Inputs": [
        {
          "Id": "f0c3d94ea0434ca5a175ca9f26ed2736",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "c44d49ff880f46bf94812bb754143a83",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8bde13e184c64fe489ccf6022894d18a",
          "Name": "var[]..[]",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0bb62dad889f4ce29dae33e7b64209cc",
      "Inputs": [
        {
          "Id": "46303da732574207bab01a6b4c1f0165",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86c7c0f5f94f4a56943c46c892f93f21",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "047aa563ae544a32801e2032030b19ee",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "00f6f4c8df094fe08a07aaec197b00c7",
      "Inputs": [
        {
          "Id": "d37be86f1ca549a9bab88991ace8223b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0812c2968524852b98eed898c779d50",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5bb93de36bc4463bb99f26b7ebed97c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "41b14e2773534d30955f21587e418445",
      "Inputs": [
        {
          "Id": "222e60683c0b4b16a0f92c5a5ae4af04",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "60513569bd6d4a068df5fd7e08142e6e",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "efe0ede48e0c461ab0a267ce5119ca16",
      "Inputs": [
        {
          "Id": "f2f1f09ba24f45d6987ff7737fa75d17",
          "Name": "str",
          "Description": "String to split up.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7669671bbb524adfb7c3b23c50358c22",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "786fe36e02174bab93edbcc4acb48f6a",
          "Name": "strings",
          "Description": "List of strings made from the input string.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (str: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\".\";",
      "Id": "96ba67dde13f4ef290ef96b03d7a2f65",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "57e17e8131a048988994e0887fbfb6cb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "775e348f70c64ee78362be12cd386ca5",
      "Inputs": [
        {
          "Id": "0a40deb575634e81aba56be6fedc8bfa",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5082667c9c1340df9b1f4208afee8708",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "0e9e0ffd7b6045e182f8a60fe225969c",
      "Inputs": [
        {
          "Id": "6e293d427e164355aa8542194460f6ec",
          "Name": "x",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec8517c081014766800284f090b1f87d",
          "Name": "y",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2753597793734b39a30afec8743ccdc0",
          "Name": "z",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "958c350854f94247aaea38673fec3f49",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    }
  ],
  "Connectors": [
    {
      "Start": "5ab613ac90904bcfa47c9f5f48391ae2",
      "End": "14f847bcd28847a5a968edbaba8831d7",
      "Id": "493c179ec4a24932a33406de84282366"
    },
    {
      "Start": "a075af2d69144600a134ebe851aa5451",
      "End": "e936f7e56e02460fb9113b29e4b861da",
      "Id": "1a9c08eb86bc40ca80ec7f178cd47a73"
    },
    {
      "Start": "60fd178b03ca4bb8a8421405604fe4b0",
      "End": "2ecab3ac0d2b4bcea2efbd48f39b946a",
      "Id": "b3ac6f2d82da40e38e99f3f06150cff3"
    },
    {
      "Start": "0d89683aa3464b2fb7b54a3d3c7f47fe",
      "End": "8db27ad8cb7849a39a1b22466ea19765",
      "Id": "80bdc0521bad4121a2711f49a872a823"
    },
    {
      "Start": "0d89683aa3464b2fb7b54a3d3c7f47fe",
      "End": "39a407086c824fb097235e2fa950f3d1",
      "Id": "d77a54fb118e47f0b4d1545bcd3ac3bd"
    },
    {
      "Start": "2d2237fccc1247eeb520b03817b088d7",
      "End": "c2577a9b1b8d48289626c3331bed22a1",
      "Id": "0e425660ca9a4b86b9d43226bde948fc"
    },
    {
      "Start": "2d2237fccc1247eeb520b03817b088d7",
      "End": "3467e63991ac4a8ebaf223534477fee8",
      "Id": "0a2e51dd6b354bcdb2e854602849fb9e"
    },
    {
      "Start": "2d2237fccc1247eeb520b03817b088d7",
      "End": "28e1d1c0639c482aaaf4f52e861c01eb",
      "Id": "20c7a3884b6a405d9d199f4d84c84b1c"
    },
    {
      "Start": "87690904fe9944df8a12dbc6a2bbec51",
      "End": "b6ffc359e8b44a28a88d4ea4b6e4f3c7",
      "Id": "da65a764515c4edc9cab1c2e1103626c"
    },
    {
      "Start": "b9d9d5d5c8a649f3a09203d29747258b",
      "End": "08abeba940354f1da75a7905977dfdc1",
      "Id": "29ad0f4e2d5240ccbd8bc728556f5a20"
    },
    {
      "Start": "6b05c43b825f4e05a5d039a58597a396",
      "End": "3b34dff8a79641b08436a2a800598d79",
      "Id": "77f56b1dd1fe41fead0d42a6553bd5d0"
    },
    {
      "Start": "73e964890eaa489cb8928038c7cfe7d9",
      "End": "02a78eec277d43f2ab38fd868628a9d0",
      "Id": "0f418466898d4023b0cb99e3394b00ab"
    },
    {
      "Start": "73e964890eaa489cb8928038c7cfe7d9",
      "End": "c9db5be340884964ba9a17767f85f5f8",
      "Id": "a4dcec7d5c424e37973f9ec52c730ec2"
    },
    {
      "Start": "a6b7ea84453043cfa3fa21cd7dd2cd98",
      "End": "6dea8fbf56464979a5663edcbe323ec6",
      "Id": "898bbf21acef4bb8a002cc464f74e2ff"
    },
    {
      "Start": "bf386599ffda467db22371fb9ee5beb8",
      "End": "d05a12df042243b5ad01e5e85b36ca32",
      "Id": "c2ef980e866f48cda8079719f04eda04"
    },
    {
      "Start": "3015cbd2764e488688fb147e3f1f40a6",
      "End": "dea8f8f556564f2fb34ddc49b5c8a544",
      "Id": "e4ac3345116044fdab3b53935676dcc9"
    },
    {
      "Start": "914aa8f087f948efbc8abd13a736d2af",
      "End": "1b221f1308314acfbaa89817da669530",
      "Id": "b9f18451c2d643ef88280952958e7764"
    },
    {
      "Start": "a8cbc9bcf64f402eb31f3b578049b948",
      "End": "518f449e46394fd991ccd2300773e0ea",
      "Id": "2ecff85fd53b420eaf15986e2d347228"
    },
    {
      "Start": "ae37e7272a16461abdae0fd7b3ff983c",
      "End": "3f2b5dae1c394144bd0c69328e958d9d",
      "Id": "4449105f14f04b5dbfe825b38562b7a4"
    },
    {
      "Start": "802b793adcb3477e98c44940ffa6bb40",
      "End": "3cea65dbedf947159d60c3b19b8868fd",
      "Id": "e44737bc815a4dfdb28e8c329d697861"
    },
    {
      "Start": "4a85b42f437240ab876617140212ca3e",
      "End": "c3b510ea17b141fca59ac3b96669395d",
      "Id": "e66510a431f84c3c977df3cc70ff3a22"
    },
    {
      "Start": "6c41273ff9de46ecae7f92ed5674908d",
      "End": "eefbb4e42aa44592a572f327145c535c",
      "Id": "a41be69aa29448709f4137eb629c3300"
    },
    {
      "Start": "6c41273ff9de46ecae7f92ed5674908d",
      "End": "cb5371b058274fa9990629212b533b77",
      "Id": "5b366ea125084edb89f090dc42d4bbc6"
    },
    {
      "Start": "6c41273ff9de46ecae7f92ed5674908d",
      "End": "6c6cae47956342b3b5a93327e17dfef0",
      "Id": "50e431d8e2ad4d1ca8bde26d71557e7c"
    },
    {
      "Start": "6c41273ff9de46ecae7f92ed5674908d",
      "End": "61270bcb3059457e8715c8334f10507e",
      "Id": "8573deacecb249848f0ef2a713c59d33"
    },
    {
      "Start": "6c41273ff9de46ecae7f92ed5674908d",
      "End": "cad9c42dbedd40c6891d720d17bb0cb9",
      "Id": "2c7b76b896f94a0ebed2e0f32f76eddd"
    },
    {
      "Start": "00edb97dc41d45c49b41e1378f02ec79",
      "End": "93f71c6a540a48e8abca4af61714a89f",
      "Id": "3ab4daf061f94045a717bf2892fbd0c4"
    },
    {
      "Start": "00edb97dc41d45c49b41e1378f02ec79",
      "End": "9654f03b18224703bdbf3e8091d4887f",
      "Id": "29b985f0312f490dbe1d7a9c827a7b92"
    },
    {
      "Start": "71fd1e6ddd924eb2a4aa197ac0dc84de",
      "End": "3d7e9a6e72c14efd8b44ef899361d141",
      "Id": "fcd5d675300a4f74b48a1003b766a213"
    },
    {
      "Start": "74118afc4db54fff8865055c11c69961",
      "End": "03758de1f1ec446080221e738a79a6ee",
      "Id": "b16e3e7bf5484da4a42d3ae7d57de952"
    },
    {
      "Start": "9f85f038cd6d461b870a05c62a81bb0a",
      "End": "fc88f888261a4da79c8f270ce0ebc36a",
      "Id": "2fd9c6c13f984e359d9fa392ca26a52a"
    },
    {
      "Start": "d41e017595df4464a3ef6dda70dd45d9",
      "End": "be9476581d79474182a06ff736847bfc",
      "Id": "d3ef71b861a547929abf11b2d3e6a4c2"
    },
    {
      "Start": "b4243a465bbf4374903e8bc8196eee98",
      "End": "2da7740ac0d24e5ebcf9ca55e394901c",
      "Id": "c753a6b9b6284259a64f8ff174897874"
    },
    {
      "Start": "d40e172a69fb470b9319a1a0740f87d1",
      "End": "52bfd788132a426b9888fbee464ede62",
      "Id": "ea9b2cc9e92141819a68a3b3ba0e242a"
    },
    {
      "Start": "e942c29fdd9d441ea98c2425b5707d5b",
      "End": "aced0ff6fbe04ce7b44a0756b0060e87",
      "Id": "6297eca1463a4818acd63b2f649c78db"
    },
    {
      "Start": "579b2bf405aa4c71a4f1e00de5e0155d",
      "End": "be4c6f536be640609404079a2d93e2d2",
      "Id": "9400ee592ce14b678461f357d8d47e43"
    },
    {
      "Start": "c8098f5dd51d4448b4f8c39fe76cc440",
      "End": "a015737d5d534f36af1e6148299726da",
      "Id": "c9a695c7a7e7453189c4b33db116a71b"
    },
    {
      "Start": "2d8238eb1fea4c4f90be79a0e55125d1",
      "End": "6eb5e733d14b491a8d79d550469e47f2",
      "Id": "24599467a06d466dafc20c52b6fc50fa"
    },
    {
      "Start": "1f1c2aa618a64344be2621c376772c6b",
      "End": "2d76f81c2f744f12be4e26e35229335c",
      "Id": "37a315c5e28646b8b9570b1dc540e732"
    },
    {
      "Start": "ac2839b1421e44788048f37ee85b5a5d",
      "End": "b7684b20842f4261bceab0605c893468",
      "Id": "3ce855115ae74f38961c299a719b12e6"
    },
    {
      "Start": "37d9834d7c254283b44cea1da1f9a038",
      "End": "ea53d07ec12a4aafae64db78e12d2a32",
      "Id": "6325d07b33904c0aa614ddc505c2259f"
    },
    {
      "Start": "37d9834d7c254283b44cea1da1f9a038",
      "End": "3862c9b2af4246f69d90c7546b9a77ae",
      "Id": "787c9f2c9f474cd1952bfcf9a438fdcb"
    },
    {
      "Start": "984483a9819449d4a6c2adffbcfb6450",
      "End": "21b9ab08fb324baeb65ee5c30bd1e70e",
      "Id": "5bc0ab2b04f54420b9dff036e5a56c2a"
    },
    {
      "Start": "00e78cc7743c4299bfbce788da931c9d",
      "End": "6e504c0c982047e68252096d06ce2694",
      "Id": "ec77de1f87a34ec68e6429a782df6383"
    },
    {
      "Start": "0121ecf11806482a9f78f00ce16f76eb",
      "End": "0e34b36847ee4c839ddd31866355b13c",
      "Id": "ca50c7267b5a4b37a4457176e560c91d"
    },
    {
      "Start": "9035fbf3d3dd4cd0bd73b3dd17122267",
      "End": "f4cebf41e3194bdda95854181e39d0ba",
      "Id": "b2c3d515292a44e6b893d00a59a91052"
    },
    {
      "Start": "5c9d7fc58a844bd39cad48ddd2f30fea",
      "End": "59d9ff4fba234803b9958926157e5404",
      "Id": "3b54526836a043b58f477eca15c5478d"
    },
    {
      "Start": "f21abe4e8a104a128ef680b56ca47af1",
      "End": "dc4ba196aa6e451fab73cc89a2fcb154",
      "Id": "e4e0a409d64041aaaf1e52ba479b3334"
    },
    {
      "Start": "b2a07044048e4560844764e9a68baa20",
      "End": "2ea4081fb5ed4b0f95e0849541c0fbeb",
      "Id": "4969a4e4464143beb162bbecacb9751b"
    },
    {
      "Start": "ba2afbff2e314079bacff4814175a8dd",
      "End": "911c33e36a754e1b8ccbea12bd9eb9fa",
      "Id": "58b9bf5451e049d1ad6bcab30b483e92"
    },
    {
      "Start": "7c807ba8f7734d6896786f4721487e7f",
      "End": "92ee75a8c0c94a3eae8c6fe1f46c0b5b",
      "Id": "765c9b5f5733456dab21be92e18b92c4"
    },
    {
      "Start": "42a8d803c5fb449bbc96c8eac49f672b",
      "End": "5fbd8ca124944f7bb3b6b46b4b3fdf64",
      "Id": "85e3ce4134dd49a6b9c3c95ab99e6d29"
    },
    {
      "Start": "1f20ce3673464dfa9d63c255a68efd05",
      "End": "2f0ff91d31c1432491e040786847a36e",
      "Id": "cefd0f7d63f4403296565cf9c4f40c4a"
    },
    {
      "Start": "0a6150f234154035865579c18fdc1ec3",
      "End": "d37be86f1ca549a9bab88991ace8223b",
      "Id": "6f52936677ff4f5cb332a304b74f2bed"
    },
    {
      "Start": "eb3b1a8d8b224af0b8388bbf1bfd2e7e",
      "End": "0f744c4c397944b28fb030fe2e2da6fb",
      "Id": "9e4f43e193b6461caf8809f72ee918c1"
    },
    {
      "Start": "ec8b5bdccd59451d9df75195d6eb3416",
      "End": "752819028fd2428784ca049400085731",
      "Id": "367d0098988f463199980427622096f7"
    },
    {
      "Start": "e219b0481c864bd5ab83ffec8e2c1bea",
      "End": "c7869de99f444a8ebbbe1e9cfde1a579",
      "Id": "a0258e57ac86420cbe7072636bece2ea"
    },
    {
      "Start": "d2255865e7f24514aec6b5622dad74f9",
      "End": "4d0752a0842b4b7c895b9287e6b02ffc",
      "Id": "e346ef4fb9944c5b878f4bdcd974b478"
    },
    {
      "Start": "a1875b9473a447179b90f0d5c937c75a",
      "End": "fb61c36357b1446787f1a9c53890a2e4",
      "Id": "7a7a88d74e834bd1bb9058ccb717b60f"
    },
    {
      "Start": "25d2072d5614462e9b0e48fb6ee2c8b5",
      "End": "b20500b3c9ff4a5fb33c97595e9c0ecb",
      "Id": "ed015eb8030e487ebe52bddcc3219d37"
    },
    {
      "Start": "564d5c059e9d4db39c2e3e98baade400",
      "End": "1ef62fd0f87640deb7a78c3de6e93fce",
      "Id": "09611781bf6e4443b9f7085be3de331b"
    },
    {
      "Start": "faf4b461ec8f498a91caa8f4dc89b561",
      "End": "9f3d1df3302d41efa0bdefe7b091ce29",
      "Id": "238b6b9c33d24ea195ccac57d2abbb17"
    },
    {
      "Start": "e3b37e5f01274ca1a096c2f67827c80f",
      "End": "6e293d427e164355aa8542194460f6ec",
      "Id": "15bc6da01b9a4574a8eec2876962f751"
    },
    {
      "Start": "c3b87293c7da44ba9f8872533f1eceaf",
      "End": "7b2b0116ff61482eb4236cd3103d84b6",
      "Id": "bc05e425874447a3bbf8d0a7c7b1ac0d"
    },
    {
      "Start": "b249486d1b0a45b688078f4a4d95311a",
      "End": "4ec57c48bf2d4eaf9e907f2fe6da5b08",
      "Id": "34601a5165854ae1993f8865a5483e78"
    },
    {
      "Start": "8f976677840b4d67baa3f1a059413225",
      "End": "a8d11c3ef4b54be08c188061656045b7",
      "Id": "f4058d9c8bc44fd890d25d292cbf3509"
    },
    {
      "Start": "dc7a5110d4f346cf95a0a01e4881c49b",
      "End": "adb1ed825c304b228f558d084fb20c52",
      "Id": "14720ef19c8b4b67b5cec29f50e3bcd1"
    },
    {
      "Start": "78cd2988ff7e42f7b778bf6f2adc0c0a",
      "End": "ba015c9e75664cf6ae460ff518bf248a",
      "Id": "d8afda4cf1cb4d119208168ec878ec20"
    },
    {
      "Start": "74b06d1dc106471097d5e2e8d1fae71e",
      "End": "222e60683c0b4b16a0f92c5a5ae4af04",
      "Id": "f1754e601f894faa9bde9e2636e43431"
    },
    {
      "Start": "5c02a5fb34ce4a76a61bbdc1792594f6",
      "End": "0bd82692785b4714a273133d7fb5a98c",
      "Id": "f064be8ec1b44657bafe59d6ba1053ca"
    },
    {
      "Start": "0c054615e9d14779b0e659ca4815702c",
      "End": "b75a7934830c4c0f9103be664df66642",
      "Id": "548f43c94da74995ade87aaee825acba"
    },
    {
      "Start": "fc3dafbc21924beabb2790d75d25a73a",
      "End": "f0c3d94ea0434ca5a175ca9f26ed2736",
      "Id": "31023ef07fce45738b7adc33a12882c7"
    },
    {
      "Start": "1a3dd9428a5347d6b829ddb3314cc4e2",
      "End": "c44d49ff880f46bf94812bb754143a83",
      "Id": "5368aec2677841708a793633235ba2c3"
    },
    {
      "Start": "8bde13e184c64fe489ccf6022894d18a",
      "End": "46303da732574207bab01a6b4c1f0165",
      "Id": "37c7b5d6e22444f4a0100c92fe52f7a3"
    },
    {
      "Start": "047aa563ae544a32801e2032030b19ee",
      "End": "d0812c2968524852b98eed898c779d50",
      "Id": "d7ea2484b16e499581aa07a039fc5093"
    },
    {
      "Start": "b5bb93de36bc4463bb99f26b7ebed97c",
      "End": "ec8517c081014766800284f090b1f87d",
      "Id": "b65ad35110fc47d3bbd9cbc1c4d7290a"
    },
    {
      "Start": "60513569bd6d4a068df5fd7e08142e6e",
      "End": "f2f1f09ba24f45d6987ff7737fa75d17",
      "Id": "47d57bb6cfc94ae1ba63097af5a56b3a"
    },
    {
      "Start": "786fe36e02174bab93edbcc4acb48f6a",
      "End": "0a40deb575634e81aba56be6fedc8bfa",
      "Id": "6d66b6a0644b4fdf82f908b18fa66cd1"
    },
    {
      "Start": "57e17e8131a048988994e0887fbfb6cb",
      "End": "7669671bbb524adfb7c3b23c50358c22",
      "Id": "01eae806ee184a748326e0d408271559"
    },
    {
      "Start": "5082667c9c1340df9b1f4208afee8708",
      "End": "ed9248c1119b41459cc92a132b3a067c",
      "Id": "2c739a038e0948a09089904dbfbbfc3e"
    },
    {
      "Start": "958c350854f94247aaea38673fec3f49",
      "End": "bc56d36bdbec41ec845544726bd49d85",
      "Id": "fc623088a8304a1fa92fbb1347acd941"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [
    {
      "NodeId": "604e312e-6a23-49e4-b10f-c72b5fd28a23",
      "Binding": {
        "ByPointAndLevel_InClassDecl-1_InFunctionScope-1_Instance0_604e312e-6a23-49e4-b10f-c72b5fd28a23": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.1.3976",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -419.84359566669355,
      "EyeY": 46078.727517894222,
      "EyeZ": 52863.602963610232,
      "LookX": -2916.2726152708065,
      "LookY": -46078.727517894222,
      "LookZ": -50414.601987047732,
      "UpX": -0.028874631971120834,
      "UpY": 0.86602538824081421,
      "UpZ": -0.49916574358940125
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Family.ByName",
        "Id": "7c031874a0b442dfb4765caa91bbd4f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2520.0711784795276,
        "Y": -1108.7236681019135
      },
      {
        "ShowGeometry": true,
        "Name": "Family.Types",
        "Id": "9836e4a39674438db9a1a1234b4de692",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2813.0711784795276,
        "Y": -1108.7236681019135
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "59309871ecee403a97edbfe87de847c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 43.268908154558176,
        "Y": 616.38012559892
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Name",
        "Id": "a0f95242229c466eaa86dc0855ab2a4a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1790.8127246715253,
        "Y": 257.82523812405793
      },
      {
        "ShowGeometry": true,
        "Name": "List.Chop",
        "Id": "6c2ddf95f209481c97a7b8b662ab5855",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 583.268908154558,
        "Y": 655.38012559892
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ef8bdc11ffe84d48b75b49551504f60f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 309.268908154558,
        "Y": 724.593458932253
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "d4e7374d92574b7a80f138115e05db45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1510.457910130639,
        "Y": 367.96351039481829
      },
      {
        "ShowGeometry": true,
        "Name": "List.LastItem",
        "Id": "d1f9b17aad8248ffbba0baa05a0e2c1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1510.457910130639,
        "Y": 1068.3801809961763
      },
      {
        "ShowGeometry": true,
        "Name": "Grid.Curve",
        "Id": "01d10db7664541f2b99990f273600121",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1232.457910130639,
        "Y": 718.17184569549727
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "11f231c7a8564dae9d06473ea4919cae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 309.268908154558,
        "Y": 616.38012559892
      },
      {
        "ShowGeometry": true,
        "Name": "FamilyInstance.ByPointAndLevel",
        "Id": "604e312e6a2349e4b10fc72b5fd28a23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7170.5113004513205,
        "Y": -339.4342400594935
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "216da795175d4c8f97dc9142c98ff6a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -250.94960995395866,
        "Y": -596.63079727969227
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "a2387c961ba247d6a92887399c3c7824",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -53.949609953958657,
        "Y": -596.63079727969227
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e494a7d1fb2f41a8be161412343c73bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -53.949609953958657,
        "Y": -487.41746394635896
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "b3268f0b8d2c4f399e3e074fdab0245b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 181.05039004604134,
        "Y": -523.63079727969227
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "eb103f47b46549b2b94099f0a6c995a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -53.949609953958657,
        "Y": -378.63079727969227
      },
      {
        "ShowGeometry": true,
        "Name": "List.DropItems",
        "Id": "f737e78204894db1b550d28bc137be3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 505.05039004604134,
        "Y": -445.63079727969227
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "590207b8ec0946b782c0700815a626a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 181.05039004604134,
        "Y": -337.41746394635896
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "35f0d5c3157e477b9ebae62a064628a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 789.05039004604134,
        "Y": -445.63079727969227
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "a91d5e8d1b8b4dcc873644e59ce461db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3146.0711784795276,
        "Y": -1108.7236681019135
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "0ca6095fa27c4db0b3fbebc064adb74d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1988.0711784795276,
        "Y": -1108.7236681019135
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7fc431dde43a4baa90c81ce1a04601cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1803.0711784795276,
        "Y": -1078.5103347685802
      },
      {
        "ShowGeometry": true,
        "Name": "List.UniqueItems",
        "Id": "813353f6c5b142cba7ad4024400e25f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2267.0711784795276,
        "Y": -1108.7236681019135
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "87bc4728c5144da49851ffdd81e50e45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4319.0198427155774,
        "Y": -996.36399657803531
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "f6345a3824084ab9a8028a87e0dd8df3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4504.0198427155774,
        "Y": -1026.5773299113685
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "02bd22c671cb477998d5fe37cfd587ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4783.0198427155774,
        "Y": -1093.5773299113687
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "14c825606ea94a0dadc35f3405d955b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4504.0198427155774,
        "Y": -1134.5773299113687
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "f94b50952e7e48088733e4694ef37d3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5092.0198427155783,
        "Y": -1093.5773299113687
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllIndicesOf",
        "Id": "a4e5262ca03d41cd9909f422f221843d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5359.0198427155783,
        "Y": -1052.5773299113685
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "1bd9cc74d4ba40fba37bbe7fd336a98b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5092.0198427155783,
        "Y": -985.57732991136845
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "b0a3e5f1e59449e38e793ed0615ae6e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5648.0198427155774,
        "Y": -1052.5773299113685
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "df2be82efd7b4abd84ed36397e292140",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5933.0198427155774,
        "Y": -1078.5773299113685
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "5f74446b77b0442e97c7eab70b2425d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2995.5976950118097,
        "Y": -495.93939192256562
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "82684e9d6d95404fb6a60e4e7d71cbc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2729.5976950118097,
        "Y": -495.93939192256562
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "bc118cc980b9405a98a6fc0ab9a7b820",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4335.8543584232384,
        "Y": -373.88555628234963
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "e434963b84d940c3831075218f75e34d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4520.8543584232384,
        "Y": -404.098889615683
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "c8d3b158f4b04cc295ce062b3ecb37e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4520.8543584232384,
        "Y": -512.098889615683
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "1834813cc79a4dccab62d65600dcb344",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4799.8543584232384,
        "Y": -471.098889615683
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "87cc033b14564ef1ad92877bbd1a7773",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5108.8543584232384,
        "Y": -471.098889615683
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "cafa3559a56e41f7b801f59d088d94f5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5108.8543584232384,
        "Y": -363.098889615683
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllIndicesOf",
        "Id": "3c683d57b745481a90ebadedafd69952",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5375.8543584232384,
        "Y": -430.098889615683
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "e49c6062736e4c16ae2d64c41ca2d3e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5664.8543584232384,
        "Y": -430.098889615683
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "88d8da1c53444e5882b4a67b43ef73c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5949.8543584232384,
        "Y": -456.098889615683
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Parameters",
        "Id": "e715e34a449e45d98cdc23d2144cefee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 629.48561710026115,
        "Y": 1301.676334870753
      },
      {
        "ShowGeometry": true,
        "Name": "Point.X",
        "Id": "1e32c409dfca48a8a6d748c0cdf6dce9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2999.2027399797494,
        "Y": 352.28238817105881
      },
      {
        "ShowGeometry": true,
        "Name": "Point.Y",
        "Id": "c707a71017674a85b97afb133c96a129",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2990.3948770069005,
        "Y": 1052.6990587724167
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "64533c50674f40aaa4a40864ccbeec93",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4361.8322771545518,
        "Y": 349.75793672288023
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "e5c748cffa074e9096b021315241016b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4546.8322771545518,
        "Y": 319.54460338954709
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "fb1cad76553749a29e7e95e8c9ad26fb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4546.8322771545518,
        "Y": 211.54460338954709
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "a7ef78f06a1445c685a52e7d617b851d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4825.8322771545518,
        "Y": 252.54460338954709
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "a93d1d160f3f4e5fb7ba73d759eab432",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5134.8322771545518,
        "Y": 252.54460338954709
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "05baff316a4f4bd590b89ce6702a23c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5134.8322771545518,
        "Y": 360.54460338954709
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllIndicesOf",
        "Id": "526408af2f4348958dbdfcaa0f9321f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5401.8322771545518,
        "Y": 293.54460338954709
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "e50643f47aa641bd855a53ef85786cf4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5690.8322771545518,
        "Y": 293.54460338954709
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "d1f5879643f746499088ebb4fd71f1d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5975.8322771545518,
        "Y": 267.54460338954709
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.StartPoint",
        "Id": "0ae57a5ebb384eeba2f014ba24d55035",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1773.457910130639,
        "Y": 367.96351039481829
      },
      {
        "ShowGeometry": true,
        "Name": "Curve.StartPoint",
        "Id": "35ffa48b5ce249829a42c14dfddada28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1773.457910130639,
        "Y": 1068.3801809961763
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b6aae151f08345cd856273378526c585",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2684.6220115511046,
        "Y": 232.79936545532649
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d72da01f1b7a4d628d6de8733b3bc439",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2691.7202743515859,
        "Y": 880.44341432063118
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f210fd5c4cda4bc1a541983b2574c427",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3867.3895966207128,
        "Y": 860.693083251181
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "8a19f9048809424d96c70855bbd52fa1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4052.3895966207128,
        "Y": 830.47974991784781
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "3b74e41490e646faaf64513de81ef0ee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4896.3895966207128,
        "Y": 759.47974991784781
      },
      {
        "ShowGeometry": true,
        "Name": "String.Contains",
        "Id": "b0d8ddd6789c48bdb9c6d6b67ba337f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5159.3895966207128,
        "Y": 801.47974991784781
      },
      {
        "ShowGeometry": true,
        "Name": "List.Transpose",
        "Id": "6c5cfaed6d2f4466a6aacc1100b94e52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5468.3895966207128,
        "Y": 801.47974991784781
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "7e31047b1e69418ba9cbf9c6b00f4d28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5468.3895966207128,
        "Y": 909.47974991784781
      },
      {
        "ShowGeometry": true,
        "Name": "List.AllIndicesOf",
        "Id": "d69555028ffa4ed8ac15a2f46ac66ef0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5735.3895966207128,
        "Y": 842.47974991784781
      },
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "0bb62dad889f4ce29dae33e7b64209cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6024.3895966207128,
        "Y": 842.47974991784781
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "00f6f4c8df094fe08a07aaec197b00c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6309.3895966207128,
        "Y": 816.47974991784781
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "41b14e2773534d30955f21587e418445",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4331.3895966207128,
        "Y": 830.47974991784781
      },
      {
        "ShowGeometry": true,
        "Name": "String.Split",
        "Id": "efe0ede48e0c461ab0a267ce5119ca16",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4566.3895966207128,
        "Y": 869.47974991784781
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "96ba67dde13f4ef290ef96b03d7a2f65",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4331.3895966207128,
        "Y": 938.693083251181
      },
      {
        "ShowGeometry": true,
        "Name": "List.FirstItem",
        "Id": "775e348f70c64ee78362be12cd386ca5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4896.3895966207128,
        "Y": 869.47974991784781
      },
      {
        "ShowGeometry": true,
        "Name": "Point.ByCoordinates",
        "Id": "0e9e0ffd7b6045e182f8a60fe225969c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6648.9181974746025,
        "Y": 245.32014478865267
      }
    ],
    "Annotations": [
      {
        "Id": "c405eab0eec6478cb4237d0be162dbf6",
        "Title": "Revit: Grid 추출",
        "Nodes": [
          "59309871ecee403a97edbfe87de847c3",
          "6c2ddf95f209481c97a7b8b662ab5855",
          "ef8bdc11ffe84d48b75b49551504f60f",
          "11f231c7a8564dae9d06473ea4919cae"
        ],
        "Left": 33.268908154558176,
        "Top": 491.38012559892,
        "Width": 746.99999999999977,
        "Height": 326.213333333333,
        "FontSize": 96.0,
        "InitialTop": 616.38012559892,
        "InitialHeight": 253.21333333333303,
        "TextblockHeight": 115.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7593657bcb004f8988993464eaac7584",
        "Title": "Revit: Grid 정보 추출",
        "Nodes": [
          "d4e7374d92574b7a80f138115e05db45",
          "d1f9b17aad8248ffbba0baa05a0e2c1f",
          "01d10db7664541f2b99990f273600121",
          "0ae57a5ebb384eeba2f014ba24d55035",
          "35ffa48b5ce249829a42c14dfddada28",
          "a0f95242229c466eaa86dc0855ab2a4a"
        ],
        "Left": 1222.457910130639,
        "Top": 17.825238124057933,
        "Width": 781.35481454088631,
        "Height": 1143.5549428721183,
        "FontSize": 96.0,
        "InitialTop": 257.82523812405793,
        "InitialHeight": 253.0,
        "TextblockHeight": 230.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "aacad42572ed4d1d912194795b72c763",
        "Title": "Revit: Family Type 추출",
        "Nodes": [
          "7c031874a0b442dfb4765caa91bbd4f7",
          "9836e4a39674438db9a1a1234b4de692",
          "813353f6c5b142cba7ad4024400e25f7",
          "a91d5e8d1b8b4dcc873644e59ce461db",
          "7fc431dde43a4baa90c81ce1a04601cb",
          "0ca6095fa27c4db0b3fbebc064adb74d"
        ],
        "Left": 1793.0711784795276,
        "Top": -1233.7236681019135,
        "Width": 1548.0,
        "Height": 248.21333333333337,
        "FontSize": 96.0,
        "InitialTop": -1108.7236681019135,
        "InitialHeight": 175.21333333333337,
        "TextblockHeight": 115.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "dcaea74fc0fd40c488f89b7fe0d9147a",
        "Title": "Excel: Data 추출",
        "Nodes": [
          "216da795175d4c8f97dc9142c98ff6a6",
          "a2387c961ba247d6a92887399c3c7824",
          "e494a7d1fb2f41a8be161412343c73bb",
          "eb103f47b46549b2b94099f0a6c995a8",
          "b3268f0b8d2c4f399e3e074fdab0245b",
          "590207b8ec0946b782c0700815a626a6",
          "f737e78204894db1b550d28bc137be3f",
          "35f0d5c3157e477b9ebae62a064628a8"
        ],
        "Left": -260.94960995395866,
        "Top": -721.63079727969227,
        "Width": 1350.0,
        "Height": 654.0,
        "FontSize": 96.0,
        "InitialTop": -596.63079727969227,
        "InitialHeight": 404.21333333333325,
        "TextblockHeight": 115.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "81757ab7381b4a82b3cbd9d45a48d6f5",
        "Title": "Revit-Excel: Family Type 검색",
        "Nodes": [
          "87bc4728c5144da49851ffdd81e50e45",
          "f6345a3824084ab9a8028a87e0dd8df3",
          "02bd22c671cb477998d5fe37cfd587ce",
          "14c825606ea94a0dadc35f3405d955b2",
          "f94b50952e7e48088733e4694ef37d3f",
          "a4e5262ca03d41cd9909f422f221843d",
          "1bd9cc74d4ba40fba37bbe7fd336a98b",
          "b0a3e5f1e59449e38e793ed0615ae6e5",
          "df2be82efd7b4abd84ed36397e292140"
        ],
        "Left": 4309.0198427155774,
        "Top": -1259.5773299113687,
        "Width": 1813.0,
        "Height": 356.21333333333337,
        "FontSize": 96.0,
        "InitialTop": -1134.5773299113687,
        "InitialHeight": 294.00000000000023,
        "TextblockHeight": 115.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "438737d32c774969baa51a927f8418e5",
        "Title": "Revit: Level 추출",
        "Nodes": [
          "5f74446b77b0442e97c7eab70b2425d8",
          "82684e9d6d95404fb6a60e4e7d71cbc8"
        ],
        "Left": 2719.5976950118097,
        "Top": -735.93939192256562,
        "Width": 460.0,
        "Height": 333.0,
        "FontSize": 96.0,
        "InitialTop": -495.93939192256562,
        "InitialHeight": 164.47956209811753,
        "TextblockHeight": 230.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "34c4545ab7f143f7958fbdfcec502c3d",
        "Title": "Revit-Excel: Level 검색",
        "Nodes": [
          "bc118cc980b9405a98a6fc0ab9a7b820",
          "e434963b84d940c3831075218f75e34d",
          "c8d3b158f4b04cc295ce062b3ecb37e1",
          "1834813cc79a4dccab62d65600dcb344",
          "87cc033b14564ef1ad92877bbd1a7773",
          "cafa3559a56e41f7b801f59d088d94f5",
          "3c683d57b745481a90ebadedafd69952",
          "e49c6062736e4c16ae2d64c41ca2d3e6",
          "88d8da1c53444e5882b4a67b43ef73c6"
        ],
        "Left": 4325.8543584232384,
        "Top": -637.098889615683,
        "Width": 1813.0,
        "Height": 356.21333333333337,
        "FontSize": 96.0,
        "InitialTop": -512.098889615683,
        "InitialHeight": 294.0,
        "TextblockHeight": 115.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "93b15ad40c0a4edc8a2c741efbf31e7e",
        "Title": "Revit: X축 그리드 정보 추출",
        "Nodes": [
          "1e32c409dfca48a8a6d748c0cdf6dce9",
          "b6aae151f08345cd856273378526c585"
        ],
        "Left": 2674.6220115511046,
        "Top": -123.20063454467351,
        "Width": 527.58072842864476,
        "Height": 568.48302271573232,
        "FontSize": 96.0,
        "InitialTop": 232.79936545532649,
        "InitialHeight": 306.57718884884287,
        "TextblockHeight": 346.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3f0a6c13bb9341a1aed622f0c14b3cf9",
        "Title": "Revit: Y축 그리드 정보 추출",
        "Nodes": [
          "c707a71017674a85b97afb133c96a129",
          "d72da01f1b7a4d628d6de8733b3bc439"
        ],
        "Left": 2681.7202743515859,
        "Top": 524.44341432063118,
        "Width": 511.67460265531463,
        "Height": 621.25564445178554,
        "FontSize": 96.0,
        "InitialTop": 880.44341432063118,
        "InitialHeight": 290.10767960467638,
        "TextblockHeight": 346.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "658317696bdc4048b4233b9f3bf26749",
        "Title": "Revit-Excel: X축 좌표 검색",
        "Nodes": [
          "64533c50674f40aaa4a40864ccbeec93",
          "e5c748cffa074e9096b021315241016b",
          "fb1cad76553749a29e7e95e8c9ad26fb",
          "a7ef78f06a1445c685a52e7d617b851d",
          "a93d1d160f3f4e5fb7ba73d759eab432",
          "05baff316a4f4bd590b89ce6702a23c0",
          "526408af2f4348958dbdfcaa0f9321f0",
          "e50643f47aa641bd855a53ef85786cf4",
          "d1f5879643f746499088ebb4fd71f1d8"
        ],
        "Left": 4351.8322771545518,
        "Top": 86.544603389547092,
        "Width": 1813.0,
        "Height": 356.21333333333314,
        "FontSize": 96.0,
        "InitialTop": 211.54460338954709,
        "InitialHeight": 294.00000000000006,
        "TextblockHeight": 115.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "2a7b6b99ea2641569cb75ddcc552c148",
        "Title": "Revit-Excel: Y축 좌표 검색",
        "Nodes": [
          "f210fd5c4cda4bc1a541983b2574c427",
          "8a19f9048809424d96c70855bbd52fa1",
          "3b74e41490e646faaf64513de81ef0ee",
          "b0d8ddd6789c48bdb9c6d6b67ba337f9",
          "6c5cfaed6d2f4466a6aacc1100b94e52",
          "7e31047b1e69418ba9cbf9c6b00f4d28",
          "d69555028ffa4ed8ac15a2f46ac66ef0",
          "0bb62dad889f4ce29dae33e7b64209cc",
          "00f6f4c8df094fe08a07aaec197b00c7",
          "41b14e2773534d30955f21587e418445",
          "efe0ede48e0c461ab0a267ce5119ca16",
          "96ba67dde13f4ef290ef96b03d7a2f65",
          "775e348f70c64ee78362be12cd386ca5"
        ],
        "Left": 3857.3895966207128,
        "Top": 634.47974991784781,
        "Width": 2641.0,
        "Height": 397.21333333333314,
        "FontSize": 96.0,
        "InitialTop": 759.47974991784781,
        "InitialHeight": 324.21333333333314,
        "TextblockHeight": 115.0,
        "Background": "#FFFF7BAC"
      }
    ],
    "X": -432.92148460530166,
    "Y": 297.12357133983426,
    "Zoom": 0.21070932744112122
  }
}