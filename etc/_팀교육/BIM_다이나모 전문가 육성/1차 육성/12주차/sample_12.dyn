{
  "Uuid": "85bcf151-2a93-40fc-b906-7644e4add275",
  "IsCustomNode": false,
  "Description": "",
  "Name": "sample_12",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "5529b30a5ac54f26ab134a4ac49a0663",
      "Name": "xSpan",
      "Type": "string",
      "Type2": "string",
      "Value": "5 6 5",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "7acadea4516e4dc391f83174a2e06924",
      "Name": "ySpan",
      "Type": "string",
      "Type2": "string",
      "Value": "4 6",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    },
    {
      "Id": "efb22f4b9377436c8b9cc1534b472445",
      "Name": "zSpan",
      "Type": "string",
      "Type2": "string",
      "Value": "3.5 4",
      "Description": "Creates a string.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Grid.ByLine@Autodesk.DesignScript.Geometry.Line",
      "Id": "c9cb093e50e94cd494527dc67fa6d71f",
      "Inputs": [
        {
          "Id": "1bf5c2881be74bf1ba0bbe5683e19709",
          "Name": "line",
          "Description": "Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "082d1840292347018a4739078c98967e",
          "Name": "Grid",
          "Description": "Grid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Grid Element in a Project along a Line.\n\nGrid.ByLine (line: Line): Grid"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "5 6 5",
      "Id": "5529b30a5ac54f26ab134a4ac49a0663",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "59ceb467fb5c46a79c99f556e3a8f6bf",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "4 6",
      "Id": "7acadea4516e4dc391f83174a2e06924",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "288a9ce25f61442583e5503e22462bae",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "3.5 4",
      "Id": "efb22f4b9377436c8b9cc1534b472445",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a9ccd890f8ce4806bec6ddbd6d44b7f2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "8ac57812406345e8a8be474d49aebb54",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d07de156cfce43758d55716721fbf656",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "32c90d35dc8048fe82032229a24b3dbd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9493654f8c1d47fbb635065c4c49952d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "41c6d992f4cd44d9917c10920c9c6de1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "74c8e2ec02c745519237e8ccf5084550",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "32c1f5523fe9479aa94d07d3b31a28ce",
      "Inputs": [
        {
          "Id": "b1c40b77de474fbea08ab5d7e8e598b3",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "169aa25834b841078952fcedc6aab69f",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f21c61cf54d4061b3768586ca63ac48",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "3a1b54c1d3b148f09fbc554975d1c456",
      "Inputs": [
        {
          "Id": "d934699b39674219b416a2612d0ab090",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "516936e4a62b4e0a858c88ab813248c5",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc17dcd8d0d34c38ad990eb059c0ebb0",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "4885700bb63746b9bd947d0b44834dd9",
      "Inputs": [
        {
          "Id": "09842c9718dc464a9331751354203ca7",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b3c7dd1a33e4c82a62bdb44d15cd61e",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1f09f01706743d38f8a35d5ee729c61",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "316d878e0fc949fd8e303653900b2512",
      "Inputs": [
        {
          "Id": "6c717e90296641dfacd88c4b8bab86e5",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de3fccb4f5e04ce494dffee14a53b48c",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "d64c6461058a45d3a9fa4c04a6641c42",
      "Inputs": [
        {
          "Id": "deb8f7f15aa24d608306ee3101709f3a",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cd71429d47d4a50b3fbd8bbccfde563",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "6c062b8cac7144408bb25ad9c1888bb7",
      "Inputs": [
        {
          "Id": "81e9efb6d0d84d4cabb73dfe64e1aede",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c7def302dca843c49be04896c0e1afbf",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i * 1000;",
      "Id": "c6f21a2680f04c939b1d27d674b23572",
      "Inputs": [
        {
          "Id": "dbecd2641b8548c89ed423f4b08bea4f",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "466c96d7d46a4dcfb3220e6847eb7bd4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i * 1000;",
      "Id": "954b6b265d6d496dae42ac9cf4e171fe",
      "Inputs": [
        {
          "Id": "75310c84eafa4d0aa8998be90ed0f9f8",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54dd784ae0604a94bd60969474b47aac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i * 1000;",
      "Id": "76116fd1885943b8a8379f6e9bac4fd3",
      "Inputs": [
        {
          "Id": "481fd4cc94ec4fa08f825c256a119d1b",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb88fe28e8ca437b9dfc96c669dce3c6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ScanList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "aafafb396f4e429da1d426f529c6d4dc",
      "Inputs": [
        {
          "Id": "4fb154cf4538412bbb3452dd886ee067",
          "Name": "reduceFunction",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0df382ee338a456fb26e0bf348a1a7dc",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0575777f413b41cab80f29d94d935d46",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2429d197b45d4608875c68cd1b1d5255",
          "Name": "list",
          "Description": "Scanned lists (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result, produces a list of successive reduced values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "b5e365d5dfd54c26b758c48954b8d35e",
      "Inputs": [
        {
          "Id": "be2bc41e613c4cb2b26e9b4a361eb11a",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ad3496b26f194e77b72eaaaa33c4fa3f",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8ec8a981abdc427393c8122549ded4e8",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "100bfe17f482430d8a1a8cbd8ed947ca",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a0ea2486944b4e2fb918ecd13678cb03",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ScanList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "4b2cafee0c5b44948c342b207ca2a342",
      "Inputs": [
        {
          "Id": "702216727e3547eda7f12b46bb517bf0",
          "Name": "reduceFunction",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb429e9c7a8f4617849db2d72449ceed",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e49def7b3bc4402dac884eac05c3016a",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8e5f005dce64cd0b5f9b4d0f39a18e6",
          "Name": "list",
          "Description": "Scanned lists (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result, produces a list of successive reduced values."
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ScanList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "b1cc505961f640149f5fe6a34c4363f2",
      "Inputs": [
        {
          "Id": "4146960893fc498fb3500d9e257185a7",
          "Name": "reduceFunction",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33faf9fc80fe4e63b667375e0425a044",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ba72f5e59350464583469869f0d3e754",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd3cb0025e6d4dd387b625478557d018",
          "Name": "list",
          "Description": "Scanned lists (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result, produces a list of successive reduced values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "41122f7f87df4d889e795361ed313cf7",
      "Inputs": [
        {
          "Id": "99c86a6f24de4d49ba098dcf987fb530",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0b191192db34ecb93dc7c0961c43b72",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0438ecde3da440af893d1f01e8684fa9",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "929d9fec5db74ee38e4f4019cb21ad71",
      "Inputs": [
        {
          "Id": "ce07396ade6d4b1cb3b239ed29d060f3",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d2468754f06426f9dce7c2d0877bc9b",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f36d5e278954d4a89e176279d9ed4cf",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "1468de7fc9664d47b1b6cbf5f9072dd6",
      "Inputs": [
        {
          "Id": "4fac3591fffa45059b2ff2e6b94f99f4",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "749de8541696498e9577eb1623bc27e6",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.CartesianProduct, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "1a895136736a48b2be082ca22135edb1",
      "Inputs": [
        {
          "Id": "d6ab69453cb4448c97a35bb647a15f08",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef565d9cf03a496ca21fba93b3465e41",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f91d72f4eee48b28aa2ae4885471c65",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d11745178b94929ab9c5d7743f1b7fd",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each pair in the cartesian product of two sequences"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "bbcdb12cd72c417d87212c526b4b70a0",
      "Inputs": [
        {
          "Id": "6c70920bf7e24c4fb9cacb7517d84bd2",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44f7c88e24d2426583c1c1e404abf99c",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "8f5a09a1890a4631a6ec837492b94768",
      "Inputs": [
        {
          "Id": "48a141b71cde4ddca72cad4f42118c58",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28fd95b93fbf401fa89e1d1e01cd6286",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "fc36482f9b15467bb35cb81b6e8df919",
      "Inputs": [
        {
          "Id": "00cc981452eb40f4a46c362ef8e03359",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "072914e978714c0b8e4634806646b676",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "1f3df66d63ae405389f00d653fc7e7d1",
      "Inputs": [
        {
          "Id": "37d898d6f09c409481263b320556738a",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "056437a77e5c458b8bec2424bfecdea9",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d42d07d26f97454398df58dbff403a8a",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "02452d173cb0492ebef4628a6bf32c2e",
      "Inputs": [
        {
          "Id": "f7c552cfaecd4a8e91769372cdf7bf5c",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "e2119a5e8ea24648b8d152df932e4874",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34bec831bbbc4fd9ba6f51f68a15ac01",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "96cf38cbd54f434e83b2893568405eb6",
      "Inputs": [
        {
          "Id": "6602bbd0cea4452d9ff80d5b6d331b02",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "721557e67e8d4c5d8fe8c9ec3c8eaf56",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2cd97dace954284be0a4854b847a7b3",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "0aa5bd95284c4ad4bfd0f62c28923b3f",
      "Inputs": [
        {
          "Id": "4494d1885f5349419cd1b44626198c40",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a09c6a29f3c44d82b17c721808767548",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "59c1d2ba31d348008f050245dc02b87e",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e3e42de416d42dd969ee9604c9af1ab",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "c50f7a7bae0e4aa9a70efb43cd32d7cd",
      "Inputs": [
        {
          "Id": "1bad212871e8418fba7d3024e24749d6",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32fd6e627a424e06a779660a55d95b77",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Id": "65335990d7e14a5abd69e4dbb1a3a863",
      "Inputs": [
        {
          "Id": "c8684a6ba08c45fb9ed1ca5e062be676",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "925d95dfeb1240568e71327eea440ef1",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Id": "61a0df1c95914c449030014daac8b4ef",
      "Inputs": [
        {
          "Id": "89f5c035f98e4f69a4b834733653d57f",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff87ef9d789a491781e72c44881d4b97",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "1562dc5f83f44655ba6b178a3d92f2f8",
      "Inputs": [
        {
          "Id": "c4c83161a4d549bc966dd17c1044a03e",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d4362f3a67be446ab903d9910612701d",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "02caa33955784c1bbc582335ae68d477",
      "Inputs": [
        {
          "Id": "e64bb61f7f284025a333923041d772e5",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "faf6300cf86c4d74b32f7e72838e933a",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24b0af2875b44c2ead7c29491069f246",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e29390cf735d4ed4bbdaa92bfd0eacf6",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "f3a9cbeee5cd46f9944c9bf1085e940a",
      "Inputs": [
        {
          "Id": "daef9acee7cf47cebe68eb5492bf8c6a",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c9a1ec78fa14ceb9a79f942c4c9cf1e",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1148cd1bd1a47cba6756b1ed0fa58e3",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79f6b94a648d4e069d25fe68f06ff10d",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "9ea1c1eb8e3c414eac53a3f0d922920f",
      "Inputs": [
        {
          "Id": "5e707bb9dc4a4aa1b211abeefdfb0262",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "563f2dc2101848a38e727ad89a8e2f46",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "6208e851872c40d98bb6bb0a546a9688",
      "Inputs": [
        {
          "Id": "fccc5f6392c44e31822e821c58113368",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1df4f6954b5548d4958b700b4e267426",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "a730e86b618f4b9982b5b32badaf8470",
      "Inputs": [
        {
          "Id": "c5fa7208855940caa3afc868ea041cb2",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3636a0bfab98437eb068bcbe9389358b",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "583182efb8c043aa9aa7bb1c49c37876",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "a9d675b813c7470cbbe1d6be16b94a9b",
      "Inputs": [
        {
          "Id": "13b121c0c36942b98e83e01df1e768f1",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "14c75e37fca24029b9ce7af156e9957e",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendStart@double",
      "Id": "5040179f47d64eb69142b33a5e1c9473",
      "Inputs": [
        {
          "Id": "9cec8538666c438b92c81fa27fc43a7c",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37d48b7498484c77bfd57c978f254de2",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "648f546b1bc2472faff2d7b3a3cf46cd",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its start side. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendStart (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Id": "72c153cc9bbe49c9a5c4687939b59cf0",
      "Inputs": [
        {
          "Id": "57ddcae890e9479aa8b26133fb9dc4b7",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb758027fc2e4a23a4eb755f7ef81b06",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52088d77d61e44ca8467324677ca17d3",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "30f9a69172ff4498b1167e2da7d8375f",
      "Inputs": [
        {
          "Id": "849964475bd548fda90415f71fd1e4a4",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ce1906857e44480b000e85836a20b4f",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "43b956e0272744689e3e4c4d7f8b4706",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "516204527de9480da430a098d62aeee5",
      "Inputs": [
        {
          "Id": "07d7b6b20803419caed7cbac6bb46629",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe02b6c75ff4413f9f28202718281b37",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec49e2a4137a4adca4340788ce5566b7",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "700;",
      "Id": "eacb279a75fd4122aaa67973eef1c8e5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d440b28ba9a7402e8c9175a933f52fc8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "",
      "Id": "5f3a6a248f8e4a418364c194732e62db",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "59ceb467fb5c46a79c99f556e3a8f6bf",
      "End": "09842c9718dc464a9331751354203ca7",
      "Id": "897672902cee45de9b9a07027118e4a6",
      "IsHidden": "False"
    },
    {
      "Start": "288a9ce25f61442583e5503e22462bae",
      "End": "d934699b39674219b416a2612d0ab090",
      "Id": "e6bc8e88acd1456195c31dfe865d774d",
      "IsHidden": "False"
    },
    {
      "Start": "a9ccd890f8ce4806bec6ddbd6d44b7f2",
      "End": "b1c40b77de474fbea08ab5d7e8e598b3",
      "Id": "6f72dc18acaa4b98a82df78dfa613d49",
      "IsHidden": "False"
    },
    {
      "Start": "d07de156cfce43758d55716721fbf656",
      "End": "169aa25834b841078952fcedc6aab69f",
      "Id": "c5fe5b90cd074c7182e1d2f71ae26d64",
      "IsHidden": "False"
    },
    {
      "Start": "9493654f8c1d47fbb635065c4c49952d",
      "End": "4b3c7dd1a33e4c82a62bdb44d15cd61e",
      "Id": "f113f39b455d4b3e86bd32db22a82240",
      "IsHidden": "False"
    },
    {
      "Start": "74c8e2ec02c745519237e8ccf5084550",
      "End": "516936e4a62b4e0a858c88ab813248c5",
      "Id": "678593873c0446418cda911c2b8552b1",
      "IsHidden": "False"
    },
    {
      "Start": "5f21c61cf54d4061b3768586ca63ac48",
      "End": "6c717e90296641dfacd88c4b8bab86e5",
      "Id": "8d13b3092ed049e6b9f38db075b21b9c",
      "IsHidden": "False"
    },
    {
      "Start": "fc17dcd8d0d34c38ad990eb059c0ebb0",
      "End": "deb8f7f15aa24d608306ee3101709f3a",
      "Id": "455098ba8bf14f5fae8cb7e130297ea3",
      "IsHidden": "False"
    },
    {
      "Start": "c1f09f01706743d38f8a35d5ee729c61",
      "End": "81e9efb6d0d84d4cabb73dfe64e1aede",
      "Id": "24090887aee5494eb4f03b592d7bd5c1",
      "IsHidden": "False"
    },
    {
      "Start": "de3fccb4f5e04ce494dffee14a53b48c",
      "End": "75310c84eafa4d0aa8998be90ed0f9f8",
      "Id": "64185f7f73214dce9f13d2d6b6e77ecd",
      "IsHidden": "False"
    },
    {
      "Start": "4cd71429d47d4a50b3fbd8bbccfde563",
      "End": "481fd4cc94ec4fa08f825c256a119d1b",
      "Id": "0dacb2ec69f14b40af452c03c9040dc7",
      "IsHidden": "False"
    },
    {
      "Start": "c7def302dca843c49be04896c0e1afbf",
      "End": "dbecd2641b8548c89ed423f4b08bea4f",
      "Id": "6557e03965e744a1b6680c17228b5710",
      "IsHidden": "False"
    },
    {
      "Start": "466c96d7d46a4dcfb3220e6847eb7bd4",
      "End": "0575777f413b41cab80f29d94d935d46",
      "Id": "d6c58b43a3944f9f86905fba4b1fd375",
      "IsHidden": "False"
    },
    {
      "Start": "54dd784ae0604a94bd60969474b47aac",
      "End": "e49def7b3bc4402dac884eac05c3016a",
      "Id": "9f8bd579eaf74bf6bd50397b7b2b8470",
      "IsHidden": "False"
    },
    {
      "Start": "cb88fe28e8ca437b9dfc96c669dce3c6",
      "End": "ba72f5e59350464583469869f0d3e754",
      "Id": "46ad14e0a6a64cdd8bc69ba5e94a1529",
      "IsHidden": "False"
    },
    {
      "Start": "2429d197b45d4608875c68cd1b1d5255",
      "End": "ef565d9cf03a496ca21fba93b3465e41",
      "Id": "3b9ac590691343519d8f70163159e3bf",
      "IsHidden": "False"
    },
    {
      "Start": "8ec8a981abdc427393c8122549ded4e8",
      "End": "4fb154cf4538412bbb3452dd886ee067",
      "Id": "20a71007722f453098b60717a45271b5",
      "IsHidden": "False"
    },
    {
      "Start": "8ec8a981abdc427393c8122549ded4e8",
      "End": "702216727e3547eda7f12b46bb517bf0",
      "Id": "a650fb114e704cdd95a6a2ae0eb946fc",
      "IsHidden": "False"
    },
    {
      "Start": "8ec8a981abdc427393c8122549ded4e8",
      "End": "4146960893fc498fb3500d9e257185a7",
      "Id": "c48602d33d50417e9e35083747d86a00",
      "IsHidden": "False"
    },
    {
      "Start": "a0ea2486944b4e2fb918ecd13678cb03",
      "End": "0df382ee338a456fb26e0bf348a1a7dc",
      "Id": "c4253087a67741819e1481d0ad437641",
      "IsHidden": "False"
    },
    {
      "Start": "a0ea2486944b4e2fb918ecd13678cb03",
      "End": "cb429e9c7a8f4617849db2d72449ceed",
      "Id": "0a0e138521c741f7aa4f2faa1c0bb048",
      "IsHidden": "False"
    },
    {
      "Start": "a0ea2486944b4e2fb918ecd13678cb03",
      "End": "33faf9fc80fe4e63b667375e0425a044",
      "Id": "6fd1fcb5740d47fea07a1b39186acfba",
      "IsHidden": "False"
    },
    {
      "Start": "d8e5f005dce64cd0b5f9b4d0f39a18e6",
      "End": "4fac3591fffa45059b2ff2e6b94f99f4",
      "Id": "7e7f87274efd4f5395d1b1af06e48991",
      "IsHidden": "False"
    },
    {
      "Start": "d8e5f005dce64cd0b5f9b4d0f39a18e6",
      "End": "6602bbd0cea4452d9ff80d5b6d331b02",
      "Id": "6e3333cc00d146aa88c5eaef42e0ffca",
      "IsHidden": "False"
    },
    {
      "Start": "dd3cb0025e6d4dd387b625478557d018",
      "End": "1f91d72f4eee48b28aa2ae4885471c65",
      "Id": "c64c8c6c26f84f5298debb71c9eb6093",
      "IsHidden": "False"
    },
    {
      "Start": "5f36d5e278954d4a89e176279d9ed4cf",
      "End": "d6ab69453cb4448c97a35bb647a15f08",
      "Id": "e92498a88f3c4411b5a39a6ec716e4fe",
      "IsHidden": "False"
    },
    {
      "Start": "749de8541696498e9577eb1623bc27e6",
      "End": "056437a77e5c458b8bec2424bfecdea9",
      "Id": "352dd515c9924ee8a605066be445498a",
      "IsHidden": "False"
    },
    {
      "Start": "749de8541696498e9577eb1623bc27e6",
      "End": "e2119a5e8ea24648b8d152df932e4874",
      "Id": "c3935f46ab7141098426ea33325f64f8",
      "IsHidden": "False"
    },
    {
      "Start": "6d11745178b94929ab9c5d7743f1b7fd",
      "End": "6c70920bf7e24c4fb9cacb7517d84bd2",
      "Id": "5eaa47d424ad40b397ee2cfda6efe316",
      "IsHidden": "False"
    },
    {
      "Start": "6d11745178b94929ab9c5d7743f1b7fd",
      "End": "48a141b71cde4ddca72cad4f42118c58",
      "Id": "f73b0cead3c54ebc9c90accd261bdba8",
      "IsHidden": "False"
    },
    {
      "Start": "44f7c88e24d2426583c1c1e404abf99c",
      "End": "00cc981452eb40f4a46c362ef8e03359",
      "Id": "5d06902b14784400a5e750a03e371112",
      "IsHidden": "False"
    },
    {
      "Start": "44f7c88e24d2426583c1c1e404abf99c",
      "End": "37d898d6f09c409481263b320556738a",
      "Id": "71f793c4e86e4cb2b358fd394e1b7057",
      "IsHidden": "False"
    },
    {
      "Start": "28fd95b93fbf401fa89e1d1e01cd6286",
      "End": "f7c552cfaecd4a8e91769372cdf7bf5c",
      "Id": "0fbe152ead34460d94c5afdf51ec75dd",
      "IsHidden": "False"
    },
    {
      "Start": "072914e978714c0b8e4634806646b676",
      "End": "721557e67e8d4c5d8fe8c9ec3c8eaf56",
      "Id": "53b45d6f9fd04d31bd9fc8aa541610cd",
      "IsHidden": "False"
    },
    {
      "Start": "d42d07d26f97454398df58dbff403a8a",
      "End": "a09c6a29f3c44d82b17c721808767548",
      "Id": "be22dec36eec48ceb4638a3217747dab",
      "IsHidden": "False"
    },
    {
      "Start": "34bec831bbbc4fd9ba6f51f68a15ac01",
      "End": "4494d1885f5349419cd1b44626198c40",
      "Id": "9421d8331721403488513f03161b3766",
      "IsHidden": "False"
    },
    {
      "Start": "c2cd97dace954284be0a4854b847a7b3",
      "End": "59c1d2ba31d348008f050245dc02b87e",
      "Id": "912cc4a3b831433d9684dfba5a4c8068",
      "IsHidden": "False"
    },
    {
      "Start": "5e3e42de416d42dd969ee9604c9af1ab",
      "End": "1bad212871e8418fba7d3024e24749d6",
      "Id": "c6abf9a681714b33a207eb235970043b",
      "IsHidden": "False"
    },
    {
      "Start": "32fd6e627a424e06a779660a55d95b77",
      "End": "c8684a6ba08c45fb9ed1ca5e062be676",
      "Id": "8faf1c37edd04af9a90a80aaa4637105",
      "IsHidden": "False"
    },
    {
      "Start": "32fd6e627a424e06a779660a55d95b77",
      "End": "89f5c035f98e4f69a4b834733653d57f",
      "Id": "fbf7577c6c7842e695c702389971adcf",
      "IsHidden": "False"
    },
    {
      "Start": "32fd6e627a424e06a779660a55d95b77",
      "End": "e64bb61f7f284025a333923041d772e5",
      "Id": "f66a128e61b545caad6caa7c636cc284",
      "IsHidden": "False"
    },
    {
      "Start": "32fd6e627a424e06a779660a55d95b77",
      "End": "daef9acee7cf47cebe68eb5492bf8c6a",
      "Id": "7ac8f88f702e430b9416ca1369343666",
      "IsHidden": "False"
    },
    {
      "Start": "925d95dfeb1240568e71327eea440ef1",
      "End": "faf6300cf86c4d74b32f7e72838e933a",
      "Id": "7697d1711c0a47d1aed8f3ba23a1ceb5",
      "IsHidden": "False"
    },
    {
      "Start": "ff87ef9d789a491781e72c44881d4b97",
      "End": "6c9a1ec78fa14ceb9a79f942c4c9cf1e",
      "Id": "e0851d8f804c495492aebd9c21cca3f9",
      "IsHidden": "False"
    },
    {
      "Start": "d4362f3a67be446ab903d9910612701d",
      "End": "c5fa7208855940caa3afc868ea041cb2",
      "Id": "70dc9b61419d4a2c8fd6157a33bd46b1",
      "IsHidden": "False"
    },
    {
      "Start": "24b0af2875b44c2ead7c29491069f246",
      "End": "5e707bb9dc4a4aa1b211abeefdfb0262",
      "Id": "fa97876a33c1480fb26bedba55bdb22a",
      "IsHidden": "False"
    },
    {
      "Start": "24b0af2875b44c2ead7c29491069f246",
      "End": "fccc5f6392c44e31822e821c58113368",
      "Id": "eef825cbf34848cab47d2157ad7fa98b",
      "IsHidden": "False"
    },
    {
      "Start": "d1148cd1bd1a47cba6756b1ed0fa58e3",
      "End": "c4c83161a4d549bc966dd17c1044a03e",
      "Id": "a9e5587d634541cb8425997c30e1b937",
      "IsHidden": "False"
    },
    {
      "Start": "d1148cd1bd1a47cba6756b1ed0fa58e3",
      "End": "13b121c0c36942b98e83e01df1e768f1",
      "Id": "4ba47d6279934ecfb4c8ea0ef6bdcd41",
      "IsHidden": "False"
    },
    {
      "Start": "563f2dc2101848a38e727ad89a8e2f46",
      "End": "fe02b6c75ff4413f9f28202718281b37",
      "Id": "bcf3d1391d9f4d44817c49af87474a66",
      "IsHidden": "False"
    },
    {
      "Start": "1df4f6954b5548d4958b700b4e267426",
      "End": "07d7b6b20803419caed7cbac6bb46629",
      "Id": "1bf99df28e834197802d0bac2bca8bb1",
      "IsHidden": "False"
    },
    {
      "Start": "583182efb8c043aa9aa7bb1c49c37876",
      "End": "849964475bd548fda90415f71fd1e4a4",
      "Id": "310db1e8b75d4328ad6ba9c3b5a1cc5f",
      "IsHidden": "False"
    },
    {
      "Start": "14c75e37fca24029b9ce7af156e9957e",
      "End": "3636a0bfab98437eb068bcbe9389358b",
      "Id": "00c9942a04514b6d96151cfebd17195f",
      "IsHidden": "False"
    },
    {
      "Start": "648f546b1bc2472faff2d7b3a3cf46cd",
      "End": "1bf5c2881be74bf1ba0bbe5683e19709",
      "Id": "b96e3537786d4f03b6b7d12965880ead",
      "IsHidden": "False"
    },
    {
      "Start": "52088d77d61e44ca8467324677ca17d3",
      "End": "9cec8538666c438b92c81fa27fc43a7c",
      "Id": "91ef86cff8fb4434a913508db58ff37e",
      "IsHidden": "False"
    },
    {
      "Start": "43b956e0272744689e3e4c4d7f8b4706",
      "End": "57ddcae890e9479aa8b26133fb9dc4b7",
      "Id": "8e406679ec0b49e5a74b085949c61a5c",
      "IsHidden": "False"
    },
    {
      "Start": "ec49e2a4137a4adca4340788ce5566b7",
      "End": "6ce1906857e44480b000e85836a20b4f",
      "Id": "ae0d645d5ce5461cba904a75b864620d",
      "IsHidden": "False"
    },
    {
      "Start": "d440b28ba9a7402e8c9175a933f52fc8",
      "End": "37d48b7498484c77bfd57c978f254de2",
      "Id": "777802b2074d48759017f56639acb46c",
      "IsHidden": "False"
    },
    {
      "Start": "d440b28ba9a7402e8c9175a933f52fc8",
      "End": "fb758027fc2e4a23a4eb755f7ef81b06",
      "Id": "de72bbcb74fd438eb21b4e29560ddcb4",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [
    {
      "NodeId": "c9cb093e-50e9-4cd4-9452-7dc67fa6d71f",
      "Binding": {
        "ByLine_InClassDecl-1_InFunctionScope-1_Instance0_c9cb093e-50e9-4cd4-9452-7dc67fa6d71f": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 19266.396484375,
      "EyeY": 28653.1484375,
      "EyeZ": 24431.296875,
      "LookX": -12779.21484375,
      "LookY": -25981.90234375,
      "LookZ": -28959.791015625,
      "UpX": -0.18328285217285156,
      "UpY": 0.891006350517273,
      "UpZ": -0.41534936428070068
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Grid.ByLine",
        "ShowGeometry": false,
        "Id": "c9cb093e50e94cd494527dc67fa6d71f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6394.8969847644275,
        "Y": 1138.1704376392381
      },
      {
        "Name": "xSpan",
        "ShowGeometry": true,
        "Id": "5529b30a5ac54f26ab134a4ac49a0663",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1435.8279824160618,
        "Y": 434.85215748627661
      },
      {
        "Name": "ySpan",
        "ShowGeometry": true,
        "Id": "7acadea4516e4dc391f83174a2e06924",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1439.1714126667553,
        "Y": 957.55451975931692
      },
      {
        "Name": "zSpan",
        "ShowGeometry": true,
        "Id": "efb22f4b9377436c8b9cc1534b472445",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1444.6129034902997,
        "Y": 1519.9673376616506
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8ac57812406345e8a8be474d49aebb54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1070.90329605367,
        "Y": 1635.13061311423
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "32c90d35dc8048fe82032229a24b3dbd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1052.46599505587,
        "Y": 551.781977119221
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "41c6d992f4cd44d9917c10920c9c6de1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1024.60360876006,
        "Y": 1057.75563373368
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "32c1f5523fe9479aa94d07d3b31a28ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -782.606145485702,
        "Y": 1519.96733766165
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "3a1b54c1d3b148f09fbc554975d1c456",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -769.55570592147,
        "Y": 957.554519759317
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "4885700bb63746b9bd947d0b44834dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -779.01651599284,
        "Y": 434.852157486277
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "316d878e0fc949fd8e303653900b2512",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -394.664992585512,
        "Y": 1520.60737633659
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "d64c6461058a45d3a9fa4c04a6641c42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -389.926864953627,
        "Y": 959.857020820724
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "6c062b8cac7144408bb25ad9c1888bb7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -398.01651599284,
        "Y": 434.852157486277
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c6f21a2680f04c939b1d27d674b23572",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38.2267490098759,
        "Y": 431.697944553048
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "954b6b265d6d496dae42ac9cf4e171fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -19.3773618840287,
        "Y": 1526.78228367691
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "76116fd1885943b8a8379f6e9bac4fd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36.8460339374026,
        "Y": 960.336454727767
      },
      {
        "Name": "List.Scan",
        "ShowGeometry": true,
        "Id": "aafafb396f4e429da1d426f529c6d4dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 785.34047287512,
        "Y": 341.54440278768
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "b5e365d5dfd54c26b758c48954b8d35e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 313.930207684504,
        "Y": 826.892890170264
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "100bfe17f482430d8a1a8cbd8ed947ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 322.430168651588,
        "Y": 1014.86799418988
      },
      {
        "Name": "List.Scan",
        "ShowGeometry": true,
        "Id": "4b2cafee0c5b44948c342b207ca2a342",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 771.94229090675,
        "Y": 1438.41379247922
      },
      {
        "Name": "List.Scan",
        "ShowGeometry": true,
        "Id": "b1cc505961f640149f5fe6a34c4363f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 766.930624364715,
        "Y": 885.521994974438
      },
      {
        "Name": "*",
        "ShowGeometry": true,
        "Id": "41122f7f87df4d889e795361ed313cf7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1098.67515623008,
        "Y": 708.744021446679
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "929d9fec5db74ee38e4f4019cb21ad71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1246.7376025708,
        "Y": 925.264541879533
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "1468de7fc9664d47b1b6cbf5f9072dd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1588.37803840942,
        "Y": 1261.40005311702
      },
      {
        "Name": "List.CartesianProduct",
        "ShowGeometry": true,
        "Id": "1a895136736a48b2be082ca22135edb1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1512.1663400824,
        "Y": 660.015951777755
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "bbcdb12cd72c417d87212c526b4b70a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2003.56571900109,
        "Y": 1317.01815422349
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "8f5a09a1890a4631a6ec837492b94768",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2008.96259553169,
        "Y": 692.921092769702
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "fc36482f9b15467bb35cb81b6e8df919",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2236.01403868618,
        "Y": 1504.14243225618
      },
      {
        "Name": "List.Cycle",
        "ShowGeometry": true,
        "Id": "1f3df66d63ae405389f00d653fc7e7d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2499.59918383946,
        "Y": 1202.83711983575
      },
      {
        "Name": "List.Cycle",
        "ShowGeometry": true,
        "Id": "02452d173cb0492ebef4628a6bf32c2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2498.19012821145,
        "Y": 727.10016591107
      },
      {
        "Name": "List.Cycle",
        "ShowGeometry": true,
        "Id": "96cf38cbd54f434e83b2893568405eb6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2486.42226156881,
        "Y": 1702.28799458953
      },
      {
        "Name": "Point.ByCoordinates",
        "ShowGeometry": true,
        "Id": "0aa5bd95284c4ad4bfd0f62c28923b3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2933.19731984611,
        "Y": 1159.96163303711
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "c50f7a7bae0e4aa9a70efb43cd32d7cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3431.52886209436,
        "Y": 1161.94634226968
      },
      {
        "Name": "Point.X",
        "ShowGeometry": true,
        "Id": "65335990d7e14a5abd69e4dbb1a3a863",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3812.60859750113,
        "Y": 1433.21230513651
      },
      {
        "Name": "Point.Y",
        "ShowGeometry": true,
        "Id": "61a0df1c95914c449030014daac8b4ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3802.70172260354,
        "Y": 955.667306940772
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "1562dc5f83f44655ba6b178a3d92f2f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4490.72947867261,
        "Y": 707.150345011626
      },
      {
        "Name": "List.GroupByKey",
        "ShowGeometry": true,
        "Id": "02caa33955784c1bbc582335ae68d477",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4153.41134883475,
        "Y": 1351.32428997705
      },
      {
        "Name": "List.GroupByKey",
        "ShowGeometry": true,
        "Id": "f3a9cbeee5cd46f9944c9bf1085e940a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4129.90501737866,
        "Y": 751.66979324356
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "9ea1c1eb8e3c414eac53a3f0d922920f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4472.92095163382,
        "Y": 1532.20882305984
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "6208e851872c40d98bb6bb0a546a9688",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4473.65345665884,
        "Y": 1284.62212460141
      },
      {
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": true,
        "Id": "a730e86b618f4b9982b5b32badaf8470",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4786.13763140494,
        "Y": 836.608878744563
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "a9d675b813c7470cbbe1d6be16b94a9b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4489.99697364759,
        "Y": 954.737043470064
      },
      {
        "Name": "Curve.ExtendStart",
        "ShowGeometry": true,
        "Id": "5040179f47d64eb69142b33a5e1c9473",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6023.38094313453,
        "Y": 1139.40326131035
      },
      {
        "Name": "Curve.ExtendEnd",
        "ShowGeometry": true,
        "Id": "72c153cc9bbe49c9a5c4687939b59cf0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5710.38094313453,
        "Y": 1139.40326131035
      },
      {
        "Name": "List Create",
        "ShowGeometry": false,
        "Id": "30f9a69172ff4498b1167e2da7d8375f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5287.56997980956,
        "Y": 1139.40326131035
      },
      {
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": true,
        "Id": "516204527de9480da430a098d62aeee5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4785.34673225413,
        "Y": 1410.0093776186
      },
      {
        "Name": "Code Block",
        "ShowGeometry": false,
        "Id": "eacb279a75fd4122aaa67973eef1c8e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5532.66527039702,
        "Y": 1319.33464233853
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5f3a6a248f8e4a418364c194732e62db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1327.0,
        "Y": -53.0
      }
    ],
    "Annotations": [
      {
        "Id": "ce9c5eadde4d4c99980038b7eb444534",
        "Title": "x좌표 콜렉팅",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8f5a09a1890a4631a6ec837492b94768"
        ],
        "HasNestedGroups": false,
        "Left": 1998.96259553169,
        "Top": 567.921092769702,
        "Width": 196.0,
        "Height": 257.0,
        "FontSize": 36.0,
        "InitialTop": 692.921092769702,
        "InitialHeight": 162.0,
        "TextblockHeight": 115.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "83463f485b174671a6616462aebc457a",
        "Title": "y좌표 콜렉팅",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bbcdb12cd72c417d87212c526b4b70a0"
        ],
        "HasNestedGroups": false,
        "Left": 1993.56571900109,
        "Top": 1192.01815422349,
        "Width": 195.99999999999977,
        "Height": 257.0,
        "FontSize": 36.0,
        "InitialTop": 1317.01815422349,
        "InitialHeight": 162.0,
        "TextblockHeight": 115.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "696773b761b0455cb1b1578ebb169b11",
        "Title": "문자열 분할",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -369.706690665405,
        "Top": 260.603183909601,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "dff8f94872b849d6b40fa60a7cc0f22d",
        "Title": "x,y 좌표 기준으로 그루핑 후 그리드 레퍼런스 라인 생성",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 4457.29660171495,
        "Top": 254.193069864679,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e118dbf146e84c7786c0492e4df4979c",
        "Title": "저층 포인트 군 추출",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3479.946979945,
        "Top": 265.71389055352,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "32341061fcc24146a3710499b976af3e",
        "Title": "점생성",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 2994.93981354232,
        "Top": 277.307979264428,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3b4d0a19575643aeb2d04a2e27766e66",
        "Title": "좌표 조합",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1881.85249585931,
        "Top": 279.642338444186,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6ac5411d8c3b4956962a12dcc3e9d7d7",
        "Title": "누적 연산",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 757.255181167906,
        "Top": 261.03729558164,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 949.43596246399886,
    "Y": 412.13959349177412,
    "Zoom": 0.53597193509745078
  }
}