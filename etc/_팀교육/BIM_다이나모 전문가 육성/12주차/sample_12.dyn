{
  "Uuid": "85bcf151-2a93-40fc-b906-7644e4add275",
  "IsCustomNode": false,
  "Description": "",
  "Name": "sample_12",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Grid.ByLine@Autodesk.DesignScript.Geometry.Line",
      "Id": "c9cb093e50e94cd494527dc67fa6d71f",
      "Inputs": [
        {
          "Id": "1bf5c2881be74bf1ba0bbe5683e19709",
          "Name": "line",
          "Description": "Line",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "082d1840292347018a4739078c98967e",
          "Name": "Grid",
          "Description": "Grid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Grid Element in a Project along a Line.\n\nGrid.ByLine (line: Line): Grid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "4885700bb63746b9bd947d0b44834dd9",
      "Inputs": [
        {
          "Id": "86d173ef4919478e9bbde75906da1e74",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0990a9300d644c2bbcf9759d95afc323",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d50fd66c15fc4d66a869c08ade221e74",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "32c90d35dc8048fe82032229a24b3dbd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "726e498d5e2043a39c41fd3374a95c3f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "6c062b8cac7144408bb25ad9c1888bb7",
      "Inputs": [
        {
          "Id": "5ae42f5b76c647d695d5441bba16e29f",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7dfee5bf6d6d420680189fcf348b8b95",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "100bfe17f482430d8a1a8cbd8ed947ca",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "662a5a5d6f4f4d6994cd8da367a00877",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ScanList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "aafafb396f4e429da1d426f529c6d4dc",
      "Inputs": [
        {
          "Id": "f02dd4a0a0c6446083ce17f1a0c783ab",
          "Name": "reduceFunction",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aebe17d835894fa488ebb4c8b8e40d55",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "16af7bb79c66430ca2a20ff6b1fc3594",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f83bea1e76c491eac3e5766874ba776",
          "Name": "list",
          "Description": "Scanned lists (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result, produces a list of successive reduced values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "b5e365d5dfd54c26b758c48954b8d35e",
      "Inputs": [
        {
          "Id": "8173083e644d45a3aabfa1a6f35c0cef",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d87aa4f67afd4a0d90a51decd728082e",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ff453d6332e497796d0f2a52c6b9cd7",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "3a1b54c1d3b148f09fbc554975d1c456",
      "Inputs": [
        {
          "Id": "b145dd1a7bfb44b1b24806d7cea4ccd3",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ee352ea729dd4e7a961d1fe04f418f79",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "455eb90c6d934e518b58c634be06530c",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "d64c6461058a45d3a9fa4c04a6641c42",
      "Inputs": [
        {
          "Id": "d2947717c9c049f69b5c334bdea9c59c",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4aab9ea50ee2463381ec98bb9ea63c2f",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "41c6d992f4cd44d9917c10920c9c6de1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4a1b09a4e8044961ada98a1725863a61",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ScanList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "b1cc505961f640149f5fe6a34c4363f2",
      "Inputs": [
        {
          "Id": "5be91556941045e291904f433f7e73c1",
          "Name": "reduceFunction",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5517c91f0b5b428d93df9aac60c1e533",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e739d1955f646d2a1bebf1a5d790560",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e0e7b1ebcbd447c49d1ed16b24f611d2",
          "Name": "list",
          "Description": "Scanned lists (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result, produces a list of successive reduced values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "32c1f5523fe9479aa94d07d3b31a28ce",
      "Inputs": [
        {
          "Id": "e298df1c31344686bae8480a0fdd716d",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75d1b9d49bef49cfbbd1b08c3a709953",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af53829b16ad475c9c6e353c5b69228a",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "316d878e0fc949fd8e303653900b2512",
      "Inputs": [
        {
          "Id": "f51c487c67c048edb38c27c795457d3e",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cba9d97dcc534830a1920868856e730e",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "8ac57812406345e8a8be474d49aebb54",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "132a5ac10f494d8d963364f652efa48a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ScanList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "4b2cafee0c5b44948c342b207ca2a342",
      "Inputs": [
        {
          "Id": "15a03637f36d4da5b1f03530f6fd338f",
          "Name": "reduceFunction",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0b2af7664514676b6919b885e5d7ab6",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0dcfad1180c747828bfbfda0a54bf5c7",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c130f2470ede474baef96780475cc93b",
          "Name": "list",
          "Description": "Scanned lists (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result, produces a list of successive reduced values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "929d9fec5db74ee38e4f4019cb21ad71",
      "Inputs": [
        {
          "Id": "cf66762ecb85405ca4f7edaab7a01f13",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "951d482d5ba54a1cafe47b08b925be33",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba1731b2c06544a9aeceea04cfa45cef",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.CartesianProduct, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "1a895136736a48b2be082ca22135edb1",
      "Inputs": [
        {
          "Id": "d77fcab6fd944f0d9ac06efeeab47071",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "105ee44081bf4495af22f3a5541a849c",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c0113b11cdfa462eb51db8506bf1616e",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6821c66aac554b848da61f0cd37207b0",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each pair in the cartesian product of two sequences"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "8f5a09a1890a4631a6ec837492b94768",
      "Inputs": [
        {
          "Id": "bd54211c12e44e9996628e09773eb910",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0a7fd5b275b4ed18f625a67c5f42fe9",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "bbcdb12cd72c417d87212c526b4b70a0",
      "Inputs": [
        {
          "Id": "624f496135f046c19e830a6998958c5c",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57c0c85764244264b38b2f6a79198ab8",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.ByCoordinates@double,double,double",
      "Id": "0aa5bd95284c4ad4bfd0f62c28923b3f",
      "Inputs": [
        {
          "Id": "3760b9c86a824a74b6e221161e9bdd64",
          "Name": "x",
          "Description": "X coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "edf9ccebdf2440f39e4dcc13cf761b03",
          "Name": "y",
          "Description": "Y coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "550c317ca8394060b60f594c5b0b445c",
          "Name": "z",
          "Description": "Z coordinate\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ce35d170e3e4e9e969cd56d958d74b8",
          "Name": "Point",
          "Description": "Point created by coordinates",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Point given 3 cartesian coordinates\n\nPoint.ByCoordinates (x: double = 0, y: double = 0, z: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "96cf38cbd54f434e83b2893568405eb6",
      "Inputs": [
        {
          "Id": "4e71c205113443b0be946bd5090eceda",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "87d59bbf34d54d519e0063bcd54a2fb8",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78365f46d42e4080824047871cf8d838",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "fc36482f9b15467bb35cb81b6e8df919",
      "Inputs": [
        {
          "Id": "3d309f142bc741d8824bca611652f674",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b8d9ccbcdf844c5830e1e9f78c57f03",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "1468de7fc9664d47b1b6cbf5f9072dd6",
      "Inputs": [
        {
          "Id": "c375f22252f24abbba8594f1076b93a2",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90d6b89119ca438488a0bc46eded9d9b",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "02452d173cb0492ebef4628a6bf32c2e",
      "Inputs": [
        {
          "Id": "8debbad74ab44229ada7398a5ec44cc4",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "7d663d655ba14506a6f0cfbaedd53011",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a7df4a889ec4adbaf49df1daf8fb0f6",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "1f3df66d63ae405389f00d653fc7e7d1",
      "Inputs": [
        {
          "Id": "31224c6f498241f9bc47c79b812bc403",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "f5973dccf70b4ffcaa935c4fd636d114",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "965e279bcd674a6ca18f8f6bb405e1c7",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "c50f7a7bae0e4aa9a70efb43cd32d7cd",
      "Inputs": [
        {
          "Id": "1d25002952804fc280199701a9bc1a60",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd31ed2ca8c149ccaaed3b1898931e97",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "f3a9cbeee5cd46f9944c9bf1085e940a",
      "Inputs": [
        {
          "Id": "56bfac2cdf354ac4bf0d916b63ef6a0a",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0a1ea3a306e4a808d567d24d7bd309b",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd48b3a3fda44e6f93e3e0ae247300e7",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8b5772f3cfb4b0c929978fce42bcdf0",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Y",
      "Id": "61a0df1c95914c449030014daac8b4ef",
      "Inputs": [
        {
          "Id": "e318bcb004b6469c800723f607efa036",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "974040935ba145b6b79d7207ace192aa",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Y component of a Point\n\nPoint.Y: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "1562dc5f83f44655ba6b178a3d92f2f8",
      "Inputs": [
        {
          "Id": "1a8091b5bde94421a12fc0b281625998",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5349046fc93b40d493c88fff4f60ed5a",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "a9d675b813c7470cbbe1d6be16b94a9b",
      "Inputs": [
        {
          "Id": "2e034a2c7ec747b99cfd100cff15de22",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9ff2d15c1a140d1ad6aa32552be0c49",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "a730e86b618f4b9982b5b32badaf8470",
      "Inputs": [
        {
          "Id": "8deab5ecb6ce4577a0c0be42b2254043",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14d4764eaf3942ce9e6a27a2b2d77940",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3a9cc582de24e2f95c8935f5ac99513",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "02caa33955784c1bbc582335ae68d477",
      "Inputs": [
        {
          "Id": "adf82123f97242c4a8c0ab2b5a85f2ab",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4e9af6e1f16a4ad19cd56edde9e83408",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a23ae0a1cd8945219537eea4a974b54d",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9df36c6a85d494ba8b870705baf0edd",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.X",
      "Id": "65335990d7e14a5abd69e4dbb1a3a863",
      "Inputs": [
        {
          "Id": "5458d47e86574a3c8882f9414c2c9720",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "629ffe25cf17471f8ab4c5eb9445b96d",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the X component of a Point\n\nPoint.X: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointEndPoint@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "516204527de9480da430a098d62aeee5",
      "Inputs": [
        {
          "Id": "aaf2a3640b954177bb6d584003a226c9",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "307e61bafb3a42efa365e24858be550d",
          "Name": "endPoint",
          "Description": "Line end point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "842ef689fd6640598c7cbe6605a36a9c",
          "Name": "Line",
          "Description": "Line from start and end point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a straight Line between two input Points.\n\nLine.ByStartPointEndPoint (startPoint: Point, endPoint: Point): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "6208e851872c40d98bb6bb0a546a9688",
      "Inputs": [
        {
          "Id": "fbf5f798a9c04d0b8fd44824ab7fee98",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6581550a4d1490aa862e6ee85d369eb",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "9ea1c1eb8e3c414eac53a3f0d922920f",
      "Inputs": [
        {
          "Id": "1a344bc1ef5d45e8adaedef442d9a4d4",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6d9235b2535427db3c9dc6f7730f968",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "5 6 5",
      "Id": "5529b30a5ac54f26ab134a4ac49a0663",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "59ceb467fb5c46a79c99f556e3a8f6bf",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "4 6",
      "Id": "7acadea4516e4dc391f83174a2e06924",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "288a9ce25f61442583e5503e22462bae",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "3.5 4",
      "Id": "efb22f4b9377436c8b9cc1534b472445",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a9ccd890f8ce4806bec6ddbd6d44b7f2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "30f9a69172ff4498b1167e2da7d8375f",
      "Inputs": [
        {
          "Id": "8c161aa8cc57443b9c5f401ab87df641",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b138e06cf6dc4fdf88bcf2223082e5a0",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e100a640d164e90bf1534f5ded167f3",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i * 1000;",
      "Id": "c6f21a2680f04c939b1d27d674b23572",
      "Inputs": [
        {
          "Id": "c1b5b5b8f0274dbe843333c019f0d2ef",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "64fb67532d12468b993457c8bb963615",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i * 1000;",
      "Id": "76116fd1885943b8a8379f6e9bac4fd3",
      "Inputs": [
        {
          "Id": "0d2ca192c12e434089185fcd8ed126e7",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97e910d279b341ac8f1d83ddff20c71e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i * 1000;",
      "Id": "954b6b265d6d496dae42ac9cf4e171fe",
      "Inputs": [
        {
          "Id": "93dae81d92fb42d5b2f8be5f81cc3356",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d151c684111404c9a5687ab57007d6f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendEnd@double",
      "Id": "72c153cc9bbe49c9a5c4687939b59cf0",
      "Inputs": [
        {
          "Id": "20168db002f24d18a15b2866e781f003",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "135b29fa5e084000a37b764fbfb708b0",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4173c40e87ea42cda7be4b9a2891448c",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its end. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendEnd (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.ExtendStart@double",
      "Id": "5040179f47d64eb69142b33a5e1c9473",
      "Inputs": [
        {
          "Id": "c39b625e3a7440ef9538efce4f5d278e",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ffd1c25cb7644fe8a69a4b3aed70645",
          "Name": "distance",
          "Description": "Distance to extend\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32d92ca3c3a94920b369ef61860ce1ea",
          "Name": "Curve",
          "Description": "The extended Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Extend a Curve by a given distance on its start side. Closed curves like Circles and Ellipses cannot be extended.\n\nCurve.ExtendStart (distance: double = 1): Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "700;",
      "Id": "eacb279a75fd4122aaa67973eef1c8e5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "36c588a5ddc24f33a54c11e33d010471",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "d50fd66c15fc4d66a869c08ade221e74",
      "End": "5ae42f5b76c647d695d5441bba16e29f",
      "Id": "24090887aee5494eb4f03b592d7bd5c1",
      "IsHidden": "False"
    },
    {
      "Start": "726e498d5e2043a39c41fd3374a95c3f",
      "End": "0990a9300d644c2bbcf9759d95afc323",
      "Id": "f113f39b455d4b3e86bd32db22a82240",
      "IsHidden": "False"
    },
    {
      "Start": "7dfee5bf6d6d420680189fcf348b8b95",
      "End": "c1b5b5b8f0274dbe843333c019f0d2ef",
      "Id": "6557e03965e744a1b6680c17228b5710",
      "IsHidden": "False"
    },
    {
      "Start": "662a5a5d6f4f4d6994cd8da367a00877",
      "End": "aebe17d835894fa488ebb4c8b8e40d55",
      "Id": "c4253087a67741819e1481d0ad437641",
      "IsHidden": "False"
    },
    {
      "Start": "662a5a5d6f4f4d6994cd8da367a00877",
      "End": "5517c91f0b5b428d93df9aac60c1e533",
      "Id": "6fd1fcb5740d47fea07a1b39186acfba",
      "IsHidden": "False"
    },
    {
      "Start": "662a5a5d6f4f4d6994cd8da367a00877",
      "End": "e0b2af7664514676b6919b885e5d7ab6",
      "Id": "0a0e138521c741f7aa4f2faa1c0bb048",
      "IsHidden": "False"
    },
    {
      "Start": "2f83bea1e76c491eac3e5766874ba776",
      "End": "105ee44081bf4495af22f3a5541a849c",
      "Id": "3b9ac590691343519d8f70163159e3bf",
      "IsHidden": "False"
    },
    {
      "Start": "9ff453d6332e497796d0f2a52c6b9cd7",
      "End": "f02dd4a0a0c6446083ce17f1a0c783ab",
      "Id": "20a71007722f453098b60717a45271b5",
      "IsHidden": "False"
    },
    {
      "Start": "9ff453d6332e497796d0f2a52c6b9cd7",
      "End": "5be91556941045e291904f433f7e73c1",
      "Id": "c48602d33d50417e9e35083747d86a00",
      "IsHidden": "False"
    },
    {
      "Start": "9ff453d6332e497796d0f2a52c6b9cd7",
      "End": "15a03637f36d4da5b1f03530f6fd338f",
      "Id": "a650fb114e704cdd95a6a2ae0eb946fc",
      "IsHidden": "False"
    },
    {
      "Start": "455eb90c6d934e518b58c634be06530c",
      "End": "d2947717c9c049f69b5c334bdea9c59c",
      "Id": "455098ba8bf14f5fae8cb7e130297ea3",
      "IsHidden": "False"
    },
    {
      "Start": "4aab9ea50ee2463381ec98bb9ea63c2f",
      "End": "0d2ca192c12e434089185fcd8ed126e7",
      "Id": "0dacb2ec69f14b40af452c03c9040dc7",
      "IsHidden": "False"
    },
    {
      "Start": "4a1b09a4e8044961ada98a1725863a61",
      "End": "ee352ea729dd4e7a961d1fe04f418f79",
      "Id": "678593873c0446418cda911c2b8552b1",
      "IsHidden": "False"
    },
    {
      "Start": "e0e7b1ebcbd447c49d1ed16b24f611d2",
      "End": "c0113b11cdfa462eb51db8506bf1616e",
      "Id": "c64c8c6c26f84f5298debb71c9eb6093",
      "IsHidden": "False"
    },
    {
      "Start": "af53829b16ad475c9c6e353c5b69228a",
      "End": "f51c487c67c048edb38c27c795457d3e",
      "Id": "8d13b3092ed049e6b9f38db075b21b9c",
      "IsHidden": "False"
    },
    {
      "Start": "cba9d97dcc534830a1920868856e730e",
      "End": "93dae81d92fb42d5b2f8be5f81cc3356",
      "Id": "64185f7f73214dce9f13d2d6b6e77ecd",
      "IsHidden": "False"
    },
    {
      "Start": "132a5ac10f494d8d963364f652efa48a",
      "End": "75d1b9d49bef49cfbbd1b08c3a709953",
      "Id": "c5fe5b90cd074c7182e1d2f71ae26d64",
      "IsHidden": "False"
    },
    {
      "Start": "c130f2470ede474baef96780475cc93b",
      "End": "4e71c205113443b0be946bd5090eceda",
      "Id": "6e3333cc00d146aa88c5eaef42e0ffca",
      "IsHidden": "False"
    },
    {
      "Start": "c130f2470ede474baef96780475cc93b",
      "End": "c375f22252f24abbba8594f1076b93a2",
      "Id": "7e7f87274efd4f5395d1b1af06e48991",
      "IsHidden": "False"
    },
    {
      "Start": "ba1731b2c06544a9aeceea04cfa45cef",
      "End": "d77fcab6fd944f0d9ac06efeeab47071",
      "Id": "fb78418168cd44049e313079293fb93d",
      "IsHidden": "False"
    },
    {
      "Start": "6821c66aac554b848da61f0cd37207b0",
      "End": "bd54211c12e44e9996628e09773eb910",
      "Id": "f73b0cead3c54ebc9c90accd261bdba8",
      "IsHidden": "False"
    },
    {
      "Start": "6821c66aac554b848da61f0cd37207b0",
      "End": "624f496135f046c19e830a6998958c5c",
      "Id": "5eaa47d424ad40b397ee2cfda6efe316",
      "IsHidden": "False"
    },
    {
      "Start": "f0a7fd5b275b4ed18f625a67c5f42fe9",
      "End": "8debbad74ab44229ada7398a5ec44cc4",
      "Id": "0fbe152ead34460d94c5afdf51ec75dd",
      "IsHidden": "False"
    },
    {
      "Start": "57c0c85764244264b38b2f6a79198ab8",
      "End": "3d309f142bc741d8824bca611652f674",
      "Id": "5d06902b14784400a5e750a03e371112",
      "IsHidden": "False"
    },
    {
      "Start": "57c0c85764244264b38b2f6a79198ab8",
      "End": "31224c6f498241f9bc47c79b812bc403",
      "Id": "71f793c4e86e4cb2b358fd394e1b7057",
      "IsHidden": "False"
    },
    {
      "Start": "5ce35d170e3e4e9e969cd56d958d74b8",
      "End": "1d25002952804fc280199701a9bc1a60",
      "Id": "c6abf9a681714b33a207eb235970043b",
      "IsHidden": "False"
    },
    {
      "Start": "78365f46d42e4080824047871cf8d838",
      "End": "550c317ca8394060b60f594c5b0b445c",
      "Id": "912cc4a3b831433d9684dfba5a4c8068",
      "IsHidden": "False"
    },
    {
      "Start": "5b8d9ccbcdf844c5830e1e9f78c57f03",
      "End": "87d59bbf34d54d519e0063bcd54a2fb8",
      "Id": "53b45d6f9fd04d31bd9fc8aa541610cd",
      "IsHidden": "False"
    },
    {
      "Start": "90d6b89119ca438488a0bc46eded9d9b",
      "End": "7d663d655ba14506a6f0cfbaedd53011",
      "Id": "c3935f46ab7141098426ea33325f64f8",
      "IsHidden": "False"
    },
    {
      "Start": "90d6b89119ca438488a0bc46eded9d9b",
      "End": "f5973dccf70b4ffcaa935c4fd636d114",
      "Id": "352dd515c9924ee8a605066be445498a",
      "IsHidden": "False"
    },
    {
      "Start": "0a7df4a889ec4adbaf49df1daf8fb0f6",
      "End": "3760b9c86a824a74b6e221161e9bdd64",
      "Id": "9421d8331721403488513f03161b3766",
      "IsHidden": "False"
    },
    {
      "Start": "965e279bcd674a6ca18f8f6bb405e1c7",
      "End": "edf9ccebdf2440f39e4dcc13cf761b03",
      "Id": "be22dec36eec48ceb4638a3217747dab",
      "IsHidden": "False"
    },
    {
      "Start": "dd31ed2ca8c149ccaaed3b1898931e97",
      "End": "56bfac2cdf354ac4bf0d916b63ef6a0a",
      "Id": "7ac8f88f702e430b9416ca1369343666",
      "IsHidden": "False"
    },
    {
      "Start": "dd31ed2ca8c149ccaaed3b1898931e97",
      "End": "e318bcb004b6469c800723f607efa036",
      "Id": "fbf7577c6c7842e695c702389971adcf",
      "IsHidden": "False"
    },
    {
      "Start": "dd31ed2ca8c149ccaaed3b1898931e97",
      "End": "adf82123f97242c4a8c0ab2b5a85f2ab",
      "Id": "f66a128e61b545caad6caa7c636cc284",
      "IsHidden": "False"
    },
    {
      "Start": "dd31ed2ca8c149ccaaed3b1898931e97",
      "End": "5458d47e86574a3c8882f9414c2c9720",
      "Id": "8faf1c37edd04af9a90a80aaa4637105",
      "IsHidden": "False"
    },
    {
      "Start": "bd48b3a3fda44e6f93e3e0ae247300e7",
      "End": "1a8091b5bde94421a12fc0b281625998",
      "Id": "a9e5587d634541cb8425997c30e1b937",
      "IsHidden": "False"
    },
    {
      "Start": "bd48b3a3fda44e6f93e3e0ae247300e7",
      "End": "2e034a2c7ec747b99cfd100cff15de22",
      "Id": "4ba47d6279934ecfb4c8ea0ef6bdcd41",
      "IsHidden": "False"
    },
    {
      "Start": "974040935ba145b6b79d7207ace192aa",
      "End": "f0a1ea3a306e4a808d567d24d7bd309b",
      "Id": "e0851d8f804c495492aebd9c21cca3f9",
      "IsHidden": "False"
    },
    {
      "Start": "5349046fc93b40d493c88fff4f60ed5a",
      "End": "8deab5ecb6ce4577a0c0be42b2254043",
      "Id": "70dc9b61419d4a2c8fd6157a33bd46b1",
      "IsHidden": "False"
    },
    {
      "Start": "e9ff2d15c1a140d1ad6aa32552be0c49",
      "End": "14d4764eaf3942ce9e6a27a2b2d77940",
      "Id": "00c9942a04514b6d96151cfebd17195f",
      "IsHidden": "False"
    },
    {
      "Start": "c3a9cc582de24e2f95c8935f5ac99513",
      "End": "8c161aa8cc57443b9c5f401ab87df641",
      "Id": "310db1e8b75d4328ad6ba9c3b5a1cc5f",
      "IsHidden": "False"
    },
    {
      "Start": "a23ae0a1cd8945219537eea4a974b54d",
      "End": "fbf5f798a9c04d0b8fd44824ab7fee98",
      "Id": "eef825cbf34848cab47d2157ad7fa98b",
      "IsHidden": "False"
    },
    {
      "Start": "a23ae0a1cd8945219537eea4a974b54d",
      "End": "1a344bc1ef5d45e8adaedef442d9a4d4",
      "Id": "fa97876a33c1480fb26bedba55bdb22a",
      "IsHidden": "False"
    },
    {
      "Start": "629ffe25cf17471f8ab4c5eb9445b96d",
      "End": "4e9af6e1f16a4ad19cd56edde9e83408",
      "Id": "7697d1711c0a47d1aed8f3ba23a1ceb5",
      "IsHidden": "False"
    },
    {
      "Start": "842ef689fd6640598c7cbe6605a36a9c",
      "End": "b138e06cf6dc4fdf88bcf2223082e5a0",
      "Id": "ae0d645d5ce5461cba904a75b864620d",
      "IsHidden": "False"
    },
    {
      "Start": "b6581550a4d1490aa862e6ee85d369eb",
      "End": "aaf2a3640b954177bb6d584003a226c9",
      "Id": "1bf99df28e834197802d0bac2bca8bb1",
      "IsHidden": "False"
    },
    {
      "Start": "c6d9235b2535427db3c9dc6f7730f968",
      "End": "307e61bafb3a42efa365e24858be550d",
      "Id": "bcf3d1391d9f4d44817c49af87474a66",
      "IsHidden": "False"
    },
    {
      "Start": "59ceb467fb5c46a79c99f556e3a8f6bf",
      "End": "86d173ef4919478e9bbde75906da1e74",
      "Id": "897672902cee45de9b9a07027118e4a6",
      "IsHidden": "False"
    },
    {
      "Start": "288a9ce25f61442583e5503e22462bae",
      "End": "b145dd1a7bfb44b1b24806d7cea4ccd3",
      "Id": "e6bc8e88acd1456195c31dfe865d774d",
      "IsHidden": "False"
    },
    {
      "Start": "a9ccd890f8ce4806bec6ddbd6d44b7f2",
      "End": "e298df1c31344686bae8480a0fdd716d",
      "Id": "6f72dc18acaa4b98a82df78dfa613d49",
      "IsHidden": "False"
    },
    {
      "Start": "4e100a640d164e90bf1534f5ded167f3",
      "End": "20168db002f24d18a15b2866e781f003",
      "Id": "8e406679ec0b49e5a74b085949c61a5c",
      "IsHidden": "False"
    },
    {
      "Start": "64fb67532d12468b993457c8bb963615",
      "End": "16af7bb79c66430ca2a20ff6b1fc3594",
      "Id": "d6c58b43a3944f9f86905fba4b1fd375",
      "IsHidden": "False"
    },
    {
      "Start": "97e910d279b341ac8f1d83ddff20c71e",
      "End": "3e739d1955f646d2a1bebf1a5d790560",
      "Id": "46ad14e0a6a64cdd8bc69ba5e94a1529",
      "IsHidden": "False"
    },
    {
      "Start": "6d151c684111404c9a5687ab57007d6f",
      "End": "0dcfad1180c747828bfbfda0a54bf5c7",
      "Id": "9f8bd579eaf74bf6bd50397b7b2b8470",
      "IsHidden": "False"
    },
    {
      "Start": "4173c40e87ea42cda7be4b9a2891448c",
      "End": "c39b625e3a7440ef9538efce4f5d278e",
      "Id": "91ef86cff8fb4434a913508db58ff37e",
      "IsHidden": "False"
    },
    {
      "Start": "32d92ca3c3a94920b369ef61860ce1ea",
      "End": "1bf5c2881be74bf1ba0bbe5683e19709",
      "Id": "b96e3537786d4f03b6b7d12965880ead",
      "IsHidden": "False"
    },
    {
      "Start": "36c588a5ddc24f33a54c11e33d010471",
      "End": "135b29fa5e084000a37b764fbfb708b0",
      "Id": "de72bbcb74fd438eb21b4e29560ddcb4",
      "IsHidden": "False"
    },
    {
      "Start": "36c588a5ddc24f33a54c11e33d010471",
      "End": "0ffd1c25cb7644fe8a69a4b3aed70645",
      "Id": "777802b2074d48759017f56639acb46c",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [
    {
      "NodeId": "c9cb093e-50e9-4cd4-9452-7dc67fa6d71f",
      "Binding": {
        "ByLine_InClassDecl-1_InFunctionScope-1_Instance0_c9cb093e-50e9-4cd4-9452-7dc67fa6d71f": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 2377.057733744813,
      "EyeY": 23013.011151074465,
      "EyeZ": 21030.520837800032,
      "LookX": 5622.942266255187,
      "LookY": -19263.011151074465,
      "LookZ": -26030.520837800032,
      "UpX": 0.084193423390388489,
      "UpY": 0.91706007719039917,
      "UpZ": -0.38975939154624939
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Grid.ByLine",
        "ShowGeometry": true,
        "Id": "c9cb093e50e94cd494527dc67fa6d71f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6394.8969847644275,
        "Y": 1138.1704376392381
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "4885700bb63746b9bd947d0b44834dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -779.01651599283991,
        "Y": 434.85215748627661
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "32c90d35dc8048fe82032229a24b3dbd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1052.4659950558694,
        "Y": 551.78197711922053
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "6c062b8cac7144408bb25ad9c1888bb7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -398.01651599283997,
        "Y": 434.85215748627661
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "100bfe17f482430d8a1a8cbd8ed947ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 322.43016865158847,
        "Y": 1014.8679941898793
      },
      {
        "Name": "List.Scan",
        "ShowGeometry": true,
        "Id": "aafafb396f4e429da1d426f529c6d4dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 785.34047287511964,
        "Y": 341.54440278768038
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "b5e365d5dfd54c26b758c48954b8d35e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 313.93020768450435,
        "Y": 826.89289017026442
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "3a1b54c1d3b148f09fbc554975d1c456",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -769.55570592146989,
        "Y": 957.55451975931692
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "d64c6461058a45d3a9fa4c04a6641c42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -389.92686495362659,
        "Y": 959.85702082072407
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "41c6d992f4cd44d9917c10920c9c6de1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1024.6036087600553,
        "Y": 1057.755633733675
      },
      {
        "Name": "List.Scan",
        "ShowGeometry": true,
        "Id": "b1cc505961f640149f5fe6a34c4363f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 766.93062436471484,
        "Y": 885.521994974438
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "32c1f5523fe9479aa94d07d3b31a28ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -782.60614548570152,
        "Y": 1519.9673376616506
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "316d878e0fc949fd8e303653900b2512",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -394.66499258551187,
        "Y": 1520.6073763365885
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8ac57812406345e8a8be474d49aebb54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1070.9032960536747,
        "Y": 1635.1306131142328
      },
      {
        "Name": "List.Scan",
        "ShowGeometry": true,
        "Id": "4b2cafee0c5b44948c342b207ca2a342",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 771.9422909067498,
        "Y": 1438.4137924792246
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "929d9fec5db74ee38e4f4019cb21ad71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1246.7376025707993,
        "Y": 925.26454187953266
      },
      {
        "Name": "List.CartesianProduct",
        "ShowGeometry": true,
        "Id": "1a895136736a48b2be082ca22135edb1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1512.1663400823988,
        "Y": 660.01595177775539
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "8f5a09a1890a4631a6ec837492b94768",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1997.8814872437988,
        "Y": 728.0112690146849
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "bbcdb12cd72c417d87212c526b4b70a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1992.4846107132021,
        "Y": 1191.5007717040376
      },
      {
        "Name": "Point.ByCoordinates",
        "ShowGeometry": true,
        "Id": "0aa5bd95284c4ad4bfd0f62c28923b3f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2934.2262931744922,
        "Y": 1159.9616330371098
      },
      {
        "Name": "List.Cycle",
        "ShowGeometry": true,
        "Id": "96cf38cbd54f434e83b2893568405eb6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2486.4222615688122,
        "Y": 1702.2879945895311
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "fc36482f9b15467bb35cb81b6e8df919",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2236.0140386861785,
        "Y": 1608.5534693275633
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "1468de7fc9664d47b1b6cbf5f9072dd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1588.3780384094182,
        "Y": 1261.4000531170243
      },
      {
        "Name": "List.Cycle",
        "ShowGeometry": true,
        "Id": "02452d173cb0492ebef4628a6bf32c2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2498.19012821145,
        "Y": 727.10016591106978
      },
      {
        "Name": "List.Cycle",
        "ShowGeometry": true,
        "Id": "1f3df66d63ae405389f00d653fc7e7d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2499.599183839458,
        "Y": 1202.8371198357481
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "c50f7a7bae0e4aa9a70efb43cd32d7cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3431.5288620943566,
        "Y": 1161.9463422696842
      },
      {
        "Name": "List.GroupByKey",
        "ShowGeometry": true,
        "Id": "f3a9cbeee5cd46f9944c9bf1085e940a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4129.9050173786572,
        "Y": 751.66979324356
      },
      {
        "Name": "Point.Y",
        "ShowGeometry": true,
        "Id": "61a0df1c95914c449030014daac8b4ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3815.761485383488,
        "Y": 879.31792453489334
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "1562dc5f83f44655ba6b178a3d92f2f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4490.7294786726134,
        "Y": 707.15034501162586
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "a9d675b813c7470cbbe1d6be16b94a9b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4489.9969736475878,
        "Y": 954.737043470064
      },
      {
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": true,
        "Id": "a730e86b618f4b9982b5b32badaf8470",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4786.1376314049357,
        "Y": 836.60887874456284
      },
      {
        "Name": "List.GroupByKey",
        "ShowGeometry": true,
        "Id": "02caa33955784c1bbc582335ae68d477",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4153.4113488347539,
        "Y": 1351.3242899770539
      },
      {
        "Name": "Point.X",
        "ShowGeometry": true,
        "Id": "65335990d7e14a5abd69e4dbb1a3a863",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3842.3884670984016,
        "Y": 1444.7127271317206
      },
      {
        "Name": "Line.ByStartPointEndPoint",
        "ShowGeometry": true,
        "Id": "516204527de9480da430a098d62aeee5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4785.3467322541346,
        "Y": 1410.0093776185965
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "6208e851872c40d98bb6bb0a546a9688",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4473.6534566588434,
        "Y": 1284.6221246014095
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "9ea1c1eb8e3c414eac53a3f0d922920f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4472.9209516338233,
        "Y": 1532.2088230598395
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "5529b30a5ac54f26ab134a4ac49a0663",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1435.8279824160618,
        "Y": 434.85215748627661
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "7acadea4516e4dc391f83174a2e06924",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1439.1714126667553,
        "Y": 957.55451975931692
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "efb22f4b9377436c8b9cc1534b472445",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1444.6129034902997,
        "Y": 1519.9673376616506
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "30f9a69172ff4498b1167e2da7d8375f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5287.5699798095638,
        "Y": 1139.4032613103529
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c6f21a2680f04c939b1d27d674b23572",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -38.2267490098759,
        "Y": 431.69794455304782
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "76116fd1885943b8a8379f6e9bac4fd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -36.846033937402581,
        "Y": 960.33645472776652
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "954b6b265d6d496dae42ac9cf4e171fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -19.377361884028687,
        "Y": 1526.7822836769149
      },
      {
        "Name": "Curve.ExtendEnd",
        "ShowGeometry": true,
        "Id": "72c153cc9bbe49c9a5c4687939b59cf0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5710.3809431345262,
        "Y": 1139.4032613103529
      },
      {
        "Name": "Curve.ExtendStart",
        "ShowGeometry": true,
        "Id": "5040179f47d64eb69142b33a5e1c9473",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6023.3809431345262,
        "Y": 1139.4032613103529
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "eacb279a75fd4122aaa67973eef1c8e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5532.665270397024,
        "Y": 1319.334642338526
      }
    ],
    "Annotations": [
      {
        "Id": "696773b761b0455cb1b1578ebb169b11",
        "Title": "문자열 분할",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -369.70669066540495,
        "Top": 260.60318390960083,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6ac5411d8c3b4956962a12dcc3e9d7d7",
        "Title": "누적 연산",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 757.25518116790636,
        "Top": 261.03729558163968,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3b4d0a19575643aeb2d04a2e27766e66",
        "Title": "좌표 조합",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 1881.8524958593102,
        "Top": 279.64233844418555,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "32341061fcc24146a3710499b976af3e",
        "Title": "점생성",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 2994.939813542323,
        "Top": 277.3079792644283,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e118dbf146e84c7786c0492e4df4979c",
        "Title": "저층 포인트 군 추출",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 3479.9469799449953,
        "Top": 265.71389055351955,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "dff8f94872b849d6b40fa60a7cc0f22d",
        "Title": "x,y 좌표 기준으로 그루핑 후 그리드 레퍼런스 라인 생성",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": 4457.29660171495,
        "Top": 254.19306986467922,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -5957.0122737424,
    "Y": -201.73313646838977,
    "Zoom": 1.4742014790846409
  }
}