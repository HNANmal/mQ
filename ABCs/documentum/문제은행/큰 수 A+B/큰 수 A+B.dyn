{
  "Uuid": "517a38b2-a416-4230-8515-5574841b9c33",
  "IsCustomNode": false,
  "Description": "",
  "Name": "큰 수 A+B_",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"9223372036854775807 9223372036854775808\";\n\"56 77889\";\n\"77889 79\";",
      "Id": "45ea2418aa944907a97f585e19496019",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5ec8f91d82d14cea9bed0b18cd5c7380",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0468d4832cef402eb87f860b7eec9792",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5cd6dbe898364c57b340c74e295252f3",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "ef6a9dffd4844409809243bcc0ee14fa",
      "Inputs": [
        {
          "Id": "6a7f2732d7234c0f8457044072bd030f",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0cbb976a6b384a24b02f37152b54b18e",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1d36114573d4289a938e401d921f584",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "a1ecba67a0f8408ab80b85375ad13f49",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9fcef91eb32c4817b4b39718e1a9b239",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "a0fed1c4aa6f48b8935cd026bf8ec38c",
      "Inputs": [
        {
          "Id": "9b6487a3a8fe41a8b36c5dbaa21c5662",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1a36c5c2a77146eea8bb95cdcbab8acb",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3dd88a6c6b14c08a0c180cd4493224a",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "6c45f18c56f6461dab0107d0c7a6cc42",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c3f758e6b07c48debe87ffddeeaece68",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "943f406ea6f14c4585571c25b19b8c98",
      "Inputs": [
        {
          "Id": "16a1e37989a844af833e6762e0291811",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08eb33f7d5cc48a1aefb3dfcaccf3b98",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "50069485cef645e2aed53faae4419f2c",
      "Inputs": [
        {
          "Id": "d7bbbe38fcf14dccbacbd52a0cf8aa23",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29af643b98ad404e9f18d715188eff3c",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "11501c7ea63e4533aea728cb68c8c09f",
      "Inputs": [
        {
          "Id": "4c117dda71f34528b01dd28a4dabc98c",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c752f8c2cdca4b4a9c5b7a5d646c47a2",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "0c843c14f0a441d68b611a5428bb1da0",
      "Inputs": [
        {
          "Id": "5f100867051140fc831b5c90dd50710a",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd51a2b7862a436f9d223c5a0f40d329",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "f0e2f6830b8c4194b665f6709fa5a84d",
      "Inputs": [
        {
          "Id": "7765cec369aa4e38abf2546ae79b30a0",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dcb055a64de94cacb7145e8b69eef4bc",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c57fec1849d4fbdabb8c1b44827d3eb",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "d3d80be57fe24360a2cf0c83f2d4af83",
      "Inputs": [
        {
          "Id": "10382c1b7cd44f2b94a1b9de3e8fcd91",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8581e2b139a54050bcce53cb8cd9d192",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6855e7194409410292c64e1384b9c030",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\".\";",
      "Id": "c90cb4d9fdec490ba5f27d638e66cf04",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a4ff8a30efbf4f808be8ab04bac129cd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "d388832b47b347bebc737da8b3c458af",
      "Inputs": [
        {
          "Id": "5b118d38ca1a4f4990c72d6a9f92acbf",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9bd196a3e8ac44968d7a7c315cd8e3bf",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "2e2ab80676c94b949c010d28c88d35c5",
      "Inputs": [
        {
          "Id": "03257afc5d3b4f81a259ea9716627df2",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a409c0307794099b12907f1936bec05",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a23fd90c9094faeb7d0b839a95ebc7d",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"0\";",
      "Id": "1e9f28fc89c240348cf585b1c77a1b92",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "42e46ccd408e4f17baa524506992053e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c032343ce36b40d0b00155bcbe4a0408",
      "Inputs": [
        {
          "Id": "149119babe34410bad272de93f78ba6d",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0bf5742863264aa69d3827bfcdc3665a",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c6941877484549b1a108eed606708dc9",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9560c6320b344443b226a78f069a9fa9",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i==2;",
      "Id": "5dc04acc961e48e58d136fb9c4b0abfb",
      "Inputs": [
        {
          "Id": "a806431402134e3ba6140bf64539eb09",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ca4913c96c345009773e319c1b56aba",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "8d70ee148b914f8ba45770119036b6e2",
      "Inputs": [
        {
          "Id": "4c40ab1f3da54c25850be52cc00531d6",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e31b2d9b3f148beb43902b39c9c1a74",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f14fb7abe044e5aa311581e77408998",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "92ea8acbb11b4838b2095fe6cfeeaae5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f08777b9d8ca44d78b09b337b2c998c3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "4dcc6ba3461d49a4bf6eae99b3879fcd",
      "Inputs": [
        {
          "Id": "7594f0794e61469d9d06043aa97ef5b1",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94e92f1ef30d448b85facb0cb9189d45",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1fa2b1220a24e569b8dbe3564002316",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "b2a001894663459e812f3cb04299c4b6",
      "Inputs": [
        {
          "Id": "42411b96f01646828b701d2479df3973",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b01cd3150984b7ca885155137126fbd",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "deeae0f52cd0439dbdcb5ead80f09e85",
      "Inputs": [
        {
          "Id": "0289c7be7acc4c59ab51a4f361db1fc4",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25c67636cde343adbfac24515a2f9eee",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd2eab8f5e714aee9200f0bda80cccb9",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "7dd0ebcad9c746b7bd14476eecb5f8a0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8aae9e43d1b043608af4e4e0318587be",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "1e297300b30c437ebf5abbf4f1c4ad6d",
      "Inputs": [
        {
          "Id": "972d3ed6591449d394e43c64bcf25c89",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "42d131a81b554fd0be1c1f21b856cabd",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6eb50ddf1444b5f91765a08fdcc9eac",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Id": "219891f6f1744749b49e46f88cc600d0",
      "Inputs": [
        {
          "Id": "c63b1cdeaabe4c60b9bb411a449c2e94",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d760a2a06d149b890fbc2be5c57f286",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1001d47189314db4a926c4fc18f37b08",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0];",
      "Id": "65576c708ed3426f904db63db5ca1efd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "74d003f7c4ad4119b31fbbb2ba120ea6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "9e8c057cd92744199b369a0c79e69633",
      "Inputs": [
        {
          "Id": "6c502933b2424dfa91a1cb13b9d58219",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2621f5480e574e46ab9e51da00f1aecd",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Reverse@var[]..[]",
      "Id": "165cf31cd4664ae08f8f8917ab1e58a2",
      "Inputs": [
        {
          "Id": "9db7269dc54a4b5d8753fe5e2b36b6f5",
          "Name": "list",
          "Description": "List to be reversed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0821c686f76048fc9248231b17a1d4c9",
          "Name": "list",
          "Description": "Reversed list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing the items of the given list but in reverse order.\n\nList.Reverse (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6be598055d7b484b8c49b09929ac688d",
      "Inputs": [
        {
          "Id": "640ea397f3d746e280aa2e0460cdb173",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "209332c700b94082be6b3faca02f558e",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "7a0bbbad7e9a42a9af6282fe84a43fda",
      "Inputs": [
        {
          "Id": "ebc4568b37d04051aa105ac9e1709ced",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6334109c5acd4d888d1381ff53353b3b",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "764f2b3a79c7433aa35c5d1c18109542",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "6e4282131646461c81b3c87419274325",
      "Inputs": [
        {
          "Id": "f22e6e8772624d138e90ef2da673b8ff",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d15388c6d663483cb7012f3090659425",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a9bcbf725144a50b14633c22382b9e8",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\".\";",
      "Id": "34c5d04c3f684858b28d9b8adf3c2500",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a26f13d8f70b4fb48228e4b71e4e9360",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "84bf0c44795a4f0f8aa5c427b7b4ef28",
      "Inputs": [
        {
          "Id": "26de0248ce094154aae2e8d1979f85d6",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22cded02749e42e78fe9d611b0533fb8",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "b8cd4437a3ac44458c1c584049d3f2d6",
      "Inputs": [
        {
          "Id": "d5ab9e6617da4c7a8b1c91bd11b1f1f7",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3796782bd8484da090fcccc8a2ffa62e",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "dd135f409f5c48baa9e8c0802ac0968e",
      "Inputs": [
        {
          "Id": "76643ad4e0484d779a1612bb48b27bff",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "419871de135f4db79e5682d801c5f824",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "10d38a92f3094dceb1e4279e61cfd520",
      "Inputs": [
        {
          "Id": "3e651b7576a5450abc44b216a7a75199",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5eff75eb4f4646df843c7b66f516d50b",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "1af743a500814fbd92c76d63d51d5527",
      "Inputs": [
        {
          "Id": "d17a9402d73a4da69053b1e7044a5298",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94ec903ef1164741a6e7f9635e86c2d3",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a51c1c2e03e43cba6a196a5f126b1da",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97fec4133a7d438987006a606baae8e4",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "e4535a0112cf46d5aeb152916b7a8d94",
      "Inputs": [
        {
          "Id": "87ff7e8ee3324c90a79892d302fde3ed",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3ad6d599a914aac997c03bb950ff128",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i!=0;",
      "Id": "9449cd0f54164ebe8ca239d97a68bcd3",
      "Inputs": [
        {
          "Id": "b9ef05c3ab05434ba643c062b20454fc",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "324942008dcb4e03b2d5682e17bf5558",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "b9ee451de97f4f6fbe9abbe72e153eba",
      "Inputs": [
        {
          "Id": "97eafde7da44405e9a2bb4686605a3aa",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "192e2b117cdb4f71bcd7c8c6d0e7e37a",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8052e9e257824e3d977dbf573db592f0",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "4cfc65e149a04a6fb08985fd8b92fec4",
      "Inputs": [
        {
          "Id": "47dfb89edf434a2e9c25a4f51f508041",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec1e49fe4d12469d8b12da46035962d5",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Replace, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c9f4576a00684c0b9c1825fde57188f2",
      "Inputs": [
        {
          "Id": "0dcc63218ae1478b9aa5b4a66e805799",
          "Name": "item",
          "Description": "Item to potentially be replaced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fbcefc9ad641428d85991832656ef301",
          "Name": "replaceWith",
          "Description": "Object to replace with",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "010f2bcd36bd4e58b8c7ec2e807e2f82",
          "Name": "condition",
          "Description": "Replacement function used to determine if an object should be replaced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6cb13e7583a4499fa5279da8e101743d",
          "Name": "var[]..[]",
          "Description": "Item, or list of items where condition was used to replace with item given in \"replaceWith\"",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Replaces an object with a given substitute if the original object satisfies a given condition."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "c4754dd68ee542a5a5261ba4e6e54275",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e1b7ffb72fa940f4ba666ccf6b58e666",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Reverse@var[]..[]",
      "Id": "e018743a34b542cea539ddd7835eb032",
      "Inputs": [
        {
          "Id": "1cd05ccf41a54a76adecb33cf34969ca",
          "Name": "list",
          "Description": "List to be reversed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "002d457e13eb46bc937e08beb7901d20",
          "Name": "list",
          "Description": "Reversed list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing the items of the given list but in reverse order.\n\nList.Reverse (list: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "5ec8f91d82d14cea9bed0b18cd5c7380",
      "End": "6a7f2732d7234c0f8457044072bd030f",
      "Id": "cc1580704f8243e9b3aeafa9503b70a9",
      "IsHidden": "False"
    },
    {
      "Start": "a1d36114573d4289a938e401d921f584",
      "End": "9b6487a3a8fe41a8b36c5dbaa21c5662",
      "Id": "dd88f2f1f9c34cdd88fb01dda2ddbdae",
      "IsHidden": "False"
    },
    {
      "Start": "a1d36114573d4289a938e401d921f584",
      "End": "76643ad4e0484d779a1612bb48b27bff",
      "Id": "1914410731e54eb7a0ab532cf9ccf5fa",
      "IsHidden": "False"
    },
    {
      "Start": "9fcef91eb32c4817b4b39718e1a9b239",
      "End": "0cbb976a6b384a24b02f37152b54b18e",
      "Id": "6e599b01f4c84dbf8a7b2e105c3053d4",
      "IsHidden": "False"
    },
    {
      "Start": "e3dd88a6c6b14c08a0c180cd4493224a",
      "End": "4c117dda71f34528b01dd28a4dabc98c",
      "Id": "73780665430a448d9bb50f3c6b0911da",
      "IsHidden": "False"
    },
    {
      "Start": "c3f758e6b07c48debe87ffddeeaece68",
      "End": "1a36c5c2a77146eea8bb95cdcbab8acb",
      "Id": "c0ba8396a50b48719d1414d88d88daaa",
      "IsHidden": "False"
    },
    {
      "Start": "08eb33f7d5cc48a1aefb3dfcaccf3b98",
      "End": "0dcc63218ae1478b9aa5b4a66e805799",
      "Id": "143ba720912c4e1b9fd32c26c0461df8",
      "IsHidden": "False"
    },
    {
      "Start": "29af643b98ad404e9f18d715188eff3c",
      "End": "5f100867051140fc831b5c90dd50710a",
      "Id": "80181fd523b245f88f73f741ae29c302",
      "IsHidden": "False"
    },
    {
      "Start": "c752f8c2cdca4b4a9c5b7a5d646c47a2",
      "End": "1cd05ccf41a54a76adecb33cf34969ca",
      "Id": "0472d7b8c6b14777b08317cfcacf8cb0",
      "IsHidden": "False"
    },
    {
      "Start": "dd51a2b7862a436f9d223c5a0f40d329",
      "End": "10382c1b7cd44f2b94a1b9de3e8fcd91",
      "Id": "27f48465f3764f80a9ec8c8f69b549ff",
      "IsHidden": "False"
    },
    {
      "Start": "dcb055a64de94cacb7145e8b69eef4bc",
      "End": "5b118d38ca1a4f4990c72d6a9f92acbf",
      "Id": "2cd3cab33a2c4473b1aa3a203c825852",
      "IsHidden": "False"
    },
    {
      "Start": "dcb055a64de94cacb7145e8b69eef4bc",
      "End": "3a409c0307794099b12907f1936bec05",
      "Id": "e4b05e3f7f594eb598df28e41b9c8977",
      "IsHidden": "False"
    },
    {
      "Start": "dcb055a64de94cacb7145e8b69eef4bc",
      "End": "0bf5742863264aa69d3827bfcdc3665a",
      "Id": "7b29a7e093614da5ac9fd38c877ead40",
      "IsHidden": "False"
    },
    {
      "Start": "6855e7194409410292c64e1384b9c030",
      "End": "7765cec369aa4e38abf2546ae79b30a0",
      "Id": "4b25b778ac894af2a0bfe1d69a2d6083",
      "IsHidden": "False"
    },
    {
      "Start": "a4ff8a30efbf4f808be8ab04bac129cd",
      "End": "8581e2b139a54050bcce53cb8cd9d192",
      "Id": "4468247f7bac4800815dbbb6b0070639",
      "IsHidden": "False"
    },
    {
      "Start": "9bd196a3e8ac44968d7a7c315cd8e3bf",
      "End": "a806431402134e3ba6140bf64539eb09",
      "Id": "385ef6a6b1df4f08a371d1129be7b66e",
      "IsHidden": "False"
    },
    {
      "Start": "3a23fd90c9094faeb7d0b839a95ebc7d",
      "End": "c6941877484549b1a108eed606708dc9",
      "Id": "4a9bc2b8b24f4f02be6d9892188c8640",
      "IsHidden": "False"
    },
    {
      "Start": "42e46ccd408e4f17baa524506992053e",
      "End": "03257afc5d3b4f81a259ea9716627df2",
      "Id": "4973c46792344711abf23caeed5dacd6",
      "IsHidden": "False"
    },
    {
      "Start": "9560c6320b344443b226a78f069a9fa9",
      "End": "4c40ab1f3da54c25850be52cc00531d6",
      "Id": "89dcef7df2d441359fea7020d188430b",
      "IsHidden": "False"
    },
    {
      "Start": "7ca4913c96c345009773e319c1b56aba",
      "End": "149119babe34410bad272de93f78ba6d",
      "Id": "3809b3868a714166bbad15d8fb06605e",
      "IsHidden": "False"
    },
    {
      "Start": "2f14fb7abe044e5aa311581e77408998",
      "End": "42411b96f01646828b701d2479df3973",
      "Id": "66890de8d8774093b803ec902f8c9b88",
      "IsHidden": "False"
    },
    {
      "Start": "f08777b9d8ca44d78b09b337b2c998c3",
      "End": "6e31b2d9b3f148beb43902b39c9c1a74",
      "Id": "ab6cba41e2944d949299d00adea1b6bd",
      "IsHidden": "False"
    },
    {
      "Start": "94e92f1ef30d448b85facb0cb9189d45",
      "End": "25c67636cde343adbfac24515a2f9eee",
      "Id": "a28a2aa572cb43aa8d8a81586b7e87c5",
      "IsHidden": "False"
    },
    {
      "Start": "e1fa2b1220a24e569b8dbe3564002316",
      "End": "7d760a2a06d149b890fbc2be5c57f286",
      "Id": "e5e357ba01c24b54bb474f5e9fdb3bdc",
      "IsHidden": "False"
    },
    {
      "Start": "5b01cd3150984b7ca885155137126fbd",
      "End": "7594f0794e61469d9d06043aa97ef5b1",
      "Id": "fcb479f1c3e64281a131bb36ddfa32cb",
      "IsHidden": "False"
    },
    {
      "Start": "bd2eab8f5e714aee9200f0bda80cccb9",
      "End": "972d3ed6591449d394e43c64bcf25c89",
      "Id": "5f339fcca5f445d3a691389bb0a0cd5d",
      "IsHidden": "False"
    },
    {
      "Start": "8aae9e43d1b043608af4e4e0318587be",
      "End": "0289c7be7acc4c59ab51a4f361db1fc4",
      "Id": "18ccd634cf5c46e98bfbf71b3423da59",
      "IsHidden": "False"
    },
    {
      "Start": "e6eb50ddf1444b5f91765a08fdcc9eac",
      "End": "6c502933b2424dfa91a1cb13b9d58219",
      "Id": "80c843efffc540b2a62e5aae630f81c4",
      "IsHidden": "False"
    },
    {
      "Start": "1001d47189314db4a926c4fc18f37b08",
      "End": "42d131a81b554fd0be1c1f21b856cabd",
      "Id": "a7185bf999ae4da28b738b8f0064d4f3",
      "IsHidden": "False"
    },
    {
      "Start": "74d003f7c4ad4119b31fbbb2ba120ea6",
      "End": "c63b1cdeaabe4c60b9bb411a449c2e94",
      "Id": "3263d057612547b5bf41080b1ad6c13a",
      "IsHidden": "False"
    },
    {
      "Start": "2621f5480e574e46ab9e51da00f1aecd",
      "End": "9db7269dc54a4b5d8753fe5e2b36b6f5",
      "Id": "37fa3ffa43814341a88449f53e700c07",
      "IsHidden": "False"
    },
    {
      "Start": "0821c686f76048fc9248231b17a1d4c9",
      "End": "87ff7e8ee3324c90a79892d302fde3ed",
      "Id": "d478d955c2cd4acfa1d8cec0a2de6f97",
      "IsHidden": "False"
    },
    {
      "Start": "0821c686f76048fc9248231b17a1d4c9",
      "End": "97eafde7da44405e9a2bb4686605a3aa",
      "Id": "3bf8b1b43aa943668ad3011e6acb05af",
      "IsHidden": "False"
    },
    {
      "Start": "0821c686f76048fc9248231b17a1d4c9",
      "End": "94ec903ef1164741a6e7f9635e86c2d3",
      "Id": "90c30ecb07094ef8839a4bad19958953",
      "IsHidden": "False"
    },
    {
      "Start": "209332c700b94082be6b3faca02f558e",
      "End": "f22e6e8772624d138e90ef2da673b8ff",
      "Id": "9d58f3c17a194644b1e2848ac7b3601a",
      "IsHidden": "False"
    },
    {
      "Start": "6334109c5acd4d888d1381ff53353b3b",
      "End": "26de0248ce094154aae2e8d1979f85d6",
      "Id": "4634f7fefcab454785f35601498620ae",
      "IsHidden": "False"
    },
    {
      "Start": "0a9bcbf725144a50b14633c22382b9e8",
      "End": "ebc4568b37d04051aa105ac9e1709ced",
      "Id": "5d7ec12e4e00423d946aa93c2582da84",
      "IsHidden": "False"
    },
    {
      "Start": "a26f13d8f70b4fb48228e4b71e4e9360",
      "End": "d15388c6d663483cb7012f3090659425",
      "Id": "0ec11eba10c241f180d75ec27cb82ddc",
      "IsHidden": "False"
    },
    {
      "Start": "22cded02749e42e78fe9d611b0533fb8",
      "End": "d5ab9e6617da4c7a8b1c91bd11b1f1f7",
      "Id": "29241a0854ea4586a71eb90b6f9f52c6",
      "IsHidden": "False"
    },
    {
      "Start": "419871de135f4db79e5682d801c5f824",
      "End": "3e651b7576a5450abc44b216a7a75199",
      "Id": "a5f730865bd7452596f44d7e6dc3e046",
      "IsHidden": "False"
    },
    {
      "Start": "97fec4133a7d438987006a606baae8e4",
      "End": "640ea397f3d746e280aa2e0460cdb173",
      "Id": "6fe6eb2fa2dc4ec09db8a4e2934df694",
      "IsHidden": "False"
    },
    {
      "Start": "b3ad6d599a914aac997c03bb950ff128",
      "End": "b9ef05c3ab05434ba643c062b20454fc",
      "Id": "434d22238179403991dd1579747ff447",
      "IsHidden": "False"
    },
    {
      "Start": "324942008dcb4e03b2d5682e17bf5558",
      "End": "d17a9402d73a4da69053b1e7044a5298",
      "Id": "15fde93026234fe4861e6d0c4b420d09",
      "IsHidden": "False"
    },
    {
      "Start": "8052e9e257824e3d977dbf573db592f0",
      "End": "6a51c1c2e03e43cba6a196a5f126b1da",
      "Id": "e574fd26b00a41be8467403656bf76bc",
      "IsHidden": "False"
    },
    {
      "Start": "ec1e49fe4d12469d8b12da46035962d5",
      "End": "010f2bcd36bd4e58b8c7ec2e807e2f82",
      "Id": "8562c8f00f174dc98255b85372d0a2fa",
      "IsHidden": "False"
    },
    {
      "Start": "6cb13e7583a4499fa5279da8e101743d",
      "End": "d7bbbe38fcf14dccbacbd52a0cf8aa23",
      "Id": "2527b7848bd84136972c9bc6c66a2d0f",
      "IsHidden": "False"
    },
    {
      "Start": "e1b7ffb72fa940f4ba666ccf6b58e666",
      "End": "fbcefc9ad641428d85991832656ef301",
      "Id": "5e3dd1fee78347f994cb0f90dbc6bf92",
      "IsHidden": "False"
    },
    {
      "Start": "002d457e13eb46bc937e08beb7901d20",
      "End": "16a1e37989a844af833e6762e0291811",
      "Id": "786f110f3a764e1ab5740eac3f789b83",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "45ea2418aa944907a97f585e19496019",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1155.4524937186654,
        "Y": 338.59846484031777
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "ef6a9dffd4844409809243bcc0ee14fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -442.45249371866544,
        "Y": 337.59846484031777
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a1ecba67a0f8408ab80b85375ad13f49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -656.45249371866544,
        "Y": 470.59846484031777
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "a0fed1c4aa6f48b8935cd026bf8ec38c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 95.547506281334563,
        "Y": 337.59846484031777
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6c45f18c56f6461dab0107d0c7a6cc42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -118.45249371866544,
        "Y": 470.59846484031777
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "943f406ea6f14c4585571c25b19b8c98",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 886.19670645380836,
        "Y": 333.30422571211733
      },
      {
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Id": "50069485cef645e2aed53faae4419f2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1820.8659575360634,
        "Y": 355.35928783125286
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "11501c7ea63e4533aea728cb68c8c09f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 386.61739846770229,
        "Y": 337.37274657720229
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "0c843c14f0a441d68b611a5428bb1da0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2157.2487414050056,
        "Y": 355.86124796512513
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "f0e2f6830b8c4194b665f6709fa5a84d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2889.0113447393178,
        "Y": 358.78154966994043
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "d3d80be57fe24360a2cf0c83f2d4af83",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2508.9958207655636,
        "Y": 358.69058392200003
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c90cb4d9fdec490ba5f27d638e66cf04",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2311.6598101059235,
        "Y": 508.1493039688101
      },
      {
        "Name": "String.Length",
        "ShowGeometry": true,
        "Id": "d388832b47b347bebc737da8b3c458af",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3315.200939513546,
        "Y": 192.32959480141918
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "2e2ab80676c94b949c010d28c88d35c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3435.2823932967485,
        "Y": 464.67623572910003
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1e9f28fc89c240348cf585b1c77a1b92",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3242.1365380197071,
        "Y": 585.03510589797133
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "c032343ce36b40d0b00155bcbe4a0408",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3821.8612182024176,
        "Y": 319.675127249261
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5dc04acc961e48e58d136fb9c4b0abfb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3511.7131282342439,
        "Y": 189.83805552029972
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "8d70ee148b914f8ba45770119036b6e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4342.6916526646619,
        "Y": 368.19422233784661
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "92ea8acbb11b4838b2095fe6cfeeaae5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4127.6843224046006,
        "Y": 547.60072469814054
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "4dcc6ba3461d49a4bf6eae99b3879fcd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5218.3260874857006,
        "Y": 425.9061264454138
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "b2a001894663459e812f3cb04299c4b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4833.542324153148,
        "Y": 378.15158913458731
      },
      {
        "Name": "List.AddItemToFront",
        "ShowGeometry": true,
        "Id": "deeae0f52cd0439dbdcb5ead80f09e85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5917.1015120709144,
        "Y": 172.74127173259123
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7dd0ebcad9c746b7bd14476eecb5f8a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5686.9350508532589,
        "Y": 90.614524175877591
      },
      {
        "Name": "List.AddItemToFront",
        "ShowGeometry": true,
        "Id": "1e297300b30c437ebf5abbf4f1c4ad6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6302.5973852534589,
        "Y": 376.21235318273733
      },
      {
        "Name": "List.AddItemToEnd",
        "ShowGeometry": true,
        "Id": "219891f6f1744749b49e46f88cc600d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5817.5979041688588,
        "Y": 762.76086055572614
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "65576c708ed3426f904db63db5ca1efd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5576.62418632379,
        "Y": 865.58374059906873
      },
      {
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Id": "9e8c057cd92744199b369a0c79e69633",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6681.5426100536024,
        "Y": 374.73706658685393
      },
      {
        "Name": "List.Reverse",
        "ShowGeometry": true,
        "Id": "165cf31cd4664ae08f8f8917ab1e58a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6975.0441984564914,
        "Y": 395.13662663264176
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "6be598055d7b484b8c49b09929ac688d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7986.3916381159852,
        "Y": 416.44713975428056
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "7a0bbbad7e9a42a9af6282fe84a43fda",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8644.1120810755529,
        "Y": 448.16195821158652
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "6e4282131646461c81b3c87419274325",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8264.0965571018023,
        "Y": 448.0709924636455
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "34c5d04c3f684858b28d9b8adf3c2500",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8066.7605464421613,
        "Y": 597.52971251045551
      },
      {
        "Name": "String.Concat",
        "ShowGeometry": true,
        "Id": "84bf0c44795a4f0f8aa5c427b7b4ef28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8943.7127625124376,
        "Y": 448.23222209632905
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "b8cd4437a3ac44458c1c584049d3f2d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9722.4572329543535,
        "Y": 810.53862411683144
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "dd135f409f5c48baa9e8c0802ac0968e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -162.31581402521294,
        "Y": -214.9566527237015
      },
      {
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Id": "10d38a92f3094dceb1e4279e61cfd520",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 110.29087104626183,
        "Y": -217.54799379576559
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "1af743a500814fbd92c76d63d51d5527",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7685.1907324926615,
        "Y": 360.99488651033835
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "e4535a0112cf46d5aeb152916b7a8d94",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7247.8248150095769,
        "Y": 206.78556149421098
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "9449cd0f54164ebe8ca239d97a68bcd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7434.8616941455275,
        "Y": 202.38219198001991
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "b9ee451de97f4f6fbe9abbe72e153eba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7283.8900429277292,
        "Y": 493.432669889609
      },
      {
        "Name": "Object.IsNull",
        "ShowGeometry": true,
        "Id": "4cfc65e149a04a6fb08985fd8b92fec4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1252.0747038150198,
        "Y": 618.35762678420906
      },
      {
        "Name": "ReplaceByCondition",
        "ShowGeometry": true,
        "Id": "c9f4576a00684c0b9c1825fde57188f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1541.3737722941933,
        "Y": 415.35477408511281
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c4754dd68ee542a5a5261ba4e6e54275",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1270.0237771664304,
        "Y": 490.17094485492487
      },
      {
        "Name": "List.Reverse",
        "ShowGeometry": true,
        "Id": "e018743a34b542cea539ddd7835eb032",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 654.5553061470132,
        "Y": 331.89813717667028
      }
    ],
    "Annotations": [],
    "X": -1134.8930114800348,
    "Y": 230.43411765674645,
    "Zoom": 0.22336098154337555
  }
}