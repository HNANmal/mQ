{
  "Uuid": "cca2620a-0a33-40fb-9221-df7509cc1a3e",
  "IsCustomNode": false,
  "Description": "",
  "Name": "개수 세기",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "11;\n\"1 4 1 2 4 2 4 2 3 4 4\";\n2;",
      "Id": "d3c7e0bc5f6a410fb80fa0d40ae5c22e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "556e7a5c0d174d3e8cfd18dfc84958c9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c1cfd672da42495b852baff717a1d9c6",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "edc38de2e2e34d3b84c70134c974fa6d",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "11;\n\"1 4 1 2 4 2 4 2 3 4 4\";\n5;",
      "Id": "f757265cbbe64d6085adc820933df23f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b66c8c5a9a014d9aac6ec122c2268495",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f3d24be00484bf99c4e18c882b5feab",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "508f6f99e2e3461296fa5cf63e565057",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "683b8b28f5884447ae8dbbb10dddcab9",
      "Inputs": [
        {
          "Id": "50447942982f478780e90cfe256308f3",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb3184f2388947bf81c70fa2fefcf8c5",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c96cfa15db64bafab07ac4fa732604f",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "f24e51e0b7e9434f94c2d5cd03b7b6bf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d1cb3141b9148a4a2e6c45ed5c61e1a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "dbb86de7d7204e46ab24039ee78a801d",
      "Inputs": [
        {
          "Id": "b9283432e1bf4cce982e41cee49b6c61",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07b6e43375af4febb3a4170e20516f1d",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb6fea2c6ca2477fa635caae1dcf70e3",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "2d9d58679f214b54ae5874fb15dab966",
      "Inputs": [
        {
          "Id": "ce6c39b2892249628a21f27c9b5b971b",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cdebd1f28961406c8a8d5656c05d55b3",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f7b1efc5ff0d44d08bd4614c7deca26f",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05cbf24efd964ceabbb0663617344056",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "44be5b75623c4bafbcc7e25449ce5196",
      "Inputs": [
        {
          "Id": "134b85916caf4c7aac2ce7527be3288b",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba6a03a405d14538988ac04347750c72",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e2c4d3a1da1e4359b615baf6f1e31697",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "220eebacc648442995e77b6df9945275",
      "Inputs": [
        {
          "Id": "b8b29703d3cf4dc5905c252b98176819",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a113e8ac536e4711a14edeabab7a6bc7",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e167d60247f7421eb4271a58c5bc88fe",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "3aea2d0b4e334f269f48e6a06fb40142",
      "Inputs": [
        {
          "Id": "07b0bbff91294fa0b3ed1c4153c3fe9a",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d9d17b6cec04caf94344c2452098ca7",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "9835e2557c5040009eb5dc2a14534b5c",
      "Inputs": [
        {
          "Id": "7c80e972243249f4ba9b90fb0e2f1125",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6f60175546f4446b57aaded0a032700",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "49580a1a7e9945adbd562f347cc45738",
      "Inputs": [
        {
          "Id": "8324f1787b35478c9e0a680888ffc43e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f60f6e12db14b3d97e8105bd5a575d5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8688a3536f949cea3e3f28b7973730d",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "da3eb161d8874035947c94f7d8501cd4",
      "Inputs": [
        {
          "Id": "b2e90db2171b43459f900e312049b507",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06ab5e871e3f4d47b76a36ed2fddc25d",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81b4f54699e04bfa9508fdcac4a37af5",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08469c25f4de402fa97dc810e1592e6c",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "b0be0d5f27ac4bd1a5719d1abf926174",
      "Inputs": [
        {
          "Id": "dc52d3db787f4023a9cd46c719ada497",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78de6424e6af4e2f952297948c9802cf",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    }
  ],
  "Connectors": [
    {
      "Start": "556e7a5c0d174d3e8cfd18dfc84958c9",
      "End": "ce6c39b2892249628a21f27c9b5b971b",
      "Id": "65bfe0b3e71f478fb6398d63af0959ba",
      "IsHidden": "False"
    },
    {
      "Start": "c1cfd672da42495b852baff717a1d9c6",
      "End": "cdebd1f28961406c8a8d5656c05d55b3",
      "Id": "d450a08712b1430fbd1ae3bac5a383c3",
      "IsHidden": "False"
    },
    {
      "Start": "edc38de2e2e34d3b84c70134c974fa6d",
      "End": "f7b1efc5ff0d44d08bd4614c7deca26f",
      "Id": "296258a3033a45ad819be51fb05314c6",
      "IsHidden": "False"
    },
    {
      "Start": "b66c8c5a9a014d9aac6ec122c2268495",
      "End": "b2e90db2171b43459f900e312049b507",
      "Id": "f4bf66161bfd4a3dbe69b1e45e733fc0",
      "IsHidden": "False"
    },
    {
      "Start": "2f3d24be00484bf99c4e18c882b5feab",
      "End": "06ab5e871e3f4d47b76a36ed2fddc25d",
      "Id": "80df7a6cb0704c588241b38ed02e9448",
      "IsHidden": "False"
    },
    {
      "Start": "508f6f99e2e3461296fa5cf63e565057",
      "End": "81b4f54699e04bfa9508fdcac4a37af5",
      "Id": "06baac24951e462abbb330a50d4e9784",
      "IsHidden": "False"
    },
    {
      "Start": "8c96cfa15db64bafab07ac4fa732604f",
      "End": "07b0bbff91294fa0b3ed1c4153c3fe9a",
      "Id": "976a23478f9d44bc8ed94c8ccddea6e9",
      "IsHidden": "False"
    },
    {
      "Start": "2d1cb3141b9148a4a2e6c45ed5c61e1a",
      "End": "eb3184f2388947bf81c70fa2fefcf8c5",
      "Id": "1195a8db7be44b3aa26b7eaf606f706d",
      "IsHidden": "False"
    },
    {
      "Start": "cb6fea2c6ca2477fa635caae1dcf70e3",
      "End": "8324f1787b35478c9e0a680888ffc43e",
      "Id": "3f3a6610ee994c9b99d8fcd7825260bc",
      "IsHidden": "False"
    },
    {
      "Start": "e2c4d3a1da1e4359b615baf6f1e31697",
      "End": "b8b29703d3cf4dc5905c252b98176819",
      "Id": "0471a030c48a4699a8067fcaf4be916f",
      "IsHidden": "False"
    },
    {
      "Start": "a113e8ac536e4711a14edeabab7a6bc7",
      "End": "50447942982f478780e90cfe256308f3",
      "Id": "f18c3060b6d34984af3d8e96766f68c8",
      "IsHidden": "False"
    },
    {
      "Start": "e167d60247f7421eb4271a58c5bc88fe",
      "End": "07b6e43375af4febb3a4170e20516f1d",
      "Id": "706132b276fe4596935a8295e8e5535c",
      "IsHidden": "False"
    },
    {
      "Start": "1d9d17b6cec04caf94344c2452098ca7",
      "End": "b9283432e1bf4cce982e41cee49b6c61",
      "Id": "65a717d8c4144c7bbe8b3f1eedc1383b",
      "IsHidden": "False"
    },
    {
      "Start": "e6f60175546f4446b57aaded0a032700",
      "End": "dc52d3db787f4023a9cd46c719ada497",
      "Id": "548d466ce15a49e88045ac4b0d5a1882",
      "IsHidden": "False"
    },
    {
      "Start": "b8688a3536f949cea3e3f28b7973730d",
      "End": "7c80e972243249f4ba9b90fb0e2f1125",
      "Id": "decac4828be84b1faed2f4fec10ac4e6",
      "IsHidden": "False"
    },
    {
      "Start": "08469c25f4de402fa97dc810e1592e6c",
      "End": "134b85916caf4c7aac2ce7527be3288b",
      "Id": "fc0b88cd816146f29837a5ad48d82aae",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d3c7e0bc5f6a410fb80fa0d40ae5c22e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -361.62273808957957,
        "Y": 296.29980268115992
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f757265cbbe64d6085adc820933df23f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -361.62273808957957,
        "Y": 500.29980268115992
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "683b8b28f5884447ae8dbbb10dddcab9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1053.6332721674041,
        "Y": 364.20351038972734
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f24e51e0b7e9434f94c2d5cd03b7b6bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 833.30427799726158,
        "Y": 283.28162878327157
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "dbb86de7d7204e46ab24039ee78a801d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1778.8613208491636,
        "Y": 437.59655070701729
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "2d9d58679f214b54ae5874fb15dab966",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -43.637814265726433,
        "Y": 283.30568297039372
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "44be5b75623c4bafbcc7e25449ce5196",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 327.80789633407306,
        "Y": 377.83455717656187
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "220eebacc648442995e77b6df9945275",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 546.15088479308542,
        "Y": 433.49156871754951
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "3aea2d0b4e334f269f48e6a06fb40142",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1414.5623163224247,
        "Y": 396.1661194908508
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "9835e2557c5040009eb5dc2a14534b5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2378.952228688177,
        "Y": 438.97578580640305
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "49580a1a7e9945adbd562f347cc45738",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2099.1882197502282,
        "Y": 438.97578580640311
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "da3eb161d8874035947c94f7d8501cd4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -39.71164404266483,
        "Y": 499.81529107469078
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "b0be0d5f27ac4bd1a5719d1abf926174",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2702.9104605213338,
        "Y": 324.329459034513
      }
    ],
    "Annotations": [],
    "X": 135.50675576479921,
    "Y": 488.16817349035188,
    "Zoom": 0.13504138409890631
  }
}