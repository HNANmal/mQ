{
  "Uuid": "da672552-069d-43bc-90cd-0bd10d87bf48",
  "IsCustomNode": false,
  "Description": "",
  "Name": "상수",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"734 893\";\n\"221 231\";\n\"839 237\";",
      "Id": "2f8ca62da57f4912a246bbf7ffc29bdd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "99925a16a551452c9b62982086059828",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af00e1c2033b45d1889b3b153bf10110",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "340c3772835e4246a73c300ea128d89a",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "0f40484f25f14a1daf1f106325c71bbc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "603aba265e004ee28ce2b91b12641c4f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "b6751c48a27c496198564d59a658b899",
      "Inputs": [
        {
          "Id": "b6e6359517144e1887321cd798175efd",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff95953833cb49a298a439b0171f5728",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b0842bba31c4e42903d609a6202b196",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "cbc1282bc92e4891adbfbb32c0dc3165",
      "Inputs": [
        {
          "Id": "e6b9488948e64bbda76ddb6af7505c1b",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2e0566259dd4c9f983672bfe9739f27",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4815121f2a5405a90c4e3535bd9686d",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "29612f2b50994f949eb802022274106c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "683bbd02b6194572b86f49e021ddc6d5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Reverse@var[]..[]",
      "Id": "e1b45204f974428790ad00e0caa78a61",
      "Inputs": [
        {
          "Id": "f601fa38f4b349af9ecd058e17e70ec5",
          "Name": "list",
          "Description": "List to be reversed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84bf5c1294884fefb9000daea6f629a1",
          "Name": "list",
          "Description": "Reversed list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing the items of the given list but in reverse order.\n\nList.Reverse (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "4d91d79b3cd74345a3c1f147fb990fb2",
      "Inputs": [
        {
          "Id": "e41757b5fe9a44fdbdcbed9ef0656deb",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3047894594641eeb8919943042fbcd8",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6a88a01af6894d588a3e1fd17bf96131",
      "Inputs": [
        {
          "Id": "2defd47cb92942cda93d4a219628b76d",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9da0ec5ead524e44b73f1502d27de053",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "f2f184f832374662baec6a05fdfd2b05",
      "Inputs": [
        {
          "Id": "7369a2d27519419aafce07a0fefdfef4",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d33325988d4d45b49b5b7ca3ff3d2f81",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65409be8e8ff4e26af4579a2d826b9b3",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "1ac123c3442c45649714986e5572d4fc",
      "Inputs": [
        {
          "Id": "d80969c5394245caa680b17ba0bcc08b",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "644ffebcb9ac4ecc9ff88f9f6f3f65da",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "609747ca4f4a48b393fef3ae2efb04db",
      "Inputs": [
        {
          "Id": "dc60968ad2cf49f3b6bb926da2a14e07",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fac0b6165c474bf985ba6080f93d38e7",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "66495b09cdb3438da15e35dfe1646cbc",
      "Inputs": [
        {
          "Id": "1ad23f06776f42ee8e32cb9b999ea011",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a375b4111ad4b2aac24b86c83b221ef",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "d59d94567c0f469e8ab197f8a3d5a218",
      "Inputs": [
        {
          "Id": "1fc7a49c36ee47e08e42c957693e6489",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4e9577a2ae742f8898a9b74a09f1266",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f0a1c18175cd4cbba53b0fec40179de6",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a61ea6b233c4a55a88bdd972d663ea9",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "3d38ab471f7947ad871a17b0a334dbe2",
      "Inputs": [
        {
          "Id": "7be3db2a04f4407e9b66f082ab54b9c4",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e0e6682652c43949aeed68b034f653a",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "340c3772835e4246a73c300ea128d89a",
      "End": "b6e6359517144e1887321cd798175efd",
      "Id": "62d32a0c4643487d8ce2c12fb0e6f929",
      "IsHidden": "False"
    },
    {
      "Start": "603aba265e004ee28ce2b91b12641c4f",
      "End": "ff95953833cb49a298a439b0171f5728",
      "Id": "37a268d57f984dd4b4e9b3fc41e39ca9",
      "IsHidden": "False"
    },
    {
      "Start": "8b0842bba31c4e42903d609a6202b196",
      "End": "e6b9488948e64bbda76ddb6af7505c1b",
      "Id": "257494483e764d79b382609720cd6ae8",
      "IsHidden": "False"
    },
    {
      "Start": "b4815121f2a5405a90c4e3535bd9686d",
      "End": "f601fa38f4b349af9ecd058e17e70ec5",
      "Id": "384b910cec694b1393054829798d96ba",
      "IsHidden": "False"
    },
    {
      "Start": "683bbd02b6194572b86f49e021ddc6d5",
      "End": "b2e0566259dd4c9f983672bfe9739f27",
      "Id": "fb3316073eae474e8bd255da701d846c",
      "IsHidden": "False"
    },
    {
      "Start": "84bf5c1294884fefb9000daea6f629a1",
      "End": "e41757b5fe9a44fdbdcbed9ef0656deb",
      "Id": "97d3c81391344dbd8acbb723e36dfaa2",
      "IsHidden": "False"
    },
    {
      "Start": "e3047894594641eeb8919943042fbcd8",
      "End": "7be3db2a04f4407e9b66f082ab54b9c4",
      "Id": "29a8ffec979d4be0adf2d97ec9424b15",
      "IsHidden": "False"
    },
    {
      "Start": "65409be8e8ff4e26af4579a2d826b9b3",
      "End": "1fc7a49c36ee47e08e42c957693e6489",
      "Id": "1056557f904d40869333670786e199f8",
      "IsHidden": "False"
    },
    {
      "Start": "644ffebcb9ac4ecc9ff88f9f6f3f65da",
      "End": "d33325988d4d45b49b5b7ca3ff3d2f81",
      "Id": "65e454b037734d3da5535d75d970ea5e",
      "IsHidden": "False"
    },
    {
      "Start": "644ffebcb9ac4ecc9ff88f9f6f3f65da",
      "End": "f0a1c18175cd4cbba53b0fec40179de6",
      "Id": "702491f948c8473e9c183fe54c563743",
      "IsHidden": "False"
    },
    {
      "Start": "fac0b6165c474bf985ba6080f93d38e7",
      "End": "7369a2d27519419aafce07a0fefdfef4",
      "Id": "524b9b89e09f4cde99333056e4262aab",
      "IsHidden": "False"
    },
    {
      "Start": "fac0b6165c474bf985ba6080f93d38e7",
      "End": "f4e9577a2ae742f8898a9b74a09f1266",
      "Id": "10c9829a77bf4d6c8bc648495684aa32",
      "IsHidden": "False"
    },
    {
      "Start": "7a375b4111ad4b2aac24b86c83b221ef",
      "End": "d80969c5394245caa680b17ba0bcc08b",
      "Id": "d8669ffe6c5745e3ab94d33039c3be88",
      "IsHidden": "False"
    },
    {
      "Start": "7a375b4111ad4b2aac24b86c83b221ef",
      "End": "dc60968ad2cf49f3b6bb926da2a14e07",
      "Id": "fc628b103e97429f8b2d21e7848ace24",
      "IsHidden": "False"
    },
    {
      "Start": "2a61ea6b233c4a55a88bdd972d663ea9",
      "End": "2defd47cb92942cda93d4a219628b76d",
      "Id": "4ea27f8cd0884443b0ba524525663c24",
      "IsHidden": "False"
    },
    {
      "Start": "7e0e6682652c43949aeed68b034f653a",
      "End": "1ad23f06776f42ee8e32cb9b999ea011",
      "Id": "b3127e50e3fd4c2895175300d38eea9b",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2f8ca62da57f4912a246bbf7ffc29bdd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 81.0,
        "Y": 328.0
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0f40484f25f14a1daf1f106325c71bbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 327.0,
        "Y": 554.0
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "b6751c48a27c496198564d59a658b899",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 525.0,
        "Y": 493.48254954820914
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "cbc1282bc92e4891adbfbb32c0dc3165",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1222.8668909791179,
        "Y": 486.9787725011999
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "29612f2b50994f949eb802022274106c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1018.8424725114635,
        "Y": 574.72411580042331
      },
      {
        "Name": "List.Reverse",
        "ShowGeometry": true,
        "Id": "e1b45204f974428790ad00e0caa78a61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1543.7472308927661,
        "Y": 489.1251292899201
      },
      {
        "Name": "String.Concat",
        "ShowGeometry": true,
        "Id": "4d91d79b3cd74345a3c1f147fb990fb2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1746.5779474268109,
        "Y": 489.12512928992021
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "6a88a01af6894d588a3e1fd17bf96131",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3696.6254717919392,
        "Y": 358.40528834832719
      },
      {
        "Name": ">",
        "ShowGeometry": true,
        "Id": "f2f184f832374662baec6a05fdfd2b05",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3052.05809519354,
        "Y": 334.78902862981806
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "1ac123c3442c45649714986e5572d4fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2695.0334112608707,
        "Y": 545.76872398779381
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "609747ca4f4a48b393fef3ae2efb04db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2696.0334112608707,
        "Y": 418.76872398779381
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "66495b09cdb3438da15e35dfe1646cbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2336.8839139251345,
        "Y": 488.52924950267118
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "d59d94567c0f469e8ab197f8a3d5a218",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3347.7771316919384,
        "Y": 449.1963986622074
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "3d38ab471f7947ad871a17b0a334dbe2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2054.5956128625307,
        "Y": 489.59336857965309
      }
    ],
    "Annotations": [],
    "X": -249.88340913246478,
    "Y": 153.3111952991022,
    "Zoom": 0.41072431976190171
  }
}