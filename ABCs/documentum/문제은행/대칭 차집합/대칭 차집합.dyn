{
  "Uuid": "590b8668-c34a-4173-a66a-78b04631d9fa",
  "IsCustomNode": false,
  "Description": "",
  "Name": "대칭 차집합",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"3 5\n1 2 4\n2 3 4 5 6\";",
      "Id": "d68d346018d249fc91862a49123ffc1c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cbbc3ccae9e44105b2c609752c38fd74",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "f10281e8aeda48bebf822ceee06771ef",
      "Inputs": [
        {
          "Id": "d0596548cb2648c68d2eb9f2cb210571",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ce0acc6af8594d45ba14dea77f4e457e",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e83f339eee941d4965831525215552c",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "24706dc4c9a64e8b95851d2f3c584423",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "953b03f98833442a8b3a471ee6839221",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "c001e5c6d31a4837a3a42fc8122138f6",
      "Inputs": [
        {
          "Id": "07f05ba0cfd74689af75fe7458aec10b",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ced8eafb928b49db85273bec6612a000",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b2fc04379894520b72d95461aa9fbb5",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "1d40b3a9a1ab4953a887ad33b2ef05b7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "42800d8e35a248479fa9b9c5f3daca74",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "613bca73bfc54a0bac6b6555afb6dece",
      "Inputs": [
        {
          "Id": "4d05456c9c2d4cf8827878a3419b7758",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "518eae5978eb4593a44a1a3b171fcfd6",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "e6186f432cee4a09b3331ce0a7e4267f",
      "Inputs": [
        {
          "Id": "dad168e84b7747d48646687f94f4506d",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85cfdabb203f40b29b5f373f2429b923",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58b07956eb094567b9ea862d5e91fff5",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "950a42d31e6c478c8cc09cefc029188c",
      "Inputs": [
        {
          "Id": "88bc030aafb94ae1941965d76e6f3f98",
          "Name": "list1",
          "Description": "List of objects to be included in the new list\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6318ed0f083f4749b0b786954b34038f",
          "Name": "list2",
          "Description": "List of objects to be excluded in the new list\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed35f227a0404ccbb57a347fc189f331",
          "Name": "list",
          "Description": "The new list that contains objects in List1 but not in List2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns a new list that includes objects in List1 but excludes objects in List2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "adb4afbf8a554cc68a288decef95cf3c",
      "Inputs": [
        {
          "Id": "2591b40b80c8480e9c1adab2e3161914",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3be865f17794452bbbb11aa0bed49652",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "2ffcc84ca37e42c7b8c1771e0d4954b9",
      "Inputs": [
        {
          "Id": "3183fc94dac1493397fd78b742157dd8",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb6365cb96b74e64ba0ca84c17dcedf6",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "28b532477f4f4f558ca233a40271e10e",
      "Inputs": [
        {
          "Id": "a54538da58be42e8bc1d8c15f0a43a3a",
          "Name": "list1",
          "Description": "List of objects to be included in the new list\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4dfc133edf84e44977f7996ddc6a025",
          "Name": "list2",
          "Description": "List of objects to be excluded in the new list\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "898441d2f97244039ffd126c54b12322",
          "Name": "list",
          "Description": "The new list that contains objects in List1 but not in List2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns a new list that includes objects in List1 but excludes objects in List2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetUnion@var[],var[]",
      "Id": "8615c4b40ca749ddbe000fed8c2806ba",
      "Inputs": [
        {
          "Id": "67f5d02e008747a59d21fc7174c6b153",
          "Name": "list1",
          "Description": "List of objects to be included\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3852cc4c9534e9bab7f0b194c773fa7",
          "Name": "list2",
          "Description": "List of objects to be included to List1\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0150723f6f1841d89bc94c3ea51dbcad",
          "Name": "list",
          "Description": "The new list that contains objects that are either in List1 or List2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns a new list that includes objects that are present in either List1 or List2.\n\nList.SetUnion (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "1cb8f4e84de84826a12f9f73a185954e",
      "Inputs": [
        {
          "Id": "626d575c314b4177b333591de1192be6",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bcfebc3b4fc44e848445b109e593d1b8",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "0501eeacecf24e658bc2080bd6a141f2",
      "Inputs": [
        {
          "Id": "b3a6732f2bd842cb8e5e5e851bf3649f",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b14a914929a46d0a3759c166055acfc",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    }
  ],
  "Connectors": [
    {
      "Start": "cbbc3ccae9e44105b2c609752c38fd74",
      "End": "d0596548cb2648c68d2eb9f2cb210571",
      "Id": "d58fc5fe590b414aa54b9b36fb4c8af9",
      "IsHidden": "False"
    },
    {
      "Start": "2e83f339eee941d4965831525215552c",
      "End": "07f05ba0cfd74689af75fe7458aec10b",
      "Id": "b5fa6105ac8c4e4d82860e2e27ed31a6",
      "IsHidden": "False"
    },
    {
      "Start": "953b03f98833442a8b3a471ee6839221",
      "End": "ce0acc6af8594d45ba14dea77f4e457e",
      "Id": "9e37e26baa0a4112a3724520e46ba675",
      "IsHidden": "False"
    },
    {
      "Start": "4b2fc04379894520b72d95461aa9fbb5",
      "End": "4d05456c9c2d4cf8827878a3419b7758",
      "Id": "b6c1d3506a594e229450d5149aa79800",
      "IsHidden": "False"
    },
    {
      "Start": "42800d8e35a248479fa9b9c5f3daca74",
      "End": "ced8eafb928b49db85273bec6612a000",
      "Id": "62c85d3107074b4e89770fc837b057ee",
      "IsHidden": "False"
    },
    {
      "Start": "518eae5978eb4593a44a1a3b171fcfd6",
      "End": "dad168e84b7747d48646687f94f4506d",
      "Id": "09fa0da6836f4ad89d41d7e72bd49b50",
      "IsHidden": "False"
    },
    {
      "Start": "58b07956eb094567b9ea862d5e91fff5",
      "End": "2591b40b80c8480e9c1adab2e3161914",
      "Id": "2ae2bfbf431a4582ac38ea7a09577c8e",
      "IsHidden": "False"
    },
    {
      "Start": "58b07956eb094567b9ea862d5e91fff5",
      "End": "3183fc94dac1493397fd78b742157dd8",
      "Id": "b2e8a9107a1b40f2a3ca2ac300ad3d6c",
      "IsHidden": "False"
    },
    {
      "Start": "ed35f227a0404ccbb57a347fc189f331",
      "End": "67f5d02e008747a59d21fc7174c6b153",
      "Id": "ab97380d3aa24c90a36c01fc8b10cb2c",
      "IsHidden": "False"
    },
    {
      "Start": "3be865f17794452bbbb11aa0bed49652",
      "End": "88bc030aafb94ae1941965d76e6f3f98",
      "Id": "26983c46c3da435a81a8d36d8fb93d41",
      "IsHidden": "False"
    },
    {
      "Start": "3be865f17794452bbbb11aa0bed49652",
      "End": "c4dfc133edf84e44977f7996ddc6a025",
      "Id": "3ca36123c0e145739763f0035b0b21ff",
      "IsHidden": "False"
    },
    {
      "Start": "cb6365cb96b74e64ba0ca84c17dcedf6",
      "End": "6318ed0f083f4749b0b786954b34038f",
      "Id": "80ad4edac56044d6bb3ea81e8cb4bf69",
      "IsHidden": "False"
    },
    {
      "Start": "cb6365cb96b74e64ba0ca84c17dcedf6",
      "End": "a54538da58be42e8bc1d8c15f0a43a3a",
      "Id": "06cf05e217134b63b94dd757d6925796",
      "IsHidden": "False"
    },
    {
      "Start": "898441d2f97244039ffd126c54b12322",
      "End": "e3852cc4c9534e9bab7f0b194c773fa7",
      "Id": "bd13f473e1ff4b60aeb6673d1ebd087a",
      "IsHidden": "False"
    },
    {
      "Start": "0150723f6f1841d89bc94c3ea51dbcad",
      "End": "626d575c314b4177b333591de1192be6",
      "Id": "1ea0b32d260b4447b5c11685c4d204fe",
      "IsHidden": "False"
    },
    {
      "Start": "bcfebc3b4fc44e848445b109e593d1b8",
      "End": "b3a6732f2bd842cb8e5e5e851bf3649f",
      "Id": "46a7087e21124f94b9f882eb6346670d",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d68d346018d249fc91862a49123ffc1c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 52.0,
        "Y": 411.0
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "f10281e8aeda48bebf822ceee06771ef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 515.0,
        "Y": 410.0
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "24706dc4c9a64e8b95851d2f3c584423",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 319.0,
        "Y": 497.0
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "c001e5c6d31a4837a3a42fc8122138f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1031.9806149790224,
        "Y": 412.63718391536611
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1d40b3a9a1ab4953a887ad33b2ef05b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 835.98061497902245,
        "Y": 499.63718391536611
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "613bca73bfc54a0bac6b6555afb6dece",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1420.3847967846161,
        "Y": 367.16481242040646
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "e6186f432cee4a09b3331ce0a7e4267f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1697.9864448793749,
        "Y": 366.62298065153669
      },
      {
        "Name": "List.SetDifference",
        "ShowGeometry": true,
        "Id": "950a42d31e6c478c8cc09cefc029188c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2245.1178506243609,
        "Y": 262.09294660660788
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "adb4afbf8a554cc68a288decef95cf3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1953.4525776725591,
        "Y": 363.64088571620772
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "2ffcc84ca37e42c7b8c1771e0d4954b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1954.4466093176686,
        "Y": 497.8351578060126
      },
      {
        "Name": "List.SetDifference",
        "ShowGeometry": true,
        "Id": "28b532477f4f4f558ca233a40271e10e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2247.5184385808802,
        "Y": 496.6402939712035
      },
      {
        "Name": "List.SetUnion",
        "ShowGeometry": true,
        "Id": "8615c4b40ca749ddbe000fed8c2806ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2526.7883087090381,
        "Y": 387.38467509230196
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "1cb8f4e84de84826a12f9f73a185954e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2779.7097708880897,
        "Y": 401.40150883380738
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "0501eeacecf24e658bc2080bd6a141f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2969.8050143914375,
        "Y": 538.21576114840593
      }
    ],
    "Annotations": [],
    "X": -2049.5948346885366,
    "Y": 160.21171901264552,
    "Zoom": 0.87364640620662737
  }
}