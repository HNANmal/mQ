{
  "Uuid": "cca2620a-0a33-40fb-9221-df7509cc1a3e",
  "IsCustomNode": false,
  "Description": "",
  "Name": "평균은 넘겠지",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\n5,\n\"5 50 50 70 80 100\",\n\"7 100 95 90 80 70 60 50\",\n\"3 70 90 80\",\n\"3 70 90 81\",\n\"9 100 99 98 97 96 95 94 93 91\"\n];",
      "Id": "82ace2e2117b445ead8c0796960b2312",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d466497dc87a49f5b3130bf851bd1ef4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "cfd6bbbe750c46e6aa86f2aaa4c4f1ad",
      "Inputs": [
        {
          "Id": "f47cc592a29d46a18979fe9ebd01af97",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0d942835cc24742b10d83264361269b",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7827a28dd19c4f298126f685daef4694",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "a489445a52e94ca1a086c3b0e6e13b1d",
      "Inputs": [
        {
          "Id": "52237d284ee84ecb9da119dfa2460257",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b978a5c3eea4933bcbdcc247f202d7e",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18116100659a421da0bdf461cefb4e07",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "e056af71f2794c559298f4c5ae1064d4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "38ccc74c75ca4519bd9b97553f525cde",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "c18d89a1809e4b20aec4fb09e7ccf290",
      "Inputs": [
        {
          "Id": "00e4664d9a3b4c8b8c785b39f38fccfd",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f625e49ee38344c3bbdaee668c08d669",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "56f2b3e4c74a4b8cb105a328d8d5a788",
      "Inputs": [
        {
          "Id": "3f34d9a4596c4f09a9cb83a6fab524f3",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d35926e35d74202a1d00b5e841e3420",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59eafd7dcbad488184d2b0586420a17c",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Average@double[]",
      "Id": "cd0f893d53d54ced8b8f02ba981ec595",
      "Inputs": [
        {
          "Id": "4a89d93726ce45718baeb2b804899db3",
          "Name": "numbers",
          "Description": "List of numbers to be averaged.\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6931d971b11246888c98499d6ccb4d17",
          "Name": "double",
          "Description": "Average of the list of numbers.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Averages a list of numbers.\n\nMath.Average (numbers: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "232081121b2142dab0c5a578fe838734",
      "Inputs": [
        {
          "Id": "98ad264d1d1c4e9d8f2d8a6e765dd772",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b25a0fa1ed44be68efe22ef40cd5e22",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edeffa4b91ca458fa4e524c91aec09ad",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c30d486bf9543fba6b99c3879dd46e8",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "studentsNum;",
      "Id": "4816d969ea144b388b825b1a78c89415",
      "Inputs": [
        {
          "Id": "9b6c6073991149199d681b9b0ca32d3c",
          "Name": "studentsNum",
          "Description": "studentsNum",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb51b9e0b2ad440bb1f3a3c3de4be5a9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "933a8c08b3914f218b0fe164034354df",
      "Inputs": [
        {
          "Id": "aef00122f42f46da97bfe388b5003de9",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1d0562349e44ceaa2cd0271e064919a",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "440b50eabace437c9f11d6ae16a989e7",
      "Inputs": [
        {
          "Id": "32aff8e8862742dab6efedc8677f93c5",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96b77ce9235a4b21b571cec30d009d4d",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e5139e2fcd8d4958bb079e5f521819f9",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "f7540880c32e4442bc0af2c4ca459fce",
      "Inputs": [
        {
          "Id": "7b1dabd5e3a9490daca763baf09750b5",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31fa0b3ff47a400782f97f886ed2c56e",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "652c8bf8ccfe4e11931a16dda49a77cb",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "100;",
      "Id": "bffce7a519304acf9716f3d8e413d7b2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4a76c03164e428383e268c92a1d50c6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "53339510e8504fe4a9b4af3cfd824587",
      "Inputs": [
        {
          "Id": "748892f8c25e4f64a1162d10d7c2dd42",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38cc9e3d6012427db0892573ad5d481f",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b34d27192a245dbbf4b51889999dbe3",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double,int",
      "Id": "e7feb67ea1ca4c1fb84efc82fa2e08fe",
      "Inputs": [
        {
          "Id": "2055f182c0a442ebb2bb9f5e47315beb",
          "Name": "number",
          "Description": "Number to round\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2fe9c239942649819f3a38e064fb624d",
          "Name": "digits",
          "Description": "Number of fractional digits in the return value\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9c7bf75abec45ad8b0b161f70dc3fc3",
          "Name": "number",
          "Description": "The number nearest to value that contains a number of fractional digits equal to digits",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to a specified number of fractional digits.\n\nMath.Round (number: double, digits: int): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "275e10a6eb0f4235b33e60bf9f956f47",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2eebba83bac94413a395727de5502026",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a8335f51bb7a454285988d070a9b000a",
      "Inputs": [
        {
          "Id": "4c1729635b9b4d4f8b4ab7f95a3ad13d",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bba7c6046f7743b0bb3fb3e91b75a5b5",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Remove@string,int,int",
      "Id": "83e0121fdc7c4eacb73b17dad1ff5cfc",
      "Inputs": [
        {
          "Id": "06a80cc0cab0499a9b636ca5ecb2c9dc",
          "Name": "string",
          "Description": "String to remove characters from.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "431fcd5adac6464d932d12534dcbc955",
          "Name": "startIndex",
          "Description": "Index at which to start removal.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80679a9bc80d403d85b73b8049d5f762",
          "Name": "count",
          "Description": "Amount of characters to remove, Note: if the Count is negative, the removal process goes from right to left.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4dd39b4a411c465a95801ab2dd76893a",
          "Name": "string",
          "Description": "String with characters removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes characters from a string.\n\nString.Remove (string: string, startIndex: int, count: int): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-1;\n-3;",
      "Id": "02763fe3a90346d78c4a771526eb1081",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d237d44d3fc54703a31c7a3764d46305",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c7bfcb1b2b64d6590dd1ab4d87d12c3",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Join@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "5fcb92fc56c049bba47b7ac7987b8f58",
      "Inputs": [
        {
          "Id": "579754bb22cb44cb97797fee320d6847",
          "Name": "separator",
          "Description": "String to be inserted between joined strings.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ee5fc1f952244dbba026b78f6f6fc39",
          "Name": "string0",
          "Description": "Strings to be joined into a single string.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 4,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "559751fb6f47492cbc33b735eb204347",
          "Name": "string",
          "Description": "A string made from the list of strings including the separator character.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string, inserting the given separator between each joined string.\n\nString.Join (separator: string, strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "75dd684de35f4087a610a571154817d0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "66db0e4a984b41ca96104635b3bcc79a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "7b5b78c89ba14509a923e2d243f782ff",
      "Inputs": [
        {
          "Id": "19f30acd13384386a7660c3f8ae720a1",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a552277ce474e9290548028dcfbf44f",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "885ca414aef540618d7f6a50677585cc",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a7e1b64aff5421cbcadc5bfa32b7f23",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "81a5cab66eef416c9b10a58de6182455",
      "Inputs": [
        {
          "Id": "4caae5d6928f4c91b5de7102fece736d",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53d003dd262e46b78522a4c6c1b8b8a2",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "073510a80bd5465982807b298cf4221d",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"%\";",
      "Id": "b2bbf0e4dd3b4c748eefa1ce903599ff",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1a5b544ebc254dd794f60325d513b8d4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "2955e7830e83432ea12bc6981ffeb001",
      "Inputs": [
        {
          "Id": "b759a1a835014adfa84e269f0b25c34c",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "45ecb23f39c240fe9b60e296961171dd",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8467ead017534dd8a4260dbc1cc9ee9e",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "8da5c08bc38944ea9b02fbc0d8849d7a",
      "Inputs": [
        {
          "Id": "ee87d869abd541e789caf06a01211a84",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df667d3537a54fcd8813018b7595c8f5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b56d9b5b9c084b4a8cbb51229f32b48e",
      "Inputs": [
        {
          "Id": "1f3e3edca7c04395aeac5c9111d8393f",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c3195407ce34627a74c8fd31f5e5175",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e0567b99c914cbaa7523d0bea7f702f",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "fe7515a1069945ce8c87c5b644643c7c",
      "Inputs": [
        {
          "Id": "0f1e51ab894648a484b52e8bd4b2b3ee",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6737957f4a154d5586e0be9c421cc1e3",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    }
  ],
  "Connectors": [
    {
      "Start": "d466497dc87a49f5b3130bf851bd1ef4",
      "End": "f47cc592a29d46a18979fe9ebd01af97",
      "Id": "5801be4f22bd4b09afeab0c350b9f9ff",
      "IsHidden": "False"
    },
    {
      "Start": "7827a28dd19c4f298126f685daef4694",
      "End": "52237d284ee84ecb9da119dfa2460257",
      "Id": "4f6ff605472741c88ff8b91e13706ded",
      "IsHidden": "False"
    },
    {
      "Start": "18116100659a421da0bdf461cefb4e07",
      "End": "00e4664d9a3b4c8b8c785b39f38fccfd",
      "Id": "fec700b529bc45288f03c09aa503502e",
      "IsHidden": "False"
    },
    {
      "Start": "38ccc74c75ca4519bd9b97553f525cde",
      "End": "6b978a5c3eea4933bcbdcc247f202d7e",
      "Id": "337493480bd54e478f7c3a0f325a8994",
      "IsHidden": "False"
    },
    {
      "Start": "f625e49ee38344c3bbdaee668c08d669",
      "End": "3f34d9a4596c4f09a9cb83a6fab524f3",
      "Id": "e49d70e596ff4a72b31263c9dcb99644",
      "IsHidden": "False"
    },
    {
      "Start": "6d35926e35d74202a1d00b5e841e3420",
      "End": "9b6c6073991149199d681b9b0ca32d3c",
      "Id": "349d5dfc8fa64966b8a03b0152d5988f",
      "IsHidden": "False"
    },
    {
      "Start": "59eafd7dcbad488184d2b0586420a17c",
      "End": "4a89d93726ce45718baeb2b804899db3",
      "Id": "a06cc9eac2214d05a2b9deab692d62ec",
      "IsHidden": "False"
    },
    {
      "Start": "59eafd7dcbad488184d2b0586420a17c",
      "End": "98ad264d1d1c4e9d8f2d8a6e765dd772",
      "Id": "6fa5dbb5948d4c5392a032ea9d5dd340",
      "IsHidden": "False"
    },
    {
      "Start": "59eafd7dcbad488184d2b0586420a17c",
      "End": "748892f8c25e4f64a1162d10d7c2dd42",
      "Id": "c3dfd3645c504e9c89024af51aba77f1",
      "IsHidden": "False"
    },
    {
      "Start": "6931d971b11246888c98499d6ccb4d17",
      "End": "38cc9e3d6012427db0892573ad5d481f",
      "Id": "a870d595c4f24f399422a3d5868e9fbe",
      "IsHidden": "False"
    },
    {
      "Start": "edeffa4b91ca458fa4e524c91aec09ad",
      "End": "aef00122f42f46da97bfe388b5003de9",
      "Id": "d68086d665c8421e96e320178f7cbb8e",
      "IsHidden": "False"
    },
    {
      "Start": "bb51b9e0b2ad440bb1f3a3c3de4be5a9",
      "End": "96b77ce9235a4b21b571cec30d009d4d",
      "Id": "3fdec4febb784a1db789a800064647ba",
      "IsHidden": "False"
    },
    {
      "Start": "f1d0562349e44ceaa2cd0271e064919a",
      "End": "32aff8e8862742dab6efedc8677f93c5",
      "Id": "04ad5ea600574c0fb12fbd8f46db6879",
      "IsHidden": "False"
    },
    {
      "Start": "e5139e2fcd8d4958bb079e5f521819f9",
      "End": "7b1dabd5e3a9490daca763baf09750b5",
      "Id": "8de6c48589594dddb84a0db591731546",
      "IsHidden": "False"
    },
    {
      "Start": "652c8bf8ccfe4e11931a16dda49a77cb",
      "End": "2055f182c0a442ebb2bb9f5e47315beb",
      "Id": "a69c067f61144dd0be897fb2b6a3a065",
      "IsHidden": "False"
    },
    {
      "Start": "b4a76c03164e428383e268c92a1d50c6",
      "End": "31fa0b3ff47a400782f97f886ed2c56e",
      "Id": "b72b1f4adeea40698b31b42098a2b531",
      "IsHidden": "False"
    },
    {
      "Start": "2b34d27192a245dbbf4b51889999dbe3",
      "End": "5b25a0fa1ed44be68efe22ef40cd5e22",
      "Id": "b3a77d500160420e836f7efb9be30dbc",
      "IsHidden": "False"
    },
    {
      "Start": "f9c7bf75abec45ad8b0b161f70dc3fc3",
      "End": "4c1729635b9b4d4f8b4ab7f95a3ad13d",
      "Id": "9679719763354841aedd4a7ddc5a543d",
      "IsHidden": "False"
    },
    {
      "Start": "2eebba83bac94413a395727de5502026",
      "End": "2fe9c239942649819f3a38e064fb624d",
      "Id": "d51bbc7dfd3849cfa401e985a86b9bfd",
      "IsHidden": "False"
    },
    {
      "Start": "bba7c6046f7743b0bb3fb3e91b75a5b5",
      "End": "06a80cc0cab0499a9b636ca5ecb2c9dc",
      "Id": "7982a30971c34cd3a4f3832073129cb9",
      "IsHidden": "False"
    },
    {
      "Start": "4dd39b4a411c465a95801ab2dd76893a",
      "End": "5a552277ce474e9290548028dcfbf44f",
      "Id": "2cec55ab00ba41699f2aca61fc69402a",
      "IsHidden": "False"
    },
    {
      "Start": "4dd39b4a411c465a95801ab2dd76893a",
      "End": "ee87d869abd541e789caf06a01211a84",
      "Id": "036ce45492314ac0bcce9b1b6653e770",
      "IsHidden": "False"
    },
    {
      "Start": "d237d44d3fc54703a31c7a3764d46305",
      "End": "431fcd5adac6464d932d12534dcbc955",
      "Id": "4e7fd961e5ec4cae9d99e54be69596ec",
      "IsHidden": "False"
    },
    {
      "Start": "8c7bfcb1b2b64d6590dd1ab4d87d12c3",
      "End": "80679a9bc80d403d85b73b8049d5f762",
      "Id": "13a2a6e54b014b23ab5ca7b772349e42",
      "IsHidden": "False"
    },
    {
      "Start": "559751fb6f47492cbc33b735eb204347",
      "End": "1f3e3edca7c04395aeac5c9111d8393f",
      "Id": "83a0014a27c041d7b923307a42942a9a",
      "IsHidden": "False"
    },
    {
      "Start": "66db0e4a984b41ca96104635b3bcc79a",
      "End": "579754bb22cb44cb97797fee320d6847",
      "Id": "c67dac932ded41838275e3125cf15737",
      "IsHidden": "False"
    },
    {
      "Start": "7a7e1b64aff5421cbcadc5bfa32b7f23",
      "End": "6ee5fc1f952244dbba026b78f6f6fc39",
      "Id": "87a5b96370534188b11b180f7c57c38c",
      "IsHidden": "False"
    },
    {
      "Start": "073510a80bd5465982807b298cf4221d",
      "End": "19f30acd13384386a7660c3f8ae720a1",
      "Id": "cb9c30ddd3774b77bcfd9b8c6518ce25",
      "IsHidden": "False"
    },
    {
      "Start": "1a5b544ebc254dd794f60325d513b8d4",
      "End": "b759a1a835014adfa84e269f0b25c34c",
      "Id": "4cc4c025cfea4ad5ae827667902d75a4",
      "IsHidden": "False"
    },
    {
      "Start": "8467ead017534dd8a4260dbc1cc9ee9e",
      "End": "885ca414aef540618d7f6a50677585cc",
      "Id": "563ee07d8b7d4549b9b311cdb91660e1",
      "IsHidden": "False"
    },
    {
      "Start": "df667d3537a54fcd8813018b7595c8f5",
      "End": "45ecb23f39c240fe9b60e296961171dd",
      "Id": "3b73eb2f1087424a85ffec58364a45c1",
      "IsHidden": "False"
    },
    {
      "Start": "0e0567b99c914cbaa7523d0bea7f702f",
      "End": "0f1e51ab894648a484b52e8bd4b2b3ee",
      "Id": "b908e0cc87f4495fbb2e9f01694bd0db",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "82ace2e2117b445ead8c0796960b2312",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 80.0,
        "Y": 411.0
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "cfd6bbbe750c46e6aa86f2aaa4c4f1ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 583.52372060096229,
        "Y": 482.21824508331645
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "a489445a52e94ca1a086c3b0e6e13b1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1046.4971750829693,
        "Y": 517.315896892429
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e056af71f2794c559298f4c5ae1064d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 874.25731653062792,
        "Y": 607.8587270267069
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "c18d89a1809e4b20aec4fb09e7ccf290",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1359.6842649595462,
        "Y": 519.40020083291142
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "56f2b3e4c74a4b8cb105a328d8d5a788",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1719.8526289435345,
        "Y": 520.62694685152553
      },
      {
        "Name": "Math.Average",
        "ShowGeometry": true,
        "Id": "cd0f893d53d54ced8b8f02ba981ec595",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2058.6882719736695,
        "Y": 736.51642152432169
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "232081121b2142dab0c5a578fe838734",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2640.4077777740981,
        "Y": 555.13529043249389
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "4816d969ea144b388b825b1a78c89415",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2602.3692670710689,
        "Y": 196.57865789878821
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "933a8c08b3914f218b0fe164034354df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2989.3945099816251,
        "Y": 499.19291261679996
      },
      {
        "Name": "/",
        "ShowGeometry": true,
        "Id": "440b50eabace437c9f11d6ae16a989e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3271.9610517772917,
        "Y": 254.22356538673944
      },
      {
        "Name": "*",
        "ShowGeometry": true,
        "Id": "f7540880c32e4442bc0af2c4ca459fce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3687.4351749546008,
        "Y": 254.22356538673938
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "bffce7a519304acf9716f3d8e413d7b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3488.1371463007463,
        "Y": 420.0
      },
      {
        "Name": ">",
        "ShowGeometry": true,
        "Id": "53339510e8504fe4a9b4af3cfd824587",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2316.863153239583,
        "Y": 661.1958585303712
      },
      {
        "Name": "Math.Round",
        "ShowGeometry": true,
        "Id": "e7feb67ea1ca4c1fb84efc82fa2e08fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4143.0295749172092,
        "Y": 256.25540026836404
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "275e10a6eb0f4235b33e60bf9f956f47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3933.9703650319761,
        "Y": 397.09060075447246
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "a8335f51bb7a454285988d070a9b000a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4413.7985780130766,
        "Y": 402.73028365879975
      },
      {
        "Name": "String.Remove",
        "ShowGeometry": true,
        "Id": "83e0121fdc7c4eacb73b17dad1ff5cfc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4988.5297438538773,
        "Y": 400.6815644050007
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "02763fe3a90346d78c4a771526eb1081",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4791.4888998199067,
        "Y": 482.10734255987745
      },
      {
        "Name": "String.Join",
        "ShowGeometry": true,
        "Id": "5fcb92fc56c049bba47b7ac7987b8f58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6227.7483273938406,
        "Y": 347.08083826495744
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "75dd684de35f4087a610a571154817d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6029.5018960112739,
        "Y": 220.13959718585704
      },
      {
        "Name": "List.Combine",
        "ShowGeometry": true,
        "Id": "7b5b78c89ba14509a923e2d243f782ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5833.1247953151369,
        "Y": 382.26659703233366
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "81a5cab66eef416c9b10a58de6182455",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5536.5380016779573,
        "Y": 321.63337536591729
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b2bbf0e4dd3b4c748eefa1ce903599ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5299.0,
        "Y": 508.0
      },
      {
        "Name": "List.OfRepeatedItem",
        "ShowGeometry": true,
        "Id": "2955e7830e83432ea12bc6981ffeb001",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5528.0450921800621,
        "Y": 504.23162580467215
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "8da5c08bc38944ea9b02fbc0d8849d7a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5300.1556265195086,
        "Y": 723.270994570696
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "b56d9b5b9c084b4a8cbb51229f32b48e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6574.4957672437467,
        "Y": 345.82717616978573
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "fe7515a1069945ce8c87c5b644643c7c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6901.4218836817154,
        "Y": 268.71215062624287
      }
    ],
    "Annotations": [],
    "X": -890.80514531898939,
    "Y": 327.42983146949138,
    "Zoom": 0.25973556404267251
  }
}