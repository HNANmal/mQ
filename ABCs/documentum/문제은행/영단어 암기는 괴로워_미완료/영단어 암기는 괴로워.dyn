{
  "Uuid": "6e1d12d5-9fc3-4172-8a39-1309e33bf3a2",
  "IsCustomNode": false,
  "Description": "",
  "Name": "영단어 암기는 괴로워",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"7 4\napple\nant\nsand\napple\nappend\nsand\nsand\naaaaa\naaaaa\naaaaa\";",
      "Id": "e6138219d3af4556ad6f3abd3d8985f0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "11642ca7f0464916803153b8b9bddc5f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "f606a62e5e0f47ad8001cc1d8bc7896d",
      "Inputs": [
        {
          "Id": "316a317cd53143c697b63096d560bef5",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af6b6fd75af34bdc9c694dfca36f8582",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e73be65cbb04ae3b97bce0c8d524b3a",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "1aff610d165a485e97daf57742a8fa9e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "10a85c1fd64f4c8a833b4c632733cab4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "input;",
      "Id": "d19c1898a7e44764bed96449a604013e",
      "Inputs": [
        {
          "Id": "3ff1765c1ea34406b32806a9532f5c25",
          "Name": "input",
          "Description": "input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc2949b217384acea1140ef3f94440a5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "090c875bf87d4f1c8b3aeeeefcdcb540",
      "Inputs": [
        {
          "Id": "47be676057d945dcb9b39c315486b293",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edabd0e163d446c08efe55b995c2af8b",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5392b0a6c0824593acf5a9761a2c6d93",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "9753d20dcc9b4ef5ae26164693441bca",
      "Inputs": [
        {
          "Id": "426d2a04da2b40fe920fe08f7f36379e",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b02938ea91b0406aab3a55e60aa64859",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b77b5bf5b4945ad996b00067593e83a",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "8037a66fd5dc48a4bdedc56308c22713",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f178948c550b4012a1f617f56568a457",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "db752dfb4ced4e7c810f5bd914e99cfc",
      "Inputs": [
        {
          "Id": "4cccb75f7fc34325bdfd43f94a43d89b",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a5d2d4317bf4af8934bcc6dfb41bdaa",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "68729d03266c454b81f8279df5f79c0d",
      "Inputs": [
        {
          "Id": "aca5dd0f9cba472d9d8e54c5f2592176",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a98226c8ace34c4c91b131d3a0f8bdbe",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8dd2ff5a02704dfb8052de4adfb826ea",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "b422c2af9b394e90b85012fce26af667",
      "Inputs": [
        {
          "Id": "a5a1f3e0791a44c69d81497eb6513f1c",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "acce2b5030854bfc927fd4ef8752eff6",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "c0c49c172fa340e6b6e565f25c5f27d5",
      "Inputs": [
        {
          "Id": "04a7cbf5df9746f4a2bf42006e554e18",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c186a01e5f048ea960236cf6e35613b",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "793bc7d82f6e4cd2a52c123d71eb6dc4",
      "Inputs": [
        {
          "Id": "0bc8730d75034d0b9f83ec85403404b2",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1a15605a0b7472c8db3a0286bc82dcd",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b9b9a1623396441abc685d45f9b7d44c",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89a71a5e375d4d9f9a94d4aa95e55d50",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "dde2ffaf04634b0d9473a0428d4e0982",
      "Inputs": [
        {
          "Id": "bb6a8c6459674230857dc2043971245d",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f173e3e39bd4ad882b091947cec1aae",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "902ca00ed2674eddb7295bba8ee21653",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c6c63f6145546a3af312190c74077bc",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "ed45b2c6d185418487da86d9c0e0a08e",
      "Inputs": [
        {
          "Id": "3cda968f351243dab9412914784418cb",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c1599ea090948a990ec6a6dd2ee4ad3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "87b51bca28d34ca58ba85d28cac690ed",
      "Inputs": [
        {
          "Id": "c60df2efd6f24e6095ef75fc415330f1",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "134a417b6799417e818d43370fe4517b",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d547ad6ef3a34722ab6cb04eb9c53f99",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Reverse@var[]..[]",
      "Id": "e6f6bf49f7404eabbab1e3327a437429",
      "Inputs": [
        {
          "Id": "331653d119304806ac45a7148364b1b5",
          "Name": "list",
          "Description": "List to be reversed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2368ee4e96e544e79603d5879151b13f",
          "Name": "list",
          "Description": "Reversed list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing the items of the given list but in reverse order.\n\nList.Reverse (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortIndexByValue@double[]",
      "Id": "055860c78e1d4f37b59c1ec9babc5549",
      "Inputs": [
        {
          "Id": "6849330c8dcc4f1db9bd9308ee06bce5",
          "Name": "list",
          "Description": "List of items to be sorted\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4c1c5a4829bb4b7d88d177ad96759664",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.SortIndexByValue (list: double[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "187b28203c694cac88dc661253206394",
      "Inputs": [
        {
          "Id": "641e3cd152a04f79adca0823255d2a19",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "accf8508a35b43228c443ffc428aca7a",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "ca03a4a6f8144b04b7278d130c7c00b5",
      "Inputs": [
        {
          "Id": "eb675d4b70d74081a336d56c712b1574",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bb2388d5c15d498abe5a23192b192f58",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "936980e106774978a8876379a750e1e0",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "990aaa7a879944fcb4f0c2e2c35d3cf2",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "cb4d149e05df48549c676c39439a4850",
      "Inputs": [
        {
          "Id": "e5104fa6c7404a2cb95d40a40a9cbf63",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "008a10a6b0eb4bc4b255c0d83d945806",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    }
  ],
  "Connectors": [
    {
      "Start": "11642ca7f0464916803153b8b9bddc5f",
      "End": "3ff1765c1ea34406b32806a9532f5c25",
      "Id": "67b1027a6099466a988cd7f27adb48ae",
      "IsHidden": "False"
    },
    {
      "Start": "1e73be65cbb04ae3b97bce0c8d524b3a",
      "End": "47be676057d945dcb9b39c315486b293",
      "Id": "d678561ef6e74faca08a7647bf2ab91e",
      "IsHidden": "False"
    },
    {
      "Start": "10a85c1fd64f4c8a833b4c632733cab4",
      "End": "af6b6fd75af34bdc9c694dfca36f8582",
      "Id": "23b168d4cafc4d68b8fd69154f7db95f",
      "IsHidden": "False"
    },
    {
      "Start": "cc2949b217384acea1140ef3f94440a5",
      "End": "316a317cd53143c697b63096d560bef5",
      "Id": "aee113a1081e4cfda51ab2c5516d36ce",
      "IsHidden": "False"
    },
    {
      "Start": "edabd0e163d446c08efe55b995c2af8b",
      "End": "426d2a04da2b40fe920fe08f7f36379e",
      "Id": "55ad2b02b8ef4cc9b4d1daed8ac709ec",
      "IsHidden": "False"
    },
    {
      "Start": "5392b0a6c0824593acf5a9761a2c6d93",
      "End": "4cccb75f7fc34325bdfd43f94a43d89b",
      "Id": "894f6c656daa45b2a03d09c1a2750cc9",
      "IsHidden": "False"
    },
    {
      "Start": "5392b0a6c0824593acf5a9761a2c6d93",
      "End": "0bc8730d75034d0b9f83ec85403404b2",
      "Id": "538560fe7a5d49d2b0cb1501a89c6754",
      "IsHidden": "False"
    },
    {
      "Start": "7b77b5bf5b4945ad996b00067593e83a",
      "End": "a5a1f3e0791a44c69d81497eb6513f1c",
      "Id": "868ea0fc983a41c98f334f6ca7bc5ce1",
      "IsHidden": "False"
    },
    {
      "Start": "f178948c550b4012a1f617f56568a457",
      "End": "b02938ea91b0406aab3a55e60aa64859",
      "Id": "a5767c09934b4fd0928b5a5d1cfc9ab3",
      "IsHidden": "False"
    },
    {
      "Start": "9a5d2d4317bf4af8934bcc6dfb41bdaa",
      "End": "aca5dd0f9cba472d9d8e54c5f2592176",
      "Id": "326753cf30ab4b96876928244cf0f19c",
      "IsHidden": "False"
    },
    {
      "Start": "8dd2ff5a02704dfb8052de4adfb826ea",
      "End": "b1a15605a0b7472c8db3a0286bc82dcd",
      "Id": "d306982829e0450a98bebd11cad7baf6",
      "IsHidden": "False"
    },
    {
      "Start": "acce2b5030854bfc927fd4ef8752eff6",
      "End": "04a7cbf5df9746f4a2bf42006e554e18",
      "Id": "e5ffdb32660c406e92ecf86fa7814725",
      "IsHidden": "False"
    },
    {
      "Start": "5c186a01e5f048ea960236cf6e35613b",
      "End": "a98226c8ace34c4c91b131d3a0f8bdbe",
      "Id": "6d28a91083714568bd91b4e6cfdffac7",
      "IsHidden": "False"
    },
    {
      "Start": "b9b9a1623396441abc685d45f9b7d44c",
      "End": "bb6a8c6459674230857dc2043971245d",
      "Id": "ad008c54f9404b3ab7474398879d8fc7",
      "IsHidden": "False"
    },
    {
      "Start": "b9b9a1623396441abc685d45f9b7d44c",
      "End": "4f173e3e39bd4ad882b091947cec1aae",
      "Id": "0f2759e96fc844e6ad39fad4ac45a83c",
      "IsHidden": "False"
    },
    {
      "Start": "902ca00ed2674eddb7295bba8ee21653",
      "End": "3cda968f351243dab9412914784418cb",
      "Id": "c3bcff7ccea44248ad0c297f1fce8aaa",
      "IsHidden": "False"
    },
    {
      "Start": "2c6c63f6145546a3af312190c74077bc",
      "End": "c60df2efd6f24e6095ef75fc415330f1",
      "Id": "fe2e3a0a5e5142b38ad977b0fb6a4c54",
      "IsHidden": "False"
    },
    {
      "Start": "0c1599ea090948a990ec6a6dd2ee4ad3",
      "End": "6849330c8dcc4f1db9bd9308ee06bce5",
      "Id": "31c92e8d2e214d57bf079ee792bf4f6f",
      "IsHidden": "False"
    },
    {
      "Start": "d547ad6ef3a34722ab6cb04eb9c53f99",
      "End": "eb675d4b70d74081a336d56c712b1574",
      "Id": "b29cde6e32804bf9b09cac7ad49cb9cc",
      "IsHidden": "False"
    },
    {
      "Start": "d547ad6ef3a34722ab6cb04eb9c53f99",
      "End": "e5104fa6c7404a2cb95d40a40a9cbf63",
      "Id": "fe4036eaab90489e89fae86b0b0dfc43",
      "IsHidden": "False"
    },
    {
      "Start": "2368ee4e96e544e79603d5879151b13f",
      "End": "134a417b6799417e818d43370fe4517b",
      "Id": "8c6168ca55f849b39c9bdf436d4f947c",
      "IsHidden": "False"
    },
    {
      "Start": "4c1c5a4829bb4b7d88d177ad96759664",
      "End": "331653d119304806ac45a7148364b1b5",
      "Id": "1854e63bf15340ec8e7b0d2880660886",
      "IsHidden": "False"
    },
    {
      "Start": "936980e106774978a8876379a750e1e0",
      "End": "641e3cd152a04f79adca0823255d2a19",
      "Id": "3a3475520445433792aef107c28be045",
      "IsHidden": "False"
    },
    {
      "Start": "008a10a6b0eb4bc4b255c0d83d945806",
      "End": "bb2388d5c15d498abe5a23192b192f58",
      "Id": "76794b80d67b409bb42eb81014f2cdda",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e6138219d3af4556ad6f3abd3d8985f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -134.15427517495164,
        "Y": 203.17260428708846
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "f606a62e5e0f47ad8001cc1d8bc7896d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 621.68246600245334,
        "Y": 386.15876699877344
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1aff610d165a485e97daf57742a8fa9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 434.09097487579083,
        "Y": 530.10238534377027
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d19c1898a7e44764bed96449a604013e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 217.95053698915433,
        "Y": 384.70771375874756
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "090c875bf87d4f1c8b3aeeeefcdcb540",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1070.2096243282119,
        "Y": 387.76264427077012
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "9753d20dcc9b4ef5ae26164693441bca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1423.7882450392253,
        "Y": 177.59121652791976
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8037a66fd5dc48a4bdedc56308c22713",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1200.4651344310141,
        "Y": 168.31632263443396
      },
      {
        "Name": "String.Length",
        "ShowGeometry": true,
        "Id": "db752dfb4ced4e7c810f5bd914e99cfc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1493.3975338322616,
        "Y": 759.38103367178724
      },
      {
        "Name": ">=",
        "ShowGeometry": true,
        "Id": "68729d03266c454b81f8279df5f79c0d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2338.32408213067,
        "Y": 781.88150480143656
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "b422c2af9b394e90b85012fce26af667",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1755.9715698900447,
        "Y": 174.10424038693409
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "c0c49c172fa340e6b6e565f25c5f27d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2047.7834152477647,
        "Y": 241.07229684152225
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "793bc7d82f6e4cd2a52c123d71eb6dc4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2726.082172382597,
        "Y": 592.074325667305
      },
      {
        "Name": "List.GroupByKey",
        "ShowGeometry": true,
        "Id": "dde2ffaf04634b0d9473a0428d4e0982",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3138.7253531850306,
        "Y": 552.61992205941567
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "ed45b2c6d185418487da86d9c0e0a08e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3492.6707695228688,
        "Y": 820.39022616172838
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "87b51bca28d34ca58ba85d28cac690ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4489.7853527210264,
        "Y": 620.98433280536858
      },
      {
        "Name": "List.Reverse",
        "ShowGeometry": true,
        "Id": "e6f6bf49f7404eabbab1e3327a437429",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4064.7535396679627,
        "Y": 829.41276667675777
      },
      {
        "Name": "List.SortIndexByValue",
        "ShowGeometry": true,
        "Id": "055860c78e1d4f37b59c1ec9babc5549",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3780.3657680192005,
        "Y": 827.831351634098
      },
      {
        "Name": "List.Sort",
        "ShowGeometry": true,
        "Id": "187b28203c694cac88dc661253206394",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5450.7130134956815,
        "Y": 612.16357842604327
      },
      {
        "Name": "List.GroupByKey",
        "ShowGeometry": true,
        "Id": "ca03a4a6f8144b04b7278d130c7c00b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5116.5816900491454,
        "Y": 628.49956125486392
      },
      {
        "Name": "String.Length",
        "ShowGeometry": true,
        "Id": "cb4d149e05df48549c676c39439a4850",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4861.35061050246,
        "Y": 723.75326558329118
      }
    ],
    "Annotations": [],
    "X": -5088.7683657836205,
    "Y": -236.60684220432609,
    "Zoom": 0.9967882716430575
  }
}