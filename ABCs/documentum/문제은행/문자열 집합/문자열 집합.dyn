{
  "Uuid": "ed9d98d5-851f-453a-a2ef-f791ffec2dbf",
  "IsCustomNode": false,
  "Description": "",
  "Name": "문자열 집합",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"5 11\nbaekjoononlinejudge\nstartlink\ncodeplus\nsundaycoding\ncodingsh\nbaekjoon\ncodeplus\ncodeminus\nstartlink\nstarlink\nsundaycoding\ncodingsh\ncodinghs\nsondaycoding\nstartrink\nicerink\";",
      "Id": "223056d473f24370bf8363735bb1644e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b7841259f1bc4f38822db9bf7321d0aa",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "525deb9fa15e497ca7659e6ea1cc4cf8",
      "Inputs": [
        {
          "Id": "8f10318808694c05b32c5e6170b72003",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2286a957f7b4a59b4b5417137bb9af0",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a4e423e8d9ac4aaa8cabf6ea31d075e1",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "d96a38b8daa340f99b19e036af87bef8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "96b0edc39aa24b5fb8b06169ffd4333e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "a669efb240b442959e0fc6f354a83cf7",
      "Inputs": [
        {
          "Id": "1d04944e96db41b5b786e4c21dd84c9d",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a47710ca51d4a4eb1590cc665a04a0b",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ac879c58247426d949c72b872924289",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "d652c368bdc34fdc9001b278493d425a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e90be05ba8c84b789374005bba75a6c5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "0b9d94bd5e094ffd895478f24a262147",
      "Inputs": [
        {
          "Id": "09ee36aa726049aebb06995eaf0db38e",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e12aa69754d4d0f82e3dd895fa56363",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "255548daeb8144c4bae7d89bcac5f1e3",
      "Inputs": [
        {
          "Id": "08f643903bb8403694cdce34c9d10303",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5acd92cd2652463688f05a683a5f3348",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c32d1f8d2ad947168aa8c1e17edaefca",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Id": "e1d4c486c8604a299e67ed08a1d5fc2a",
      "Inputs": [
        {
          "Id": "c90835829d8e48af98708cf1a78add10",
          "Name": "list",
          "Description": "List to take a slice of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1c677673f2e40eba8ad6c1b955c118c",
          "Name": "start",
          "Description": "Index to start the slice from.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4174a8a725db4fc9a7021be58e4fa1d2",
          "Name": "end",
          "Description": "Index to end the slice at.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6c056a9a6efb484ab6f5b943afe7b143",
          "Name": "step",
          "Description": "Amount the indices of the items are separate by in the original list.\n\nint\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa04ec52e91d4f2eab0a0bfba1a30465",
          "Name": "items",
          "Description": "Items in the slice of the given list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns a single sub-list from the given list, based on starting index, ending index, and a step amount.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ScanList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "80af4f0530fa4669afed93f3ab0053f7",
      "Inputs": [
        {
          "Id": "3f92221b8e074c48ad4146b63474d3ed",
          "Name": "reduceFunction",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d611e984ba3a4f049275be6c75491bbe",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b825668fdc0a4343aebe46f01022b3ca",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5936a01c15e947b6a5e03d1497f597df",
          "Name": "list",
          "Description": "Scanned lists (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result, produces a list of successive reduced values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "78cf6245257445c39a1d96f33a828229",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f734eee627fa495f9d4907b19e3732e9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "12bbe68cf8f441d690a87c030b38475d",
      "Inputs": [
        {
          "Id": "3b4ed041e98b45e0b8f31ff5ce92da68",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d11ad0efc4b430990dd144c7f2a4038",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "597264d83e0d41849938f8cb23f219df",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "90a8341e2fa34415afe04162be908f25",
      "Inputs": [
        {
          "Id": "9e0c990c21d64ed09e5b7201da447112",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "627dbeead88c46619c19be1a7845f234",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "975681cc9a7b4ca6b8b67be9a2200e98",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "053d4e518a53444fb326b72e1cb8eaea",
      "Inputs": [
        {
          "Id": "de275fdc8463427db107aee3ffd0f947",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "584118bf0f094ccb9f322d83effdc7f2",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2ab41bbe29b45d8a9b32bc8960bf760",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "56b8ab3008f643a0a4cce63a0782bca2",
      "Inputs": [
        {
          "Id": "b0f47e41f95c411fbd0bf8758876836f",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "705128a6718a4e9c8e4608c9e22c8712",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "8d2187d29b4c43f38092cfba2eb3c8b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3529e32873f0445eba02f128072b7324",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "57cb82bd232046d582fef2c14902395a",
      "Inputs": [
        {
          "Id": "c18bfed821de4928836d59094a7854e1",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75b41390c1bc4bce9988ad57c4e3a02c",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "93618b37f545421b806eef7692038fd2",
      "Inputs": [
        {
          "Id": "e488083c3b5348d7983d7ec6abc4cf85",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "29bc8a186e6247e9b9a2d4c5c627589c",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "9dc10bacfb794cc4be0e89173a1d2879",
      "Inputs": [
        {
          "Id": "25a4069070d843389a94158b3f2b4ed3",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3ec19befcc264b50b34684bdfb3dcdc2",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "de5615eb63254274b513d4d93c54532c",
      "Inputs": [
        {
          "Id": "6d080a71b69f481b9bc02bdc8f979138",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b686161504374314a6bc3316b98a3baf",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4d4b5d1693148bf844ca3b8f43b6941",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.CountTrue@var[]..[]",
      "Id": "e0accff97b274b41b13a2fca6b9ca7cb",
      "Inputs": [
        {
          "Id": "1edf1c14b98e4a88bc67a59cc8912148",
          "Name": "list",
          "Description": "The list find the true boolean values.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ae871366146d4d9e949eaddbeeb5e5e4",
          "Name": "int",
          "Description": "The number of true boolean values in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of true boolean values in the given list.\n\nList.CountTrue (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "6bff380d27f44bb893e1787b9bda59a9",
      "Inputs": [
        {
          "Id": "c02140ce8f9b451c9bb8a1040a8abd1e",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e0cafbc7ae0f4601a97da413a69e987d",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    }
  ],
  "Connectors": [
    {
      "Start": "b7841259f1bc4f38822db9bf7321d0aa",
      "End": "8f10318808694c05b32c5e6170b72003",
      "Id": "5d7d9079536349b49593fbd06607663a",
      "IsHidden": "False"
    },
    {
      "Start": "a4e423e8d9ac4aaa8cabf6ea31d075e1",
      "End": "08f643903bb8403694cdce34c9d10303",
      "Id": "f10684fe2bb8459895f5e04bbec0b77c",
      "IsHidden": "False"
    },
    {
      "Start": "96b0edc39aa24b5fb8b06169ffd4333e",
      "End": "f2286a957f7b4a59b4b5417137bb9af0",
      "Id": "1e69ea8a991d4f53a4b33ff05b89ac10",
      "IsHidden": "False"
    },
    {
      "Start": "6ac879c58247426d949c72b872924289",
      "End": "09ee36aa726049aebb06995eaf0db38e",
      "Id": "c79d06d2c6ce45919e68cc29087473e4",
      "IsHidden": "False"
    },
    {
      "Start": "e90be05ba8c84b789374005bba75a6c5",
      "End": "3a47710ca51d4a4eb1590cc665a04a0b",
      "Id": "122eaf6e245d4d538113b70e90ad2a0a",
      "IsHidden": "False"
    },
    {
      "Start": "2e12aa69754d4d0f82e3dd895fa56363",
      "End": "b825668fdc0a4343aebe46f01022b3ca",
      "Id": "b68156eeffc943ed9a4ab51db3ad5b61",
      "IsHidden": "False"
    },
    {
      "Start": "2e12aa69754d4d0f82e3dd895fa56363",
      "End": "b0f47e41f95c411fbd0bf8758876836f",
      "Id": "3b9adfd5ffbb415b85fd34b81ba30777",
      "IsHidden": "False"
    },
    {
      "Start": "5acd92cd2652463688f05a683a5f3348",
      "End": "1d04944e96db41b5b786e4c21dd84c9d",
      "Id": "110d128f3a4e41f7bb291a47661cc318",
      "IsHidden": "False"
    },
    {
      "Start": "c32d1f8d2ad947168aa8c1e17edaefca",
      "End": "c90835829d8e48af98708cf1a78add10",
      "Id": "2cede8f7948e4498b6f11fd581a9f332",
      "IsHidden": "False"
    },
    {
      "Start": "fa04ec52e91d4f2eab0a0bfba1a30465",
      "End": "c18bfed821de4928836d59094a7854e1",
      "Id": "7f9c6452027d4ffaae4e9be62d885998",
      "IsHidden": "False"
    },
    {
      "Start": "fa04ec52e91d4f2eab0a0bfba1a30465",
      "End": "e488083c3b5348d7983d7ec6abc4cf85",
      "Id": "51c7c490d3bf40b08987767f522ccc4e",
      "IsHidden": "False"
    },
    {
      "Start": "5936a01c15e947b6a5e03d1497f597df",
      "End": "9e0c990c21d64ed09e5b7201da447112",
      "Id": "aaf0ea9f22a5428dac417a8b5db16dbd",
      "IsHidden": "False"
    },
    {
      "Start": "f734eee627fa495f9d4907b19e3732e9",
      "End": "d611e984ba3a4f049275be6c75491bbe",
      "Id": "434b9b7f845e4e628ebc91d395b292e4",
      "IsHidden": "False"
    },
    {
      "Start": "597264d83e0d41849938f8cb23f219df",
      "End": "3f92221b8e074c48ad4146b63474d3ed",
      "Id": "d57cb191e43e4bbe84c988dcfb367137",
      "IsHidden": "False"
    },
    {
      "Start": "975681cc9a7b4ca6b8b67be9a2200e98",
      "End": "4174a8a725db4fc9a7021be58e4fa1d2",
      "Id": "b603d1b57c5c4ad3b79543f4c32f51e5",
      "IsHidden": "False"
    },
    {
      "Start": "b2ab41bbe29b45d8a9b32bc8960bf760",
      "End": "a1c677673f2e40eba8ad6c1b955c118c",
      "Id": "05187ff438594387a249f1e735c96904",
      "IsHidden": "False"
    },
    {
      "Start": "705128a6718a4e9c8e4608c9e22c8712",
      "End": "584118bf0f094ccb9f322d83effdc7f2",
      "Id": "14baa2e542694707b085f1a7dd799d46",
      "IsHidden": "False"
    },
    {
      "Start": "3529e32873f0445eba02f128072b7324",
      "End": "de275fdc8463427db107aee3ffd0f947",
      "Id": "855d2df1d5524356a683c7a3eff0b298",
      "IsHidden": "False"
    },
    {
      "Start": "75b41390c1bc4bce9988ad57c4e3a02c",
      "End": "6d080a71b69f481b9bc02bdc8f979138",
      "Id": "7ff8acb2a213412692323eeb474bd10a",
      "IsHidden": "False"
    },
    {
      "Start": "29bc8a186e6247e9b9a2d4c5c627589c",
      "End": "b686161504374314a6bc3316b98a3baf",
      "Id": "fd866d39e4564e0fb90ed2f7bee72841",
      "IsHidden": "False"
    },
    {
      "Start": "3ec19befcc264b50b34684bdfb3dcdc2",
      "End": "1edf1c14b98e4a88bc67a59cc8912148",
      "Id": "2f7d9920bae2497494661837c6c6ac4b",
      "IsHidden": "False"
    },
    {
      "Start": "c4d4b5d1693148bf844ca3b8f43b6941",
      "End": "25a4069070d843389a94158b3f2b4ed3",
      "Id": "064101d739e749e0b7481a35adde332c",
      "IsHidden": "False"
    },
    {
      "Start": "ae871366146d4d9e949eaddbeeb5e5e4",
      "End": "c02140ce8f9b451c9bb8a1040a8abd1e",
      "Id": "dea6418991934cfc88f0b50fce5f419c",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "223056d473f24370bf8363735bb1644e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 32.0,
        "Y": 183.0
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "525deb9fa15e497ca7659e6ea1cc4cf8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 506.28665993072059,
        "Y": 272.23675767248403
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d96a38b8daa340f99b19e036af87bef8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 325.2673280808454,
        "Y": 374.87942980027594
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "a669efb240b442959e0fc6f354a83cf7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1274.0483219453022,
        "Y": -35.90212588188939
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d652c368bdc34fdc9001b278493d425a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1093.0289900954263,
        "Y": 66.740546245902635
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "0b9d94bd5e094ffd895478f24a262147",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1598.2106301342526,
        "Y": -35.902125881889361
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "255548daeb8144c4bae7d89bcac5f1e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 844.64966172178447,
        "Y": 262.88583877137836
      },
      {
        "Name": "List.Slice",
        "ShowGeometry": true,
        "Id": "e1d4c486c8604a299e67ed08a1d5fc2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2846.6075195894127,
        "Y": -222.65258392751707
      },
      {
        "Name": "List.Scan",
        "ShowGeometry": true,
        "Id": "80af4f0530fa4669afed93f3ab0053f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2222.1919949811377,
        "Y": -4.533126740909438
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "78cf6245257445c39a1d96f33a828229",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1965.1919949811377,
        "Y": 101.29437325909055
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "12bbe68cf8f441d690a87c030b38475d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1965.1919949811377,
        "Y": -76.533126740909438
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "90a8341e2fa34415afe04162be908f25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2537.1919949811377,
        "Y": -4.533126740909438
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "053d4e518a53444fb326b72e1cb8eaea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2410.1919949811377,
        "Y": -316.03312674090944
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "56b8ab3008f643a0a4cce63a0782bca2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2134.1919949811377,
        "Y": -225.03312674090944
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8d2187d29b4c43f38092cfba2eb3c8b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2134.1919949811377,
        "Y": -373.20562674090945
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "57cb82bd232046d582fef2c14902395a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3245.3585199810204,
        "Y": -386.71275578816989
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "93618b37f545421b806eef7692038fd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3245.9055252788694,
        "Y": -68.6396347306669
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": true,
        "Id": "9dc10bacfb794cc4be0e89173a1d2879",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3844.3560095968069,
        "Y": -271.14342287096031
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "de5615eb63254274b513d4d93c54532c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3632.7630700838022,
        "Y": -271.59725089210207
      },
      {
        "Name": "List.CountTrue",
        "ShowGeometry": true,
        "Id": "e0accff97b274b41b13a2fca6b9ca7cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4078.268364142762,
        "Y": -270.16281621702711
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "6bff380d27f44bb893e1787b9bda59a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4407.9022784571125,
        "Y": 113.84449737721468
      }
    ],
    "Annotations": [],
    "X": 18.37988156827879,
    "Y": 138.48606023998195,
    "Zoom": 0.87446106905659782
  }
}