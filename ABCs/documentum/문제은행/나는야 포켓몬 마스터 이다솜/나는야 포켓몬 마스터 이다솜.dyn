{
  "Uuid": "ed9d98d5-851f-453a-a2ef-f791ffec2dbf",
  "IsCustomNode": false,
  "Description": "",
  "Name": "나는야 포켓몬 마스터 이다솜",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"26 5\nBulbasaur\nIvysaur\nVenusaur\nCharmander\nCharmeleon\nCharizard\nSquirtle\nWartortle\nBlastoise\nCaterpie\nMetapod\nButterfree\nWeedle\nKakuna\nBeedrill\nPidgey\nPidgeotto\nPidgeot\nRattata\nRaticate\nSpearow\nFearow\nEkans\nArbok\nPikachu\nRaichu\n25\nRaichu\n3\nPidgey\nKakuna\";",
      "Id": "7636e9f191154fdbb079434196fd69bd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6119d031408f450e8a35e5d4dd8a81ff",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "ae4f59e590184836a3c2c8b159fd3681",
      "Inputs": [
        {
          "Id": "0fb5b625eeb54d4692035ef267846964",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6d6411bb28745f48c78f3076ad5ab2b",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cf8fb076a3f4db1aa2e34f7006b4287",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\\n\";",
      "Id": "d7bd13d9b037402697c733bd20bba329",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4da6e405248840b9b732ec2348159f82",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Split@string,string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "e1894b836974414ba38bc2a3a929157e",
      "Inputs": [
        {
          "Id": "e7bde723cf3e45aebb33a107b09d486e",
          "Name": "string",
          "Description": "String to split up\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b35d2af197b43a3ae5435708a535c24",
          "Name": "separator0",
          "Description": "Strings that, if present, determine the end and start of a split.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2bf872b5e2b546b68912b01dc53648ba",
          "Name": "strings",
          "Description": "List of strings made from the input string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides a single string into a list of strings, with divisions determined by the given separator strings.\n\nString.Split (string: string, separators: string[]): string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" \";",
      "Id": "7100f0c6c7af46a887072eb3c52218f2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8d47b8a1ad5449149922b389c8992f0c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "605781fe4a0d48dfa84f18d835d27a03",
      "Inputs": [
        {
          "Id": "b8960fa6c32a4938b6c83e2b86830589",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1f20e52122d459d97203babdaca5c4a",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca364c13238a462f8eb8b4e53f7e2158",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "d76fbb081590416684a9b0c137552c17",
      "Inputs": [
        {
          "Id": "82b9738c4757407da64b11c77e9f8db2",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ceda23f61934b73978396b377cd17cd",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "368110cb794e42aaad1f4284168eff98",
      "Inputs": [
        {
          "Id": "a2be6e27233942fbb23fc795701bafea",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0c0224d5c4440db883a83de5c49a8b8",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99f4e944e8984c91a13ef43b8292cc42",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Slice@var[]..[],int,int,int",
      "Id": "397e92d381a3406f90055f4a972e3fee",
      "Inputs": [
        {
          "Id": "3f02488fed344aff956c21378d22ed6a",
          "Name": "list",
          "Description": "List to take a slice of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dff13bf02f354d67b88c05264c87ed3c",
          "Name": "start",
          "Description": "Index to start the slice from.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ddb96677e93a4fa7a39d1b6dee59ef31",
          "Name": "end",
          "Description": "Index to end the slice at.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "384dd4eee0f84fbf87cf8902dcb9478d",
          "Name": "step",
          "Description": "Amount the indices of the items are separate by in the original list.\n\nint\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d09f364deee4f7d9e4a2343d05d2dc8",
          "Name": "items",
          "Description": "Items in the slice of the given list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns a single sub-list from the given list, based on starting index, ending index, and a step amount.\n\nList.Slice (list: var[]..[], start: int, end: int, step: int = 1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ScanList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "ddde6b20a3fc47acb05715138ecadb49",
      "Inputs": [
        {
          "Id": "f042be63926848d2bebd7dcc40903ccc",
          "Name": "reduceFunction",
          "Description": "Reductor Function: accepts one item from each list being reduced, and the current accumulated value, result is the new accumulated value.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f687d5b50e654f9f93eb08f92f561d46",
          "Name": "seed",
          "Description": "Starting accumulated value, to be passed into the first call to the Reductor function.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a722716cc7aa4369a1b5cddd68bfaa9b",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce1cb46211134ebda2cfd98404641bed",
          "Name": "list",
          "Description": "Scanned lists (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Reduces a list into a new value by combining each element with an accumulated result, produces a list of successive reduced values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "66d52a0fdfdd49f9b438f6f11ee39009",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3a955815cae3449ea1b0caf439caba97",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "0b70590571674c8c8c3d3bccd00bad80",
      "Inputs": [
        {
          "Id": "62fdcff3dcad4f9ca590faa39ec0d771",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8ef31fb20d5487d932f01dee08711e2",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0dcd90c1e574445daa4af4245a95f75c",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "34dcf2b22b6b481ba246d92d397fcbbf",
      "Inputs": [
        {
          "Id": "996c3bf66c374d44a1b7b6ec6b89887d",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e719f8e792d04e9ca93912b96921ad0e",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6d99a76a74542e98add5ccded5f16f6",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sublists@var[]..[],var[]..[],int",
      "Id": "e558aa8d489c481fb638ef72de40ae31",
      "Inputs": [
        {
          "Id": "ac7e28008d7d444a8b4c052eec86417d",
          "Name": "list",
          "Description": "The list from which to create sublists.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df77e3f101594dde9c54a21011dac0a6",
          "Name": "ranges",
          "Description": "The index ranges of the sublist elements. Ex. \\\"{0..3,5,2}\\\"\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "522c5fc53fc74374a71580407ec42af4",
          "Name": "offset",
          "Description": "The offset to apply to the sublist. Ex. the range \\\"0..3\\\" with an offset of 2 will yield {0,1,2,3}{2,3,4,5}{4,5,6,7}...\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dfe7fd61e80b4c2b9bc84c714d77ef23",
          "Name": "lists",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Build sublists from a list using DesignScript range syntax.\n\nList.Sublists (list: var[]..[], ranges: var[]..[], offset: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0..1;\n1;",
      "Id": "23a8d08e089348e99c8ed631d2fbc4f8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "89d5f4ffc4ce44719533d4730acf6c83",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92272e6a45044eb182ec067f43b1dd47",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "b04b17f7ce9b4e448248ecd0864a03a4",
      "Inputs": [
        {
          "Id": "79d502fa23384ef8a46bb5bc4dd5d4eb",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d14181aed6ec40fda0b79c5902fd1f67",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b13e467e46e64abd8ebc833b4dc112af",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-1;",
      "Id": "255d0a4621dc4446b33cb0e784d8c638",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "11b48adcfcf6443a9d2e612fdd992a87",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "ee8c00b1f81944289b5fce0c92424c88",
      "Inputs": [
        {
          "Id": "c830ea3ac75c4856816c6a29b3f99462",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c929750c5ad94c7ea4b053a89a23bfc4",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "be0d9ebc00954013b2ac8dca7f9da3f3",
      "Inputs": [
        {
          "Id": "57cc507928554d36ae02d76f1f0a59e1",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4131e2282fc44759dc4f07215fa6751",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "4dae9af5265c48e4a1f7b1200abbf360",
      "Inputs": [
        {
          "Id": "67c317d1e8dc470c9eb972c189f72085",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "876b37631d8546e7aa59b3928b403d5d",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "da878048960d4c59ac2edd50f7c824ab",
      "Inputs": [
        {
          "Id": "17f9f6abb64446469acf38e92c43aa38",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7b179e856db047c795a6a0b20246224f",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToUpper@string",
      "Id": "149e513da75d447ebd8555b5d4bd3477",
      "Inputs": [
        {
          "Id": "30ff62870c2b413890fcda4926583e24",
          "Name": "string",
          "Description": "String to be made uppercase\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5c10c40f6ae4403d90bc2c0b94777931",
          "Name": "string",
          "Description": "Uppercase string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts the given string to all uppercase characters.\n\nString.ToUpper (string: string): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "5e10951c6ce64caf8949bf837041c8f8",
      "Inputs": [
        {
          "Id": "a8b5fa3b800c42b09933b266953fa242",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92b46ac2f92b4390933fddee23d92b13",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33bd39604ca9427498954eb2ce9d349b",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "bc106a56fb5f45ca88601e89e8d2952a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "341ed5ea991c4c03ae436a7757a21414",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "0579601e99464f279a10bc4e92f90020",
      "Inputs": [
        {
          "Id": "cba86801c7ca4ab795b5e0f746211349",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70ebbcfa28634291a6494faac4151282",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "faf560937f604527a7341ce48d2a2f9f",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "b4156324f13749dcbdc2e30bc6ad647c",
      "Inputs": [
        {
          "Id": "25f34030fa3549fb91f28fded3547cf7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a52a383f6078427dac91ee1f78601e9f",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47969329c76140c8aff5cc338df116ab",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "b0b716b9290c45d19981135dd930efd3",
      "Inputs": [
        {
          "Id": "2e669f459b34411daa8e57d1a233f5c2",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d319320323e14ae29f7d7da388edcdf5",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "e37629a1945a4053ac89979416414a82",
      "Inputs": [
        {
          "Id": "344cc3d818924b1a8fc9696f3ec1d4f9",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d55904a0b3641f683e5817ede7e30a3",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cedc730f2953447a8de205f1e4220120",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "db47636355f843b9a09d580a94655ede",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8f5dd06a4c8a40ae93c6423925a4d024",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c66cfe3bd99b423da0995de870dfbab1",
      "Inputs": [
        {
          "Id": "5c14c15a352545679321a5a1f4b009fe",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "41ebef5a9adb49a98de6683069620bba",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c970063194de4726bd9249495f5008d7",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "576934d6102d45c9a0e23eeb0a8c45cb",
      "Inputs": [
        {
          "Id": "ae8f3f92c005426182ff222e6f488f1e",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd079d6f46e5491d85df5efbd770b086",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6475268ae4c46229e3da82a40fb5c4a",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "-@var[]..[],var[]..[]",
      "Id": "bdf8471bfcad4b74b6be4b0debf93a7b",
      "Inputs": [
        {
          "Id": "4aeab5bb02da4c8da8465f898a5b95ec",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5ce4c45faf8492bba828d0e23e8ecc2",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4aebe3b1ceca4b5595cc6e79ff931af0",
          "Name": "number",
          "Description": "Result of the y input subtracted from the x input",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns subtraction of x minus y\n\n- (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "a9c4e4ec2adb4ceea32c4772caf6ad6b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0417e0b274ff44d4965e7ae98d897678",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "8ff89c6a51e347559622404a7e746afa",
      "Inputs": [
        {
          "Id": "87a850430338487aabb66fbebac90f49",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7457ec0b18054454880b1df4b61655e4",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "023b0973b3ca4943895d122c10adbd33",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "4cba2857812f4102b41090b543ee12de",
      "Inputs": [
        {
          "Id": "fae6230dc4524788b85609403f887098",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bba9df12c1f6408582baa6d5b65979d1",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4dc3fa19209948b0b361421ff2655fde",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "ee90e1e9b126469fb1a035173178110c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8c8c9040aa334b6cb32de500035211fb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "0fcb8d47aed44a2181aa5fdbfcebcbcb",
      "Inputs": [
        {
          "Id": "f22c1cd819444d488f9be8dbc71e41ad",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2de18e19b4e49fb96b5a50a387b08fa",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fe5cfe229594e32ac064fbea3349a01",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "eb6e73531edb4a4cb4468d91b9d37400",
      "Inputs": [
        {
          "Id": "007119faae64466eb669560da19b363c",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "240905be276f47fbb5ac504da5afa648",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "943e8fff177d4544aa33afe5519e6a23",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "4c3170c297f2415890adb9e798c61d30",
      "Inputs": [
        {
          "Id": "c91281cd448842ea9b49e39317a0f362",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18c416d8c7ec4cef8f39ed026d995a93",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "7d3b904324ba4f64964a580aa0fe23a3",
      "Inputs": [
        {
          "Id": "c2c02ebeea7e4cd4a24ec347fe690910",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbf5d501170241cba88071c13b1a6a5f",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "236c213d94f54081b883a0aadf305e00",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "b03daa81b91e4308b1e3a778c493bf90",
      "Inputs": [
        {
          "Id": "666f0a0dbc69479596782f15b00a24cb",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cb28b4b99ea4f789ae11194051b05ca",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "ac27a56ad32c42a7964acc1c4e2acd4d",
      "Inputs": [
        {
          "Id": "e19cec41be864a3cab2d3654be48491c",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3183a8fcc33d4a8c913ab80ee5f6649d",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bbf5c4561a054bde9bdb9c323e076a9b",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.SortByFunction@var[]..[],Function",
      "Id": "ef3eaa8b38eb465d8346abca74a6302e",
      "Inputs": [
        {
          "Id": "6296fc420f7c4b66b50d25f2307a6dbd",
          "Name": "list",
          "Description": "list of values\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "570069377e1b406e87b50b86238219c6",
          "Name": "sortFunction",
          "Description": "function used to sort list\n\nFunction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50b4d8a257ad457cb7cff6c24eeba46f",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Use a function to determine how list items should be sorted.\n\nList.SortByFunction (list: var[]..[], sortFunction: Function): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "441a43aba89342df9b4d16f20d877a02",
      "Inputs": [
        {
          "Id": "13e948bc2a0a4ae3ae503e5b5771f0a2",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7fce5fc8e1ae4c48a44c055d937c5984",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "8bfdc3f477764cd6a6c2adc7203be447",
      "Inputs": [
        {
          "Id": "eaf28d68cf984f9899424a2f043b86f1",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "386e16554ccd4e65a8cfaaabf6f14deb",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "df8a10ac905f4b6c94736d38803d5939",
      "Inputs": [
        {
          "Id": "2f5c1967d3c44eccb00ade0a3395415e",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6257742e5f104120a652e0a73292f1c3",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "aa5d88fcb9d94b93b87f702e37c114db",
      "Inputs": [
        {
          "Id": "d198fd43cb2e4e39a3b0e7888fdeebe7",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5094db058a8249e4ab134af3cb9391d3",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    }
  ],
  "Connectors": [
    {
      "Start": "6119d031408f450e8a35e5d4dd8a81ff",
      "End": "0fb5b625eeb54d4692035ef267846964",
      "Id": "4b014274348a4fbda8b270c02e838185",
      "IsHidden": "False"
    },
    {
      "Start": "3cf8fb076a3f4db1aa2e34f7006b4287",
      "End": "e7bde723cf3e45aebb33a107b09d486e",
      "Id": "d53792e0c71f4245ae22190141c2ccf0",
      "IsHidden": "False"
    },
    {
      "Start": "4da6e405248840b9b732ec2348159f82",
      "End": "f6d6411bb28745f48c78f3076ad5ab2b",
      "Id": "6a70aeb6ffdb44adb4704604ffa586e7",
      "IsHidden": "False"
    },
    {
      "Start": "2bf872b5e2b546b68912b01dc53648ba",
      "End": "b8960fa6c32a4938b6c83e2b86830589",
      "Id": "3e261b5ed8bb43fcacb8f9fd1c85fd34",
      "IsHidden": "False"
    },
    {
      "Start": "8d47b8a1ad5449149922b389c8992f0c",
      "End": "2b35d2af197b43a3ae5435708a535c24",
      "Id": "16897681ba8d4cc096af75a504a29ed5",
      "IsHidden": "False"
    },
    {
      "Start": "c1f20e52122d459d97203babdaca5c4a",
      "End": "82b9738c4757407da64b11c77e9f8db2",
      "Id": "c71359064e914913ad773448663f4f4a",
      "IsHidden": "False"
    },
    {
      "Start": "ca364c13238a462f8eb8b4e53f7e2158",
      "End": "a2be6e27233942fbb23fc795701bafea",
      "Id": "4931629ad539430c8be24914f199529e",
      "IsHidden": "False"
    },
    {
      "Start": "7ceda23f61934b73978396b377cd17cd",
      "End": "a722716cc7aa4369a1b5cddd68bfaa9b",
      "Id": "f4c920b6855e461cb14007c40cfc4e16",
      "IsHidden": "False"
    },
    {
      "Start": "99f4e944e8984c91a13ef43b8292cc42",
      "End": "3f02488fed344aff956c21378d22ed6a",
      "Id": "684d0b3508ae4962833402ca61dd49b3",
      "IsHidden": "False"
    },
    {
      "Start": "7d09f364deee4f7d9e4a2343d05d2dc8",
      "End": "17f9f6abb64446469acf38e92c43aa38",
      "Id": "50fdb011a71b4ffbb27278ebb06860b7",
      "IsHidden": "False"
    },
    {
      "Start": "7d09f364deee4f7d9e4a2343d05d2dc8",
      "End": "67c317d1e8dc470c9eb972c189f72085",
      "Id": "2093523581a54a74921fc28a197e2c40",
      "IsHidden": "False"
    },
    {
      "Start": "ce1cb46211134ebda2cfd98404641bed",
      "End": "ac7e28008d7d444a8b4c052eec86417d",
      "Id": "afff9b4d6bbf453d9122262cf2427932",
      "IsHidden": "False"
    },
    {
      "Start": "3a955815cae3449ea1b0caf439caba97",
      "End": "f687d5b50e654f9f93eb08f92f561d46",
      "Id": "45e38edcab004ad4b35f07e2b89e75d8",
      "IsHidden": "False"
    },
    {
      "Start": "0dcd90c1e574445daa4af4245a95f75c",
      "End": "f042be63926848d2bebd7dcc40903ccc",
      "Id": "8d9e8c7b0eed478bb4f7e18f9576220e",
      "IsHidden": "False"
    },
    {
      "Start": "dfe7fd61e80b4c2b9bc84c714d77ef23",
      "End": "79d502fa23384ef8a46bb5bc4dd5d4eb",
      "Id": "97a7e91062a543a1adda1f95dd75be39",
      "IsHidden": "False"
    },
    {
      "Start": "89d5f4ffc4ce44719533d4730acf6c83",
      "End": "df77e3f101594dde9c54a21011dac0a6",
      "Id": "0fee0705fccf48c1b05f0dc361681407",
      "IsHidden": "False"
    },
    {
      "Start": "92272e6a45044eb182ec067f43b1dd47",
      "End": "522c5fc53fc74374a71580407ec42af4",
      "Id": "454591b910894211987aa0b686d0864b",
      "IsHidden": "False"
    },
    {
      "Start": "b13e467e46e64abd8ebc833b4dc112af",
      "End": "c830ea3ac75c4856816c6a29b3f99462",
      "Id": "2e36f117709c4375b284624a34c1fe89",
      "IsHidden": "False"
    },
    {
      "Start": "b13e467e46e64abd8ebc833b4dc112af",
      "End": "57cc507928554d36ae02d76f1f0a59e1",
      "Id": "bf995ad9f5e842b38e3fabd1de2905dc",
      "IsHidden": "False"
    },
    {
      "Start": "11b48adcfcf6443a9d2e612fdd992a87",
      "End": "d14181aed6ec40fda0b79c5902fd1f67",
      "Id": "0478969784d84a73910aa0933106455c",
      "IsHidden": "False"
    },
    {
      "Start": "c929750c5ad94c7ea4b053a89a23bfc4",
      "End": "dff13bf02f354d67b88c05264c87ed3c",
      "Id": "d247c83f8fd4482daaf9db55428e1a55",
      "IsHidden": "False"
    },
    {
      "Start": "f4131e2282fc44759dc4f07215fa6751",
      "End": "ddb96677e93a4fa7a39d1b6dee59ef31",
      "Id": "e665c7ad16a84bf39363e20c5120d154",
      "IsHidden": "False"
    },
    {
      "Start": "876b37631d8546e7aa59b3928b403d5d",
      "End": "30ff62870c2b413890fcda4926583e24",
      "Id": "f8b2b247b6c843388ca9fd0d9e3da094",
      "IsHidden": "False"
    },
    {
      "Start": "876b37631d8546e7aa59b3928b403d5d",
      "End": "a8b5fa3b800c42b09933b266953fa242",
      "Id": "38501deb9ca04e14a59ba2b8006f389d",
      "IsHidden": "False"
    },
    {
      "Start": "876b37631d8546e7aa59b3928b403d5d",
      "End": "25f34030fa3549fb91f28fded3547cf7",
      "Id": "5a46acfe8ce145d3a38e34390ee60b4a",
      "IsHidden": "False"
    },
    {
      "Start": "876b37631d8546e7aa59b3928b403d5d",
      "End": "5c14c15a352545679321a5a1f4b009fe",
      "Id": "7c6e21615dc844b5a15dd73c0f653710",
      "IsHidden": "False"
    },
    {
      "Start": "7b179e856db047c795a6a0b20246224f",
      "End": "ae8f3f92c005426182ff222e6f488f1e",
      "Id": "1e414f44d8fe4802b087d8347d21df4d",
      "IsHidden": "False"
    },
    {
      "Start": "7b179e856db047c795a6a0b20246224f",
      "End": "87a850430338487aabb66fbebac90f49",
      "Id": "99dce3a9b51946d49c72d472d5e6ead6",
      "IsHidden": "False"
    },
    {
      "Start": "5c10c40f6ae4403d90bc2c0b94777931",
      "End": "92b46ac2f92b4390933fddee23d92b13",
      "Id": "c26d8b520967404c9d1ab91824fb611b",
      "IsHidden": "False"
    },
    {
      "Start": "33bd39604ca9427498954eb2ce9d349b",
      "End": "cba86801c7ca4ab795b5e0f746211349",
      "Id": "dd39375425eb417c9348b47dd55c5601",
      "IsHidden": "False"
    },
    {
      "Start": "33bd39604ca9427498954eb2ce9d349b",
      "End": "344cc3d818924b1a8fc9696f3ec1d4f9",
      "Id": "b3e99effe863424280b7bd7d8a7f18ae",
      "IsHidden": "False"
    },
    {
      "Start": "341ed5ea991c4c03ae436a7757a21414",
      "End": "70ebbcfa28634291a6494faac4151282",
      "Id": "4962d3c4816345e2a857fb4294a63de3",
      "IsHidden": "False"
    },
    {
      "Start": "faf560937f604527a7341ce48d2a2f9f",
      "End": "a52a383f6078427dac91ee1f78601e9f",
      "Id": "a01ac36215b6446bbfbbf6ed5b485679",
      "IsHidden": "False"
    },
    {
      "Start": "faf560937f604527a7341ce48d2a2f9f",
      "End": "c2c02ebeea7e4cd4a24ec347fe690910",
      "Id": "85c1558c0c104bb8aabb32116ba89415",
      "IsHidden": "False"
    },
    {
      "Start": "47969329c76140c8aff5cc338df116ab",
      "End": "2e669f459b34411daa8e57d1a233f5c2",
      "Id": "9d8133bd675640f0bfba0689cc47998b",
      "IsHidden": "False"
    },
    {
      "Start": "d319320323e14ae29f7d7da388edcdf5",
      "End": "4aeab5bb02da4c8da8465f898a5b95ec",
      "Id": "3867f49c5ccd4c89a8ce100cc3659f3b",
      "IsHidden": "False"
    },
    {
      "Start": "cedc730f2953447a8de205f1e4220120",
      "End": "41ebef5a9adb49a98de6683069620bba",
      "Id": "61098502694a41f5b9a29ae931338160",
      "IsHidden": "False"
    },
    {
      "Start": "cedc730f2953447a8de205f1e4220120",
      "End": "007119faae64466eb669560da19b363c",
      "Id": "d9871e3204564833bc4067f04ac0a1cb",
      "IsHidden": "False"
    },
    {
      "Start": "8f5dd06a4c8a40ae93c6423925a4d024",
      "End": "4d55904a0b3641f683e5817ede7e30a3",
      "Id": "9f40a5c8cec643b4abe29cb0a5229e69",
      "IsHidden": "False"
    },
    {
      "Start": "c970063194de4726bd9249495f5008d7",
      "End": "7457ec0b18054454880b1df4b61655e4",
      "Id": "ab713f0c1de14eeeb4097c6f16d80bce",
      "IsHidden": "False"
    },
    {
      "Start": "f6475268ae4c46229e3da82a40fb5c4a",
      "End": "cbf5d501170241cba88071c13b1a6a5f",
      "Id": "63361f6d0e4e491cad9b6df7fa9147fa",
      "IsHidden": "False"
    },
    {
      "Start": "4aebe3b1ceca4b5595cc6e79ff931af0",
      "End": "cd079d6f46e5491d85df5efbd770b086",
      "Id": "b3319922d2474aa58046e1001a40ad23",
      "IsHidden": "False"
    },
    {
      "Start": "0417e0b274ff44d4965e7ae98d897678",
      "End": "e5ce4c45faf8492bba828d0e23e8ecc2",
      "Id": "e1f3291170c94ee5bbb7d8736288fd27",
      "IsHidden": "False"
    },
    {
      "Start": "023b0973b3ca4943895d122c10adbd33",
      "End": "fae6230dc4524788b85609403f887098",
      "Id": "035b6fb8f1cf4dc191d0f5b59173f449",
      "IsHidden": "False"
    },
    {
      "Start": "4dc3fa19209948b0b361421ff2655fde",
      "End": "f22c1cd819444d488f9be8dbc71e41ad",
      "Id": "5d608f863b784e75b3727a30fb2351ab",
      "IsHidden": "False"
    },
    {
      "Start": "8c8c9040aa334b6cb32de500035211fb",
      "End": "bba9df12c1f6408582baa6d5b65979d1",
      "Id": "e08040d3c14b445682f091c3ecb2c862",
      "IsHidden": "False"
    },
    {
      "Start": "6fe5cfe229594e32ac064fbea3349a01",
      "End": "240905be276f47fbb5ac504da5afa648",
      "Id": "83f4c303990f47259d33725fe4593357",
      "IsHidden": "False"
    },
    {
      "Start": "943e8fff177d4544aa33afe5519e6a23",
      "End": "c91281cd448842ea9b49e39317a0f362",
      "Id": "0fa6dce0256b41dcaff2e67ddfba2100",
      "IsHidden": "False"
    },
    {
      "Start": "18c416d8c7ec4cef8f39ed026d995a93",
      "End": "3183a8fcc33d4a8c913ab80ee5f6649d",
      "Id": "b1454f26107348ab9451327c4a6e2cb3",
      "IsHidden": "False"
    },
    {
      "Start": "236c213d94f54081b883a0aadf305e00",
      "End": "666f0a0dbc69479596782f15b00a24cb",
      "Id": "a87625893fd844ffa618344a04929533",
      "IsHidden": "False"
    },
    {
      "Start": "4cb28b4b99ea4f789ae11194051b05ca",
      "End": "e19cec41be864a3cab2d3654be48491c",
      "Id": "2a3f0424316f4b7ba08e78418c6e23bb",
      "IsHidden": "False"
    },
    {
      "Start": "bbf5c4561a054bde9bdb9c323e076a9b",
      "End": "6296fc420f7c4b66b50d25f2307a6dbd",
      "Id": "ea9e62d8e9564855a50c586081b2a1c3",
      "IsHidden": "False"
    },
    {
      "Start": "50b4d8a257ad457cb7cff6c24eeba46f",
      "End": "eaf28d68cf984f9899424a2f043b86f1",
      "Id": "f38d61580123415cb5e63d2459935a3e",
      "IsHidden": "False"
    },
    {
      "Start": "7fce5fc8e1ae4c48a44c055d937c5984",
      "End": "570069377e1b406e87b50b86238219c6",
      "Id": "c67f9a20ee7a478a9f157eb354ba1606",
      "IsHidden": "False"
    },
    {
      "Start": "386e16554ccd4e65a8cfaaabf6f14deb",
      "End": "2f5c1967d3c44eccb00ade0a3395415e",
      "Id": "d5b112a5dfc246d8b38bf1722cb574ed",
      "IsHidden": "False"
    },
    {
      "Start": "6257742e5f104120a652e0a73292f1c3",
      "End": "d198fd43cb2e4e39a3b0e7888fdeebe7",
      "Id": "e721137ec5d24d3fbd8d8a4fa7636c37",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7636e9f191154fdbb079434196fd69bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 96.0,
        "Y": 168.0
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "ae4f59e590184836a3c2c8b159fd3681",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 485.737901503987,
        "Y": 247.23256928476184
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d7bd13d9b037402697c733bd20bba329",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 286.39670200679876,
        "Y": 323.56039684850725
      },
      {
        "Name": "String.Split",
        "ShowGeometry": true,
        "Id": "e1894b836974414ba38bc2a3a929157e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1015.3467296127042,
        "Y": 257.92583536258172
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7100f0c6c7af46a887072eb3c52218f2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 816.00553011551608,
        "Y": 334.25366292632674
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "605781fe4a0d48dfa84f18d835d27a03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1363.34030990508,
        "Y": 242.38801902384802
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "d76fbb081590416684a9b0c137552c17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1645.0953353736045,
        "Y": 90.673774540796046
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "368110cb794e42aaad1f4284168eff98",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1655.1782540486988,
        "Y": 371.39688799848415
      },
      {
        "Name": "List.Slice",
        "ShowGeometry": true,
        "Id": "397e92d381a3406f90055f4a972e3fee",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3629.1582875714275,
        "Y": 139.17991580483135
      },
      {
        "Name": "List.Scan",
        "ShowGeometry": true,
        "Id": "ddde6b20a3fc47acb05715138ecadb49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2049.7253103317639,
        "Y": -83.335312463353375
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "66d52a0fdfdd49f9b438f6f11ee39009",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1825.0,
        "Y": -31.0
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "0b70590571674c8c8c3d3bccd00bad80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1830.3838959913485,
        "Y": -205.04304846931581
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "34dcf2b22b6b481ba246d92d397fcbbf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2325.6800763669103,
        "Y": -268.21517172114858
      },
      {
        "Name": "List.Sublists",
        "ShowGeometry": true,
        "Id": "e558aa8d489c481fb638ef72de40ae31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2478.99261915974,
        "Y": -85.42426641058745
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "23a8d08e089348e99c8ed631d2fbc4f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2275.4056306521934,
        "Y": -4.1059581141130934
      },
      {
        "Name": "List.DropItems",
        "ShowGeometry": true,
        "Id": "b04b17f7ce9b4e448248ecd0864a03a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2879.1284000454489,
        "Y": -85.130749888369962
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "255d0a4621dc4446b33cb0e784d8c638",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2688.2715970275954,
        "Y": 29.726091865719127
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "ee8c00b1f81944289b5fce0c92424c88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3162.4566196463611,
        "Y": -153.38607279197421
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "be0d9ebc00954013b2ac8dca7f9da3f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3164.7880118027847,
        "Y": 14.778183051323595
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "4dae9af5265c48e4a1f7b1200abbf360",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3994.4767932061632,
        "Y": 394.31320945963193
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "da878048960d4c59ac2edd50f7c824ab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3992.1454010497432,
        "Y": -40.512421410031408
      },
      {
        "Name": "String.ToUpper",
        "ShowGeometry": true,
        "Id": "149e513da75d447ebd8555b5d4bd3477",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4492.0017194166194,
        "Y": 704.14493110916192
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "5e10951c6ce64caf8949bf837041c8f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4975.4480908218584,
        "Y": 663.2303728435146
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "bc106a56fb5f45ca88601e89e8d2952a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4892.5496291733834,
        "Y": 420.29412822619031
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "0579601e99464f279a10bc4e92f90020",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5238.0556922303822,
        "Y": 614.40393397013645
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "b4156324f13749dcbdc2e30bc6ad647c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5528.1750310388661,
        "Y": 492.84068311710951
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "b0b716b9290c45d19981135dd930efd3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5834.97174135814,
        "Y": 496.48985567090847
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "e37629a1945a4053ac89979416414a82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5301.6178642101413,
        "Y": 1121.506400078702
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "db47636355f843b9a09d580a94655ede",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5006.0662587555507,
        "Y": 1221.3125360192171
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "c66cfe3bd99b423da0995de870dfbab1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5791.7014414341065,
        "Y": 1093.1071805672964
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "576934d6102d45c9a0e23eeb0a8c45cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6905.4266678730964,
        "Y": 359.296586510408
      },
      {
        "Name": "-",
        "ShowGeometry": true,
        "Id": "bdf8471bfcad4b74b6be4b0debf93a7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6178.3514074203777,
        "Y": 497.22376613374638
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a9c4e4ec2adb4ceea32c4772caf6ad6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5809.52374416472,
        "Y": 778.98316691935588
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "8ff89c6a51e347559622404a7e746afa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6177.6421207623143,
        "Y": 903.62668884469736
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "4cba2857812f4102b41090b543ee12de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6627.4160421937586,
        "Y": 1027.8493916448142
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ee90e1e9b126469fb1a035173178110c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6369.0,
        "Y": 1263.0
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "0fcb8d47aed44a2181aa5fdbfcebcbcb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6919.948476341382,
        "Y": 1012.0987833697968
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "eb6e73531edb4a4cb4468d91b9d37400",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7284.6012732578611,
        "Y": 1281.2000462003375
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "4c3170c297f2415890adb9e798c61d30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7584.6832589235446,
        "Y": 1295.466004803885
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "7d3b904324ba4f64964a580aa0fe23a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7362.0165086620618,
        "Y": 545.06292881297929
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "b03daa81b91e4308b1e3a778c493bf90",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7561.8363052409359,
        "Y": 543.86660341761592
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "ac27a56ad32c42a7964acc1c4e2acd4d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8091.6837134739235,
        "Y": 945.92802272943425
      },
      {
        "Name": "List.SortByFunction",
        "ShowGeometry": true,
        "Id": "ef3eaa8b38eb465d8346abca74a6302e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8582.45157246639,
        "Y": 931.99965638000094
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "441a43aba89342df9b4d16f20d877a02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8333.0148559107838,
        "Y": 1040.7965221117013
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "8bfdc3f477764cd6a6c2adc7203be447",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8908.8421696614914,
        "Y": 935.98002951652643
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "df8a10ac905f4b6c94736d38803d5939",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9216.6576922194727,
        "Y": 1018.2410743380565
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "aa5d88fcb9d94b93b87f702e37c114db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 297.70221760335835,
        "Y": 885.78917132735842
      }
    ],
    "Annotations": [],
    "X": -179.27298780116462,
    "Y": -571.451935589243,
    "Zoom": 1.1267201477379964
  }
}