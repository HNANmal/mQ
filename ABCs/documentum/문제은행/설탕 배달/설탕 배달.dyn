{
  "Uuid": "420b6fdb-1975-44c0-a065-c947e2a70092",
  "IsCustomNode": false,
  "Description": "",
  "Name": "설탕 배달",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "18;\n4;\n6;\n9;\n11;",
      "Id": "5f6f6ea44e9d421b973ffc781d39036d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "309561ca332d4c5b9b059959ecf78512",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "273c5ca16d4e4bf0916792894cb6ca01",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aba1803f44aa4cac9193b157b8747bd2",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ebd3e8ab07244f5b0b62f7c49fddd9e",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c23257bea4a4bfaa96dd12bd5a35474",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;\n5;",
      "Id": "02a9df1262014f4d80f6c3415fd90b04",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8eabb56f42334516a816846d0d3d3f70",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70fd4be0e177459abbba3f72b81c5881",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "/@var[]..[],var[]..[]",
      "Id": "f71e76b7dbb74e1a8c7fc8ae11594671",
      "Inputs": [
        {
          "Id": "1e4cd69da9294b308b65dd057e79ced7",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a1b8e15a5e17448ea6b9bc3da9f59151",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3910e837d7e48589fa370c2ba86665a",
          "Name": "double",
          "Description": "Result of division",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns division of x over y\n\n/ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Range, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "983ddfac4f93411592ddd0e67e2ae717",
      "Inputs": [
        {
          "Id": "732a3c17a370414e8a62b9e31ef7fce2",
          "Name": "start",
          "Description": "Number or letter to start the sequence at\r\nDefault value: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "22b199a8909d4199a19c35ad9c2c3876",
          "Name": "end",
          "Description": "Number or letter to end the sequence at\r\nDefault value: 9",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "743035449de14fd7b88a972da53c24a9",
          "Name": "step",
          "Description": "Space between numbers or letters\r\nDefault value: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6542eb79979467c863757ff1647f095",
          "Name": "list",
          "Description": "New list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a sequence of numbers or letters in the specified range."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "413a92a093844738933f6dfe4fda0111",
      "Inputs": [
        {
          "Id": "3bf2668c26894aa9a3e05b51d67a5b48",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "10e38bb7100c4ee8b544433ec2010d60",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed931fdce49e478b8821a5022c99851d",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "*@var[]..[],var[]..[]",
      "Id": "57d79d9e8d1e45d78fbe39944c75fd0c",
      "Inputs": [
        {
          "Id": "512a075e3dc54734b3ecf64ae8800c85",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99f437286fda49398625fbd5790e7bdd",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5a0422349d74563b94a92e159344369",
          "Name": "number",
          "Description": "The product of the two input numbers",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns multiplication of x times y\n\n* (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "952ceeb9b28d4c38ab15767d633fd95f",
      "Inputs": [
        {
          "Id": "ccd42bfd65584facb57914abc8a1d28a",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb626f73b9274d61a582f8c05e264d8f",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d87c3aed40fe410ca84e6713be726537",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "35f9a468b02f4917a3098cc22de077cb",
      "Inputs": [
        {
          "Id": "cd6ea6a773a0487cafa23e5b7dbb36f2",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92edd42b84af472a9f82fd5081a53826",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e15ce6a803b646118a5dd34df489cbd8",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "8f08e53249de4d75b2871c5951abc147",
      "Inputs": [
        {
          "Id": "83287998260848888d17bc4d03a1adeb",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "334f94f265bd4c378f31373bbd49950c",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "33cefeb3e59a4a50963d735db6f9a924",
      "Inputs": [
        {
          "Id": "2f1cd9e4edce425895fd846702ffff3a",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc2b0eb3667e4ac5bae177f0d0ae60ed",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ab0cc2b0f8d4412189c69671b3113437",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "f554c7b005aa49169690e3fedac5f9df",
      "Inputs": [
        {
          "Id": "1e2bad31393d44d29c1b58acaec87e7f",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6e39a17ed3e4aea8712a987c0e44f3c",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "ac9a9dafb8a74b548f92376f21622ca7",
      "Inputs": [
        {
          "Id": "cc87057b1d93468b9abbd8c4718ff5ec",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5bec314f8b74ac4916ada5509ff693d",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "a83af49b295d4ebaac3876300636f15d",
      "Inputs": [
        {
          "Id": "2bee169780504e9db24eb50d18e0609f",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ab551bbcb5a4d8495373ff11a539c14",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "35519e7fabdc4604bf5c8b8aba973629",
      "Inputs": [
        {
          "Id": "0ac6d5770b2a4d3d885d451a9978f4f1",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79215a575c4e4aa8a71e353ea5dccfd4",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f2f46103472643e88d58c69f80486ee1",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "8d6e53853d38432f9a3c93e9cad6c37a",
      "Inputs": [
        {
          "Id": "02a39e1a02f84baabcd321d3a3e5ffc3",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "856bc3d981b14f4a9bbdf72942897859",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "0faa47f5f7354dcb90faab1bb3685d14",
      "Inputs": [
        {
          "Id": "f6ce0ef4623542b2b3f6eaac9fd3e336",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "76f03e9671e047468796786828036007",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "7f4092bca43e4d2c93d90868c8ac7787",
      "Inputs": [
        {
          "Id": "6503f558470e48a1bc84ff43caad591f",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2bf2d7fea6bd42d19d2df43702335081",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "743cc158a0df4b04b43276c1673a4094",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "2638043300b24d649b2237b64cdccc38",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "93fd12c2330a465f88526cd4284a1592",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "72985094d6d74c08b05e86cecdf37705",
      "Inputs": [
        {
          "Id": "e7c109d211d948fc9749f6e21c6a1f61",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "160c26797e2147fcb8b8f34900e800c3",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b86f9e2fcee48a9a91ecd6542800ce4",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "b94819e04bbd4096a72b509da289c194",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a62184c2de9c4f37a62be3c0826a1a22",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "ee2f7be850ba4fe49befc5f9c35f54bc",
      "Inputs": [
        {
          "Id": "d28e5b488371454fafc55972f6c07bb9",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5526bd60886c4f598cb6b12ce0944b56",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9b1a625f0cf04170b07b7e6b08e19e04",
      "Inputs": [
        {
          "Id": "310711f71e3d40beb1096ab102ebe4c6",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b15439be920451e9c36ee6c69f7ef1a",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e57e78229fd34b05a3aa51ff2cad74b6",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllFalse@var[]..[]",
      "Id": "f2886fcd9e1541fb84a9c4334afa426b",
      "Inputs": [
        {
          "Id": "0f1c40e6653a434fa0f727fa8bb6b018",
          "Name": "list",
          "Description": "List to be checked on whether all items are false.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44f66a9be08f4ffbaf5dac4aa6cfc736",
          "Name": "bool",
          "Description": "True if all items from list are false, false if one or more items is not false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if all items in the given list is a boolean and has a false value.\n\nList.AllFalse (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "+@var[]..[],var[]..[]",
      "Id": "201e44d5c92540b8b1df76c303cf7c18",
      "Inputs": [
        {
          "Id": "78bdb45ee238479ca885d2647d389a80",
          "Name": "x",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "619cdf3abf3046e8b4cbb60ced9b7845",
          "Name": "y",
          "Description": "Integer value, double value or string\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "53db90454e874cd4b6e66a6da329ef57",
          "Name": "var",
          "Description": "The sum of two input numbers, or the concatenation of two strings",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns addition of x and y\n\n+ (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a1dcace9b51f43aebcbf387af172321f",
      "Inputs": [
        {
          "Id": "3f8cc9262051426db49b0f967139de7b",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c0510e6b6e514dc381a5bb9d563cd991",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "33671b7867804198aebb9c6379d18be6",
      "Inputs": [
        {
          "Id": "3536bcc2ab724f40b0ccd1f06f9e54cd",
          "Name": "list",
          "Description": "List to be checked if it is empty\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "81c77c0f00fc44588eb2225aab8efabe",
          "Name": "bool",
          "Description": "True if list is empty, false if it isnt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list is empty.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "b957f167453448fe925730355e323821",
      "Inputs": [
        {
          "Id": "e71ad660b0a549eb82d4f34b203b73fe",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14fb6680a7b24ebf847edc7c3c732571",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a688f985f988472c86f7761d7fed84e2",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57bbcc42ea1f439290559a50a9c1d229",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-1;",
      "Id": "301807bb53fd45b482588045785d6224",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f22b75e0388246a897a68d94edae3276",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "f1e5c14db85a4738b8d6415ecc723729",
      "Inputs": [
        {
          "Id": "906e4a704dc74d1cb79dd1828c69d990",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "239cba8ca9994369929821d319633d61",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "7a304eb5ac7b47638b195efb45036bc2",
      "Inputs": [
        {
          "Id": "189bdf3646524017a34860779ee7cacb",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95e6719c22c94042ab2ffc680ebc32fd",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "51ee08d2643649a89e265fe5e36cd7cd",
      "Inputs": [
        {
          "Id": "19ccb97c09124d1187672b2743418f01",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a0ad670e392421cbaf37b0c9cc1a350",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "68b6381d76a2488c908d2a487f590fc7",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "14c0db1f90cc4225876a926ef9003f9e",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "ff14a4e0d1db4c02b3ba4171378f2aa0",
      "Inputs": [
        {
          "Id": "00aef09d844f469399602f7b71df1347",
          "Name": "list",
          "Description": "List to be checked if it is empty\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f25e65308b7749c8975b7bc8416a7e0c",
          "Name": "bool",
          "Description": "True if list is empty, false if it isnt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list is empty.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "50161a1b65f045048a7db7a2d557c59c",
      "Inputs": [
        {
          "Id": "28a112e377b347048adf541797c11c40",
          "Name": "list",
          "Description": "List to be checked if it is empty\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b7224bd634d24dcebd8ad979fc12d0fc",
          "Name": "bool",
          "Description": "True if list is empty, false if it isnt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list is empty.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "8431317b1b6d4118898c4aeeece14529",
      "Inputs": [
        {
          "Id": "58e5ca5282ed4dadb426a4b8044c7cbf",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1aa69a1e714490f8e94ffb244fb19d9",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e84ffc4be8e642128a33e04c926e120f",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd97d03115384be484239971a8dcdc73",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[0];",
      "Id": "4aab9f6650164a14919063c8c5e9abfa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4c049a1542284a2481f9616b099096c2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.ApplyFunction, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "bfc9010eb71b4c5e939b898a30620871",
      "Inputs": [
        {
          "Id": "d2bda5c6b5a74ed08778006e178fe4e3",
          "Name": "function",
          "Description": "Function to apply.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "715459fce0a6448192177ce829aa4d4e",
          "Name": "argument0",
          "Description": "Argument #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d359a90c752645058b3b18c36af3cd04",
          "Name": "result",
          "Description": "Result of application.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Returns the result of a function with supplied arguments. Ex: arguments of a point and vector are applied to a translate function returning a translated point."
    }
  ],
  "Connectors": [
    {
      "Start": "7c23257bea4a4bfaa96dd12bd5a35474",
      "End": "02a39e1a02f84baabcd321d3a3e5ffc3",
      "Id": "b02b4c3434034bddb4569b9624d12785",
      "IsHidden": "False"
    },
    {
      "Start": "8eabb56f42334516a816846d0d3d3f70",
      "End": "a1b8e15a5e17448ea6b9bc3da9f59151",
      "Id": "72b2a6bf8d0d47e5812714d82956576d",
      "IsHidden": "False"
    },
    {
      "Start": "8eabb56f42334516a816846d0d3d3f70",
      "End": "3bf2668c26894aa9a3e05b51d67a5b48",
      "Id": "4db5d559945d4662900a13d13a0cb952",
      "IsHidden": "False"
    },
    {
      "Start": "70fd4be0e177459abbba3f72b81c5881",
      "End": "512a075e3dc54734b3ecf64ae8800c85",
      "Id": "adc29190fdc54a9f9093546e7d346fe4",
      "IsHidden": "False"
    },
    {
      "Start": "d3910e837d7e48589fa370c2ba86665a",
      "End": "22b199a8909d4199a19c35ad9c2c3876",
      "Id": "ea242ce33e614cf1bd8185449383f93a",
      "IsHidden": "False"
    },
    {
      "Start": "e6542eb79979467c863757ff1647f095",
      "End": "10e38bb7100c4ee8b544433ec2010d60",
      "Id": "1da81abd1d7943c39c88b8fcc0767baf",
      "IsHidden": "False"
    },
    {
      "Start": "e6542eb79979467c863757ff1647f095",
      "End": "99f437286fda49398625fbd5790e7bdd",
      "Id": "735b6355d2a64e44a691277718f91bd2",
      "IsHidden": "False"
    },
    {
      "Start": "e6542eb79979467c863757ff1647f095",
      "End": "92edd42b84af472a9f82fd5081a53826",
      "Id": "72094da5e8e04e629266a2a60df25a98",
      "IsHidden": "False"
    },
    {
      "Start": "e6542eb79979467c863757ff1647f095",
      "End": "fc2b0eb3667e4ac5bae177f0d0ae60ed",
      "Id": "d10a6a9d43b24b4aac5949f20c09c13f",
      "IsHidden": "False"
    },
    {
      "Start": "ed931fdce49e478b8821a5022c99851d",
      "End": "2f1cd9e4edce425895fd846702ffff3a",
      "Id": "6fb3487794d4474baf3bf2fa4ad74fdc",
      "IsHidden": "False"
    },
    {
      "Start": "c5a0422349d74563b94a92e159344369",
      "End": "cd6ea6a773a0487cafa23e5b7dbb36f2",
      "Id": "a127e5c44edd4f71a3d8ede9888b4612",
      "IsHidden": "False"
    },
    {
      "Start": "d87c3aed40fe410ca84e6713be726537",
      "End": "0ac6d5770b2a4d3d885d451a9978f4f1",
      "Id": "fa54844665b84421902727a400add465",
      "IsHidden": "False"
    },
    {
      "Start": "e15ce6a803b646118a5dd34df489cbd8",
      "End": "83287998260848888d17bc4d03a1adeb",
      "Id": "6a65ba02e38c402f86d75b5aaabb2061",
      "IsHidden": "False"
    },
    {
      "Start": "334f94f265bd4c378f31373bbd49950c",
      "End": "2bee169780504e9db24eb50d18e0609f",
      "Id": "13c3d3e37cc94b36b5608a9bcd6db8c7",
      "IsHidden": "False"
    },
    {
      "Start": "ab0cc2b0f8d4412189c69671b3113437",
      "End": "1e2bad31393d44d29c1b58acaec87e7f",
      "Id": "68f2f011453d41998788fa8835a43c02",
      "IsHidden": "False"
    },
    {
      "Start": "a6e39a17ed3e4aea8712a987c0e44f3c",
      "End": "cc87057b1d93468b9abbd8c4718ff5ec",
      "Id": "80fc2c330d694374bdb08853b43f193d",
      "IsHidden": "False"
    },
    {
      "Start": "c5bec314f8b74ac4916ada5509ff693d",
      "End": "ccd42bfd65584facb57914abc8a1d28a",
      "Id": "e0de31ee5524480ea888e315d12a3f0e",
      "IsHidden": "False"
    },
    {
      "Start": "2ab551bbcb5a4d8495373ff11a539c14",
      "End": "cb626f73b9274d61a582f8c05e264d8f",
      "Id": "7900d930a2cb4d9ca0017c5db36a7bf6",
      "IsHidden": "False"
    },
    {
      "Start": "f2f46103472643e88d58c69f80486ee1",
      "End": "f6ce0ef4623542b2b3f6eaac9fd3e336",
      "Id": "c190aa5cf35f400ba5ae3a721ba161b9",
      "IsHidden": "False"
    },
    {
      "Start": "f2f46103472643e88d58c69f80486ee1",
      "End": "310711f71e3d40beb1096ab102ebe4c6",
      "Id": "928b836af2584ee5b506d6d563493d01",
      "IsHidden": "False"
    },
    {
      "Start": "856bc3d981b14f4a9bbdf72942897859",
      "End": "1e4cd69da9294b308b65dd057e79ced7",
      "Id": "bfe819cec39940a99b1cdddda7693381",
      "IsHidden": "False"
    },
    {
      "Start": "856bc3d981b14f4a9bbdf72942897859",
      "End": "79215a575c4e4aa8a71e353ea5dccfd4",
      "Id": "f63bb03457c64fc692eb18d95b1adda3",
      "IsHidden": "False"
    },
    {
      "Start": "76f03e9671e047468796786828036007",
      "End": "6503f558470e48a1bc84ff43caad591f",
      "Id": "89ae4cdd1c8744e880d6a07f55f78e5b",
      "IsHidden": "False"
    },
    {
      "Start": "743cc158a0df4b04b43276c1673a4094",
      "End": "28a112e377b347048adf541797c11c40",
      "Id": "66791e9b489f4190b415c73e75aae4f9",
      "IsHidden": "False"
    },
    {
      "Start": "743cc158a0df4b04b43276c1673a4094",
      "End": "e84ffc4be8e642128a33e04c926e120f",
      "Id": "eea858f3e2b643fc9ea21fad84aa077c",
      "IsHidden": "False"
    },
    {
      "Start": "743cc158a0df4b04b43276c1673a4094",
      "End": "1b15439be920451e9c36ee6c69f7ef1a",
      "Id": "db0cbb4eaa5b46b5a5b9e21009f889af",
      "IsHidden": "False"
    },
    {
      "Start": "93fd12c2330a465f88526cd4284a1592",
      "End": "2bf2d7fea6bd42d19d2df43702335081",
      "Id": "9d4c05fd33994cf1a79277a268d65889",
      "IsHidden": "False"
    },
    {
      "Start": "5b86f9e2fcee48a9a91ecd6542800ce4",
      "End": "00aef09d844f469399602f7b71df1347",
      "Id": "45a80c66d37d437a92f907c398c372f0",
      "IsHidden": "False"
    },
    {
      "Start": "5b86f9e2fcee48a9a91ecd6542800ce4",
      "End": "4a0ad670e392421cbaf37b0c9cc1a350",
      "Id": "0905a99ffea64196adeb0c2dcd0dec44",
      "IsHidden": "False"
    },
    {
      "Start": "5b86f9e2fcee48a9a91ecd6542800ce4",
      "End": "715459fce0a6448192177ce829aa4d4e",
      "Id": "c40ddc71ce7145b2a0eae89fa888c90e",
      "IsHidden": "False"
    },
    {
      "Start": "a62184c2de9c4f37a62be3c0826a1a22",
      "End": "160c26797e2147fcb8b8f34900e800c3",
      "Id": "b87f1b62453e423792c7cf8b41d00ecf",
      "IsHidden": "False"
    },
    {
      "Start": "5526bd60886c4f598cb6b12ce0944b56",
      "End": "e7c109d211d948fc9749f6e21c6a1f61",
      "Id": "42383d6ace644163b0c83a0534725845",
      "IsHidden": "False"
    },
    {
      "Start": "5526bd60886c4f598cb6b12ce0944b56",
      "End": "0f1c40e6653a434fa0f727fa8bb6b018",
      "Id": "6beb77e818144d2bace21f0b9eaa2567",
      "IsHidden": "False"
    },
    {
      "Start": "e57e78229fd34b05a3aa51ff2cad74b6",
      "End": "d28e5b488371454fafc55972f6c07bb9",
      "Id": "4f244e175de1408395605a598ae2eb2c",
      "IsHidden": "False"
    },
    {
      "Start": "53db90454e874cd4b6e66a6da329ef57",
      "End": "3536bcc2ab724f40b0ccd1f06f9e54cd",
      "Id": "27e5f4d6d2c54b758a8f273a6656ca6d",
      "IsHidden": "False"
    },
    {
      "Start": "53db90454e874cd4b6e66a6da329ef57",
      "End": "a688f985f988472c86f7761d7fed84e2",
      "Id": "c3141ad1e7504db9ace7043a38ae9132",
      "IsHidden": "False"
    },
    {
      "Start": "81c77c0f00fc44588eb2225aab8efabe",
      "End": "e71ad660b0a549eb82d4f34b203b73fe",
      "Id": "da821933c5ea4833ace3a04913a86ab5",
      "IsHidden": "False"
    },
    {
      "Start": "57bbcc42ea1f439290559a50a9c1d229",
      "End": "3f8cc9262051426db49b0f967139de7b",
      "Id": "87e46e29e416498cbfd114a6bfa3151d",
      "IsHidden": "False"
    },
    {
      "Start": "f22b75e0388246a897a68d94edae3276",
      "End": "14fb6680a7b24ebf847edc7c3c732571",
      "Id": "f05011e9cdbe4b99a5f1173a1b3d2fab",
      "IsHidden": "False"
    },
    {
      "Start": "239cba8ca9994369929821d319633d61",
      "End": "78bdb45ee238479ca885d2647d389a80",
      "Id": "ce76d030cf4a4ae48a085e88b6cb9ca8",
      "IsHidden": "False"
    },
    {
      "Start": "95e6719c22c94042ab2ffc680ebc32fd",
      "End": "d2bda5c6b5a74ed08778006e178fe4e3",
      "Id": "bf7eed7d4d124d98a26cde6e35216624",
      "IsHidden": "False"
    },
    {
      "Start": "14c0db1f90cc4225876a926ef9003f9e",
      "End": "619cdf3abf3046e8b4cbb60ced9b7845",
      "Id": "07fe7bafdf5b432eb9e88425cae4d9a3",
      "IsHidden": "False"
    },
    {
      "Start": "f25e65308b7749c8975b7bc8416a7e0c",
      "End": "19ccb97c09124d1187672b2743418f01",
      "Id": "bcf09b4bbe4c4100a6c0d44523e17b68",
      "IsHidden": "False"
    },
    {
      "Start": "b7224bd634d24dcebd8ad979fc12d0fc",
      "End": "58e5ca5282ed4dadb426a4b8044c7cbf",
      "Id": "8c8605fa68764e6481f042edcd07e133",
      "IsHidden": "False"
    },
    {
      "Start": "bd97d03115384be484239971a8dcdc73",
      "End": "906e4a704dc74d1cb79dd1828c69d990",
      "Id": "9dd0c1f1b1e94d9da1c5c09efea544c8",
      "IsHidden": "False"
    },
    {
      "Start": "4c049a1542284a2481f9616b099096c2",
      "End": "e1aa69a1e714490f8e94ffb244fb19d9",
      "Id": "860b5dda7cf945128044d743a57ef46c",
      "IsHidden": "False"
    },
    {
      "Start": "d359a90c752645058b3b18c36af3cd04",
      "End": "68b6381d76a2488c908d2a487f590fc7",
      "Id": "2ae9175fcffb4079bc6451db59f7be72",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5f6f6ea44e9d421b973ffc781d39036d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -49.171239667081863,
        "Y": 246.61414496284439
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "02a9df1262014f4d80f6c3415fd90b04",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 444.85768245132408,
        "Y": -67.207493161071341
      },
      {
        "Name": "/",
        "ShowGeometry": true,
        "Id": "f71e76b7dbb74e1a8c7fc8ae11594671",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 726.59700982838569,
        "Y": 149.1243582080395
      },
      {
        "Name": "Range",
        "ShowGeometry": true,
        "Id": "983ddfac4f93411592ddd0e67e2ae717",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1193.5753071005929,
        "Y": 115.96613591652186
      },
      {
        "Name": "*",
        "ShowGeometry": true,
        "Id": "413a92a093844738933f6dfe4fda0111",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1573.0527399924065,
        "Y": -240.48475371729313
      },
      {
        "Name": "*",
        "ShowGeometry": true,
        "Id": "57d79d9e8d1e45d78fbe39944c75fd0c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1572.1316782620863,
        "Y": 83.7289753553242
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "952ceeb9b28d4c38ab15767d633fd95f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2756.14682749001,
        "Y": 68.171142066071582
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "35f9a468b02f4917a3098cc22de077cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1880.8404303981888,
        "Y": 324.12881785664354
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "8f08e53249de4d75b2871c5951abc147",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2157.5810003779948,
        "Y": 320.17641327170156
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "33cefeb3e59a4a50963d735db6f9a924",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1886.1083221713479,
        "Y": -151.46489764028331
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "f554c7b005aa49169690e3fedac5f9df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2143.7608091339785,
        "Y": -148.33482479958212
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "ac9a9dafb8a74b548f92376f21622ca7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2439.5560868084,
        "Y": -57.3134931135226
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "a83af49b295d4ebaac3876300636f15d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2438.4025148461892,
        "Y": 225.69063786309852
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "35519e7fabdc4604bf5c8b8aba973629",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3130.9774260338886,
        "Y": 431.26463848351369
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8d6e53853d38432f9a3c93e9cad6c37a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 425.20997111386885,
        "Y": 468.8753984910947
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": true,
        "Id": "0faa47f5f7354dcb90faab1bb3685d14",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3461.5137370869256,
        "Y": 494.99539821622363
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "7f4092bca43e4d2c93d90868c8ac7787",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3877.6374684339739,
        "Y": 494.99539821622352
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "2638043300b24d649b2237b64cdccc38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3662.0778778713143,
        "Y": 571.84707832986771
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "72985094d6d74c08b05e86cecdf37705",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4903.9874593872519,
        "Y": 790.12028916939153
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "b94819e04bbd4096a72b509da289c194",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4688.4278688245922,
        "Y": 866.97196928303561
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": true,
        "Id": "ee2f7be850ba4fe49befc5f9c35f54bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4487.8637280402118,
        "Y": 790.12028916939153
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "9b1a625f0cf04170b07b7e6b08e19e04",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4177.3010654263353,
        "Y": 790.83019423647829
      },
      {
        "Name": "List.AllFalse",
        "ShowGeometry": true,
        "Id": "f2886fcd9e1541fb84a9c4334afa426b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4743.8183809257644,
        "Y": 1140.0535826963542
      },
      {
        "Name": "+",
        "ShowGeometry": true,
        "Id": "201e44d5c92540b8b1df76c303cf7c18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5954.8417425183679,
        "Y": 610.89148590714376
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "a1dcace9b51f43aebcbf387af172321f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -8.6919451737792315,
        "Y": 494.05075037956954
      },
      {
        "Name": "List.IsEmpty",
        "ShowGeometry": true,
        "Id": "33671b7867804198aebb9c6379d18be6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6230.3304961479062,
        "Y": 735.81206648488683
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "b957f167453448fe925730355e323821",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6583.828125002372,
        "Y": 543.009833468291
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "301807bb53fd45b482588045785d6224",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6289.0810764942153,
        "Y": 456.36291659803476
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "f1e5c14db85a4738b8d6415ecc723729",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5197.8578309422765,
        "Y": 487.79437937549443
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "7a304eb5ac7b47638b195efb45036bc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5152.2782160383986,
        "Y": 995.279088425104
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "51ee08d2643649a89e265fe5e36cd7cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5648.3561548934676,
        "Y": 767.273084357293
      },
      {
        "Name": "List.IsEmpty",
        "ShowGeometry": true,
        "Id": "ff14a4e0d1db4c02b3ba4171378f2aa0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5352.0069994807081,
        "Y": 728.46911347518085
      },
      {
        "Name": "List.IsEmpty",
        "ShowGeometry": true,
        "Id": "50161a1b65f045048a7db7a2d557c59c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4125.5877981186441,
        "Y": 349.23409902551822
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "8431317b1b6d4118898c4aeeece14529",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4526.7720013246,
        "Y": 346.54818825787788
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "4aab9f6650164a14919063c8c5e9abfa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4282.7605252934591,
        "Y": 181.53688708781118
      },
      {
        "Name": "Function Apply",
        "ShowGeometry": true,
        "Id": "bfc9010eb71b4c5e939b898a30620871",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5378.4420162002152,
        "Y": 884.09491614508772
      }
    ],
    "Annotations": [],
    "X": 475.96635391255882,
    "Y": -306.77650063695387,
    "Zoom": 1.4929926025452867
  }
}