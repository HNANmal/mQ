{
  "Uuid": "1f8aa190-ae6c-4e79-b55c-448d6a66fba1",
  "IsCustomNode": false,
  "Description": "",
  "Name": "소수",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "60;\n100;",
      "Id": "68624bdf90224052bb0718f37d3454b2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4966ec5305514659ada14d34b949b9f5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a7ab15eb4e24d5cb5e19e12cce7a777",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "037c97e5858f4350bb3284416b3c06e6",
      "Inputs": [
        {
          "Id": "41996eb910434c3d86c18bb4756a8130",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c64b2524d3bb4500bd9f028fd58c0bd8",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45cad4f99df94e0791fc2b48d71eba42",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "9877a9f109fc4f4b95a044b6b7578844",
      "Inputs": [
        {
          "Id": "37196e645e0444de94b965ab933ff14f",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "699e4daaa0a44d6e8a934e0271e22870",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e62e4cc9ada144b3918cb1f7f23ed8be",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d51ae7cf188142dba2076686a215ff07",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Shortest",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;\ni-1;",
      "Id": "3bea7b2f4766482f9c41d3393f9eeb6f",
      "Inputs": [
        {
          "Id": "9864dbf8957c4f07ac736d1b0bef4acc",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a3d756ef8c55493a91472c635ff9ed9d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c29dbb4bf3a647f0b00c8bd0accc8c70",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i==1;",
      "Id": "b86a5d8b3d124c5eafa569e1e3448e55",
      "Inputs": [
        {
          "Id": "a51f4501911d4d6ca5abfa237286ce72",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "15afd22482cb4766a82386839142eacd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "b1c8abdd881749c78bf73af0a10cdc73",
      "Inputs": [
        {
          "Id": "24038133e88646cbb7cea419865bd3f8",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f02c1c4ee3f540b68e721f8ac98d33a6",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "29dfdc26cba84e298684e85c298b0b1a",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Range, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "ff34ab5841194a1ea753e748d221fbb5",
      "Inputs": [
        {
          "Id": "2b5c136f39e5486295fdf1bfef703ea5",
          "Name": "start",
          "Description": "Number or letter to start the sequence at\r\nDefault value: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35a66e511d7d400691ba30ddfc0bb70c",
          "Name": "end",
          "Description": "Number or letter to end the sequence at\r\nDefault value: 9",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a011502edad436f88f5defd723a127b",
          "Name": "step",
          "Description": "Space between numbers or letters\r\nDefault value: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb5a676c409045f39ca324b96bb1b14e",
          "Name": "list",
          "Description": "New list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a sequence of numbers or letters in the specified range."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "ab2ba70b6610460f9ab0ea482af9958e",
      "Inputs": [
        {
          "Id": "caff7a83f97a401ba1cefbce10dceff8",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa1127385e4c43d8ab7d29ea868b4782",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport copy\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputs = IN[0]\r\n# Place your code below this line\r\n\r\n\r\ndef prime_list(start, n):\r\n    # 에라토스테네스의 체 초기화: n개 요소에 True 설정(소수로 간주)\r\n    sieve = [True] * n\r\n\r\n    # n의 최대 약수가 sqrt(n) 이하이므로 i=sqrt(n)까지 검사\r\n    m = int(n ** 0.5)\r\n    for i in range(2, m + 1):\r\n        if sieve[i] == True:           # i가 소수인 경우\r\n            for j in range(i+i, n, i): # i이후 i의 배수들을 False 판정\r\n                sieve[j] = False\r\n\r\n    # 소수 목록 산출\r\n    return [i for i in range(start, n) if sieve[i] == True]\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = prime_list(*inputs)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "0a1f1ece28a04fa5bc28aab26cefb54c",
      "Inputs": [
        {
          "Id": "00b24cec319d47288efa2ca8cd74b53b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4602d7a817ee443ca87418b4e0351e05",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Range, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "458f218e7ae646feb0087b6cb7a65feb",
      "Inputs": [
        {
          "Id": "eeebd344ed00448f8ec4d510270e9705",
          "Name": "start",
          "Description": "Number or letter to start the sequence at\r\nDefault value: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aca1d6f8b19742729eafed6ed0bd51fc",
          "Name": "end",
          "Description": "Number or letter to end the sequence at\r\nDefault value: 9",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3cb089f33cdb468282442de3c9a80e87",
          "Name": "step",
          "Description": "Space between numbers or letters\r\nDefault value: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9954ca4b0b6f47eb96b8b2c0616fc1cb",
          "Name": "list",
          "Description": "New list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a sequence of numbers or letters in the specified range."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "3c18959db4884bc0bc73997417351377",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e8edbf8ef5e4f92a80d44b3afe37f57",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "466a31e541b444569ba104780fc04f87",
      "Inputs": [
        {
          "Id": "3af3c28c88184ba39fb4e84331e173a9",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e55dd89ff9a0404b9621d0c271beff92",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Range, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f15e06d6727443b1a6717330d629a165",
      "Inputs": [
        {
          "Id": "540f57cda01747b087c302a175778190",
          "Name": "start",
          "Description": "Number or letter to start the sequence at\r\nDefault value: 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "610320ad31ed48ec8260038f9fc04632",
          "Name": "end",
          "Description": "Number or letter to end the sequence at\r\nDefault value: 9",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "973155d9f26d4f6baf4eeec378fe81e3",
          "Name": "step",
          "Description": "Space between numbers or letters\r\nDefault value: 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "789f5c51f7754ec884797bf5d0431e2a",
          "Name": "list",
          "Description": "New list of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a sequence of numbers or letters in the specified range."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "bcc1cfaeb92d4bd48002390ddf974b1f",
      "Inputs": [
        {
          "Id": "ed1a4817141b4ad28aa60f8d4e28037e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff05202970224aae8a9ab75d3e42f917",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "754160b6c3ac4efe8b2d177864f74fa9",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "e93689787933479980c232d62b4f79b2",
      "Inputs": [
        {
          "Id": "5a1049c0f02a4252a5236115381963cb",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e764907f1ae940b9acfb47767673ad09",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "390e002183284f258be21882527ec4dc",
      "Inputs": [
        {
          "Id": "d94eea3afab24959a26da9bc59b6b417",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3dfd5855c7b47eab5a3e8c8e342ddbe",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Deconstruct@var[]..[]",
      "Id": "02dc7583fb914404ac1d1750118d36a6",
      "Inputs": [
        {
          "Id": "514df797c2804540a3f5f98543fcbd27",
          "Name": "list",
          "Description": "List to be split.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8927f5d77b6a46afa958c39c9d750234",
          "Name": "first",
          "Description": "First item in the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cc757737c31d4220b8c74960a5ae1f8a",
          "Name": "rest",
          "Description": "Rest of the list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given a list, produces the first item in the list, and a new list containing all items except the first.\n\nList.Deconstruct (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Contains@var[]..[],var[]..[]",
      "Id": "ba6395ac807642c5b7ae55156a35744c",
      "Inputs": [
        {
          "Id": "80bb9faabeac4d04a11711e7ead6fb8f",
          "Name": "list",
          "Description": "List to search in\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "780751f7ba8c4ac48f05059fd4ac07ca",
          "Name": "item",
          "Description": "Item to look for\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f898bce984174971ae38c03e9b287e39",
          "Name": "bool",
          "Description": "True if list contains item, false if it doesn’t",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list contains the given item. This function searches through the sublists contained in it.\n\nList.Contains (list: var[]..[], item: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "37b6ca2661c341bda3b7c84dc4ec9d32",
      "Inputs": [
        {
          "Id": "528f3faaa71940a09fdb3d1919921705",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "863be09dcea24f1b9ad23659dae08480",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "998e3fefcd0f42bb8f6c65ca5af42fc3",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ade1393b56004bf8891703a144830808",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "91b0490e50c045edb15c872e1ca8926c",
      "Inputs": [
        {
          "Id": "70a5501cc6b844ef8258889c9a562840",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "baa300b89e4047ae88adf2fcf883aadb",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.MinimumItem@var[]",
      "Id": "6077c30f4f7a4c4394b82e93b79eb8bd",
      "Inputs": [
        {
          "Id": "7710c325719948f18fe7b80d1f79a049",
          "Name": "list",
          "Description": "List of comparable items to take the minimum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6945ebb9c08948169fcb24b42a018fce",
          "Name": "item",
          "Description": "Minimum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the minimum value from a list.\n\nList.MinimumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "4b35537ffac24694becd1af8cf478386",
      "Inputs": [
        {
          "Id": "eee746605fac47c19a090cc3478a8201",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfed9fd339fc41c38d8ab934d2097942",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "4a72dac4904e406f9707acd54178bd67",
      "Inputs": [
        {
          "Id": "328a815c13204b6e8cfb4d0474d77f35",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec146eb4000147849c7200ebd5295546",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77943b197687407db4b9606805e09dff",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "2eb97adb04c84204a1b2984ebaf03dea",
      "Inputs": [
        {
          "Id": "1e620a05e0464907a9ca324fd24e6918",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5a71fd26c27d4cc1b08af1f0eac4588a",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89f680d2072245fc8386f9a9cae12740",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "f360e297ff25421eb4fd6afcaa007cd6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0d6acb62c9ce443d97a85d03354a0cd2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a627138e2a3f4ecb96d4a1de283e295d",
      "Inputs": [
        {
          "Id": "8b3d5cb3a4bc4f0ead2d5d5bc78f6267",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06e5fd4ad07f4fe1a429b401b26598b5",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fd79264463f84a3db788bccf7ba06a7a",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "116678e66e87412697c0c98a3bf2c762",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IsEmpty@var[]..[]",
      "Id": "39281ae211af402684342bf37532ce0d",
      "Inputs": [
        {
          "Id": "88048086f8a943f4b233dfb2e0e5cc78",
          "Name": "list",
          "Description": "List to be checked if it is empty\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c9aaf81430241f6a258be01ea56d19f",
          "Name": "bool",
          "Description": "True if list is empty, false if it isnt",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given list is empty.\n\nList.IsEmpty (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-1;",
      "Id": "1006cbc105784a6ebbbebfa370470ddf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f872d0036a2c413f9e9a1df01027d39c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "25;\n27;",
      "Id": "f192b87f5f154e168cd530ba1c36b18f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "18ad45533e8f4730a2fa72d5cac946af",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3739cba1c8674633b6f1e2ffd09bfb09",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "89245a8f83084591a174baa72ac6d7ec",
      "Inputs": [
        {
          "Id": "bb017c26aca14fe1ab77dec9d2c620f8",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8a61e4ef45e42f0a86ee691083e9c65",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0346a76a71444d4383c76788d25cf664",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b1b9f7045704075a40d9413e6bcbefc",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.IsNull@var",
      "Id": "701687cf837243cb9e4e0dd403084fc8",
      "Inputs": [
        {
          "Id": "6d75823357f74198b9ee9c5a29fbc462",
          "Name": "object",
          "Description": "Object to test.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cb085bffe4f74e1591835666fa427ea8",
          "Name": "bool",
          "Description": "Whether object is null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given object is null.\n\nObject.IsNull (object: var): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"null\";",
      "Id": "e9972efa9c1f420785efa9abeb7de382",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aad3091993ad4688bfa662f33507c401",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "07f69a6858e449b79fe025b6b89ff608",
      "Inputs": [
        {
          "Id": "ca6c24e265574630bc254fa615f8082b",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e51476c387ce40b096395ebc07d39e3c",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc0efb25a90d4df1a7e73d0a238eea27",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "20fc1e29f3ec4ba3b04fb895ce7b1b45",
      "Inputs": [
        {
          "Id": "5ec28cf314fe4221b493a7d6dbac0a02",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "056302e62ce0467e882f662bb1ecec4e",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1f5189fcfdd4e349b5a41472e994b24",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "4966ec5305514659ada14d34b949b9f5",
      "End": "41996eb910434c3d86c18bb4756a8130",
      "Id": "46b9f709009b4b29ae0c46e9c1c84451",
      "IsHidden": "False"
    },
    {
      "Start": "2a7ab15eb4e24d5cb5e19e12cce7a777",
      "End": "c64b2524d3bb4500bd9f028fd58c0bd8",
      "Id": "538560750d8648aa949404832e8087dc",
      "IsHidden": "False"
    },
    {
      "Start": "45cad4f99df94e0791fc2b48d71eba42",
      "End": "24038133e88646cbb7cea419865bd3f8",
      "Id": "eed08d1b6a104b969110a024e45168a0",
      "IsHidden": "False"
    },
    {
      "Start": "45cad4f99df94e0791fc2b48d71eba42",
      "End": "00b24cec319d47288efa2ca8cd74b53b",
      "Id": "c7959e19257c4f1ea9e5a6254947f3cd",
      "IsHidden": "False"
    },
    {
      "Start": "d51ae7cf188142dba2076686a215ff07",
      "End": "35a66e511d7d400691ba30ddfc0bb70c",
      "Id": "e2ec44a1f98241d8aa434ef56b278bd8",
      "IsHidden": "False"
    },
    {
      "Start": "a3d756ef8c55493a91472c635ff9ed9d",
      "End": "699e4daaa0a44d6e8a934e0271e22870",
      "Id": "95811ba23a354c0cbfa2b2f3b56da4ba",
      "IsHidden": "False"
    },
    {
      "Start": "a3d756ef8c55493a91472c635ff9ed9d",
      "End": "e62e4cc9ada144b3918cb1f7f23ed8be",
      "Id": "238da5677c0b41848c3637b466aebc7e",
      "IsHidden": "False"
    },
    {
      "Start": "15afd22482cb4766a82386839142eacd",
      "End": "37196e645e0444de94b965ab933ff14f",
      "Id": "feac8d041b4043bda5dfbbf542d66efb",
      "IsHidden": "False"
    },
    {
      "Start": "f02c1c4ee3f540b68e721f8ac98d33a6",
      "End": "2b5c136f39e5486295fdf1bfef703ea5",
      "Id": "ddf0538cb10a448eaeba052718f1c50e",
      "IsHidden": "False"
    },
    {
      "Start": "29dfdc26cba84e298684e85c298b0b1a",
      "End": "caff7a83f97a401ba1cefbce10dceff8",
      "Id": "2d35af4a49664847b2ccb2faa1ce8402",
      "IsHidden": "False"
    },
    {
      "Start": "29dfdc26cba84e298684e85c298b0b1a",
      "End": "3af3c28c88184ba39fb4e84331e173a9",
      "Id": "2306987670b6458caca079f926c6fa01",
      "IsHidden": "False"
    },
    {
      "Start": "bb5a676c409045f39ca324b96bb1b14e",
      "End": "780751f7ba8c4ac48f05059fd4ac07ca",
      "Id": "5d746db7911b41399d4e4ed15586f21b",
      "IsHidden": "False"
    },
    {
      "Start": "bb5a676c409045f39ca324b96bb1b14e",
      "End": "528f3faaa71940a09fdb3d1919921705",
      "Id": "e53fcde46b7e485d978afa5699af1e3b",
      "IsHidden": "False"
    },
    {
      "Start": "fa1127385e4c43d8ab7d29ea868b4782",
      "End": "a51f4501911d4d6ca5abfa237286ce72",
      "Id": "d4457e52bc03418db666acde1612fad8",
      "IsHidden": "False"
    },
    {
      "Start": "fa1127385e4c43d8ab7d29ea868b4782",
      "End": "9864dbf8957c4f07ac736d1b0bef4acc",
      "Id": "b69fd7ec480e4fe897a96e16f2c1391c",
      "IsHidden": "False"
    },
    {
      "Start": "9954ca4b0b6f47eb96b8b2c0616fc1cb",
      "End": "973155d9f26d4f6baf4eeec378fe81e3",
      "Id": "b7c7dc698ba9439a983b6bf495e21131",
      "IsHidden": "False"
    },
    {
      "Start": "9954ca4b0b6f47eb96b8b2c0616fc1cb",
      "End": "540f57cda01747b087c302a175778190",
      "Id": "c459e17493b347e7b541bfef665df384",
      "IsHidden": "False"
    },
    {
      "Start": "5e8edbf8ef5e4f92a80d44b3afe37f57",
      "End": "eeebd344ed00448f8ec4d510270e9705",
      "Id": "b1a8ade8c7624e0d8ed3dc36deabfcfe",
      "IsHidden": "False"
    },
    {
      "Start": "e55dd89ff9a0404b9621d0c271beff92",
      "End": "aca1d6f8b19742729eafed6ed0bd51fc",
      "Id": "d06fc9047db44c628d0f4fcd0612ef69",
      "IsHidden": "False"
    },
    {
      "Start": "e55dd89ff9a0404b9621d0c271beff92",
      "End": "610320ad31ed48ec8260038f9fc04632",
      "Id": "10339fb996724ea7a97fd5f158c92d6e",
      "IsHidden": "False"
    },
    {
      "Start": "789f5c51f7754ec884797bf5d0431e2a",
      "End": "514df797c2804540a3f5f98543fcbd27",
      "Id": "306a2529bc224ecea60b25b2dba7a88d",
      "IsHidden": "False"
    },
    {
      "Start": "754160b6c3ac4efe8b2d177864f74fa9",
      "End": "5a1049c0f02a4252a5236115381963cb",
      "Id": "dcda2908bb6348b7aba28fbec6a76b19",
      "IsHidden": "False"
    },
    {
      "Start": "e764907f1ae940b9acfb47767673ad09",
      "End": "d94eea3afab24959a26da9bc59b6b417",
      "Id": "8e9557b904ca44c080f0629188edae64",
      "IsHidden": "False"
    },
    {
      "Start": "d3dfd5855c7b47eab5a3e8c8e342ddbe",
      "End": "5a71fd26c27d4cc1b08af1f0eac4588a",
      "Id": "06fcd82d628c4e6bb11cda29839b7310",
      "IsHidden": "False"
    },
    {
      "Start": "cc757737c31d4220b8c74960a5ae1f8a",
      "End": "ed1a4817141b4ad28aa60f8d4e28037e",
      "Id": "1475e7e2997a466ba256995686651222",
      "IsHidden": "False"
    },
    {
      "Start": "f898bce984174971ae38c03e9b287e39",
      "End": "863be09dcea24f1b9ad23659dae08480",
      "Id": "61f7aab9930d47f4911728b2fecf7083",
      "IsHidden": "False"
    },
    {
      "Start": "ade1393b56004bf8891703a144830808",
      "End": "7710c325719948f18fe7b80d1f79a049",
      "Id": "482441378cb14b3d9544b8f21c80fab7",
      "IsHidden": "False"
    },
    {
      "Start": "ade1393b56004bf8891703a144830808",
      "End": "eee746605fac47c19a090cc3478a8201",
      "Id": "2186141ba4f74bfa870a2852fcae5125",
      "IsHidden": "False"
    },
    {
      "Start": "ade1393b56004bf8891703a144830808",
      "End": "88048086f8a943f4b233dfb2e0e5cc78",
      "Id": "01d5bef1fa1547a3b05b1b71e9474dda",
      "IsHidden": "False"
    },
    {
      "Start": "6945ebb9c08948169fcb24b42a018fce",
      "End": "6d75823357f74198b9ee9c5a29fbc462",
      "Id": "0f3b415db1524e8084b066bc62c8ddc9",
      "IsHidden": "False"
    },
    {
      "Start": "6945ebb9c08948169fcb24b42a018fce",
      "End": "0346a76a71444d4383c76788d25cf664",
      "Id": "4b870d8482324f5590d685645747d317",
      "IsHidden": "False"
    },
    {
      "Start": "bfed9fd339fc41c38d8ab934d2097942",
      "End": "fd79264463f84a3db788bccf7ba06a7a",
      "Id": "902f3928025642de8d77f915e949802c",
      "IsHidden": "False"
    },
    {
      "Start": "77943b197687407db4b9606805e09dff",
      "End": "ca6c24e265574630bc254fa615f8082b",
      "Id": "23d5be614f824614bfa8d1b337431f50",
      "IsHidden": "False"
    },
    {
      "Start": "77943b197687407db4b9606805e09dff",
      "End": "5ec28cf314fe4221b493a7d6dbac0a02",
      "Id": "ffb5b7069acb4e0faa2f566b2ab4d610",
      "IsHidden": "False"
    },
    {
      "Start": "89f680d2072245fc8386f9a9cae12740",
      "End": "80bb9faabeac4d04a11711e7ead6fb8f",
      "Id": "bfad703478524519b162e2d73e7db7ea",
      "IsHidden": "False"
    },
    {
      "Start": "0d6acb62c9ce443d97a85d03354a0cd2",
      "End": "1e620a05e0464907a9ca324fd24e6918",
      "Id": "16231f68985d4f3c8646c74cd80d1a44",
      "IsHidden": "False"
    },
    {
      "Start": "116678e66e87412697c0c98a3bf2c762",
      "End": "328a815c13204b6e8cfb4d0474d77f35",
      "Id": "165328b20b204635b8d79ccef22d6325",
      "IsHidden": "False"
    },
    {
      "Start": "8c9aaf81430241f6a258be01ea56d19f",
      "End": "8b3d5cb3a4bc4f0ead2d5d5bc78f6267",
      "Id": "4f849e76ad744fdfb8c115937ad17baa",
      "IsHidden": "False"
    },
    {
      "Start": "f872d0036a2c413f9e9a1df01027d39c",
      "End": "06e5fd4ad07f4fe1a429b401b26598b5",
      "Id": "1278974e7ad54a36bf5bfc160ad91b19",
      "IsHidden": "False"
    },
    {
      "Start": "6b1b9f7045704075a40d9413e6bcbefc",
      "End": "ec146eb4000147849c7200ebd5295546",
      "Id": "b06109a03af14ea5a3780a933fae9bec",
      "IsHidden": "False"
    },
    {
      "Start": "cb085bffe4f74e1591835666fa427ea8",
      "End": "bb017c26aca14fe1ab77dec9d2c620f8",
      "Id": "b66e40b5277e4c14b2c89d72c87c8ad9",
      "IsHidden": "False"
    },
    {
      "Start": "aad3091993ad4688bfa662f33507c401",
      "End": "e8a61e4ef45e42f0a86ee691083e9c65",
      "Id": "acf3eca14bd249d9aead0d9c8a63454e",
      "IsHidden": "False"
    },
    {
      "Start": "aad3091993ad4688bfa662f33507c401",
      "End": "e51476c387ce40b096395ebc07d39e3c",
      "Id": "3010e9b2865c4282b43489e4110e1118",
      "IsHidden": "False"
    },
    {
      "Start": "dc0efb25a90d4df1a7e73d0a238eea27",
      "End": "056302e62ce0467e882f662bb1ecec4e",
      "Id": "b18585c85bcb4931b8aed914b41bc383",
      "IsHidden": "False"
    },
    {
      "Start": "a1f5189fcfdd4e349b5a41472e994b24",
      "End": "70a5501cc6b844ef8258889c9a562840",
      "Id": "907b0f29e7de4a8ca813e2d50457222a",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "68624bdf90224052bb0718f37d3454b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -100.72222343925256,
        "Y": 156.10695300680254
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "037c97e5858f4350bb3284416b3c06e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 255.0,
        "Y": 255.82393639083273
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "9877a9f109fc4f4b95a044b6b7578844",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1628.0780458820163,
        "Y": 592.94603581772026
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3bea7b2f4766482f9c41d3393f9eeb6f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1403.7461290168364,
        "Y": 667.64931596666065
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b86a5d8b3d124c5eafa569e1e3448e55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1405.5833822923569,
        "Y": 537.6091415677256
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "b1c8abdd881749c78bf73af0a10cdc73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 937.74128964615818,
        "Y": 365.34467735471037
      },
      {
        "Name": "Range",
        "ShowGeometry": true,
        "Id": "ff34ab5841194a1ea753e748d221fbb5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1943.6720514303947,
        "Y": 360.76133880281162
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ab2ba70b6610460f9ab0ea482af9958e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1185.5308955476517,
        "Y": 562.34966732081637
      },
      {
        "Name": "소수 - 파이썬 풀이",
        "ShowGeometry": true,
        "Id": "0a1f1ece28a04fa5bc28aab26cefb54c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 791.75123637604656,
        "Y": -496.72784707339389
      },
      {
        "Name": "Range",
        "ShowGeometry": true,
        "Id": "458f218e7ae646feb0087b6cb7a65feb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1932.32734667321,
        "Y": 1155.15288095477
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3c18959db4884bc0bc73997417351377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1706.69239971538,
        "Y": 1105.63877291981
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "466a31e541b444569ba104780fc04f87",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1560.61599765212,
        "Y": 1298.88953619215
      },
      {
        "Name": "Range",
        "ShowGeometry": true,
        "Id": "f15e06d6727443b1a6717330d629a165",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2213.81425001073,
        "Y": 1240.39198630242
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "bcc1cfaeb92d4bd48002390ddf974b1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2748.43041041936,
        "Y": 1275.61676080221
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "e93689787933479980c232d62b4f79b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2972.6567967498504,
        "Y": 1275.2466000608847
      },
      {
        "Name": "List.Sort",
        "ShowGeometry": true,
        "Id": "390e002183284f258be21882527ec4dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3204.6071061046746,
        "Y": 1272.5556979052917
      },
      {
        "Name": "List.Deconstruct",
        "ShowGeometry": true,
        "Id": "02dc7583fb914404ac1d1750118d36a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2497.75589295434,
        "Y": 1240.03644011737
      },
      {
        "Name": "List.Contains",
        "ShowGeometry": true,
        "Id": "ba6395ac807642c5b7ae55156a35744c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3810.7547057101615,
        "Y": 761.48490885449849
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "37b6ca2661c341bda3b7c84dc4ec9d32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4248.25184127892,
        "Y": 361.87755836891984
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "91b0490e50c045edb15c872e1ca8926c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6639.5613653639784,
        "Y": 639.32142201971374
      },
      {
        "Name": "List.MinimumItem",
        "ShowGeometry": true,
        "Id": "6077c30f4f7a4c4394b82e93b79eb8bd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4662.7936223258175,
        "Y": 492.15442950900251
      },
      {
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Id": "4b35537ffac24694becd1af8cf478386",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4658.7005133348948,
        "Y": 325.89428869392543
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "4a72dac4904e406f9707acd54178bd67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5487.7374680824078,
        "Y": 280.01573368402364
      },
      {
        "Name": "List.AddItemToFront",
        "ShowGeometry": true,
        "Id": "2eb97adb04c84204a1b2984ebaf03dea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3422.9140949699786,
        "Y": 1186.3856082937987
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f360e297ff25421eb4fd6afcaa007cd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3219.3700133290959,
        "Y": 1126.7891206942613
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "a627138e2a3f4ecb96d4a1de283e295d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5139.1618937790054,
        "Y": 87.908086742384967
      },
      {
        "Name": "List.IsEmpty",
        "ShowGeometry": true,
        "Id": "39281ae211af402684342bf37532ce0d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4633.2432112146807,
        "Y": 69.603688010620488
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1006cbc105784a6ebbbebfa370470ddf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4655.1143045392446,
        "Y": 195.58797847749031
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f192b87f5f154e168cd530ba1c36b18f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -97.1761174569272,
        "Y": 318.32615292339
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "89245a8f83084591a174baa72ac6d7ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5214.1525774946977,
        "Y": 505.53971895604946
      },
      {
        "Name": "Object.IsNull",
        "ShowGeometry": true,
        "Id": "701687cf837243cb9e4e0dd403084fc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4948.6717450815759,
        "Y": 427.98030348364171
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e9972efa9c1f420785efa9abeb7de382",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4967.3834610400263,
        "Y": 719.41519361936275
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "07f69a6858e449b79fe025b6b89ff608",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5819.4676380631954,
        "Y": 675.3400414318935
      },
      {
        "Name": "List.RemoveItemAtIndex",
        "ShowGeometry": true,
        "Id": "20fc1e29f3ec4ba3b04fb895ce7b1b45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6170.1242231562846,
        "Y": 579.9824288713171
      }
    ],
    "Annotations": [
      {
        "Id": "a9f5a8b0cd9f4119adb890e28e3309dc",
        "Title": "입력 범위 내 숫자",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9877a9f109fc4f4b95a044b6b7578844",
          "3bea7b2f4766482f9c41d3393f9eeb6f",
          "b86a5d8b3d124c5eafa569e1e3448e55",
          "b1c8abdd881749c78bf73af0a10cdc73",
          "ff34ab5841194a1ea753e748d221fbb5",
          "ab2ba70b6610460f9ab0ea482af9958e"
        ],
        "HasNestedGroups": false,
        "Left": 927.74128964615818,
        "Top": 287.76133880281162,
        "Width": 1198.9307617842364,
        "Height": 521.887977163849,
        "FontSize": 36.0,
        "InitialTop": 360.76133880281162,
        "InitialHeight": 451.88797716384903,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "509545db5daa4cffbdcf2e1cd56cc9bb",
        "Title": "2~N 까지 소수 찾기",
        "DescriptionText": "<Double click here to edit group description>",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "458f218e7ae646feb0087b6cb7a65feb",
          "3c18959db4884bc0bc73997417351377",
          "466a31e541b444569ba104780fc04f87",
          "f15e06d6727443b1a6717330d629a165",
          "bcc1cfaeb92d4bd48002390ddf974b1f",
          "e93689787933479980c232d62b4f79b2",
          "390e002183284f258be21882527ec4dc",
          "02dc7583fb914404ac1d1750118d36a6",
          "f360e297ff25421eb4fd6afcaa007cd6",
          "2eb97adb04c84204a1b2984ebaf03dea"
        ],
        "HasNestedGroups": false,
        "Left": 1550.61599765212,
        "Top": 1032.63877291981,
        "Width": 2107.2980973178583,
        "Height": 404.97798788239993,
        "FontSize": 36.0,
        "InitialTop": 1105.63877291981,
        "InitialHeight": 338.250763272343,
        "TextblockHeight": 63.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -2270.2827138815219,
    "Y": 99.546384183932389,
    "Zoom": 0.49987556709707559
  }
}