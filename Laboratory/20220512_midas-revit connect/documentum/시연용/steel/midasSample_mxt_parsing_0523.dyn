{
  "Uuid": "8b47dd06-70cc-4840-8e1b-5059a86ef541",
  "IsCustomNode": false,
  "Description": "",
  "Name": "midasSample_mxt_parsing_0523",
  "ElementResolver": {
    "ResolutionMap": {
      "Category": {
        "Key": "Revit.Elements.Category",
        "Value": "RevitNodes.dll"
      },
      "Categories": {
        "Key": "archilab.Revit.Elements.Categories",
        "Value": "archilab2023.dll"
      },
      "Select": {
        "Key": "archilab.Revit.Selection.Select",
        "Value": "archilab2023.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "6ef60a0c12c74f8b9326bd1e480c5499",
      "Name": "Column type Prefix",
      "Type": "string",
      "Value": "CL111_RC COL",
      "Description": "Creates a string."
    },
    {
      "Id": "7c175efe56cd4680964b5d016aea5696",
      "Name": "Beam typePrefix",
      "Type": "string",
      "Value": "BMS111_RC BEAM",
      "Description": "Creates a string."
    },
    {
      "Id": "4ce8529e8baf4b07b598cf35d2752091",
      "Name": "Girder typePrefix",
      "Type": "string",
      "Value": "BMS112_RC GIRDER",
      "Description": "Creates a string."
    },
    {
      "Id": "f95b84183ea74903ac16cd41d122e659",
      "Name": "other typePrefix",
      "Type": "string",
      "Value": "BMS112_RC GIRDER",
      "Description": "Creates a string."
    },
    {
      "Id": "01ef8e0f5fb64c37bc1902f1be8bd1da",
      "Name": "FL. Offset",
      "Type": "number",
      "Value": "300",
      "NumberType": "Double",
      "Description": "Creates a number."
    },
    {
      "Id": "75ed5455d6a64ac7b1602dacb164d6d3",
      "Name": "MidasGen mxt File Path",
      "Type": "string",
      "Value": ".\\Ulsan_STB_Steel_New_BOQ.mxt",
      "Description": "Allows you to select a file on the system to get its filename"
    }
  ],
  "Outputs": [
    {
      "Id": "51998c1acb18458785cc3d904bab1df8",
      "Name": "createRvtElem",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nimport re\r\nimport clr\r\n\r\npython_rootpath = os.getenv('LOCALAPPDATA')+'\\Programs\\Python'\r\npython_dir_list = os.listdir(python_rootpath)\r\n\r\np = re.compile('Python\\d{2,5}')\r\nversion_list = list(filter(lambda x: p.match(x), python_dir_list))\r\nversion_num = list(map(lambda x: int(x[7:]), version_list))\r\nlatest_idx= version_num.index(max(version_num))\r\n\r\npython_version = version_list[latest_idx]\r\n\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + f'\\Programs\\Python\\{python_version}\\Lib\\site-packages')\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\n\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\ngo = lambda *args: reduce(lambda a,f: f(a), args)\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputFilePath = IN[0]\r\ninputSheetName = IN[1]\r\n\r\n# Place your code below this line\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef checkAllElement(list, target):\r\n    tmp=[]\r\n    for i in list:\r\n        if i == target:\r\n            tmp.append(True)\r\n        else:\r\n            tmp.append(False)\r\n    return all(tmp)\r\n\r\nrm_Null = lambda list: go(list,\r\n    filter(lambda a: not checkAllElement(a, None)),\r\n    )\r\n\r\ns1 = importExcel(inputFilePath, inputSheetName)\r\n\r\ns2 = rm_Null(s1)  ## null만 있는 Excel Row 제거\r\n\r\nresult_tr = list(zip(*s2))\r\n\r\ns3 = rm_Null(result_tr) ## null만 있는 Excel Column 제거\r\n\r\nresult = list(zip(*s3))\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3a0fc8c0d0b642f6b5c8d53a5b77a40a",
      "Inputs": [
        {
          "Id": "d9fa5821c74f4b7abb5096cea63a8b11",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "751b1cd4e40d4878bd7f821ee7a8a99b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0caae7c6bf3e45d283b3822b037f167a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\MK\\mQ\\Laboratory\\20220512_midas-revit connect\\documentum\\시연용\\steel\\Midas_Sample.xlsx",
      "InputValue": ".\\Midas_Sample.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "fdc75dc9a22547b69806180caf0bc719",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4c957954c4e848739e42f908beb30548",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Sample_Structure_Report",
      "Id": "7b81963427cc4168b875633114370661",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eaa6642726b74009a083002f8834f8b4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput = IN[0]\r\nidf = IN[1]\r\n# Place your code below this line\r\n\r\ndef find_tgrow_idx(tglst, idf, mode):\r\n    if mode == \"sttwith\":\r\n        def chck_identifier(x, idf):\r\n            eres = str(x).startswith(\"['\" + idf)\r\n            return eres\r\n            \r\n    elif mode == \"incld\":\r\n        def chck_identifier(x, idf):\r\n            eres = str(x).find(idf)\r\n            if eres >= 0:\r\n                return True\r\n            else:\r\n                return False\r\n        \r\n    \r\n    bln_res = list(map(lambda x: chck_identifier(x,idf), tglst))\r\n    result = [i for i, x in enumerate(bln_res) if x]\r\n    return result\r\n\r\n\r\nresult = find_tgrow_idx(input, idf, \"sttwith\")\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "9d60e90d202a4d7da8cd89b91f64ebad",
      "Inputs": [
        {
          "Id": "1dda2372bfa44269a5d19fbda32f7255",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f3d411d055d41e8ba926bd12a937dbb",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cd6f38e77a84231a6793f61c7101f81",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\ngo = lambda *args: reduce(lambda a,f: f(a), args)\r\n\r\ndef checkAllElement(list, target):\r\n    tmp=[]\r\n    for i in list:\r\n        if i == target:\r\n            tmp.append(True)\r\n        else:\r\n            tmp.append(False)\r\n    return all(tmp)\r\n\r\nrm_Null = lambda list: go(list,\r\n    filter(lambda a: not checkAllElement(a, None)),\r\n    )\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput = IN[0]\r\nsplit_idx = IN[1]\r\nkey_idx = IN[2]\r\n\r\n# Place your code below this line\r\ndef splitDataAsDict(split_idx, data, key_idx):\r\n\r\n    def calc_range(split_idx):\r\n        res = []\r\n        for i,x in enumerate(split_idx):\r\n            if i < len(split_idx)-1:\r\n                res.append((x, split_idx[i+1]))\r\n            else:\r\n                res.append((x, len(input)))\r\n        return res\r\n    \r\n    range = calc_range(split_idx)\r\n\r\n    result = []\r\n    dic = {}\r\n    for x in range:\r\n        key = str(data[x[0]][key_idx]).split('    ;')[0]\r\n        val1 = data[x[0]+1:x[1]]\r\n        val_tr = list(zip(*val1))\r\n        val = list(zip(*rm_Null(val_tr)))\r\n        dic[str(key)] = val\r\n    return dic\r\n\r\nresult = splitDataAsDict(split_idx, input, key_idx)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "adef3d65e1c04441a11d9a19fc7aaf32",
      "Inputs": [
        {
          "Id": "4742f1e5705843e6bb3bd13bbfbb680a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9404e2fea90d4735bd9abda2efb8648c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33f0e7e42b88411fb2ae3dfa5d2561f7",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf5e0f038c04bb4a265f5141d9a6428",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Keys",
      "Id": "d5576058ed604c238257ec1dae443b03",
      "Inputs": [
        {
          "Id": "b05ee99cbc9e42308215b33a3c961f68",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "051f7e3737d34b12940b3247264a6190",
          "Name": "keys",
          "Description": "The keys of the Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the keys in a Dictionary.\n\nDictionary.Keys: string[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\n\r\ndef find_tgrow_idx(tglst, idf):\r\n\r\n    def chck_identifier(tglst, idf):\r\n        eres = list(map(lambda x: str(x).find(idf), tglst)) \r\n        res = reduce(lambda a,b: a*b, eres)\r\n        if res == 0:\r\n            return True\r\n    \r\n    bln_res = list(map(lambda x: chck_identifier(x,idf), tglst))\r\n    result = [i for i, x in enumerate(bln_res) if x == True]\r\n    return result\r\n\r\ndef removeHeadFromDict(tglst, idf):\r\n    result = []\r\n    del_idx = find_tgrow_idx(tglst,idf)\r\n    for i,x in enumerate(tglst):\r\n        if i in del_idx:\r\n            pass\r\n        else:\r\n            result.append(x)\r\n    return result\r\n\r\nresult = removeHeadFromDict(input,';')\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "85c32552b64047c8a2b6a58370f8f11c",
      "Inputs": [
        {
          "Id": "1c68a54d1a3e4726a20841b6db9b379d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b898d7ba8c60449caf7a4f806e347d9e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\n\r\ndef find_tgrow_idx(tglst, idf):\r\n\r\n    def chck_identifier(tglst, idf):\r\n        eres = list(map(lambda x: str(x).find(idf), tglst)) \r\n        res = reduce(lambda a,b: a*b, eres)\r\n        if res == 0:\r\n            return True\r\n    \r\n    bln_res = list(map(lambda x: chck_identifier(x,idf), tglst))\r\n    result = [i for i, x in enumerate(bln_res) if x == True]\r\n    return result\r\n\r\ndef removeHeadFromDict(tglst, idf):\r\n    result = []\r\n    del_idx = find_tgrow_idx(tglst,idf)\r\n    for i,x in enumerate(tglst):\r\n        if i in del_idx:\r\n            pass\r\n        else:\r\n            result.append(x)\r\n    return result\r\n\r\nresult = removeHeadFromDict(input,';')\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "411b09f5631447c28440594595ecea90",
      "Inputs": [
        {
          "Id": "e183d41990d74443ba18887a942388ad",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3824b4f294a640e7a8c935b58d6b0088",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\ndef findOrigin(pts):\r\n    origin = pts[0]\r\n    \r\n    ori_ptX = origin[1]\r\n    ori_ptY = origin[2]\r\n    ori_pyZ = origin[3]\r\n    origin = (ori_ptX, ori_ptY, ori_pyZ)\r\n    \r\n    return origin\r\n\r\ndef trnslt_pt(pts, origin):\r\n    def set_trPt(pt):\r\n        res = (pt[0], pt[1]-origin[0], pt[2]-origin[1], pt[3]-origin[2])\r\n        return res\r\n        \r\n    result = list(map(lambda x: set_trPt(x), pts))\r\n    return result\r\n\r\norigin = findOrigin(input)\r\nresult = trnslt_pt(input, origin)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "d61f7406ce3844a29d9d06de6a566a1d",
      "Inputs": [
        {
          "Id": "d3a912d29fcb49e8b7808e47b8482b98",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c32bdf682ee440da9f9683b2054930fa",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\n# Place your code below this line\r\ndef mkPoints(pts):\r\n    dic={}\r\n    def mkPoint(pt):\r\n        ptX = pt[1]*1000\r\n        ptY = pt[2]*1000\r\n        ptZ = pt[3]*1000\r\n        gpt = Point.ByCoordinates(ptX, ptY, ptZ)\r\n        return gpt\r\n    \r\n    for x in pts:\r\n        dic[str(x[0])] = mkPoint(x)\r\n    return dic\r\n\r\nresult = mkPoints(input)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "eb8da54debc747ff8665bbc13b6f7a9c",
      "Inputs": [
        {
          "Id": "08ef8d2d5ddd4cd69e39ea17f9f3be1d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39b6c385be924e14a64a57d1735d82c1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\ninStr = IN[1]\r\n\r\n# Place your code below this line\r\n\r\ndef filtering(data, instr, mode):\r\n    if mode == \"neg\":\r\n        res = list(filter(lambda x: instr not in str(x), data))\r\n    else:\r\n        res = list(filter(lambda x: instr in str(x), data))\r\n    return res\r\n\r\n\r\nresult = filtering(input, inStr, \"neg\")\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "a0e80a85bc144d75bd5068d1eb59edf9",
      "Inputs": [
        {
          "Id": "809fe14b9e69476196a80dcf6c7ebeb8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c67fe0c01cb1405b9851e81d773ccef2",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e279eaa4d6049d9850298c0a09894a4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"PLATE\";",
      "Id": "9c467caca546498d82bcfaa3576f42f0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "42ce5c4939e54f61827312d60caaca7f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninDic = IN[0]\r\ninput = IN[1]\r\n\r\n# Place your code below this line\r\n\r\ndef mkCrvsForMember(pts_dic, elem_datas):\r\n    dic = {}\r\n    def mkCrv(pts_dic, x):\r\n        sttPtName = str(x[4])\r\n        endPtName = str(x[5])\r\n        sttPt = inDic[sttPtName]\r\n        endPt = inDic[endPtName]\r\n        rs = Line.ByStartPointEndPoint(sttPt, endPt)\r\n        return rs\r\n    \r\n#    for x in elem_datas:\r\n#        dic[str(x[0])] = (x[3] ,mkCrv(pts_dic, x))\r\n    res = list(map(lambda x: (x[3], mkCrv(pts_dic, x)), elem_datas))\r\n    \r\n    return res\r\n\r\nresult = mkCrvsForMember(inDic, input)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "27a70cb86ec3440c8372a062d2447896",
      "Inputs": [
        {
          "Id": "2434f0466a6647259880cffb76273103",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e5d5d53dd794b34b0ae5ee41e9c1914",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55a52989c2214fcda9659fefc77e5d14",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\n\r\ndef find_tgrow_idx(tglst, idf):\r\n\r\n    def chck_identifier(tglst, idf):\r\n        eres = list(map(lambda x: str(x).find(idf), tglst)) \r\n        res = reduce(lambda a,b: a*b, eres)\r\n        if res == 0:\r\n            return True\r\n    \r\n    bln_res = list(map(lambda x: chck_identifier(x,idf), tglst))\r\n    result = [i for i, x in enumerate(bln_res) if x == True]\r\n    return result\r\n\r\ndef removeHeadFromDict(tglst, idf):\r\n    result = []\r\n    del_idx = find_tgrow_idx(tglst,idf)\r\n    for i,x in enumerate(tglst):\r\n        if i in del_idx:\r\n            pass\r\n        else:\r\n            result.append(x)\r\n    return result\r\n\r\nresult = removeHeadFromDict(input,';')\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "445ef6c3fe6f42a5a092ca486e0b2d31",
      "Inputs": [
        {
          "Id": "32ba9f038ee046ffa9eef48a947231ca",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "326f38d2312943e999c1ec9ce0c870cb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"*\";",
      "Id": "feaf649671464294aaef24ac7fcf5fb3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cef26ccfd88d4524bbd2cd708d780cd5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\ngo = lambda *args: reduce(lambda a,f: f(a), args)\r\n\r\ndef checkAllElement(list, target):\r\n    tmp=[]\r\n    for i in list:\r\n        if i == target:\r\n            tmp.append(True)\r\n        else:\r\n            tmp.append(False)\r\n    return all(tmp)\r\n\r\nrm_Null = lambda list: go(list,\r\n    filter(lambda a: not checkAllElement(a, None)),\r\n    )\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput = IN[0]\r\nsplit_idx = IN[1]\r\nkey_idx = IN[2]\r\n\r\n# Place your code below this line\r\ndef splitDataAsDict(split_idx, data, key_idx):\r\n\r\n    def calc_range(split_idx):\r\n        res = []\r\n        for i,x in enumerate(split_idx):\r\n            if i < len(split_idx)-1:\r\n                res.append((x, split_idx[i+1]))\r\n            else:\r\n                res.append((x, len(input)))\r\n        return res\r\n    \r\n    range = calc_range(split_idx)\r\n\r\n    result = []\r\n    dic = {}\r\n    for x in range:\r\n        key = str(data[x[0]][key_idx]).split('    ;')[0]\r\n        val1 = data[x[0]+1:x[1]]\r\n        val_tr = list(zip(*val1))\r\n        val = list(zip(*rm_Null(val_tr)))\r\n        dic[str(key)] = val\r\n    return dic\r\n\r\nresult = splitDataAsDict(split_idx, input, key_idx)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "316d019e47b1490daa8924482c555883",
      "Inputs": [
        {
          "Id": "0632ba1bba0c4b4e8b110416ccee6922",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6cacea67abf243d08fce2b10fed7d7da",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76417d3655b24c508a97780d85fce933",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e0e17f53842045698baaa2a230b7af96",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\" --\";",
      "Id": "3af304ac50884a26b003d4c6ead127f8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4d1fce9b2a674764812f44af6a672695",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput = IN[0]\r\nidf = IN[1]\r\n# Place your code below this line\r\n\r\ndef find_tgrow_idx(tglst, idf, mode):\r\n    if mode == \"sttwith\":\r\n        def chck_identifier(x, idf):\r\n            eres = str(x).startswith(\"['\" + idf)\r\n            return eres\r\n            \r\n    elif mode == \"incld\":\r\n        def chck_identifier(x, idf):\r\n            eres = str(x).find(idf)\r\n            if eres >= 0:\r\n                return True\r\n            else:\r\n                return False\r\n        \r\n    \r\n    bln_res = list(map(lambda x: chck_identifier(x,idf), tglst))\r\n    result = [i for i, x in enumerate(bln_res) if x]\r\n    return result\r\n\r\n\r\nresult = find_tgrow_idx(input, idf, \"incld\")\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "9865cf313c0943d988f6ae379b0b6f2d",
      "Inputs": [
        {
          "Id": "ccbcf57f5eb24543b9e62321fe75ba04",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cfa08373021f4332928cc36b0282c5ca",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "78299d6d36a94f718da74de9c0265b80",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "aa303862a8e341219b8c075ce5589c28",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "232f1dc68bd54c93a8589c14df580304",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "d102e3bde877476aaef9e3778bc85341",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "81b9186259634f20af2aef1ca9cce3b8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Keys",
      "Id": "14814d1db3a740d09404c5cc8146f2d7",
      "Inputs": [
        {
          "Id": "c477d687b9da49c081803e3f3cc2787c",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac242925acdd445685dc23e4cb70fb5a",
          "Name": "keys",
          "Description": "The keys of the Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the keys in a Dictionary.\n\nDictionary.Keys: string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.DropItems@var[]..[],int",
      "Id": "7481a251a516496eb00d974c60c9485c",
      "Inputs": [
        {
          "Id": "a4292c58704b44b0b743fdbb60483e65",
          "Name": "list",
          "Description": "List to remove items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "477fd5d498a34af8ad4109c33debd9c4",
          "Name": "amount",
          "Description": "Amount of items to remove. If negative, items are removed from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c43041e09dff480a805031675ab7c57a",
          "Name": "list",
          "Description": "List of remaining items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an amount of items from the start of the list. If the amount is a negative value, items are removed from the end of the list.\n\nList.DropItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "-1;",
      "Id": "8dcba0b941c14bea8bc2eee99bf7bd85",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9ada4f2effe248eb876666ad58470806",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\ndef find_unqElev(memberLines):\r\n    tmp = map(lambda x: x[1].StartPoint.Z, memberLines)\r\n    res = sorted(set(tmp))\r\n    \r\n    return res\r\n\r\nresult = find_unqElev(input)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c9cbe5f1fba94993b51d186fc7452f88",
      "Inputs": [
        {
          "Id": "1c96e6719ad44c1ab8fcea23f3331179",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "986fabaf55f04348b69d0f9db96e0962",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nimport Revit\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nexe_bln = IN[0]\r\ninput = IN[1]\r\nfl = IN[2]\r\n# Place your code below this line\r\n\r\ndef mkLevelsForMembers(elevs, fl, exe_bln):\r\n    if exe_bln:\r\n        flElevs = map(lambda x: x+fl*2, input)\r\n        res = map(lambda x: Revit.Elements.Level.ByElevation(x), flElevs)\r\n        return list(map(lambda x: x.SetParameterByName(\"S04) Level\", \"for placing\"), res))\r\n    else:\r\n        pass\r\n    \r\n\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\nresult = mkLevelsForMembers(input, fl, exe_bln)\r\n#result = list(map(lambda x: x.Elevation, mkLevelsForMembers(input, fl)))\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "1a870609fd6d4c72a88380e84cb70656",
      "Inputs": [
        {
          "Id": "0f53574a221f4da2b6ccaf4e506eb24d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "068d93ea94a94377a1916f7cc9f70cd0",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3df77eaa408b4263bcf63761b2a60c89",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c360c5b5d8d43c09f10d68042e2f08d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "f506b7add86c48dc8c9a13117d2358d4",
      "Inputs": [
        {
          "Id": "b6626177390f4373ae1b5d7b7c894215",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6bc3a4f6b0494bd9ab1d306075adcfb8",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2ffa3ca80c1426e907d925a3a7673c4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[3];",
      "Id": "20c4d57501bb4ec9a6d9362ccf1e4e91",
      "Inputs": [
        {
          "Id": "bda07913032245fa8d6b2a9c4f93ae25",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd52408083cd4798b6e06a058d255c9f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector = FilteredElementCollector(doc)\r\n\r\nfrom DSCore import *\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\nlevels = IN[1]\r\nfl = IN[2]\r\n\r\n# Place your code below this line\r\n\r\ndef mkCrvAndLevelDatas(memberDatas, levels):\r\n    def mkElevAndLevelObjDic(levels):\r\n        dic = {}\r\n        for i,x in enumerate(levels):\r\n            dic[str(int(round(x.Elevation)))] = x\r\n        return dic\r\n    \r\n    def find_Elev(memberData):\r\n        stt_res = memberData[1].StartPoint.Z + fl\r\n        end_res = memberData[1].EndPoint.Z + fl\r\n        return (str(int(round(stt_res))), str(int(round(end_res))))\r\n    \r\n    LvObjDic = mkElevAndLevelObjDic(levels)\r\n    res = map(lambda x: List.AddItemToEnd((LvObjDic[find_Elev(x)[0]], LvObjDic[find_Elev(x)[1]]), x), memberDatas)\r\n    \r\n    return list(res)\r\n    \r\nresult = mkCrvAndLevelDatas(input, levels)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "9c6241fcb66a46fd8a4968b2fff35aba",
      "Inputs": [
        {
          "Id": "2a06fe42bc9c416ab928195439a1f17a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25b7d5ed6ddd49cdac56866cfc8e1255",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5870d6746fb4464fa6b1aaf6f1bcde26",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d3c42aaa8fa40cba757fe983767e555",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "06effca41fef412eaf4142e2d6e1c41b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6a8378450ac04f74895a850c75e78e6f",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Revit.Elements import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nsymbolDatas = IN[0]\r\nsymbolnames = map(lambda x: x[0], symbolDatas)\r\nfamily = UnwrapElement(Revit.Elements.Family.ByName(IN[1]))\r\nparamNames = IN[2]\r\n\r\n# Place your code below this line\r\ntypeList = []\r\n\r\nfor s in symbolnames:\r\n    chk = False\r\n    \r\n    fsCollector = FilteredElementCollector(doc)\r\n    fsf = FamilySymbolFilter(family.Id)\r\n    fsCollection = fsCollector.WherePasses(fsf).ToElements()\r\n    \r\n    for symbol in fsCollection:\r\n        \r\n        symbolname = symbol.get_Parameter(BuiltInParameter.SYMBOL_ID_PARAM).AsString()\r\n        \r\n        if symbolname == s:\r\n            typeList.append(symbol.ToDSType(True))\r\n            chk = True\r\n            break\r\n            \r\n    if chk == False:\r\n        TransactionManager.Instance.EnsureInTransaction(doc)\r\n        \r\n        newsymbol = fsCollection[0].Duplicate(s)\r\n        typeList.append(newsymbol.ToDSType(True))\r\n        \r\n        TransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\n\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\nresult = {}\r\nfor i,x in enumerate(typeList):\r\n    for j,y in enumerate(paramNames):\r\n        x.SetParameterByName(y, symbolDatas[i][j+1])\r\n    \r\n    res = x.SetParameterByName(\"Type Comments\", \"for placing\")\r\n    result[str(symbolDatas[i][3])] = res\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5e1897be29a14eb1a1bc529446daf047",
      "Inputs": [
        {
          "Id": "69436860a332472e8aa3dbbdf35a1981",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe74e9b83d0d4267ad3b301095dd9fc3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "399ddbb4453d4269924d0168b7a176ed",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77a2a968395b4427b587611e6a516045",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Concrete-Rectangular-Column_R1",
      "Id": "27db0a4787834a02b4d2926efae93037",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "225d6dfd66bb457789c6c9b1e265664a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "54da54dea3bc4173a93633a19c94e641",
      "Inputs": [
        {
          "Id": "d0076c8341f743229bcae1df012df15a",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f2676cd3eb245b48f956945ed5f84f4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\nunitFactor = IN[1]\r\ntypePrefix = IN[2]\r\n# Place your code below this line\r\n\r\ndef defineFamilytypeName(memDatas, unitFactor, typePrefix):\r\n    \r\n    def findSize(memData):\r\n        shrtSide = round(memData[13]*unitFactor)\r\n        longSide = round(memData[14]*unitFactor)\r\n        typeSuffix = memData[2].split()[0]\r\n        secType = memData[0]\r\n        return (shrtSide, longSide, typeSuffix, secType)\r\n    \r\n    tmp = map(lambda x: findSize(x) ,memDatas)\r\n    res = map(lambda x: [typePrefix+\"_\" + 'x'.join([str(x[0]), str(x[1])]) + \"_\" + x[2], x[0], x[1], x[3]], tmp)\r\n    return res\r\n\r\nresult = defineFamilytypeName(input, unitFactor, typePrefix)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "ee444322f2f84466aaa04679e85791ba",
      "Inputs": [
        {
          "Id": "f0d11ff17112482bb93fcb69410262c5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f78313c4e0a42788d8fc5e6529f8c27",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cad5490b08a04b4884c406c60e183276",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a82e4652da13499985023613a96131d6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "f5fdba28f8c34314922547a62372200e",
      "Inputs": [
        {
          "Id": "b5b6f9cca2234d04afa0f4b3f3af62a9",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3016b9dc29f14da89eebc7e3e6b49f86",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 287,
      "SelectedString": "OST_Levels",
      "NodeType": "ExtensionNode",
      "Id": "d86b8c3615bc4767bc86887562e6a221",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "192be9f1a2c14151be4bb82df5e01d68",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\n\r\nresult = filter(lambda x: x.GetParameterValueByName(\"S04) Level\") == \"for placing\", input)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "bcf34dee4a0c49299b301bbfa4306296",
      "Inputs": [
        {
          "Id": "5cf7a3071d894e0db636f7c7969bd9ab",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c399791ba99f4375927aeb9dd00fda73",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000;",
      "Id": "b8d14528a70948f9a81e077f82c5b12d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2b6f560b9b42461eb1d02b7dd9370393",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "CL111_RC COL",
      "Id": "6ef60a0c12c74f8b9326bd1e480c5499",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eb3264a9e406449aa17cac8fd2b2d168",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Keys",
      "Id": "c2223fcdbb614cf6bfa1ff043758cb70",
      "Inputs": [
        {
          "Id": "5fd644fbaef546b0b082d5ab8e0e497a",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "96086d7dee8b42adbe225605b3376599",
          "Name": "keys",
          "Description": "The keys of the Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the keys in a Dictionary.\n\nDictionary.Keys: string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "79780cfcbaae477b96d34fa21569cb30",
      "Inputs": [
        {
          "Id": "5b60141f53924be38795e7c8a2b0f42a",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa225b59542549e981956e81fa02c48a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[2];",
      "Id": "31ecb92054bb4e3b8b3e19a1ac5e5c01",
      "Inputs": [
        {
          "Id": "7e0970a0de764bfd850a16f411feb77f",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "70219131ffb8463db24cce25fee6412b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "c480a38e956c47d8bc7599a174315ee2",
      "Inputs": [
        {
          "Id": "93e97dfbd85a43418d0b7c29320ebe43",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7edf139db0dc4e65b7e0333415265508",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c395f37d4804d779373d461d0ad87c4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000;",
      "Id": "136141f6c3e14f85a3f893efc0c577f9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "25672c22003e4135a0271ff0475a011e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "BMS111_RC BEAM",
      "Id": "7c175efe56cd4680964b5d016aea5696",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c38ac11bae8d4389adb9fd1e51039c14",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\nunitFactor = IN[1]\r\ntypePrefix = IN[2]\r\n# Place your code below this line\r\n\r\ndef defineFamilytypeName(memDatas, unitFactor, typePrefix):\r\n    \r\n    def findSize(memData):\r\n        shrtSide = round(memData[13]*unitFactor)\r\n        longSide = round(memData[14]*unitFactor)\r\n        typeSuffix = memData[2].split()[0]\r\n        secType = memData[0]\r\n        return (shrtSide, longSide, typeSuffix, secType)\r\n    \r\n    tmp = map(lambda x: findSize(x) ,memDatas)\r\n    res = map(lambda x: [typePrefix+\"_\" + 'x'.join([str(x[0]), str(x[1])]) + \"_\" + x[2], x[0], x[1], x[3]], tmp)\r\n    return res\r\n\r\nresult = defineFamilytypeName(input, unitFactor, typePrefix)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "222e394be4fa46938d3989cc01b1a0dc",
      "Inputs": [
        {
          "Id": "7f51e010128348a2af4d304e64815745",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5df5c1e71d04231af8002f886646501",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d7f05b1414649cc9d694efa852b89bb",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65e641c6e9024b17a227e17a11e204f9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Keys",
      "Id": "304b8f76efc04d5087a05f152cd57e3e",
      "Inputs": [
        {
          "Id": "dac9b9bf392949da85c6f8d851fb9634",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf8774c22abc4d36b5efe1f250d6fdc6",
          "Name": "keys",
          "Description": "The keys of the Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the keys in a Dictionary.\n\nDictionary.Keys: string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "91c3f7020c7041cbad3b23cf47cd9feb",
      "Inputs": [
        {
          "Id": "4d545f9ef95d49e585e7abde1e765222",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "33696455ec4d49049f3267dc4111b248",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[1];",
      "Id": "38af8cdfcafd48b893cc744c6b35cef0",
      "Inputs": [
        {
          "Id": "ad5931bb6e5a48f5b7dda0b9270141f6",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ca46becf96d4efe98d6e30a993f9132",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "e5cf510092ad412bacc56ccb703c9bfb",
      "Inputs": [
        {
          "Id": "e191fbaee369473fb955ceb7b477ee31",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "19a3d126ac1f4efebabe52a18a07e85e",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c167502e9144527ab56395b93d94d56",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000;",
      "Id": "2090b446ba8f45bca94956221bf4aeab",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "899493c60d1849ebb0b14f0dc6802b8f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "BMS112_RC GIRDER",
      "Id": "4ce8529e8baf4b07b598cf35d2752091",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8b935260d1c04de1a6147c46009efddb",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\nunitFactor = IN[1]\r\ntypePrefix = IN[2]\r\n# Place your code below this line\r\n\r\ndef defineFamilytypeName(memDatas, unitFactor, typePrefix):\r\n    \r\n    def findSize(memData):\r\n        shrtSide = round(memData[13]*unitFactor)\r\n        longSide = round(memData[14]*unitFactor)\r\n        typeSuffix = memData[2].split()[0]\r\n        secType = memData[0]\r\n        return (shrtSide, longSide, typeSuffix, secType)\r\n    \r\n    tmp = map(lambda x: findSize(x) ,memDatas)\r\n    res = map(lambda x: [typePrefix+\"_\" + 'x'.join([str(x[0]), str(x[1])]) + \"_\" + x[2], x[0], x[1], x[3]], tmp)\r\n    return res\r\n\r\nresult = defineFamilytypeName(input, unitFactor, typePrefix)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5cd8fc248120422ba0a0a868cbf0b261",
      "Inputs": [
        {
          "Id": "d5a5c85ae70b40b1912377ee92ec1a83",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2029e12918c4d4096148d4011b2b072",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0e2ddbaf4bb45518794a7ce4bd1989f",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "156de59da8a544f393406bd4cfdac500",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Keys",
      "Id": "e6ea7a095a0d4c70baa7485ced85f107",
      "Inputs": [
        {
          "Id": "4d60a27650f14740ac4ac8b1be01278f",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82033e23873443089e4dcff9b61ffc31",
          "Name": "keys",
          "Description": "The keys of the Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the keys in a Dictionary.\n\nDictionary.Keys: string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "7244678cad9a4cbf9e8e75675a509a71",
      "Inputs": [
        {
          "Id": "b533af932d2948d48ee529760d853276",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bdd40a34afe3432e9ab027e4c8ddd7d4",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a37335a9d6e045889b4c15804de49f1d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "74cc058fb68545a6a9cce4dd54dccfe7",
      "Inputs": [
        {
          "Id": "b397604f07804001b28284565d034f6b",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d5ba1696a7e44506bb8154f6e4d65fb0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "7633d4e7a0a84f328bd75eff9f1728ba",
      "Inputs": [
        {
          "Id": "880c402f48124525b0f9cf87a3098ec4",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b460a625029a42b6b42d1ec81bb38722",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Dummy\";",
      "Id": "0703abeec8d046de825a140254178cb3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9d79a7302176450db00e56a6709e60b0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\ninStr = IN[1]\r\n\r\n# Place your code below this line\r\n\r\ndef filtering(data, instr, mode):\r\n    if mode == \"neg\":\r\n        res = list(filter(lambda x: instr not in str(x), data))\r\n    else:\r\n        res = list(filter(lambda x: instr in str(x), data))\r\n    return res\r\n\r\n\r\nresult = filtering(input, inStr, \"neg\")\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "59ddde110294474b954b72f51dcf3107",
      "Inputs": [
        {
          "Id": "6feefd9599794ee58a1fbf6052230466",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c67dabe4dd9d4c0aa867c53bb0e4a4a4",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aeb0700a8d6a429eb18db17697786614",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Values",
      "Id": "351cef0f6aad41c59d0014806b29a0f1",
      "Inputs": [
        {
          "Id": "face3bd0d65d48bd9b78d0a11792869a",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8945dcf40fd421eadb7ecbac06bc9ec",
          "Name": "values",
          "Description": "The values of the Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the values in a Dictionary.\n\nDictionary.Values: var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Length\",\n\"Width\"];",
      "Id": "4db7be5acb304ddd8b2ced581a2a4209",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cf47385653bf4551a25679d017540c59",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Revit.Elements import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nsymbolDatas = IN[0]\r\nsymbolnames = map(lambda x: x[0], symbolDatas)\r\nfamily = UnwrapElement(Revit.Elements.Family.ByName(IN[1]))\r\nparamNames = IN[2]\r\n\r\n# Place your code below this line\r\ntypeList = []\r\n\r\nfor s in symbolnames:\r\n    chk = False\r\n    \r\n    fsCollector = FilteredElementCollector(doc)\r\n    fsf = FamilySymbolFilter(family.Id)\r\n    fsCollection = fsCollector.WherePasses(fsf).ToElements()\r\n    \r\n    for symbol in fsCollection:\r\n        \r\n        symbolname = symbol.get_Parameter(BuiltInParameter.SYMBOL_ID_PARAM).AsString()\r\n        \r\n        if symbolname == s:\r\n            typeList.append(symbol.ToDSType(True))\r\n            chk = True\r\n            break\r\n            \r\n    if chk == False:\r\n        TransactionManager.Instance.EnsureInTransaction(doc)\r\n        \r\n        newsymbol = fsCollection[0].Duplicate(s)\r\n        typeList.append(newsymbol.ToDSType(True))\r\n        \r\n        TransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\n\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\nresult = {}\r\nfor i,x in enumerate(typeList):\r\n    for j,y in enumerate(paramNames):\r\n        x.SetParameterByName(y, symbolDatas[i][j+1])\r\n    \r\n    res = x.SetParameterByName(\"Type Comments\", \"for placing\")\r\n    result[str(symbolDatas[i][3])] = res\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "1bff014179f64979970ce119cd4f5122",
      "Inputs": [
        {
          "Id": "da885b72c45d4569b99ea1d4917b34d3",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82b99ce27dc541a78091e1b9b819fd36",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4bdf5c8da823418eb5a4d5a1c2001182",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86a82a9bc8974e399bb14891c290b6a9",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Concrete-Rectangular-Beam",
      "Id": "7000f94ab50d424f9a66eb252d3a7c75",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6e9c4fae45094c2ab79920efb15e5a6a",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Height\",\n\"Width\"];",
      "Id": "a58319ec5a824c3ca38a22715c8af27a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3cd860203976439e9e16a8875aec977a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Revit.Elements import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nsymbolDatas = IN[0]\r\nsymbolnames = map(lambda x: x[0], symbolDatas)\r\nfamily = UnwrapElement(Revit.Elements.Family.ByName(IN[1]))\r\nparamNames = IN[2]\r\n\r\n# Place your code below this line\r\ntypeList = []\r\n\r\nfor s in symbolnames:\r\n    chk = False\r\n    \r\n    fsCollector = FilteredElementCollector(doc)\r\n    fsf = FamilySymbolFilter(family.Id)\r\n    fsCollection = fsCollector.WherePasses(fsf).ToElements()\r\n    \r\n    for symbol in fsCollection:\r\n        \r\n        symbolname = symbol.get_Parameter(BuiltInParameter.SYMBOL_ID_PARAM).AsString()\r\n        \r\n        if symbolname == s:\r\n            typeList.append(symbol.ToDSType(True))\r\n            chk = True\r\n            break\r\n            \r\n    if chk == False:\r\n        TransactionManager.Instance.EnsureInTransaction(doc)\r\n        \r\n        newsymbol = fsCollection[0].Duplicate(s)\r\n        typeList.append(newsymbol.ToDSType(True))\r\n        \r\n        TransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\n\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\nresult = {}\r\nfor i,x in enumerate(typeList):\r\n    for j,y in enumerate(paramNames):\r\n        x.SetParameterByName(y, symbolDatas[i][j+1])\r\n    \r\n    res = x.SetParameterByName(\"Type Comments\", \"for placing\")\r\n    result[str(symbolDatas[i][3])] = res\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "897887d4af434fa486759ed30ceb5949",
      "Inputs": [
        {
          "Id": "57100a94fc214730949ae03cfe00ebde",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4aebc595822942139cd2c78e3acd0194",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8fe713ceca124e84a47e8b7402d0d0bd",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8390d153fd1743b496623dde0f0dd060",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Concrete-Rectangular-Beam",
      "Id": "96407e964fc8454ba3004c32d0e676c2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b06ae3b0ce6c47638d0ad54a70b86b18",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Height\",\n\"Width\"];",
      "Id": "4461d93bbc3a433daaab1702b75813d9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9f380e3e46c34acfa633f0f9efbf8dff",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom Revit.Elements import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nsymbolDatas = IN[0]\r\nsymbolnames = map(lambda x: x[0], symbolDatas)\r\nfamily = UnwrapElement(Revit.Elements.Family.ByName(IN[1]))\r\nparamNames = IN[2]\r\n\r\n# Place your code below this line\r\ntypeList = []\r\n\r\nfor s in symbolnames:\r\n    chk = False\r\n    \r\n    fsCollector = FilteredElementCollector(doc)\r\n    fsf = FamilySymbolFilter(family.Id)\r\n    fsCollection = fsCollector.WherePasses(fsf).ToElements()\r\n    \r\n    for symbol in fsCollection:\r\n        \r\n        symbolname = symbol.get_Parameter(BuiltInParameter.SYMBOL_ID_PARAM).AsString()\r\n        \r\n        if symbolname == s:\r\n            typeList.append(symbol.ToDSType(True))\r\n            chk = True\r\n            break\r\n            \r\n    if chk == False:\r\n        TransactionManager.Instance.EnsureInTransaction(doc)\r\n        \r\n        newsymbol = fsCollection[0].Duplicate(s)\r\n        typeList.append(newsymbol.ToDSType(True))\r\n        \r\n        TransactionManager.Instance.TransactionTaskDone()\r\n\r\n\r\n\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\nresult = {}\r\nfor i,x in enumerate(typeList):\r\n    for j,y in enumerate(paramNames):\r\n        x.SetParameterByName(y, symbolDatas[i][j+1])\r\n    \r\n    res = x.SetParameterByName(\"Type Comments\", \"for placing\")\r\n    result[str(symbolDatas[i][3])] = res\r\nTransactionManager.Instance.TransactionTaskDone()\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "7f2b13d75a824f88b87c5913c65755aa",
      "Inputs": [
        {
          "Id": "79d4af37ab45476db2e5cd37dbcab3f9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a3536caed20c4b83ad22a18e836e8a12",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63b1f2798acd4eda8ac4af6bed8b2ce2",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24702ca0ab4340b0abeae27c6ee6907b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Concrete-Rectangular-Beam",
      "Id": "ea24e36205a24b3aa2c6bc4c9ec07882",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b38f6bffeb87417293c5a015cf3aa2e1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Height\",\n\"Width\"];",
      "Id": "f5d70e7c1e724ac0ba7e7f7e7fbd2f31",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d22b2912ca0747a9816c1ab60e1b8252",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\nunitFactor = IN[1]\r\ntypePrefix = IN[2]\r\n# Place your code below this line\r\n\r\ndef defineFamilytypeName(memDatas, unitFactor, typePrefix):\r\n    \r\n    def findSize(memData):\r\n        shrtSide = round(memData[13]*unitFactor)\r\n        longSide = round(memData[14]*unitFactor)\r\n        typeSuffix = memData[2].split()[0]\r\n        secType = memData[0]\r\n        return (shrtSide, longSide, typeSuffix, secType)\r\n    \r\n    tmp = map(lambda x: findSize(x) ,memDatas)\r\n    res = map(lambda x: [typePrefix+\"_\" + 'x'.join([str(x[0]), str(x[1])]) + \"_\" + x[2], x[0], x[1], x[3]], tmp)\r\n    return res\r\n\r\nresult = defineFamilytypeName(input, unitFactor, typePrefix)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "8981acdbbc4043d39e4c209baec66463",
      "Inputs": [
        {
          "Id": "3ed10be7272848f2a4eeebe4e58d25c6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1115453596e4447f9e33bbea0b8ee845",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "130aecbe778a415395318a8071df1749",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d11be3248c1a4f9bb3da9bc5a6aa7e13",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000;",
      "Id": "9cc27e0e4f034312afa4c15acb1dac7f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "22ab6199cca64b1bb53f531df250163a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "BMS112_RC GIRDER",
      "Id": "f95b84183ea74903ac16cd41d122e659",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6bb921c7ab4d454c93977f91f0df4aa8",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;\nj;",
      "Id": "8edc68c7b03845468195d2772150ebe3",
      "Inputs": [
        {
          "Id": "f9bcde4f946b4f389e5b4fcea6494ebe",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b57b6a6fa7b941e689de3195798842d8",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c17314cc1b494543970b09e3eb0654c9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2acc4c1f534e4d87a412cde409b3a156",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector = FilteredElementCollector(doc)\r\n\r\nfrom DSCore import *\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ntypeDic = IN[0]\r\nCrvAndLevelDatas = IN[1]\r\n\r\n\r\n# Place your code below this line\r\n\r\ndef mkSet_CrvLvType(typeDic, CrvAndLevelDatas):\r\n    res = map(lambda x: List.AddItemToEnd(typeDic[str(x[0])], x),CrvAndLevelDatas)\r\n    return res\r\n    \r\nresult = mkSet_CrvLvType(typeDic, CrvAndLevelDatas)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "b5997c56ec0144998091562336fb29da",
      "Inputs": [
        {
          "Id": "e99a1d7f71d44aa79569d4972ae43af1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dfd8dc30c4924ab2859afa5f79c6f99e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5f297c8d31847a9919da6bf8c2535d7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n\r\n# Place your code below this line\r\ndef mergeDict(dict1, dict2):\r\n    res = dict(dict2, **dict1)\r\n    return res\r\n\r\nresult = reduce(mergeDict, IN)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "aa13041761fb408289ca690456ed2eb0",
      "Inputs": [
        {
          "Id": "f4fcf439b8d84a90b2d1e220f41443bc",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b8c8ca9c5bb4057b336d4c45fe2711a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "355aaf649a20465ab7916af275598ee4",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2d072da4cde4158b894a6e007d1a049",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02facd31631840b49cc645b3af54eff5",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector = FilteredElementCollector(doc)\r\n\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nfrom DSCore import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\ndef crtRvtElems(CrvLvTypes):\r\n    def crtElem(CrvLvType):\r\n        _crv = CrvLvType[1]\r\n        _lv1 = CrvLvType[2][0]\r\n        _lv2 = CrvLvType[2][1]\r\n        _type = CrvLvType[3]\r\n        _cat = CrvLvType[3].GetParameterValueByName(\"Category\")\r\n        \r\n        if str(_cat) == \"Structural Columns\":\r\n            res = Revit.Elements.StructuralFraming.ColumnByCurve(_crv, _lv1, _type)\r\n            res.SetParameterByName(\"Top Level\", _lv2)\r\n            res.SetParameterByName(\"Base Offset\", 0)\r\n            res.SetParameterByName(\"Top Offset\", 0)\r\n        elif str(_cat) == \"Structural Framing\":\r\n            res = Revit.Elements.StructuralFraming.BeamByCurve(_crv, _lv1, _type)\r\n            res.SetParameterByName(\"Reference Level\", _lv1)\r\n            res.SetParameterByName(\"Start Level Offset\", 0)\r\n            res.SetParameterByName(\"End Level Offset\", 0)\r\n        else:\r\n            pass\r\n        \r\n        return res\r\n    res = map(lambda x: crtElem(x), CrvLvTypes)\r\n    \r\n    return res\r\n\r\nTransactionManager.Instance.EnsureInTransaction(doc)\r\nresult = crtRvtElems(input)\r\nTransactionManager.Instance.TransactionTaskDone()\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "51998c1acb18458785cc3d904bab1df8",
      "Inputs": [
        {
          "Id": "1592d1c16bbe4d009d844fe2586edd32",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ac48ab51f1344d9a572811e98bc088c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 300.0,
      "Id": "01ef8e0f5fb64c37bc1902f1be8bd1da",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c5ab4b299b9f4923909209fe1d9eeb83",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\MK\\mQ\\Laboratory\\20220512_midas-revit connect\\documentum\\시연용\\steel\\Ulsan_STB_Steel_New_BOQ.mxt",
      "InputValue": ".\\Ulsan_STB_Steel_New_BOQ.mxt",
      "NodeType": "ExtensionNode",
      "Id": "75ed5455d6a64ac7b1602dacb164d6d3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c20f80bc424a459cb61db48adca11e05",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportCSV@string,bool",
      "Id": "9f8b1a45d42d4cb19303ea9aae76fcb8",
      "Inputs": [
        {
          "Id": "89293da5b78a4c2eb7beec8100e4f8c6",
          "Name": "filePath",
          "Description": "The CSV file to be converted into a list.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69b35f36bdeb46b5b369c4cb29c0c616",
          "Name": "transpose",
          "Description": "Whether the resulting list should be transposed.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5aac8d4921444049a560779b171def0",
          "Name": "list",
          "Description": "The list containing the items in the CSV file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Imports data from a CSV (comma separated values) file, put the items into a list and transpose it if needed.\n\nData.ImportCSV (filePath: string, transpose: bool = false): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nimport re\r\nimport clr\r\n\r\n#python_rootpath = os.getenv('LOCALAPPDATA')+'\\Programs\\Python'\r\n#python_dir_list = os.listdir(python_rootpath)\r\n#\r\n#p = re.compile('Python\\d{2,5}')\r\n#version_list = list(filter(lambda x: p.match(x), python_dir_list))\r\n#version_num = list(map(lambda x: int(x[7:]), version_list))\r\n#latest_idx= version_num.index(max(version_num))\r\n#\r\n#python_version = version_list[latest_idx]\r\n#\r\n#sys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + f'\\Programs\\Python\\{python_version}\\Lib\\site-packages')\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom collections import Iterable\r\nimport datetime\r\n#import openpyxl\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\n\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\ngo = lambda *args: reduce(lambda a,f: f(a), args)\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputData = IN[0]\r\n# Place your code below this line\r\ndef checkAllElement(list, target):\r\n    tmp=[]\r\n    for i in list:\r\n        if i == target:\r\n            tmp.append(True)\r\n        else:\r\n            tmp.append(False)\r\n    return all(tmp)\r\n\r\nrm_Null = lambda list: go(list,\r\n    filter(lambda a: not checkAllElement(a, None)),\r\n    )\r\n\r\ns1 = inputData\r\n\r\ns2 = rm_Null(s1)  ## null만 있는 Excel Row 제거\r\n\r\nresult_tr = list(zip(*s2))\r\n\r\ns3 = rm_Null(result_tr) ## null만 있는 Excel Column 제거\r\n\r\nresult = list(zip(*s3))\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "9b19eeccda744703b3b3733ecee00ee0",
      "Inputs": [
        {
          "Id": "e00dff00c09740ee9dbced573cc05c9e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22f6255f407548008e209d2090529372",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "1b6a570f658e45d185dc4df31330cae8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b3b0d39af2404ddcad66b123189a5a43",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDic = IN[0]\r\nkeyStr = IN[1]\r\n\r\n# Place your code below this line\r\n\r\ndef informSelect(inputDic, keyStr):\r\n    titles = inputDic.keys()\r\n    res = filter(lambda x: keyStr in x, titles)\r\n    targetKey = list(res)[0]\r\n    return inputDic[targetKey]\r\n\r\nresult = informSelect(inputDic, keyStr)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c38eeae2797c4af99a0b6f00ce02b11d",
      "Inputs": [
        {
          "Id": "f4fa6a43ad334cb0be1a86d3e0c0103f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ed5b6fcea4d4e6dabff856c370885bf",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ee11453dbf9b4828a1359ee583afbeb8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SECTION\";",
      "Id": "a1ddbb3b11874f10b9b0d18ff3b09dbc",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b4320a8ca58f4ce1bb9f994a0749734c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"NODE\";",
      "Id": "c4f0b843ee56411d93ae5ae30f17f3a8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5774ef9f8fd34904ad56a6353ac0e137",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDic = IN[0]\r\nkeyStr = IN[1]\r\n\r\n# Place your code below this line\r\n\r\ndef informSelect(inputDic, keyStr):\r\n    titles = inputDic.keys()\r\n    res = filter(lambda x: keyStr in x, titles)\r\n    targetKey = list(res)[0]\r\n    return inputDic[targetKey]\r\n\r\nresult = informSelect(inputDic, keyStr)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "1771ac21352444a491ee0fcb4f270147",
      "Inputs": [
        {
          "Id": "3a3e3caea5a041e3abcbfe712a7cfc88",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9a9215c8a4e447eeb35edd56b2611e27",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3738763e8534c4e8866672b7685d45c",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"ELEMENT\";",
      "Id": "d33b50c202f7442eaf0dcdc76ffd72f1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f7baf6e9363642bbb2b734f4db5c323b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputDic = IN[0]\r\nkeyStr = IN[1]\r\n\r\n# Place your code below this line\r\n\r\ndef informSelect(inputDic, keyStr):\r\n    titles = inputDic.keys()\r\n    res = filter(lambda x: keyStr in x, titles)\r\n    targetKey = list(res)[0]\r\n    return inputDic[targetKey]\r\n\r\nresult = informSelect(inputDic, keyStr)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "474ee6e902824f26b2d9e4b56f3585cf",
      "Inputs": [
        {
          "Id": "5d4868b9f37c4203baeef6b069cc86be",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b81089f975b54023a4cef4452f3336b8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5fc05c71eba146e6bf070881575e010d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninDic = IN[0]\r\ninput = IN[1]\r\n\r\n# Place your code below this line\r\n\r\ndef mkCrvsForMember(pts_dic, elem_datas):\r\n    dic = {}\r\n    def mkCrv(pts_dic, x):\r\n        sttPtName = str(x[4])\r\n        endPtName = str(x[5])\r\n        sttPt = inDic[sttPtName]\r\n        endPt = inDic[endPtName]\r\n        rs = Line.ByStartPointEndPoint(sttPt, endPt)\r\n        return rs\r\n    \r\n#    for x in elem_datas:\r\n#        dic[str(x[0])] = (x[3] ,mkCrv(pts_dic, x))\r\n    res = list(map(lambda x: (x[3], mkCrv(pts_dic, x), x[6]), elem_datas))\r\n    \r\n    return res\r\n\r\nresult = mkCrvsForMember(inDic, input)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "9ed0acf8133b4e778fbbc3bf45e6cadf",
      "Inputs": [
        {
          "Id": "5bfe23a3778c4d2686d78e192402772d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e755a657d43d419c8d8da020089da176",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39fc3de8b20c4ae8a44788ba9ec60b54",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "ecffa58bea224f578085b982c7057235",
      "Inputs": [
        {
          "Id": "4f24dd136e6d4a0cb5d5c067286f35c2",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f800df139104ad98c3601f7a183696f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector = FilteredElementCollector(doc)\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nfrom Revit.Elements import ElementWrapper\r\nimport DSCore\r\n\r\nimport re\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\nallTypeObjOfCat = collector.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsElementType().ToElements()\r\n\r\ndef mkFmtObj(_typeObj):\r\n    _parts = _typeObj.get_Name().split('_')\r\n        \r\n    def selcByCond(_list, _idx):\r\n        if _idx < len(_list):\r\n            return _list[_idx]\r\n        else:\r\n            return \"n/a\"\r\n    \r\n    def findFmtCode(_list, _idx, _str):\r\n        target = selcByCond(_list, _idx)\r\n        p = re.compile(_str)\r\n        if p.match(target):\r\n            return target\r\n        else:\r\n            return \"n/a\"\r\n\r\n    def findFmtType(_list, _idx):\r\n        _target = selcByCond(_list, _idx)\r\n        target = _target.split('-')\r\n        return target\r\n        \r\n        \r\n    def findFmtSize(_list, _str, _fmtType):\r\n        target = selcByCond(_fmtType, 1)\r\n        p = re.compile(_str)\r\n        if target == \"n/a\":\r\n            if len(_list) > 1:\r\n                try:\r\n                    target = list(filter(lambda x: p.match(x.replace(\" \", \"\")), _list))[0]\r\n                except:\r\n                    target = \"n/a\"\r\n            else:\r\n                target = list(filter(lambda x: p.match(x.replace(\" \", \"\")), _list))\r\n        \r\n        if isinstance(target, list):\r\n            if len(target) > 0:\r\n                return target[0]\r\n            else:\r\n                return target\r\n        else:\r\n            return target\r\n    \r\n#    def findFmtSize(_obj):\r\n#        obj = _obj.ToDSType(True)\r\n#        params = obj.Parameters\r\n#        \r\n#        tmp = filter(lambda x: x.Group == \"PG_GEOMETRY\", params)\r\n#        res = map(lambda x: (x.get_Name(), x.get_Value()), tmp)\r\n#\r\n#        return tmp\r\n                \r\n    fmtCode = findFmtCode(_parts, 0, \"\\D{2,4}\\d{2,4}\")\r\n    fmtType = findFmtType(_parts, 1)\r\n    _fmtSize = findFmtSize(_parts, \"\\d\", fmtType) #findFmtSize(_typeObj)\r\n    fmtSize = [\"n/a\" if _fmtSize == [] else _fmtSize.replace('×','x')][0]\r\n    fmtMark = \"\"\r\n    fmtId = \"\"\r\n    \r\n    res = {\r\n        \"fmtObj\": _typeObj,\r\n        \"fmtCode\": fmtCode,\r\n        \"fmtType\": fmtType[0],\r\n        \"fmtSize\": fmtSize.split('x'),#[\"n/a\" if fmtSize == [] else fmtSize.split('x')],\r\n        \"fmtMark\": fmtMark,\r\n        \"fmtId\": fmtId\r\n    }\r\n    \r\n    return res\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = map(mkFmtObj, allTypeObjOfCat)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "1b2ed5df2e36441d9d5a195400a4dd18",
      "Inputs": [
        {
          "Id": "d95ee284c7f146578a2abbdfb2c09232",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "997351a77d1f4006be1784463adde097",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector = FilteredElementCollector(doc)\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\nallTypeObjOfCat = collector.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsElementType().ToElements()\r\n\r\n\r\nallFamTypes = list(map(lambda x: x, allTypeObjOfCat))\r\nallTypeNames = list(map(lambda x: x, allFamTypes))\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dir(allFamTypes[35])",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "b38c22db5c3c4c73ba58644e758d9cd4",
      "Inputs": [
        {
          "Id": "7697a7eebede4163b3cd7db63a72dce1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e38d43c1c9ff4e46a2e75580285d1e30",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector = FilteredElementCollector(doc)\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\nallTypeObjOfCat = collector.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsElementType().ToElements()\r\n\r\n\r\nallFamTypes = list(map(lambda x: x, allTypeObjOfCat))\r\nallTypeNames = list(map(lambda x: x, allFamTypes))\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = allTypeObjOfCat[35].get_Name()",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "2bdf39604514405aba81f77d1cd03511",
      "Inputs": [
        {
          "Id": "928c08553bd947f0a2438946bef9dea8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "581aa881895c4a6489a6d485ce55fbf8",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector = FilteredElementCollector(doc)\r\n\r\nimport re\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\nallTypeObjOfCat = collector.OfCategory(BuiltInCategory.OST_StructuralFraming).WhereElementIsElementType().ToElements()\r\n\r\n\r\nallFamTypeNames = map(lambda x: x.get_Name(), allTypeObjOfCat)\r\nallTypeSize = map(lambda x: x.split('_'), allFamTypeNames)\r\np = re.compile('\\d{1,}..x\\d{1,}')\r\n\r\n\r\nresult = map(lambda x: p.finditer(x), allFamTypeNames)\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = allTypeObjOfCat",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3834eed4fedd427485567a6d64148346",
      "Inputs": [
        {
          "Id": "74dcdf2f83bc4bfb8d0297cdc4459f6f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "779085fbfb204a67a9e67ece6aa5b7a6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector = FilteredElementCollector(doc)\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nfrom Revit.Elements import ElementWrapper\r\nimport DSCore\r\n\r\nimport re\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\nallTypeObjOfCat = collector.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsElementType().ToElements()\r\n\r\ndef mkFmtObj(_typeObj):\r\n    _parts = _typeObj.get_Name().split('_')\r\n        \r\n    def selcByCond(_list, _idx):\r\n        if _idx < len(_list):\r\n            return _list[_idx]\r\n        else:\r\n            return \"n/a\"\r\n    \r\n    def findFmtCode(_list, _idx, _str):\r\n        target = selcByCond(_list, _idx)\r\n        p = re.compile(_str)\r\n        if p.match(target):\r\n            return target\r\n        else:\r\n            return \"n/a\"\r\n\r\n    def findFmtType(_list, _idx):\r\n        _target = selcByCond(_list, _idx)\r\n        target = _target.split('-')\r\n        return target\r\n\r\n    def findFmtSize(_list, _str, _fmtType):\r\n        target = selcByCond(_fmtType, 1)\r\n        p = re.compile(_str)\r\n        if target == \"n/a\":\r\n            if len(_list) > 1:\r\n                try:\r\n                    target = list(filter(lambda x: p.match(x.replace(\" \", \"\")), _list))[0]\r\n                except:\r\n                    target = \"n/a\"\r\n            else:\r\n                target = list(filter(lambda x: p.match(x.replace(\" \", \"\")), _list))\r\n        \r\n        if isinstance(target, list):\r\n            if len(target) > 0:\r\n                return target[0]\r\n            else:\r\n                return target\r\n        else:\r\n            return target\r\n    \r\n#    def findFmtSize(_obj):\r\n#        obj = _obj.ToDSType(True)\r\n#        params = obj.Parameters\r\n#        \r\n#        tmp = filter(lambda x: x.Group == \"PG_GEOMETRY\", params)\r\n#        res = map(lambda x: (x.get_Name(), x.get_Value()), tmp)\r\n#\r\n#        return tmp\r\n                \r\n    fmtCode = findFmtCode(_parts, 0, \"\\D{2,4}\\d{2,4}\")\r\n    fmtType = findFmtType(_parts, 1)\r\n    _fmtSize = findFmtSize(_parts, \"\\d\", fmtType) #findFmtSize(_typeObj)\r\n    fmtSize = [\"n/a\" if _fmtSize == [] else _fmtSize.replace('×','x')][0]\r\n    fmtMark = \"\"\r\n    fmtId = \"\"\r\n    \r\n    res = {\r\n        \"fmtObj\": _typeObj,\r\n        \"fmtCode\": fmtCode,\r\n        \"fmtType\": fmtType[0],\r\n        \"fmtSize\": fmtSize.split('x'),#[\"n/a\" if fmtSize == [] else fmtSize.split('x')],\r\n        \"fmtMark\": fmtMark,\r\n        \"fmtId\": fmtId\r\n    }\r\n    \r\n    return res\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = map(mkFmtObj, allTypeObjOfCat)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "28a357fd86ec4fc0b39a3ed324dc51ba",
      "Inputs": [
        {
          "Id": "ab4737c41d664528883215e2642c842d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3eac508e394b4c28945724f48551da91",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitAPI')\r\nfrom Autodesk.Revit.DB import *\r\nimport Autodesk\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\ncollector = FilteredElementCollector(doc)\r\n\r\nimport re\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\n\r\nallTypeObjOfCat = collector.OfCategory(BuiltInCategory.OST_StructuralColumns).WhereElementIsElementType().ToElements()\r\n\r\n\r\nallFamTypeNames = map(lambda x: x.get_Name(), allTypeObjOfCat)\r\nallTypeSize = map(lambda x: x.split('_'), allFamTypeNames)\r\np = re.compile('\\d{1,}..x\\d{1,}')\r\n\r\n\r\nresult = map(lambda x: p.finditer(x), allFamTypeNames)\r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = allTypeObjOfCat",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "aaca6190173e4ffb8ece5db3c89ef89b",
      "Inputs": [
        {
          "Id": "473e9e310e144a3f89cbdf1cef72014a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13f0f551a03f4e478f7f995d268fa6a2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Id": "59c76b6fb8da436b9793a6b12c992695",
      "Inputs": [
        {
          "Id": "182122fd02f6445e84bd588fa972073a",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f66d7f3539734444ad5c3898a2f2f244",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Parameters",
      "Id": "60cfdc47533b44c79caa2b33d2dddf18",
      "Inputs": [
        {
          "Id": "f8d8e6cd0ce541579d3c50c058c02f46",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c7a5df44787414cbf266a8e82e0c182",
          "Name": "Parameter[]",
          "Description": "Parameter[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Obtain all of the Parameters from an Element, sorted by Name.\n\nElement.Parameters: Parameter[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nimport copy\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\n# Place your code below this line\r\n\r\ndef findValidObj(obj):\r\n    targets = obj.values()\r\n\r\n    def chk_na(targets):\r\n        if \"n/a\" in targets:\r\n            return False\r\n        else:\r\n            return True\r\n    return chk_na(targets)\r\nresult = filter(findValidObj, input)\r\n\r\n\r\ndef modiFmtSize(obj):\r\n    return obj[\"fmtSize\"].split('x')\r\n\r\n\r\n\r\n\r\n\r\n#result = map(modiFmtSize, tmp)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5e6ede067b39405998478e2448dab7bb",
      "Inputs": [
        {
          "Id": "0892173ade0345ffb1192341124421ad",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6ad35cb9c634620a6ee2ff6d1474176",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\n# Place your code below this line\r\n\r\ndef findValidObj(obj):\r\n    targets = obj.values()\r\n\r\n    def chk_na(targets):\r\n        if \"n/a\" in targets:\r\n            return False\r\n        else:\r\n            return True\r\n    return chk_na(targets)\r\n\r\n\r\nresult = filter(findValidObj, input)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "83fc67f23edb437785055772ed31a1ad",
      "Inputs": [
        {
          "Id": "92d024ebf22d44f8a8b8d6f23ca1d9dd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fea07f243c554f189398805b73f769ac",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom itertools import chain\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\n# Place your code below this line\r\n\r\n#def mkSecObjFromMidas(_memTypeDicts):\r\n\r\ndef groupByMemType(_memTypeDicts, _str, _mode):\r\n    keys = _memTypeDicts.keys()\r\n    res = []\r\n    if _mode == \"pos\":\r\n        for x in keys:\r\n            if _str in x:\r\n                res.append(_memTypeDicts[x])\r\n    elif _mode == \"neg\":\r\n        for x in keys:\r\n            if _str not in x:\r\n                res.append(_memTypeDicts[x])\r\n    return list(chain(*res))\r\n\r\nallCols = groupByMemType(input, \"Steel/C-\", \"pos\")\r\nallNonCols = groupByMemType(input, \"Steel/C-\", \"neg\")\r\n\r\ndef mkSecDict(_grps):\r\n    def setDicAsGrp(_grp):\r\n        sectId = _grp[0]\r\n        sectType = _grp[11]\r\n        \r\n#        sectSize = \"x\".join([str(_grp[13]*1000), str(_grp[14]*1000), str(_grp[15]*1000), str(_grp[16]*1000)])\r\n        _sectSize = [_grp[13], _grp[14], _grp[15], _grp[16]]\r\n        sectSize = map(lambda x: x*1000, _sectSize)\r\n        \r\n        res = {\r\n            \"sectId\": sectId,\r\n            \"sectType\": sectType,\r\n            \"sectSize\": sectSize,\r\n        }\r\n        return res\r\n    return map(setDicAsGrp, _grps)\r\n\r\n\r\nresult = [mkSecDict(allCols), mkSecDict(allNonCols)]\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "6902c00762464c9297c6829329b31136",
      "Inputs": [
        {
          "Id": "73a60c256e174366b1cfe740eaadd5b8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9d1a855ea4834cf38f832796ec11612a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "3955afca32344fa191d9013352186614",
      "Inputs": [
        {
          "Id": "7dc86e13500f45b7a28fdee45944ccdc",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5e068e241fd4be7a408ccfa0b4fdab7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.Group",
      "Id": "7282ffff6de34e3a8db3e8b97a283a14",
      "Inputs": [
        {
          "Id": "c8da13852e4646909cc6ba92f7d454fe",
          "Name": "parameter",
          "Description": "Revit.Elements.Parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abbb1977614d496fa3e69e6e26ea1da6",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the parameter's group\n\nParameter.Group: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Parameter.ParameterType",
      "Id": "2c50d23c5b1a4ccbb10a06419bc49d15",
      "Inputs": [
        {
          "Id": "cb4a04779c1a4a4fba67ac3509398a17",
          "Name": "parameter",
          "Description": "Revit.Elements.Parameter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb2d2a9879e34d529d878984174adc2c",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the parameter type\n\nParameter.ParameterType: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "8e8988aed9314077b73e0d5e5f7a4a4f",
      "Inputs": [
        {
          "Id": "1dd1807dbbe34a59965b466ed2ea41b8",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "0379170135c847289b0ea376a65d3530",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc0dd88de7554b3786bf70babacbbf15",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c45ae2086c9c4162885b0077e7c5bd27",
          "Name": "unique keys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nfrom Revit.Elements import ElementWrapper\r\nimport DSCore\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\n# Place your code below this line\r\nparmsPerObjs = map(lambda x: x.Parameters, input)\r\n\r\ndef findGroupOfParam(_parmsPerObj):\r\n    res = []\r\n    for param in _parmsPerObj:\r\n        res.append(param.Group)\r\n    return res\r\n\r\n#def getSizeFromRevitObj(_obj):\r\n#    _list = _obj.Parameters\r\n#    keysForGrouping = map(lambda x: x.Group, _list)\r\n#    res = DSCore.List.GroupByKey(_list, keysForGrouping)\r\n#    return res\r\n\r\ndef getSizeFromRevitObj(_obj):\r\n    params = _obj.Parameters\r\n    tmp = filter(lambda x: x.Group == \"PG_GEOMETRY\", params)\r\n\r\n    return params\r\n\r\n\r\n#result = List.GroupByKey(param,)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = map(getSizeFromRevitObj, input)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "782493d0b6004fb39f25015077507330",
      "Inputs": [
        {
          "Id": "a34546dba6af46009c9f4a130946e395",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fdbe6bae4df54ecf9261cf952dd8bc35",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nallCols = IN[0]\r\nallNonCols = IN[1]\r\nmds_allCols = IN[2][0]\r\nmds_allNonCols = IN[2][1]\r\n\r\n# Place your code below this line\r\n\r\ndef compare_twoListByElem(_aList, _bList):\r\n    _aListfilter = list(filter(lambda x: x!=0, _aList))\r\n    _bListfilter = list(filter(lambda x: x!=0, _bList))\r\n    if len(_aListfilter) == len(_bListfilter):\r\n        tmp = []\r\n        for i,x in enumerate(_aListfilter):\r\n            if x == _bListfilter[i]:\r\n                tmp.append(True)\r\n            else:\r\n                tmp.append(False)\r\n        return all(tmp)\r\n    else:\r\n        return False\r\n\r\ndef matchFmlyWithMidasSection(_allCols, _allFrms, _mObj):\r\n            \r\n    def findFmtObj(_allElems, _mObj):\r\n        res = []\r\n        for x in _allElems:\r\n            if _mObj[\"sectSize\"] in x[\"fmtSize\"]: ## 수정 필요\r\n                res.append([_mObj[\"sectId\"], x[\"fmtObj\"]])\r\n        return res\r\n    \r\n    sectId = _mObj[\"sectId\"]\r\n    fmtObj = 0\r\n    \r\n    res = {\r\n        \"sectId\": sectId,\r\n        \"fmtObj\": fmtObj,\r\n    }\r\n    \r\n    return findFmtObj(_allCols, _mObj)\r\n    \r\naList = map(float, allCols[72][\"fmtSize\"])\r\n#aList = allCols[72][\"fmtSize\"]\r\nbList = mds_allCols[0][\"sectSize\"]\r\nresult = compare_twoListByElem(aList, bList)\r\n#result = compare_twoListByElem([1,2,3,4], [2,3,4,5])\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "9f58a90d628d43668f64ef43137bc304",
      "Inputs": [
        {
          "Id": "2ac6f75ce7ef489fb02fc4d727e0373e",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0f7a60226b74995be039d4de4234b3b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd8d6d3e25fa450f91ad066b157e8b7d",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c4f8afad45fd401a9aed0c944ee3834d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nallCols = IN[0]\r\nallNonCols = IN[1]\r\nmds_allCols = IN[2][0]\r\nmds_allNonCols = IN[2][1]\r\n\r\n# Place your code below this line\r\n\r\ndef matchFmlyWithMidasSection(_allCols, _allFrms, _mObj):\r\n    def findFmtObj(_allElems, _mObj):\r\n        res = []\r\n        for x in _allElems:\r\n            if _mObj[\"sectSize\"] in x[\"fmtSize\"]: ##  수정 필요\r\n                res.append([_mObj[\"sectId\"], x[\"fmtObj\"]])\r\n        return res\r\n    \r\n    sectId = _mObj[\"sectId\"]\r\n    fmtObj = 0\r\n    \r\n    res = {\r\n        \"sectId\": sectId,\r\n        \"fmtObj\": fmtObj,\r\n    }\r\n    \r\n    return findFmtObj(_allCols, _mObj)\r\n    \r\nfloatFmtSize = map(float, allCols[72][\"fmtSize\"]) \r\nresult = floatFmtSize\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "d51656831d064083bb216f22acd4136b",
      "Inputs": [
        {
          "Id": "a3e1d2e9b536444db5ed7717ed9f1294",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4fac5e42302d4c74a9ca0d9172b1dfe8",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d26f7ccc2eea4c6bb17d04b26b7ee53b",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3574e830dbef442db1772c908c848841",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nallCols = IN[0]\r\nallNonCols = IN[1]\r\nmds_allCols = IN[2][0]\r\nmds_allNonCols = IN[2][1]\r\n\r\n# Place your code below this line\r\n\r\ndef matchFmlyWithMidasSection(_allCols, _allFrms, _mObj):\r\n    def compare_twoListByElem(_aList, _bList):\r\n        _aListfilter = list(filter(lambda x: x!=0, _aList))\r\n        _bListfilter = list(filter(lambda x: x!=0, _bList))\r\n        \r\n        if len(_aListfilter) == len(_bListfilter):\r\n            tmp = []\r\n            for i,x in enumerate(_aListfilter):\r\n                if x == _bListfilter[i]:\r\n                    tmp.append(True)\r\n                else:\r\n                    tmp.append(False)\r\n            return all(tmp)\r\n        else:\r\n            return False\r\n            \r\n    def tryFloat(_list):\r\n        res = []\r\n        for x in _list:\r\n            try:\r\n                res.append(float(x))\r\n            except:\r\n                res.append(x)\r\n        return res\r\n\r\n    \r\n    def findFmtObj(_allElems, _mObj):\r\n        res = [_mObj[\"sectId\"]]\r\n        floatMobjSize = tryFloat(_mObj[\"sectSize\"])\r\n        \r\n        for x in _allElems:\r\n            floatFmtSize = tryFloat(x[\"fmtSize\"])\r\n            \r\n            if compare_twoListByElem(floatMobjSize, floatFmtSize):\r\n                res.append(x[\"fmtObj\"])\r\n            else:\r\n                pass #res.append(\"No Matched Type\")\r\n        \r\n        return res\r\n    \r\n    sectId = _mObj[\"sectId\"]\r\n    sectType = _mObj[\"sectType\"]\r\n    sectSize = _mObj[\"sectSize\"]\r\n    fmtObj = findFmtObj(_allCols, _mObj)\r\n    \r\n    res = {\r\n        \"sectId\": sectId,\r\n        \"sectType\": sectType,\r\n        \"sectSize\": sectSize,\r\n        \"fmtObj\": fmtObj,\r\n    }\r\n    \r\n    return res\r\n\r\nresult = map(lambda x: matchFmlyWithMidasSection(allCols, allNonCols, x), mds_allCols)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "cccdcb70cc0a4acd8107b8e88e6b9027",
      "Inputs": [
        {
          "Id": "ef53afa0a48345989ebe22e4d8e0ebd8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eee661a88387475ca9d22c03a9a89f3a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7af17319e514465d81db662f0886823a",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "272a936d2ac24eea915ad60949a9c0de",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\n# Place your code below this line\r\n\r\n#def tryFloat(_list):\r\n#    try:\r\n#        res = map(float, _list)\r\n#    except:\r\n#        res = _list\r\n#    return res\r\n    \r\n\r\ndef tryFloat(_list):\r\n    res = []\r\n    for x in _list:\r\n        try:\r\n            res.append(float(x))\r\n        except:\r\n            res.append(x)\r\n    return res\r\n# Assign your output to the OUT variable.\r\nOUT = tryFloat(input)",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "844a7d3ac3d741d4802782ba978c0325",
      "Inputs": [
        {
          "Id": "1144cdef72594586b10881dd20d51726",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "20512a561f514761964a695ae1b1b9c4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"1\",\"2\",\"3\",\"ma\"];\n[\"1\",\"2\",\"3\"];",
      "Id": "cf653ebb6d404d6aab83660f860eb079",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c268dcc46ced4490942745b05c961a32",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99ad383d2bb0459bb933a634aa99c6f6",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nallCols = IN[0]\r\nallNonCols = IN[1]\r\nmds_allCols = IN[2][0]\r\nmds_allNonCols = IN[2][1]\r\n\r\n# Place your code below this line\r\n\r\ndef matchFmlyWithMidasSection(_allCols, _allFrms, _mObj):\r\n    def compare_twoListByElem(_aList, _bList):\r\n        _aListfilter = list(filter(lambda x: x!=0, _aList))\r\n        _bListfilter = list(filter(lambda x: x!=0, _bList))\r\n        \r\n        if len(_aListfilter) == len(_bListfilter):\r\n            tmp = []\r\n            for i,x in enumerate(_aListfilter):\r\n                if x == _bListfilter[i]:\r\n                    tmp.append(True)\r\n                else:\r\n                    tmp.append(False)\r\n            return all(tmp)\r\n        else:\r\n            return False\r\n            \r\n    def tryFloat(_list):\r\n        res = []\r\n        for x in _list:\r\n            try:\r\n                res.append(float(x))\r\n            except:\r\n                res.append(x)\r\n        return res\r\n\r\n    \r\n    def findFmtObj(_allElems, _mObj):\r\n        res = [_mObj[\"sectId\"]]\r\n        floatMobjSize = tryFloat(_mObj[\"sectSize\"])\r\n        \r\n        for x in _allElems:\r\n            floatFmtSize = tryFloat(x[\"fmtSize\"])\r\n            \r\n            if compare_twoListByElem(floatMobjSize, floatFmtSize):\r\n                res.append(x[\"fmtObj\"])\r\n            else:\r\n                pass #res.append(\"No Matched Type\")\r\n        \r\n        return res\r\n    \r\n    sectId = _mObj[\"sectId\"]\r\n    sectType = _mObj[\"sectType\"]\r\n    sectSize = _mObj[\"sectSize\"]\r\n    fmtObj = findFmtObj(_allFrms, _mObj)\r\n    \r\n    res = {\r\n        \"sectId\": sectId,\r\n        \"sectType\": sectType,\r\n        \"sectSize\": sectSize,\r\n        \"fmtObj\": fmtObj,\r\n    }\r\n    \r\n    return res\r\n\r\nresult = map(lambda x: matchFmlyWithMidasSection(allCols, allNonCols, x), mds_allNonCols)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "af3edd6d4ed947919c2320cf9cbca30a",
      "Inputs": [
        {
          "Id": "992de4edeca745638303bd5730ff866c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2c95ace45264a58ab9d7890ddafe724",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d491851d4e6407e952d8dabfa3dbba2",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a63ff33943594aa18d27cf9e0e6837d3",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "4c957954c4e848739e42f908beb30548",
      "End": "d9fa5821c74f4b7abb5096cea63a8b11",
      "Id": "5ab349831bc14567b47f7f04fe2f8e4f"
    },
    {
      "Start": "eaa6642726b74009a083002f8834f8b4",
      "End": "751b1cd4e40d4878bd7f821ee7a8a99b",
      "Id": "eccc516142914e0eb803f4b635fc1aa5"
    },
    {
      "Start": "3cd6f38e77a84231a6793f61c7101f81",
      "End": "a4292c58704b44b0b743fdbb60483e65",
      "Id": "4bda5ae268304392b9a1d3af00c9b726"
    },
    {
      "Start": "abf5e0f038c04bb4a265f5141d9a6428",
      "End": "b05ee99cbc9e42308215b33a3c961f68",
      "Id": "c3383322b7154616a1215759add555c9"
    },
    {
      "Start": "abf5e0f038c04bb4a265f5141d9a6428",
      "End": "f4fa6a43ad334cb0be1a86d3e0c0103f",
      "Id": "a7bc4c891591415298ea3773ed26ef9f"
    },
    {
      "Start": "abf5e0f038c04bb4a265f5141d9a6428",
      "End": "3a3e3caea5a041e3abcbfe712a7cfc88",
      "Id": "6952f1da6b7746898ba25c1cc79c87d0"
    },
    {
      "Start": "abf5e0f038c04bb4a265f5141d9a6428",
      "End": "5d4868b9f37c4203baeef6b069cc86be",
      "Id": "91fb6960cb804b68bdf635c0e304075e"
    },
    {
      "Start": "b898d7ba8c60449caf7a4f806e347d9e",
      "End": "809fe14b9e69476196a80dcf6c7ebeb8",
      "Id": "2e732849c7fb4af8b585f2d268392383"
    },
    {
      "Start": "3824b4f294a640e7a8c935b58d6b0088",
      "End": "d3a912d29fcb49e8b7808e47b8482b98",
      "Id": "61c6be1cbebf407ca15720cebe99d8af"
    },
    {
      "Start": "c32bdf682ee440da9f9683b2054930fa",
      "End": "08ef8d2d5ddd4cd69e39ea17f9f3be1d",
      "Id": "d28ad7c1a30a4edcaeb9f3117c4a6dfb"
    },
    {
      "Start": "39b6c385be924e14a64a57d1735d82c1",
      "End": "2434f0466a6647259880cffb76273103",
      "Id": "4d22265cf13740e68ba7895e3fdddba7"
    },
    {
      "Start": "39b6c385be924e14a64a57d1735d82c1",
      "End": "face3bd0d65d48bd9b78d0a11792869a",
      "Id": "fc08c55b80824634acf261fc3a2083ba"
    },
    {
      "Start": "39b6c385be924e14a64a57d1735d82c1",
      "End": "5bfe23a3778c4d2686d78e192402772d",
      "Id": "9a091779f3314d68af0ab9e84905ba1c"
    },
    {
      "Start": "0e279eaa4d6049d9850298c0a09894a4",
      "End": "2e5d5d53dd794b34b0ae5ee41e9c1914",
      "Id": "c11a922ab6654f38bb510a8c616bb34e"
    },
    {
      "Start": "0e279eaa4d6049d9850298c0a09894a4",
      "End": "e755a657d43d419c8d8da020089da176",
      "Id": "6a485993c4644ef6afeec5978fc54233"
    },
    {
      "Start": "42ce5c4939e54f61827312d60caaca7f",
      "End": "c67fe0c01cb1405b9851e81d773ccef2",
      "Id": "0d246ff051d94ea19a2b5b0e30fd5ea1"
    },
    {
      "Start": "55a52989c2214fcda9659fefc77e5d14",
      "End": "1c96e6719ad44c1ab8fcea23f3331179",
      "Id": "3cb27474b52a458db4e5a285284a0b87"
    },
    {
      "Start": "55a52989c2214fcda9659fefc77e5d14",
      "End": "2a06fe42bc9c416ab928195439a1f17a",
      "Id": "f23eb90853854b95b8efffa8a5fee43d"
    },
    {
      "Start": "326f38d2312943e999c1ec9ce0c870cb",
      "End": "0632ba1bba0c4b4e8b110416ccee6922",
      "Id": "d32d61f13b5940218ecbc61c30ac8b98"
    },
    {
      "Start": "326f38d2312943e999c1ec9ce0c870cb",
      "End": "ccbcf57f5eb24543b9e62321fe75ba04",
      "Id": "fd4ea4858b1545fba261f4fea6fa0f79"
    },
    {
      "Start": "cef26ccfd88d4524bbd2cd708d780cd5",
      "End": "2f3d411d055d41e8ba926bd12a937dbb",
      "Id": "1061b9e2f7844d3b91220ded6891d0e9"
    },
    {
      "Start": "e0e17f53842045698baaa2a230b7af96",
      "End": "d0076c8341f743229bcae1df012df15a",
      "Id": "1fa2ffd9135849a0a1079ae7dd945d01"
    },
    {
      "Start": "e0e17f53842045698baaa2a230b7af96",
      "End": "5b60141f53924be38795e7c8a2b0f42a",
      "Id": "1b21495dc4284c2c8ed24c4bcefa70f4"
    },
    {
      "Start": "e0e17f53842045698baaa2a230b7af96",
      "End": "4d545f9ef95d49e585e7abde1e765222",
      "Id": "3e6998f13d194360bf87e5fbc7b695f3"
    },
    {
      "Start": "e0e17f53842045698baaa2a230b7af96",
      "End": "880c402f48124525b0f9cf87a3098ec4",
      "Id": "3c2cd881de1e4c868f94437a6c191c74"
    },
    {
      "Start": "e0e17f53842045698baaa2a230b7af96",
      "End": "4f24dd136e6d4a0cb5d5c067286f35c2",
      "Id": "34652baaacc84fbbbaed270d7b8ba668"
    },
    {
      "Start": "4d1fce9b2a674764812f44af6a672695",
      "End": "cfa08373021f4332928cc36b0282c5ca",
      "Id": "fce1e697fe284a0bb342cf08fe26196c"
    },
    {
      "Start": "78299d6d36a94f718da74de9c0265b80",
      "End": "6cacea67abf243d08fce2b10fed7d7da",
      "Id": "a96759c7ec984fa1bf838c7d0ebb50d7"
    },
    {
      "Start": "232f1dc68bd54c93a8589c14df580304",
      "End": "76417d3655b24c508a97780d85fce933",
      "Id": "95640a79dcc744bf9f204eadac281014"
    },
    {
      "Start": "81b9186259634f20af2aef1ca9cce3b8",
      "End": "33f0e7e42b88411fb2ae3dfa5d2561f7",
      "Id": "46ee0ef601b54f438131020921a9d009"
    },
    {
      "Start": "ac242925acdd445685dc23e4cb70fb5a",
      "End": "bda07913032245fa8d6b2a9c4f93ae25",
      "Id": "3e8af6cf1c4c474abf1ff912c313d6ea"
    },
    {
      "Start": "c43041e09dff480a805031675ab7c57a",
      "End": "9404e2fea90d4735bd9abda2efb8648c",
      "Id": "22f04cc3db47438d9f3cd4a5ffb5bd9d"
    },
    {
      "Start": "9ada4f2effe248eb876666ad58470806",
      "End": "477fd5d498a34af8ad4109c33debd9c4",
      "Id": "49d5b6749caa4ba48bbcf47d8135e92e"
    },
    {
      "Start": "986fabaf55f04348b69d0f9db96e0962",
      "End": "068d93ea94a94377a1916f7cc9f70cd0",
      "Id": "f71b8adebba741b2b2c9d98f1c561075"
    },
    {
      "Start": "3c360c5b5d8d43c09f10d68042e2f08d",
      "End": "b57b6a6fa7b941e689de3195798842d8",
      "Id": "c68ffc10198f4963a55e034aacbe9edf"
    },
    {
      "Start": "e2ffa3ca80c1426e907d925a3a7673c4",
      "End": "f0d11ff17112482bb93fcb69410262c5",
      "Id": "ce9ffb91a03c4e7ea806f9a98f865b17"
    },
    {
      "Start": "bd52408083cd4798b6e06a058d255c9f",
      "End": "6bc3a4f6b0494bd9ab1d306075adcfb8",
      "Id": "f34ca9c1cbb64151854433ebace3d3a7"
    },
    {
      "Start": "1d3c42aaa8fa40cba757fe983767e555",
      "End": "dfd8dc30c4924ab2859afa5f79c6f99e",
      "Id": "3492b2a386d74f5792b02e7d0cc5165b"
    },
    {
      "Start": "6a8378450ac04f74895a850c75e78e6f",
      "End": "0f53574a221f4da2b6ccaf4e506eb24d",
      "Id": "7c2edada41b8408092ea5c0d0597f7d2"
    },
    {
      "Start": "77a2a968395b4427b587611e6a516045",
      "End": "f4fcf439b8d84a90b2d1e220f41443bc",
      "Id": "726081756d8a4513882d5b1c762fd20d"
    },
    {
      "Start": "225d6dfd66bb457789c6c9b1e265664a",
      "End": "fe74e9b83d0d4267ad3b301095dd9fc3",
      "Id": "d2337b7a85d945bf834d78727cfc2441"
    },
    {
      "Start": "9f2676cd3eb245b48f956945ed5f84f4",
      "End": "b6626177390f4373ae1b5d7b7c894215",
      "Id": "1be279d07a1e4bfbbc2070592047871d"
    },
    {
      "Start": "9f2676cd3eb245b48f956945ed5f84f4",
      "End": "c477d687b9da49c081803e3f3cc2787c",
      "Id": "1b232a0986ec4ad3af365332445e642a"
    },
    {
      "Start": "a82e4652da13499985023613a96131d6",
      "End": "69436860a332472e8aa3dbbdf35a1981",
      "Id": "e263731a4177440d8e3d0c1136853adb"
    },
    {
      "Start": "3016b9dc29f14da89eebc7e3e6b49f86",
      "End": "5cf7a3071d894e0db636f7c7969bd9ab",
      "Id": "6580b330bb5b48659dd920f31990acad"
    },
    {
      "Start": "192be9f1a2c14151be4bb82df5e01d68",
      "End": "b5b6f9cca2234d04afa0f4b3f3af62a9",
      "Id": "a6dbb603c91843efb9964ff22a293913"
    },
    {
      "Start": "c399791ba99f4375927aeb9dd00fda73",
      "End": "f9bcde4f946b4f389e5b4fcea6494ebe",
      "Id": "80d6e5acac9748809306207c805426e7"
    },
    {
      "Start": "2b6f560b9b42461eb1d02b7dd9370393",
      "End": "1f78313c4e0a42788d8fc5e6529f8c27",
      "Id": "a94c103b6fd74309b7fd59dff46e9b67"
    },
    {
      "Start": "eb3264a9e406449aa17cac8fd2b2d168",
      "End": "cad5490b08a04b4884c406c60e183276",
      "Id": "4df86eeaeabc4268b562a7d9096d7f7d"
    },
    {
      "Start": "96086d7dee8b42adbe225605b3376599",
      "End": "7e0970a0de764bfd850a16f411feb77f",
      "Id": "fd52259f1ebf437f96542396a9ba82e7"
    },
    {
      "Start": "aa225b59542549e981956e81fa02c48a",
      "End": "5fd644fbaef546b0b082d5ab8e0e497a",
      "Id": "d06094e7048d4cf0bb36b3bc03750c8a"
    },
    {
      "Start": "aa225b59542549e981956e81fa02c48a",
      "End": "93e97dfbd85a43418d0b7c29320ebe43",
      "Id": "63a7bc7bd1944ebdb4289c2bdbc068cd"
    },
    {
      "Start": "70219131ffb8463db24cce25fee6412b",
      "End": "7edf139db0dc4e65b7e0333415265508",
      "Id": "2b4c11379f7b466080162719fdbd47c0"
    },
    {
      "Start": "1c395f37d4804d779373d461d0ad87c4",
      "End": "7f51e010128348a2af4d304e64815745",
      "Id": "8c1efce8798749f7840d146aedfbeaea"
    },
    {
      "Start": "25672c22003e4135a0271ff0475a011e",
      "End": "f5df5c1e71d04231af8002f886646501",
      "Id": "8d89db5a3ef44450af2a9111300dc4d9"
    },
    {
      "Start": "c38ac11bae8d4389adb9fd1e51039c14",
      "End": "2d7f05b1414649cc9d694efa852b89bb",
      "Id": "c5722c5fb0b64f229af14a35096ed4e9"
    },
    {
      "Start": "65e641c6e9024b17a227e17a11e204f9",
      "End": "da885b72c45d4569b99ea1d4917b34d3",
      "Id": "6819d02ed6be4cbeb21debd101f0279c"
    },
    {
      "Start": "cf8774c22abc4d36b5efe1f250d6fdc6",
      "End": "ad5931bb6e5a48f5b7dda0b9270141f6",
      "Id": "a67d057eb0274b9586719f14b5d14817"
    },
    {
      "Start": "33696455ec4d49049f3267dc4111b248",
      "End": "dac9b9bf392949da85c6f8d851fb9634",
      "Id": "0945a0a945c043ca82e6a145c7fecfe3"
    },
    {
      "Start": "33696455ec4d49049f3267dc4111b248",
      "End": "e191fbaee369473fb955ceb7b477ee31",
      "Id": "5215c4f212e24320a743a7d134dbba88"
    },
    {
      "Start": "6ca46becf96d4efe98d6e30a993f9132",
      "End": "19a3d126ac1f4efebabe52a18a07e85e",
      "Id": "c211bb5ccbdb4d2995d94474a58090ca"
    },
    {
      "Start": "7c167502e9144527ab56395b93d94d56",
      "End": "d5a5c85ae70b40b1912377ee92ec1a83",
      "Id": "a75a3ced2a9f40e3bac46f8bdf9976f8"
    },
    {
      "Start": "899493c60d1849ebb0b14f0dc6802b8f",
      "End": "f2029e12918c4d4096148d4011b2b072",
      "Id": "d8164f994e2f4d64b249221fd9156127"
    },
    {
      "Start": "8b935260d1c04de1a6147c46009efddb",
      "End": "e0e2ddbaf4bb45518794a7ce4bd1989f",
      "Id": "ee1d9d1e2d2f4f90a97bd10b5f8eab4e"
    },
    {
      "Start": "156de59da8a544f393406bd4cfdac500",
      "End": "57100a94fc214730949ae03cfe00ebde",
      "Id": "d8478ef3af8b4858962a3bd92733cf36"
    },
    {
      "Start": "82033e23873443089e4dcff9b61ffc31",
      "End": "b397604f07804001b28284565d034f6b",
      "Id": "8c183f42c4db4cd9932cc40016c85336"
    },
    {
      "Start": "a37335a9d6e045889b4c15804de49f1d",
      "End": "6feefd9599794ee58a1fbf6052230466",
      "Id": "3ad9d9cdab4649d29b1a851cf1d47b6a"
    },
    {
      "Start": "d5ba1696a7e44506bb8154f6e4d65fb0",
      "End": "bdd40a34afe3432e9ab027e4c8ddd7d4",
      "Id": "aa000dfed7dd451bbcf201361016b911"
    },
    {
      "Start": "b460a625029a42b6b42d1ec81bb38722",
      "End": "4d60a27650f14740ac4ac8b1be01278f",
      "Id": "2b76d1c6c7bc4ad7bf4bae0350d9f6b2"
    },
    {
      "Start": "b460a625029a42b6b42d1ec81bb38722",
      "End": "b533af932d2948d48ee529760d853276",
      "Id": "ef27da902c6b41b196c3e5797aa62560"
    },
    {
      "Start": "9d79a7302176450db00e56a6709e60b0",
      "End": "c67dabe4dd9d4c0aa867c53bb0e4a4a4",
      "Id": "7d5777c019c8435fa28bd55fb36d461b"
    },
    {
      "Start": "aeb0700a8d6a429eb18db17697786614",
      "End": "3ed10be7272848f2a4eeebe4e58d25c6",
      "Id": "6ed31a4be91148e1b0b85f9a198902b6"
    },
    {
      "Start": "cf47385653bf4551a25679d017540c59",
      "End": "399ddbb4453d4269924d0168b7a176ed",
      "Id": "433535a89b144c558d616b08809e725a"
    },
    {
      "Start": "86a82a9bc8974e399bb14891c290b6a9",
      "End": "3b8c8ca9c5bb4057b336d4c45fe2711a",
      "Id": "787e324e02014017a0f21191cf95101c"
    },
    {
      "Start": "6e9c4fae45094c2ab79920efb15e5a6a",
      "End": "82b99ce27dc541a78091e1b9b819fd36",
      "Id": "1e7ecbfab58d4bc59ca331dd844ee4e6"
    },
    {
      "Start": "3cd860203976439e9e16a8875aec977a",
      "End": "4bdf5c8da823418eb5a4d5a1c2001182",
      "Id": "ebba06463be749bb8eec1c8705b255fd"
    },
    {
      "Start": "8390d153fd1743b496623dde0f0dd060",
      "End": "355aaf649a20465ab7916af275598ee4",
      "Id": "a52e237d4a46442ea8c173b01f3a23c8"
    },
    {
      "Start": "b06ae3b0ce6c47638d0ad54a70b86b18",
      "End": "4aebc595822942139cd2c78e3acd0194",
      "Id": "024005d948f34ec7a1fbd77723310b86"
    },
    {
      "Start": "9f380e3e46c34acfa633f0f9efbf8dff",
      "End": "8fe713ceca124e84a47e8b7402d0d0bd",
      "Id": "7be07cc3ccb34f409aa22807866774ba"
    },
    {
      "Start": "24702ca0ab4340b0abeae27c6ee6907b",
      "End": "f2d072da4cde4158b894a6e007d1a049",
      "Id": "c0263e6a9b77470c87f57afef6efb7e3"
    },
    {
      "Start": "b38f6bffeb87417293c5a015cf3aa2e1",
      "End": "a3536caed20c4b83ad22a18e836e8a12",
      "Id": "3ad2469ac49e47d49f12917bde009ab3"
    },
    {
      "Start": "d22b2912ca0747a9816c1ab60e1b8252",
      "End": "63b1f2798acd4eda8ac4af6bed8b2ce2",
      "Id": "f6e95a99a737467c9597ee198b406683"
    },
    {
      "Start": "d11be3248c1a4f9bb3da9bc5a6aa7e13",
      "End": "79d4af37ab45476db2e5cd37dbcab3f9",
      "Id": "7bd0274fde7e465288016a51283382a9"
    },
    {
      "Start": "22ab6199cca64b1bb53f531df250163a",
      "End": "1115453596e4447f9e33bbea0b8ee845",
      "Id": "41819c4e576a48fbb2ee5b4841f03f5f"
    },
    {
      "Start": "6bb921c7ab4d454c93977f91f0df4aa8",
      "End": "130aecbe778a415395318a8071df1749",
      "Id": "4025c4b3712a46d2bb901642d3316ff8"
    },
    {
      "Start": "2acc4c1f534e4d87a412cde409b3a156",
      "End": "25b7d5ed6ddd49cdac56866cfc8e1255",
      "Id": "1f864ef78b80422c98b97c1de3ee5a3d"
    },
    {
      "Start": "b5f297c8d31847a9919da6bf8c2535d7",
      "End": "1592d1c16bbe4d009d844fe2586edd32",
      "Id": "196d9d2a8d374d0d80365cd1903a20d7"
    },
    {
      "Start": "02facd31631840b49cc645b3af54eff5",
      "End": "e99a1d7f71d44aa79569d4972ae43af1",
      "Id": "9e68f7ef676c41148f16f1956102bad7"
    },
    {
      "Start": "c5ab4b299b9f4923909209fe1d9eeb83",
      "End": "3df77eaa408b4263bcf63761b2a60c89",
      "Id": "d249b35985b54cf2a3f34865b2db6446"
    },
    {
      "Start": "c5ab4b299b9f4923909209fe1d9eeb83",
      "End": "5870d6746fb4464fa6b1aaf6f1bcde26",
      "Id": "9a6a84ad639a46afbd0caa4db4556a93"
    },
    {
      "Start": "c20f80bc424a459cb61db48adca11e05",
      "End": "89293da5b78a4c2eb7beec8100e4f8c6",
      "Id": "73dce4d9f0f84ad2b6403a2bb47b90ae"
    },
    {
      "Start": "b5aac8d4921444049a560779b171def0",
      "End": "e00dff00c09740ee9dbced573cc05c9e",
      "Id": "204293d26f1445cfac9db8f4e86e3d62"
    },
    {
      "Start": "22f6255f407548008e209d2090529372",
      "End": "1dda2372bfa44269a5d19fbda32f7255",
      "Id": "e0f40a519548491bbf59ef412db7e4f1"
    },
    {
      "Start": "22f6255f407548008e209d2090529372",
      "End": "4742f1e5705843e6bb3bd13bbfbb680a",
      "Id": "bb20ab3e602e48e3bf936db2ff7f6b38"
    },
    {
      "Start": "b3b0d39af2404ddcad66b123189a5a43",
      "End": "69b35f36bdeb46b5b369c4cb29c0c616",
      "Id": "aade352ed4da45fe8b9c3116ff90998a"
    },
    {
      "Start": "ee11453dbf9b4828a1359ee583afbeb8",
      "End": "32ba9f038ee046ffa9eef48a947231ca",
      "Id": "cdd7c95b0d9f4c778e9edbb72fa03fc5"
    },
    {
      "Start": "b4320a8ca58f4ce1bb9f994a0749734c",
      "End": "4ed5b6fcea4d4e6dabff856c370885bf",
      "Id": "77ff910792ef46ed90edd0d8e74c7600"
    },
    {
      "Start": "5774ef9f8fd34904ad56a6353ac0e137",
      "End": "9a9215c8a4e447eeb35edd56b2611e27",
      "Id": "4b2241d5e06e4b1f8e0d1e926844cc38"
    },
    {
      "Start": "b3738763e8534c4e8866672b7685d45c",
      "End": "e183d41990d74443ba18887a942388ad",
      "Id": "43dc0b12fc2d479db22e85bea1819f28"
    },
    {
      "Start": "f7baf6e9363642bbb2b734f4db5c323b",
      "End": "b81089f975b54023a4cef4452f3336b8",
      "Id": "45f7d3574a964c649d3db8df426bc241"
    },
    {
      "Start": "5fc05c71eba146e6bf070881575e010d",
      "End": "1c68a54d1a3e4726a20841b6db9b379d",
      "Id": "84e6e0c50f5e41bd9c76d05adcedbb07"
    },
    {
      "Start": "7f800df139104ad98c3601f7a183696f",
      "End": "73a60c256e174366b1cfe740eaadd5b8",
      "Id": "aeafc7268ffc48399ae190c7d8b43bda"
    },
    {
      "Start": "997351a77d1f4006be1784463adde097",
      "End": "0892173ade0345ffb1192341124421ad",
      "Id": "143b0eb0c2054ca98452f3033fbad76d"
    },
    {
      "Start": "779085fbfb204a67a9e67ece6aa5b7a6",
      "End": "182122fd02f6445e84bd588fa972073a",
      "Id": "93050fd4e7034ab2a1792e050b9443f7"
    },
    {
      "Start": "3eac508e394b4c28945724f48551da91",
      "End": "92d024ebf22d44f8a8b8d6f23ca1d9dd",
      "Id": "761445ef842f477bb9d6e663a451c6d3"
    },
    {
      "Start": "13f0f551a03f4e478f7f995d268fa6a2",
      "End": "f8d8e6cd0ce541579d3c50c058c02f46",
      "Id": "d2d23cd014b547f4b5053a38f08e81b2"
    },
    {
      "Start": "13f0f551a03f4e478f7f995d268fa6a2",
      "End": "a34546dba6af46009c9f4a130946e395",
      "Id": "7a09a74e66b547a6a8d6b097c0999af8"
    },
    {
      "Start": "2c7a5df44787414cbf266a8e82e0c182",
      "End": "7dc86e13500f45b7a28fdee45944ccdc",
      "Id": "72aa2eaa851742aebd265470c88d19b9"
    },
    {
      "Start": "2c7a5df44787414cbf266a8e82e0c182",
      "End": "c8da13852e4646909cc6ba92f7d454fe",
      "Id": "2e48903a70394f79a2d10dd36e336fc7"
    },
    {
      "Start": "2c7a5df44787414cbf266a8e82e0c182",
      "End": "1dd1807dbbe34a59965b466ed2ea41b8",
      "Id": "445eee4dbe354d06aa28511d51e01e54"
    },
    {
      "Start": "b6ad35cb9c634620a6ee2ff6d1474176",
      "End": "e0f7a60226b74995be039d4de4234b3b",
      "Id": "215fbd613f4a4f27bfd2bdf0134dee24"
    },
    {
      "Start": "b6ad35cb9c634620a6ee2ff6d1474176",
      "End": "4fac5e42302d4c74a9ca0d9172b1dfe8",
      "Id": "8887c1c37b97428d8379c26f8a087177"
    },
    {
      "Start": "b6ad35cb9c634620a6ee2ff6d1474176",
      "End": "eee661a88387475ca9d22c03a9a89f3a",
      "Id": "49387961b3ba4a439ec9d2a697c29fa6"
    },
    {
      "Start": "b6ad35cb9c634620a6ee2ff6d1474176",
      "End": "b2c95ace45264a58ab9d7890ddafe724",
      "Id": "e69f793fee40469dae657f1e6d5ed0df"
    },
    {
      "Start": "fea07f243c554f189398805b73f769ac",
      "End": "2ac6f75ce7ef489fb02fc4d727e0373e",
      "Id": "898c149c47274925a20d05a24dac2f32"
    },
    {
      "Start": "fea07f243c554f189398805b73f769ac",
      "End": "a3e1d2e9b536444db5ed7717ed9f1294",
      "Id": "fcdcfd094c204b89a3fab1373c15b6f7"
    },
    {
      "Start": "fea07f243c554f189398805b73f769ac",
      "End": "ef53afa0a48345989ebe22e4d8e0ebd8",
      "Id": "221f5115a0894f6ca49a85ef699c072f"
    },
    {
      "Start": "fea07f243c554f189398805b73f769ac",
      "End": "992de4edeca745638303bd5730ff866c",
      "Id": "0b201074a3934745a844055c9242beda"
    },
    {
      "Start": "9d1a855ea4834cf38f832796ec11612a",
      "End": "cd8d6d3e25fa450f91ad066b157e8b7d",
      "Id": "bc4e9a3bb0274e93b35d1b5fbc118f03"
    },
    {
      "Start": "9d1a855ea4834cf38f832796ec11612a",
      "End": "d26f7ccc2eea4c6bb17d04b26b7ee53b",
      "Id": "e7ddb584b3ef49b4a0ba1546cb7ac20b"
    },
    {
      "Start": "9d1a855ea4834cf38f832796ec11612a",
      "End": "7af17319e514465d81db662f0886823a",
      "Id": "8cc130c4bf144907ad8bb1959205f3ae"
    },
    {
      "Start": "9d1a855ea4834cf38f832796ec11612a",
      "End": "7d491851d4e6407e952d8dabfa3dbba2",
      "Id": "01426d231cb04d47abcd68acc2338a45"
    },
    {
      "Start": "abbb1977614d496fa3e69e6e26ea1da6",
      "End": "0379170135c847289b0ea376a65d3530",
      "Id": "4820608576c946b288d3bf9bc3119299"
    },
    {
      "Start": "c268dcc46ced4490942745b05c961a32",
      "End": "1144cdef72594586b10881dd20d51726",
      "Id": "6d0e1bd800a148a8aa81ffc58167e5ba"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.1.3976",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 106469.125,
      "EyeY": 37545.16015625,
      "EyeZ": 34893.671875,
      "LookX": -96594.21875,
      "LookY": -62935.49609375,
      "LookZ": -12184.50390625,
      "UpX": -0.3474547266960144,
      "UpY": 0.936672031879425,
      "UpZ": -0.04382772371172905
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "initial data import",
        "Id": "3a0fc8c0d0b642f6b5c8d53a5b77a40a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": -1129.8185852172239,
        "Y": -222.78103784536063
      },
      {
        "ShowGeometry": true,
        "Name": "MidasGen Excel(mxt) File Path",
        "Id": "fdc75dc9a22547b69806180caf0bc719",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1474.8185852172239,
        "Y": -264.78103784536063
      },
      {
        "ShowGeometry": true,
        "Name": "Sheet Name:",
        "Id": "7b81963427cc4168b875633114370661",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1474.8185852172239,
        "Y": -154.78103784536063
      },
      {
        "ShowGeometry": true,
        "Name": "find identifier row idx",
        "Id": "9d60e90d202a4d7da8cd89b91f64ebad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 120.10060814401527,
        "Y": -935.18235172525
      },
      {
        "ShowGeometry": true,
        "Name": "splitDataAsDict(불필요Null 제거)",
        "Id": "adef3d65e1c04441a11d9a19fc7aaf32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 810.90254811603472,
        "Y": -965.768296638647
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Keys",
        "Id": "d5576058ed604c238257ec1dae443b03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1164.4674239551484,
        "Y": -828.78528574354607
      },
      {
        "ShowGeometry": true,
        "Name": "removeHeadFromDict",
        "Id": "85c32552b64047c8a2b6a58370f8f11c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2345.9424081414404,
        "Y": -73.951891531661147
      },
      {
        "ShowGeometry": true,
        "Name": "removeHeadFromDict",
        "Id": "411b09f5631447c28440594595ecea90",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2337.5715416207117,
        "Y": -547.22972564930808
      },
      {
        "ShowGeometry": true,
        "Name": "원점정하고 좌표계변환(단위 m->mm)",
        "Id": "d61f7406ce3844a29d9d06de6a566a1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2632.5715416207117,
        "Y": -547.22972564930808
      },
      {
        "ShowGeometry": true,
        "Name": "다이나모 포인트로 변환 및 딕셔너리화",
        "Id": "eb8da54debc747ff8665bbc13b6f7a9c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3038.6587495857152,
        "Y": -545.42784640993113
      },
      {
        "ShowGeometry": true,
        "Name": "elementTypeFiltering",
        "Id": "a0e80a85bc144d75bd5068d1eb59edf9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2708.217970001489,
        "Y": -74.068524775324533
      },
      {
        "ShowGeometry": true,
        "Name": "PLATE요소 제외",
        "Id": "9c467caca546498d82bcfaa3576f42f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2510.3557240103041,
        "Y": 75.914204159489373
      },
      {
        "ShowGeometry": true,
        "Name": "mkCrvForMember",
        "Id": "27a70cb86ec3440c8372a062d2447896",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3599.5250445805727,
        "Y": -100.88317517350822
      },
      {
        "ShowGeometry": true,
        "Name": "removeHeadFromDict",
        "Id": "445ef6c3fe6f42a5a092ca486e0b2d31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2316.7597848306627,
        "Y": -1704.6112636344005
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "feaf649671464294aaef24ac7fcf5fb3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -28.076296382983628,
        "Y": -852.66461267193279
      },
      {
        "ShowGeometry": true,
        "Name": "splitDataAsDict(불필요Null 제거)",
        "Id": "316d019e47b1490daa8924482c555883",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3070.3509016171965,
        "Y": -1703.4086692417306
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3af304ac50884a26b003d4c6ead127f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2511.195976475175,
        "Y": -1570.1666512462198
      },
      {
        "ShowGeometry": true,
        "Name": "find identifier row idx",
        "Id": "9865cf313c0943d988f6ae379b0b6f2d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2643.6148954920191,
        "Y": -1636.8321663670149
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "aa303862a8e341219b8c075ce5589c28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2877.7495564990659,
        "Y": -1551.7177121129855
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d102e3bde877476aaef9e3778bc85341",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 649.21043682873153,
        "Y": -850.02812739004992
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Keys",
        "Id": "14814d1db3a740d09404c5cc8146f2d7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3866.0725265849273,
        "Y": -2331.1319834975538
      },
      {
        "ShowGeometry": true,
        "Name": "List.DropItems",
        "Id": "7481a251a516496eb00d974c60c9485c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 450.5515909537379,
        "Y": -931.39601407471844
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8dcba0b941c14bea8bc2eee99bf7bd85",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 340.27932656218854,
        "Y": -857.67822321717824
      },
      {
        "ShowGeometry": true,
        "Name": "엘리베이션 unique 추출",
        "Id": "c9cbe5f1fba94993b51d186fc7452f88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4662.0682092545949,
        "Y": 426.38217507986258
      },
      {
        "ShowGeometry": true,
        "Name": "배치기준레벨 자동생성",
        "Id": "1a870609fd6d4c72a88380e84cb70656",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 4962.0682092545949,
        "Y": 411.38217507986258
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f506b7add86c48dc8c9a13117d2358d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4383.0725265849269,
        "Y": -2344.4919834975535
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "20c4d57501bb4ec9a6d9362ccf1e4e91",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4172.0725265849278,
        "Y": -2326.9186501642207
      },
      {
        "ShowGeometry": true,
        "Name": "mkCrvAndLevelDatas",
        "Id": "9c6241fcb66a46fd8a4968b2fff35aba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5708.513414692693,
        "Y": -203.41833341046527
      },
      {
        "ShowGeometry": true,
        "Name": "level 생성 코드 실행여부",
        "Id": "06effca41fef412eaf4142e2d6e1c41b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4662.0682092545949,
        "Y": 343.38217507986258
      },
      {
        "ShowGeometry": true,
        "Name": "사용단면에 따른 패밀리 타입 생성",
        "Id": "5e1897be29a14eb1a1bc529446daf047",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5588.2193230215844,
        "Y": -2344.0661546804909
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "27db0a4787834a02b4d2926efae93037",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5377.3529403870225,
        "Y": -2281.2214909328136
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "54da54dea3bc4173a93633a19c94e641",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3680.0725265849273,
        "Y": -2335.7053168308871
      },
      {
        "ShowGeometry": true,
        "Name": "defineFamilytypeName",
        "Id": "ee444322f2f84466aaa04679e85791ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 4841.82309501641,
        "Y": -2351.4028978511046
      },
      {
        "ShowGeometry": true,
        "Name": "All Elements of Category",
        "Id": "f5fdba28f8c34314922547a62372200e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4753.704718845147,
        "Y": 158.48708628496547
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "d86b8c3615bc4767bc86887562e6a221",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4487.704718845147,
        "Y": 158.48708628496547
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "bcf34dee4a0c49299b301bbfa4306296",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5027.704718845147,
        "Y": 158.48708628496547
      },
      {
        "ShowGeometry": true,
        "Name": "unitFactor",
        "Id": "b8d14528a70948f9a81e077f82c5b12d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4619.3045887305716,
        "Y": -2293.9665187340961
      },
      {
        "ShowGeometry": true,
        "Name": "Column type Prefix",
        "Id": "6ef60a0c12c74f8b9326bd1e480c5499",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4620.1106206656277,
        "Y": -2204.3649069436738
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Keys",
        "Id": "c2223fcdbb614cf6bfa1ff043758cb70",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3864.5971445324576,
        "Y": -1851.1390048647368
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "79780cfcbaae477b96d34fa21569cb30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3678.5971445324576,
        "Y": -1855.7123381980666
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "31ecb92054bb4e3b8b3e19a1ac5e5c01",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4170.5971445324576,
        "Y": -1846.9256715314068
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c480a38e956c47d8bc7599a174315ee2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4381.5971445324576,
        "Y": -1864.4990048647367
      },
      {
        "ShowGeometry": true,
        "Name": "unitFactor",
        "Id": "136141f6c3e14f85a3f893efc0c577f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4581.5788388025576,
        "Y": -1809.7879997228467
      },
      {
        "ShowGeometry": true,
        "Name": "Beam typePrefix",
        "Id": "7c175efe56cd4680964b5d016aea5696",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4582.3848707376183,
        "Y": -1720.1863879324267
      },
      {
        "ShowGeometry": true,
        "Name": "defineFamilytypeName",
        "Id": "222e394be4fa46938d3989cc01b1a0dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 4804.0973450883976,
        "Y": -1867.2243788398566
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Keys",
        "Id": "304b8f76efc04d5087a05f152cd57e3e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3856.5742328357137,
        "Y": -1385.1772279854433
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "91c3f7020c7041cbad3b23cf47cd9feb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3670.5742328357137,
        "Y": -1389.7505613187723
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "38af8cdfcafd48b893cc744c6b35cef0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4162.5742328357137,
        "Y": -1380.9638946521134
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e5cf510092ad412bacc56ccb703c9bfb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4373.5742328357137,
        "Y": -1398.5372279854432
      },
      {
        "ShowGeometry": true,
        "Name": "unitFactor",
        "Id": "2090b446ba8f45bca94956221bf4aeab",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4573.5559271058146,
        "Y": -1343.8262228435528
      },
      {
        "ShowGeometry": true,
        "Name": "Girder typePrefix",
        "Id": "4ce8529e8baf4b07b598cf35d2752091",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4574.3619590408753,
        "Y": -1254.2246110531328
      },
      {
        "ShowGeometry": true,
        "Name": "defineFamilytypeName",
        "Id": "5cd8fc248120422ba0a0a868cbf0b261",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 4796.0744333916573,
        "Y": -1401.2626019605618
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Keys",
        "Id": "e6ea7a095a0d4c70baa7485ced85f107",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3859.6750797353197,
        "Y": -908.93211801875475
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7244678cad9a4cbf9e8e75675a509a71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4376.67507973532,
        "Y": -922.29211801875488
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "74cc058fb68545a6a9cce4dd54dccfe7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4165.67507973532,
        "Y": -904.71878468542479
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "7633d4e7a0a84f328bd75eff9f1728ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3673.6750797353197,
        "Y": -913.50545135208483
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "0703abeec8d046de825a140254178cb3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4357.3550112790053,
        "Y": -726.82685408063742
      },
      {
        "ShowGeometry": true,
        "Name": "elementTypeFiltering",
        "Id": "59ddde110294474b954b72f51dcf3107",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4555.2172572701948,
        "Y": -876.80958301545127
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Values",
        "Id": "351cef0f6aad41c59d0014806b29a0f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3492.7675834947845,
        "Y": -501.42204356981017
      },
      {
        "ShowGeometry": true,
        "Name": "paramNames",
        "Id": "4db7be5acb304ddd8b2ced581a2a4209",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5379.5249876070766,
        "Y": -2180.9359696434553
      },
      {
        "ShowGeometry": true,
        "Name": "사용단면에 따른 패밀리 타입 생성",
        "Id": "1bff014179f64979970ce119cd4f5122",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5608.4935769213062,
        "Y": -1886.5919877964523
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7000f94ab50d424f9a66eb252d3a7c75",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5346.7907863865839,
        "Y": -1825.2425125164236
      },
      {
        "ShowGeometry": true,
        "Name": "paramNames",
        "Id": "a58319ec5a824c3ca38a22715c8af27a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5399.7992415067965,
        "Y": -1723.4618027594122
      },
      {
        "ShowGeometry": true,
        "Name": "사용단면에 따른 패밀리 타입 생성",
        "Id": "897887d4af434fa486759ed30ceb5949",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5613.8055125249184,
        "Y": -1422.1566782393297
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "96407e964fc8454ba3004c32d0e676c2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5352.1027219902,
        "Y": -1360.8072029592959
      },
      {
        "ShowGeometry": true,
        "Name": "paramNames",
        "Id": "4461d93bbc3a433daaab1702b75813d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5405.11117711041,
        "Y": -1259.0264932022858
      },
      {
        "ShowGeometry": true,
        "Name": "사용단면에 따른 패밀리 타입 생성",
        "Id": "7f2b13d75a824f88b87c5913c65755aa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5630.7462928490932,
        "Y": -857.19618238112616
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "ea24e36205a24b3aa2c6bc4c9ec07882",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5369.0435023143727,
        "Y": -795.84670710109617
      },
      {
        "ShowGeometry": true,
        "Name": "paramNames",
        "Id": "f5d70e7c1e724ac0ba7e7f7e7fbd2f31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5422.0519574345826,
        "Y": -694.0659973440861
      },
      {
        "ShowGeometry": true,
        "Name": "defineFamilytypeName",
        "Id": "8981acdbbc4043d39e4c209baec66463",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 5018.1743719817987,
        "Y": -864.72800528386131
      },
      {
        "ShowGeometry": true,
        "Name": "unitFactor",
        "Id": "9cc27e0e4f034312afa4c15acb1dac7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4795.6558656959487,
        "Y": -807.29162616685142
      },
      {
        "ShowGeometry": true,
        "Name": "other typePrefix",
        "Id": "f95b84183ea74903ac16cd41d122e659",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4796.4618976310185,
        "Y": -717.69001437643135
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8edc68c7b03845468195d2772150ebe3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5278.5547041586406,
        "Y": -94.989329559619989
      },
      {
        "ShowGeometry": true,
        "Name": "mkSet_CrvLvType",
        "Id": "b5997c56ec0144998091562336fb29da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6976.4916667943553,
        "Y": -963.32671657740264
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary 병합",
        "Id": "aa13041761fb408289ca690456ed2eb0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6302.0613687389632,
        "Y": -1697.2350997443402
      },
      {
        "ShowGeometry": true,
        "Name": "createRvtElem",
        "Id": "51998c1acb18458785cc3d904bab1df8",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 7243.4916667943553,
        "Y": -963.32671657740275
      },
      {
        "ShowGeometry": true,
        "Name": "FL. Offset",
        "Id": "01ef8e0f5fb64c37bc1902f1be8bd1da",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4657.5498683409251,
        "Y": 588.04294196455123
      },
      {
        "ShowGeometry": true,
        "Name": "MidasGen mxt File Path",
        "Id": "75ed5455d6a64ac7b1602dacb164d6d3",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1072.2317958695257,
        "Y": -1018.5005690762118
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportCSV",
        "Id": "9f8b1a45d42d4cb19303ea9aae76fcb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -653.23179586952574,
        "Y": -976.50056907621183
      },
      {
        "ShowGeometry": true,
        "Name": "Remove Null Row, Column",
        "Id": "9b19eeccda744703b3b3733ecee00ee0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -360.23179586952574,
        "Y": -976.50056907621183
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "1b6a570f658e45d185dc4df31330cae8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1072.2317958695257,
        "Y": -908.50056907621183
      },
      {
        "ShowGeometry": true,
        "Name": "inform select",
        "Id": "c38eeae2797c4af99a0b6f00ce02b11d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2050.0225725264559,
        "Y": -1699.058129614853
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a1ddbb3b11874f10b9b0d18ff3b09dbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1842.4071165093237,
        "Y": -1636.112689755156
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "c4f0b843ee56411d93ae5ae30f17f3a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1864.0267149268802,
        "Y": -511.25401043108127
      },
      {
        "ShowGeometry": true,
        "Name": "inform select",
        "Id": "1771ac21352444a491ee0fcb4f270147",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2071.64217094402,
        "Y": -574.19945029077121
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "d33b50c202f7442eaf0dcdc76ffd72f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1882.111894512384,
        "Y": -12.347112640167381
      },
      {
        "ShowGeometry": true,
        "Name": "inform select",
        "Id": "474ee6e902824f26b2d9e4b56f3585cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2089.7273505295243,
        "Y": -75.292552499857322
      },
      {
        "ShowGeometry": true,
        "Name": "mkCrvForMember_rotation 추가",
        "Id": "9ed0acf8133b4e778fbbc3bf45e6cadf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3606.2801376434404,
        "Y": 394.28502757589661
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "ecffa58bea224f578085b982c7057235",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3864.0550358414062,
        "Y": -3210.9164977696041
      },
      {
        "ShowGeometry": true,
        "Name": "All Framing Types",
        "Id": "1b2ed5df2e36441d9d5a195400a4dd18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4553.170497488155,
        "Y": -3810.9145799434755
      },
      {
        "ShowGeometry": true,
        "Name": "All Framing Types",
        "Id": "b38c22db5c3c4c73ba58644e758d9cd4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2222.1848349583365,
        "Y": -5486.44736389384
      },
      {
        "ShowGeometry": true,
        "Name": "All Framing Types",
        "Id": "2bdf39604514405aba81f77d1cd03511",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2427.2615006909359,
        "Y": -5515.00319045519
      },
      {
        "ShowGeometry": true,
        "Name": "All Framing Types",
        "Id": "3834eed4fedd427485567a6d64148346",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2299.982045701473,
        "Y": -5353.7270494550185
      },
      {
        "ShowGeometry": true,
        "Name": "All Column Types",
        "Id": "28a357fd86ec4fc0b39a3ed324dc51ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4537.5100387590428,
        "Y": -4267.27507352666
      },
      {
        "ShowGeometry": true,
        "Name": "All col Types",
        "Id": "aaca6190173e4ffb8ece5db3c89ef89b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2926.3067512466673,
        "Y": -5364.9733819045487
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Parameters",
        "Id": "59c76b6fb8da436b9793a6b12c992695",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2574.6277230221513,
        "Y": -5214.7175148169727
      },
      {
        "ShowGeometry": true,
        "Name": "Element.Parameters",
        "Id": "60cfdc47533b44c79caa2b33d2dddf18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3234.3499319528364,
        "Y": -5441.6491641716184
      },
      {
        "ShowGeometry": true,
        "Name": "ValidTypes",
        "Id": "5e6ede067b39405998478e2448dab7bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4820.170497488155,
        "Y": -3810.9145799434755
      },
      {
        "ShowGeometry": true,
        "Name": "ValidTypes",
        "Id": "83fc67f23edb437785055772ed31a1ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4802.5100387590428,
        "Y": -4267.27507352666
      },
      {
        "ShowGeometry": true,
        "Name": "mkSecObjFromMidas",
        "Id": "6902c00762464c9297c6829329b31136",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4764.7528494479111,
        "Y": -3411.3990538248854
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3955afca32344fa191d9013352186614",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3516.0893037865976,
        "Y": -6102.27777358873
      },
      {
        "ShowGeometry": true,
        "Name": "Parameter.Group",
        "Id": "7282ffff6de34e3a8db3e8b97a283a14",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3657.8583586136656,
        "Y": -5327.5428006524007
      },
      {
        "ShowGeometry": true,
        "Name": "Parameter.ParameterType",
        "Id": "2c50d23c5b1a4ccbb10a06419bc49d15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3745.5938284079466,
        "Y": -5630.8017489474323
      },
      {
        "ShowGeometry": true,
        "Name": "List.GroupByKey",
        "Id": "8e8988aed9314077b73e0d5e5f7a4a4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4075.1608452357859,
        "Y": -5444.5827651855334
      },
      {
        "ShowGeometry": true,
        "Name": "test_groupbykey",
        "Id": "782493d0b6004fb39f25015077507330",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4206.5828696779045,
        "Y": -5043.6881537750942
      },
      {
        "ShowGeometry": true,
        "Name": "test1",
        "Id": "9f58a90d628d43668f64ef43137bc304",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5667.4901598391752,
        "Y": -4469.5675525064453
      },
      {
        "ShowGeometry": true,
        "Name": "test2",
        "Id": "d51656831d064083bb216f22acd4136b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6009.9546256872509,
        "Y": -4472.7884075033944
      },
      {
        "ShowGeometry": true,
        "Name": "matchFamilyWithMidasSection_col",
        "Id": "cccdcb70cc0a4acd8107b8e88e6b9027",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5528.453902571202,
        "Y": -3799.1938123076498
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "844a7d3ac3d741d4802782ba978c0325",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5954.766596472864,
        "Y": -4092.2696633427836
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "cf653ebb6d404d6aab83660f860eb079",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5696.0,
        "Y": -4093.0
      },
      {
        "ShowGeometry": true,
        "Name": "matchFamilyWithMidasSection_noncol",
        "Id": "af3edd6d4ed947919c2320cf9cbca30a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5509.9278082875953,
        "Y": -3354.8741916156041
      }
    ],
    "Annotations": [
      {
        "Id": "ff84630b1eb0473ba557f35f8f5ed6f4",
        "Title": "SECTION inform select",
        "Nodes": [
          "a1ddbb3b11874f10b9b0d18ff3b09dbc",
          "c38eeae2797c4af99a0b6f00ce02b11d"
        ],
        "Left": 1832.4071165093237,
        "Top": -1752.058129614853,
        "Width": 366.61545601713215,
        "Height": 208.945439859697,
        "FontSize": 36.0,
        "InitialTop": -1699.058129614853,
        "InitialHeight": 207.945439859697,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f0b367ea31b8496e967f80c6ebdc0b9a",
        "Title": "배치 레벨 생성",
        "Nodes": [
          "c9cbe5f1fba94993b51d186fc7452f88",
          "1a870609fd6d4c72a88380e84cb70656",
          "06effca41fef412eaf4142e2d6e1c41b",
          "01ef8e0f5fb64c37bc1902f1be8bd1da"
        ],
        "Left": 4647.5498683409251,
        "Top": 290.38217507986258,
        "Width": 514.51834091366982,
        "Height": 365.66076688468866,
        "FontSize": 36.0,
        "InitialTop": 343.38217507986258,
        "InitialHeight": 389.66076688468866,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "aab82025d80d47e1a188ddb39f0a575e",
        "Title": "Column inform select",
        "Nodes": [
          "14814d1db3a740d09404c5cc8146f2d7",
          "f506b7add86c48dc8c9a13117d2358d4",
          "20c4d57501bb4ec9a6d9362ccf1e4e91",
          "54da54dea3bc4173a93633a19c94e641"
        ],
        "Left": 3670.0725265849273,
        "Top": -2397.4919834975535,
        "Width": 833.99999999999955,
        "Height": 163.57333333333281,
        "FontSize": 36.0,
        "InitialTop": -2344.4919834975535,
        "InitialHeight": 162.57333333333281,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "093b025956e248458654714cf2f65426",
        "Title": "배치 레벨 선택(디버깅용)",
        "Nodes": [
          "f5fdba28f8c34314922547a62372200e",
          "d86b8c3615bc4767bc86887562e6a221",
          "bcf34dee4a0c49299b301bbfa4306296"
        ],
        "Left": 4477.704718845147,
        "Top": 105.48708628496547,
        "Width": 684.0,
        "Height": 157.0,
        "FontSize": 36.0,
        "InitialTop": 158.48708628496547,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "6b62e21a86554e54918dfc6dea047749",
        "Title": "defineFamilytypeName",
        "Nodes": [
          "ee444322f2f84466aaa04679e85791ba",
          "b8d14528a70948f9a81e077f82c5b12d",
          "6ef60a0c12c74f8b9326bd1e480c5499"
        ],
        "Left": 4609.3045887305716,
        "Top": -2404.4028978511046,
        "Width": 445.51850628583816,
        "Height": 268.03799090743087,
        "FontSize": 36.0,
        "InitialTop": -2351.4028978511046,
        "InitialHeight": 292.03799090743087,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "9facaf4b752d4e27bd13b62c7fcf2374",
        "Title": "Beam inform select",
        "Nodes": [
          "c2223fcdbb614cf6bfa1ff043758cb70",
          "c480a38e956c47d8bc7599a174315ee2",
          "31ecb92054bb4e3b8b3e19a1ac5e5c01",
          "79780cfcbaae477b96d34fa21569cb30"
        ],
        "Left": 3668.5971445324576,
        "Top": -1917.4990048647367,
        "Width": 834.0,
        "Height": 163.57333333332986,
        "FontSize": 36.0,
        "InitialTop": -1864.4990048647367,
        "InitialHeight": 162.57333333332986,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "25c3a3749e934a2bbfec509ca0119027",
        "Title": "defineFamilytypeName",
        "Nodes": [
          "222e394be4fa46938d3989cc01b1a0dc",
          "136141f6c3e14f85a3f893efc0c577f9",
          "7c175efe56cd4680964b5d016aea5696"
        ],
        "Left": 4571.5788388025576,
        "Top": -1920.2243788398566,
        "Width": 445.51850628584,
        "Height": 268.03799090742996,
        "FontSize": 36.0,
        "InitialTop": -1867.2243788398566,
        "InitialHeight": 292.03799090742996,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "21e3ef4bfb5b468b9499e49f3f8d15d2",
        "Title": "Girder inform select",
        "Nodes": [
          "304b8f76efc04d5087a05f152cd57e3e",
          "e5cf510092ad412bacc56ccb703c9bfb",
          "38af8cdfcafd48b893cc744c6b35cef0",
          "91c3f7020c7041cbad3b23cf47cd9feb"
        ],
        "Left": 3660.5742328357137,
        "Top": -1451.5372279854432,
        "Width": 834.0,
        "Height": 163.57333333332986,
        "FontSize": 36.0,
        "InitialTop": -1398.5372279854432,
        "InitialHeight": 162.57333333332986,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b2c92bc0d9e84805a3322bc9f9fc2154",
        "Title": "defineFamilytypeName",
        "Nodes": [
          "5cd8fc248120422ba0a0a868cbf0b261",
          "2090b446ba8f45bca94956221bf4aeab",
          "4ce8529e8baf4b07b598cf35d2752091"
        ],
        "Left": 4563.5559271058146,
        "Top": -1454.2626019605618,
        "Width": 445.5185062858427,
        "Height": 268.03799090742905,
        "FontSize": 36.0,
        "InitialTop": -1401.2626019605618,
        "InitialHeight": 292.03799090742905,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7d4319ee2b3843ceaf35eedf46c3db22",
        "Title": "사용단면에 따른 패밀리 타입 생성",
        "Nodes": [
          "5e1897be29a14eb1a1bc529446daf047",
          "27db0a4787834a02b4d2926efae93037",
          "4db7be5acb304ddd8b2ced581a2a4209"
        ],
        "Left": 5367.3529403870225,
        "Top": -2440.0661546804909,
        "Width": 483.86638263456189,
        "Height": 361.13018503703552,
        "FontSize": 36.0,
        "InitialTop": -2344.0661546804909,
        "InitialHeight": 308.13018503703552,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8298c7829661448baf099d5934f5c587",
        "Title": "Dummy inform select",
        "Nodes": [
          "e6ea7a095a0d4c70baa7485ced85f107",
          "7244678cad9a4cbf9e8e75675a509a71",
          "74cc058fb68545a6a9cce4dd54dccfe7",
          "7633d4e7a0a84f328bd75eff9f1728ba"
        ],
        "Left": 3663.6750797353197,
        "Top": -975.29211801875488,
        "Width": 834.0,
        "Height": 163.57333333333008,
        "FontSize": 36.0,
        "InitialTop": -922.29211801875488,
        "InitialHeight": 162.57333333333008,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a3d78f28ce5b4bba88f79be035949cc6",
        "Title": "사용단면에 따른 패밀리 타입 생성",
        "Nodes": [
          "1bff014179f64979970ce119cd4f5122",
          "7000f94ab50d424f9a66eb252d3a7c75",
          "a58319ec5a824c3ca38a22715c8af27a"
        ],
        "Left": 5336.7907863865839,
        "Top": -1982.5919877964523,
        "Width": 534.70279053472223,
        "Height": 361.13018503704006,
        "FontSize": 36.0,
        "InitialTop": -1886.5919877964523,
        "InitialHeight": 308.13018503704006,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7463b9b0af2047a8913a63c138ef8f19",
        "Title": "사용단면에 따른 패밀리 타입 생성",
        "Nodes": [
          "897887d4af434fa486759ed30ceb5949",
          "96407e964fc8454ba3004c32d0e676c2",
          "4461d93bbc3a433daaab1702b75813d9"
        ],
        "Left": 5342.1027219902,
        "Top": -1518.1566782393297,
        "Width": 534.70279053471859,
        "Height": 361.13018503704393,
        "FontSize": 36.0,
        "InitialTop": -1422.1566782393297,
        "InitialHeight": 308.13018503704393,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "fcaa1e8af0404caca4ffc6321f39f9fd",
        "Title": "사용단면에 따른 패밀리 타입 생성",
        "Nodes": [
          "7f2b13d75a824f88b87c5913c65755aa",
          "ea24e36205a24b3aa2c6bc4c9ec07882",
          "f5d70e7c1e724ac0ba7e7f7e7fbd2f31"
        ],
        "Left": 5359.0435023143727,
        "Top": -953.19618238112616,
        "Width": 534.70279053472041,
        "Height": 361.13018503704006,
        "FontSize": 36.0,
        "InitialTop": -857.19618238112616,
        "InitialHeight": 308.13018503704006,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "15fdac4f35a743e08a80e1370e2fbe77",
        "Title": "defineFamilytypeName",
        "Nodes": [
          "8981acdbbc4043d39e4c209baec66463",
          "9cc27e0e4f034312afa4c15acb1dac7f",
          "f95b84183ea74903ac16cd41d122e659"
        ],
        "Left": 4785.6558656959487,
        "Top": -917.72800528386131,
        "Width": 445.51850628585,
        "Height": 268.03799090742996,
        "FontSize": 36.0,
        "InitialTop": -864.72800528386131,
        "InitialHeight": 292.03799090742996,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2ea8d6c9bd3949b0ada0748e1a8af154",
        "Title": "case2: csv format import",
        "Nodes": [
          "3a0fc8c0d0b642f6b5c8d53a5b77a40a",
          "fdc75dc9a22547b69806180caf0bc719",
          "7b81963427cc4168b875633114370661"
        ],
        "Left": -1484.8185852172239,
        "Top": -447.78103784536063,
        "Width": 535.0,
        "Height": 361.0,
        "FontSize": 72.0,
        "InitialTop": -264.78103784536063,
        "InitialHeight": 255.0,
        "TextblockHeight": 173.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "09e9d5336b314f99a89f4f3981b95da2",
        "Title": "case1: mxt format import",
        "Nodes": [
          "75ed5455d6a64ac7b1602dacb164d6d3",
          "9f8b1a45d42d4cb19303ea9aae76fcb8",
          "9b19eeccda744703b3b3733ecee00ee0",
          "1b6a570f658e45d185dc4df31330cae8"
        ],
        "Left": -1082.2317958695257,
        "Top": -1114.5005690762118,
        "Width": 955.0,
        "Height": 274.0,
        "FontSize": 72.0,
        "InitialTop": -1018.5005690762118,
        "InitialHeight": 255.0,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "44a4e17e2d654b49b2124d6ae0cce858",
        "Title": "NODE inform select",
        "Nodes": [
          "c4f0b843ee56411d93ae5ae30f17f3a8",
          "1771ac21352444a491ee0fcb4f270147"
        ],
        "Left": 1854.0267149268802,
        "Top": -627.19945029077121,
        "Width": 366.61545601713988,
        "Height": 208.94543985968994,
        "FontSize": 36.0,
        "InitialTop": -574.19945029077121,
        "InitialHeight": 207.94543985968994,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "97a09c12a35a4a2d917a8b1e0f95aaa4",
        "Title": "ELEMENT inform select",
        "Nodes": [
          "d33b50c202f7442eaf0dcdc76ffd72f1",
          "474ee6e902824f26b2d9e4b56f3585cf"
        ],
        "Left": 1872.111894512384,
        "Top": -128.29255249985732,
        "Width": 366.61545601714033,
        "Height": 208.94543985968994,
        "FontSize": 36.0,
        "InitialTop": -75.292552499857322,
        "InitialHeight": 207.94543985968994,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "80cd4135aabf4f49b8669c030043f49b",
        "Title": "for debeg",
        "Nodes": [
          "b38c22db5c3c4c73ba58644e758d9cd4",
          "2bdf39604514405aba81f77d1cd03511"
        ],
        "Left": 2212.1848349583365,
        "Top": -5568.00319045519,
        "Width": 392.07666573259939,
        "Height": 185.55582656134993,
        "FontSize": 36.0,
        "InitialTop": -5515.00319045519,
        "InitialHeight": 173.55582656134993,
        "TextblockHeight": 43.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "8115e6a693bb4defa54d216b0099c5e5",
        "Title": "All Column Types",
        "Nodes": [
          "28a357fd86ec4fc0b39a3ed324dc51ba",
          "83fc67f23edb437785055772ed31a1ad"
        ],
        "Left": 4527.5100387590428,
        "Top": -4320.27507352666,
        "Width": 409.0,
        "Height": 157.0,
        "FontSize": 36.0,
        "InitialTop": -4267.27507352666,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "db980fbe534b403e96425c2cd539bb89",
        "Title": "All Framing Types",
        "Nodes": [
          "1b2ed5df2e36441d9d5a195400a4dd18",
          "5e6ede067b39405998478e2448dab7bb"
        ],
        "Left": 4543.170497488155,
        "Top": -3863.9145799434755,
        "Width": 411.0,
        "Height": 157.0,
        "FontSize": 36.0,
        "InitialTop": -3810.9145799434755,
        "InitialHeight": 145.0,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c747f6f687284de59046fb0778434aba",
        "Title": "iPRO: 부재단면속성\r\niN1: 시작점\r\niN2: 끝점",
        "Nodes": [],
        "Left": 1830.85897044856,
        "Top": -1892.3307639187035,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "210ffb5fb30d4757a16054cf9b5c89c5",
        "Title": "13번 인덱스 가로\r\n14번 인덱스 세로",
        "Nodes": [],
        "Left": 3672.9410914025634,
        "Top": -2456.9771647875814,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b5cb2080840349479a05678f6facda78",
        "Title": "단면 회전 매개변수\r\n\r\n: Cross-Section Rotation",
        "Nodes": [],
        "Left": 7148.1307148452852,
        "Top": -1081.6981402636234,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -2293.97486416799,
    "Y": 1915.617998950165,
    "Zoom": 0.46476724319270313
  }
}