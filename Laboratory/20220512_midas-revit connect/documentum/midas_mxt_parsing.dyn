{
  "Uuid": "8b47dd06-70cc-4840-8e1b-5059a86ef541",
  "IsCustomNode": false,
  "Description": "",
  "Name": "midas_mxt_parsing",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nimport re\r\nimport clr\r\n\r\npython_rootpath = os.getenv('LOCALAPPDATA')+'\\Programs\\Python'\r\npython_dir_list = os.listdir(python_rootpath)\r\n\r\np = re.compile('Python\\d{2,5}')\r\nversion_list = list(filter(lambda x: p.match(x), python_dir_list))\r\nversion_num = list(map(lambda x: int(x[7:]), version_list))\r\nlatest_idx= version_num.index(max(version_num))\r\n\r\npython_version = version_list[latest_idx]\r\n\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + f'\\Programs\\Python\\{python_version}\\Lib\\site-packages')\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\n\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\ngo = lambda *args: reduce(lambda a,f: f(a), args)\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputFilePath = IN[0]\r\ninputSheetName = IN[1]\r\n\r\n# Place your code below this line\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef checkAllElement(list, target):\r\n    tmp=[]\r\n    for i in list:\r\n        if i == target:\r\n            tmp.append(True)\r\n        else:\r\n            tmp.append(False)\r\n    return all(tmp)\r\n\r\nrm_Null = lambda list: go(list,\r\n    filter(lambda a: not checkAllElement(a, None)),\r\n    )\r\n\r\ns1 = importExcel(inputFilePath, inputSheetName)\r\n\r\ns2 = rm_Null(s1)  ## null만 있는 Excel Row 제거\r\n\r\nresult_tr = list(zip(*s2))\r\n\r\ns3 = rm_Null(result_tr) ## null만 있는 Excel Column 제거\r\n\r\nresult = list(zip(*s3))\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3a0fc8c0d0b642f6b5c8d53a5b77a40a",
      "Inputs": [
        {
          "Id": "d9fa5821c74f4b7abb5096cea63a8b11",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "751b1cd4e40d4878bd7f821ee7a8a99b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0caae7c6bf3e45d283b3822b037f167a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "C:\\MK\\mQ\\Laboratory\\20220512_midas-revit connect\\documentum\\Ulsan_CEB & Admin. Building_New2(Size)_BOQ.xlsx",
      "InputValue": ".\\Ulsan_CEB & Admin. Building_New2(Size)_BOQ.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "fdc75dc9a22547b69806180caf0bc719",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4c957954c4e848739e42f908beb30548",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Ulsan_CEB & Admin. Building_New",
      "Id": "7b81963427cc4168b875633114370661",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eaa6642726b74009a083002f8834f8b4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\n\r\ndef find_tgrow_idx(tglst, idf):\r\n\r\n    def chck_identifier(tglst, idf):\r\n        eres = list(map(lambda x: str(x).find(idf), tglst)) \r\n        res = reduce(lambda a,b: a*b, eres)\r\n        if res == 0:\r\n            return True\r\n    \r\n    bln_res = list(map(lambda x: chck_identifier(x,idf), tglst))\r\n    result = [i for i, x in enumerate(bln_res) if x == True]\r\n    return result\r\n\r\n\r\nresult = find_tgrow_idx(input,'*')\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "9d60e90d202a4d7da8cd89b91f64ebad",
      "Inputs": [
        {
          "Id": "1dda2372bfa44269a5d19fbda32f7255",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cd6f38e77a84231a6793f61c7101f81",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\ngo = lambda *args: reduce(lambda a,f: f(a), args)\r\n\r\ndef checkAllElement(list, target):\r\n    tmp=[]\r\n    for i in list:\r\n        if i == target:\r\n            tmp.append(True)\r\n        else:\r\n            tmp.append(False)\r\n    return all(tmp)\r\n\r\nrm_Null = lambda list: go(list,\r\n    filter(lambda a: not checkAllElement(a, None)),\r\n    )\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ndata = IN[0]\r\nsplit_idx = IN[1]\r\n\r\n# Place your code below this line\r\ndef splitDataAsDict(split_idx):\r\n\r\n    def calc_range(split_idx):\r\n        res = []\r\n        for i,x in enumerate(split_idx):\r\n            if i < len(split_idx)-1:\r\n                res.append((x, split_idx[i+1]))\r\n            else:\r\n                pass\r\n        return res\r\n    \r\n    range = calc_range(split_idx)\r\n\r\n    result = []\r\n    dic = {}\r\n    for x in range:\r\n        key = data[x[0]][0].split('    ;')[0]\r\n        val1 = data[x[0]+1:x[1]]\r\n        val_tr = list(zip(*val1))\r\n        val = list(zip(*rm_Null(val_tr)))\r\n        dic[str(key)] = val\r\n    return dic\r\n\r\nresult = splitDataAsDict(split_idx)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "adef3d65e1c04441a11d9a19fc7aaf32",
      "Inputs": [
        {
          "Id": "4742f1e5705843e6bb3bd13bbfbb680a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9404e2fea90d4735bd9abda2efb8648c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf5e0f038c04bb4a265f5141d9a6428",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "fa2cfe22d01e48c39cc48259140e5943",
      "Inputs": [
        {
          "Id": "02cb91804b78447d8da16ea7e16511be",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e7fc66c8a284d6aa41301f8c6292411",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28e934a3c0e4429daeb8cb7780b17b44",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Keys",
      "Id": "d5576058ed604c238257ec1dae443b03",
      "Inputs": [
        {
          "Id": "b05ee99cbc9e42308215b33a3c961f68",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "051f7e3737d34b12940b3247264a6190",
          "Name": "keys",
          "Description": "The keys of the Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the keys in a Dictionary.\n\nDictionary.Keys: string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[7];",
      "Id": "44bf01c4fa46427080409796453d969a",
      "Inputs": [
        {
          "Id": "88f2142191574ec0bfa61e96c2c3e129",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "68a6ab4f1ef74908908a92c93c73a1ea",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[5];",
      "Id": "9620d529d29d45e7a3f090ec046a8eb8",
      "Inputs": [
        {
          "Id": "b9f4988af81b4168a892af86ec33a1a0",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d60a7db492914464bf804dbf93208128",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "063e967c1a5142089dd972a3a89f9976",
      "Inputs": [
        {
          "Id": "fab065f8c4044d8b80d555e8ceb51c22",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3b87cbfc3bd14a71991d5634bf326026",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7b099b6cbbf472383da3758257b26ab",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\n\r\ndef find_tgrow_idx(tglst, idf):\r\n\r\n    def chck_identifier(tglst, idf):\r\n        eres = list(map(lambda x: str(x).find(idf), tglst)) \r\n        res = reduce(lambda a,b: a*b, eres)\r\n        if res == 0:\r\n            return True\r\n    \r\n    bln_res = list(map(lambda x: chck_identifier(x,idf), tglst))\r\n    result = [i for i, x in enumerate(bln_res) if x == True]\r\n    return result\r\n\r\ndef removeHeadFromDict(tglst, idf):\r\n    result = []\r\n    del_idx = find_tgrow_idx(tglst,idf)\r\n    for i,x in enumerate(tglst):\r\n        if i in del_idx:\r\n            pass\r\n        else:\r\n            result.append(x)\r\n    return result\r\n\r\nresult = removeHeadFromDict(input,';')\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "85c32552b64047c8a2b6a58370f8f11c",
      "Inputs": [
        {
          "Id": "1c68a54d1a3e4726a20841b6db9b379d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b898d7ba8c60449caf7a4f806e347d9e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ef26b5f4b425464289f10474208cd6dc",
      "Inputs": [
        {
          "Id": "2b2555f97d984d9096897924d76ab211",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "1b4da65c6b49474a86509e90c1365279",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8b9785e070a4009925ac77bb0c7b930",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "4;",
      "Id": "39c9b1f0defc4696b3b866f2c7c67df0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c993673af7544f2d9d862989b8bd1e87",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "c79eec04ecab4f76afb9761298adb506",
      "Inputs": [
        {
          "Id": "ab9ce27616404bd6af9f6dbecd7cfac8",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "d1a9bfcb25414aa4b711ce39a87160a8",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b30ec57c11904b8d9b345d013bbceaf4",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "5;",
      "Id": "f7acef35b6584505922e63b4d93b125a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3cc5374492124b2f9475b153d1e50520",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\n\r\ndef find_tgrow_idx(tglst, idf):\r\n\r\n    def chck_identifier(tglst, idf):\r\n        eres = list(map(lambda x: str(x).find(idf), tglst)) \r\n        res = reduce(lambda a,b: a*b, eres)\r\n        if res == 0:\r\n            return True\r\n    \r\n    bln_res = list(map(lambda x: chck_identifier(x,idf), tglst))\r\n    result = [i for i, x in enumerate(bln_res) if x == True]\r\n    return result\r\n\r\ndef removeHeadFromDict(tglst, idf):\r\n    result = []\r\n    del_idx = find_tgrow_idx(tglst,idf)\r\n    for i,x in enumerate(tglst):\r\n        if i in del_idx:\r\n            pass\r\n        else:\r\n            result.append(x)\r\n    return result\r\n\r\nresult = removeHeadFromDict(input,';')\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "411b09f5631447c28440594595ecea90",
      "Inputs": [
        {
          "Id": "e183d41990d74443ba18887a942388ad",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3824b4f294a640e7a8c935b58d6b0088",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\ndef findOrigin(pts):\r\n    origin = pts[0]\r\n    \r\n    ori_ptX = origin[1]\r\n    ori_ptY = origin[2]\r\n    ori_pyZ = origin[3]\r\n    origin = (ori_ptX, ori_ptY, ori_pyZ)\r\n    \r\n    return origin\r\n\r\ndef trnslt_pt(pts, origin):\r\n    def set_trPt(pt):\r\n        res = (pt[0], pt[1]-origin[0], pt[2]-origin[1], pt[3]-origin[2])\r\n        return res\r\n        \r\n    result = list(map(lambda x: set_trPt(x), pts))\r\n    return result\r\n\r\norigin = findOrigin(input)\r\nresult = trnslt_pt(input, origin)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "d61f7406ce3844a29d9d06de6a566a1d",
      "Inputs": [
        {
          "Id": "d3a912d29fcb49e8b7808e47b8482b98",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c32bdf682ee440da9f9683b2054930fa",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\n# Place your code below this line\r\ndef mkPoints(pts):\r\n    dic={}\r\n    def mkPoint(pt):\r\n        ptX = pt[1]*1000\r\n        ptY = pt[2]*1000\r\n        ptZ = pt[3]*1000\r\n        gpt = Point.ByCoordinates(ptX, ptY, ptZ)\r\n        return gpt\r\n    \r\n    for x in pts:\r\n        dic[str(x[0])] = mkPoint(x)\r\n    return dic\r\n\r\nresult = mkPoints(input)\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "eb8da54debc747ff8665bbc13b6f7a9c",
      "Inputs": [
        {
          "Id": "08ef8d2d5ddd4cd69e39ea17f9f3be1d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39b6c385be924e14a64a57d1735d82c1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Values",
      "Id": "351cef0f6aad41c59d0014806b29a0f1",
      "Inputs": [
        {
          "Id": "cf73e100f60d4a4a9ab687a39bdce346",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "955131d906f84385b387cc7f70deae13",
          "Name": "values",
          "Description": "The values of the Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the values in a Dictionary.\n\nDictionary.Values: var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i;",
      "Id": "bfdeec6d3a864fd88ed624d50813bc7f",
      "Inputs": [
        {
          "Id": "ff23615a30214148bd3b986756e633ef",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ddc619dfee51484d93dcf2a742d331a7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\n\r\ndef filtering(data, str):\r\n    res = list(filter(lambda x: str in x[1], data))\r\n    return res\r\n\r\n\r\nresult = filtering(input, \"BEAM\")\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "a0e80a85bc144d75bd5068d1eb59edf9",
      "Inputs": [
        {
          "Id": "809fe14b9e69476196a80dcf6c7ebeb8",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e279eaa4d6049d9850298c0a09894a4",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    }
  ],
  "Connectors": [
    {
      "Start": "0caae7c6bf3e45d283b3822b037f167a",
      "End": "1dda2372bfa44269a5d19fbda32f7255",
      "Id": "6124a865e8ff4f4c84b5f406507e7a8c"
    },
    {
      "Start": "0caae7c6bf3e45d283b3822b037f167a",
      "End": "4742f1e5705843e6bb3bd13bbfbb680a",
      "Id": "c1329ad7126c4232be9f10de966d2d5c"
    },
    {
      "Start": "4c957954c4e848739e42f908beb30548",
      "End": "d9fa5821c74f4b7abb5096cea63a8b11",
      "Id": "5ab349831bc14567b47f7f04fe2f8e4f"
    },
    {
      "Start": "eaa6642726b74009a083002f8834f8b4",
      "End": "751b1cd4e40d4878bd7f821ee7a8a99b",
      "Id": "eccc516142914e0eb803f4b635fc1aa5"
    },
    {
      "Start": "3cd6f38e77a84231a6793f61c7101f81",
      "End": "9404e2fea90d4735bd9abda2efb8648c",
      "Id": "5a0e3c9c06b2464fb709c6dc02b366a0"
    },
    {
      "Start": "abf5e0f038c04bb4a265f5141d9a6428",
      "End": "b05ee99cbc9e42308215b33a3c961f68",
      "Id": "c88652f2f51b4e04b4f20d83b5164e3e"
    },
    {
      "Start": "abf5e0f038c04bb4a265f5141d9a6428",
      "End": "02cb91804b78447d8da16ea7e16511be",
      "Id": "1f605f5af3414934909a7f8572220e98"
    },
    {
      "Start": "abf5e0f038c04bb4a265f5141d9a6428",
      "End": "fab065f8c4044d8b80d555e8ceb51c22",
      "Id": "96636cdc7b0441938530db09f92c66be"
    },
    {
      "Start": "28e934a3c0e4429daeb8cb7780b17b44",
      "End": "1c68a54d1a3e4726a20841b6db9b379d",
      "Id": "2a4178fece1845f4af9f318bf9f98495"
    },
    {
      "Start": "051f7e3737d34b12940b3247264a6190",
      "End": "88f2142191574ec0bfa61e96c2c3e129",
      "Id": "27646ff89e9f4bb99432d33132d078f6"
    },
    {
      "Start": "051f7e3737d34b12940b3247264a6190",
      "End": "b9f4988af81b4168a892af86ec33a1a0",
      "Id": "2f3e60907813478b80b1ad7a50423b1d"
    },
    {
      "Start": "68a6ab4f1ef74908908a92c93c73a1ea",
      "End": "3e7fc66c8a284d6aa41301f8c6292411",
      "Id": "68b85748ce9d4b7bbda0b0a46f7bb1f2"
    },
    {
      "Start": "d60a7db492914464bf804dbf93208128",
      "End": "3b87cbfc3bd14a71991d5634bf326026",
      "Id": "ed1ae9af79944f6db21f9df60489c85d"
    },
    {
      "Start": "f7b099b6cbbf472383da3758257b26ab",
      "End": "e183d41990d74443ba18887a942388ad",
      "Id": "f869055000f84d2aa43b19954f631978"
    },
    {
      "Start": "b898d7ba8c60449caf7a4f806e347d9e",
      "End": "809fe14b9e69476196a80dcf6c7ebeb8",
      "Id": "2e732849c7fb4af8b585f2d268392383"
    },
    {
      "Start": "c993673af7544f2d9d862989b8bd1e87",
      "End": "1b4da65c6b49474a86509e90c1365279",
      "Id": "d6bd26272e2d4caeb25c4f11ac9f5470"
    },
    {
      "Start": "3cc5374492124b2f9475b153d1e50520",
      "End": "d1a9bfcb25414aa4b711ce39a87160a8",
      "Id": "af36b42d6e154a35a4ed797f49ce14c4"
    },
    {
      "Start": "3824b4f294a640e7a8c935b58d6b0088",
      "End": "d3a912d29fcb49e8b7808e47b8482b98",
      "Id": "61c6be1cbebf407ca15720cebe99d8af"
    },
    {
      "Start": "c32bdf682ee440da9f9683b2054930fa",
      "End": "08ef8d2d5ddd4cd69e39ea17f9f3be1d",
      "Id": "d28ad7c1a30a4edcaeb9f3117c4a6dfb"
    },
    {
      "Start": "39b6c385be924e14a64a57d1735d82c1",
      "End": "cf73e100f60d4a4a9ab687a39bdce346",
      "Id": "fc08c55b80824634acf261fc3a2083ba"
    },
    {
      "Start": "ddc619dfee51484d93dcf2a742d331a7",
      "End": "2b2555f97d984d9096897924d76ab211",
      "Id": "481b15b1ecf548709f2ce2d9d52eaedc"
    },
    {
      "Start": "ddc619dfee51484d93dcf2a742d331a7",
      "End": "ab9ce27616404bd6af9f6dbecd7cfac8",
      "Id": "8ee91dad7bac44fcbafaacb66f0e397d"
    },
    {
      "Start": "0e279eaa4d6049d9850298c0a09894a4",
      "End": "ff23615a30214148bd3b986756e633ef",
      "Id": "2a948bbc477d4ed1a884a4e4a87909a2"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.1.3976",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 5515.279296875,
      "EyeY": 32423.5390625,
      "EyeZ": 29901.494140625,
      "LookX": 12518.015625,
      "LookY": -22203.599609375,
      "LookZ": -29940.8515625,
      "UpX": 0.1444990485906601,
      "UpY": 0.92718374729156494,
      "UpZ": -0.34561598300933838
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "initial data import",
        "Id": "3a0fc8c0d0b642f6b5c8d53a5b77a40a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 339.34231352278169,
        "Y": -61.311603231444508
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "fdc75dc9a22547b69806180caf0bc719",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -76.6576864772183,
        "Y": -103.31160323144451
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7b81963427cc4168b875633114370661",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -76.6576864772183,
        "Y": 6.6883967685554921
      },
      {
        "ShowGeometry": true,
        "Name": "find identifier row idx",
        "Id": "9d60e90d202a4d7da8cd89b91f64ebad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 637.50932666375081,
        "Y": -8.9912724124019974
      },
      {
        "ShowGeometry": true,
        "Name": "splitDataAsDict(불필요Null 제거)",
        "Id": "adef3d65e1c04441a11d9a19fc7aaf32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 923.64795774486572,
        "Y": -64.019549853116871
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fa2cfe22d01e48c39cc48259140e5943",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2082.2916657214751,
        "Y": -69.602915160291928
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Keys",
        "Id": "d5576058ed604c238257ec1dae443b03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1345.843352945689,
        "Y": 18.307576839269473
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "44bf01c4fa46427080409796453d969a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1871.2916657214751,
        "Y": -52.0295818269586
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9620d529d29d45e7a3f090ec046a8eb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1873.5653469220231,
        "Y": -405.37125831419741
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "063e967c1a5142089dd972a3a89f9976",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2072.9655855564361,
        "Y": -486.74327915825944
      },
      {
        "ShowGeometry": true,
        "Name": "removeHeadFromDict",
        "Id": "85c32552b64047c8a2b6a58370f8f11c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2438.276958753906,
        "Y": -73.951891531661147
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "ef26b5f4b425464289f10474208cd6dc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3541.7596137945534,
        "Y": -94.746800688310373
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "39c9b1f0defc4696b3b866f2c7c67df0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3399.3243518918221,
        "Y": -30.780214481875589
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "c79eec04ecab4f76afb9761298adb506",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3541.50775298429,
        "Y": 316.04111097054755
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "f7acef35b6584505922e63b4d93b125a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3399.07249108156,
        "Y": 380.0076971769825
      },
      {
        "ShowGeometry": true,
        "Name": "removeHeadFromDict",
        "Id": "411b09f5631447c28440594595ecea90",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2454.9280210850898,
        "Y": -684.7507811936681
      },
      {
        "ShowGeometry": true,
        "Name": "원점정하고 좌표계변환(단위 m->mm)",
        "Id": "d61f7406ce3844a29d9d06de6a566a1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2731.230240201091,
        "Y": -761.0715104877479
      },
      {
        "ShowGeometry": true,
        "Name": "다이나모 포인트로 변환 및 딕셔너리화",
        "Id": "eb8da54debc747ff8665bbc13b6f7a9c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3090.1413698555493,
        "Y": -762.83893856413488
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Values",
        "Id": "351cef0f6aad41c59d0014806b29a0f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3526.8026092748391,
        "Y": -924.81593796639982
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "bfdeec6d3a864fd88ed624d50813bc7f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3170.499592848993,
        "Y": -82.848463069540514
      },
      {
        "ShowGeometry": true,
        "Name": "Beam 부재 필터링",
        "Id": "a0e80a85bc144d75bd5068d1eb59edf9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2811.2381909136716,
        "Y": -73.947283489671918
      }
    ],
    "Annotations": [
      {
        "Id": "a81739cfe1e140eabd2b8d2004647808",
        "Title": "<Click here to edit the group title>",
        "Nodes": [
          "9620d529d29d45e7a3f090ec046a8eb8",
          "063e967c1a5142089dd972a3a89f9976"
        ],
        "Left": 1863.5653469220231,
        "Top": -582.74327915825938,
        "Width": 330.400238634413,
        "Height": 270.372020844062,
        "FontSize": 36.0,
        "InitialTop": -486.74327915825944,
        "InitialHeight": 200.139116156711,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "433ab7d3c123474db54b856c06006017",
        "Title": "<Click here to edit the group title>",
        "Nodes": [
          "fa2cfe22d01e48c39cc48259140e5943",
          "44bf01c4fa46427080409796453d969a"
        ],
        "Left": 1861.2916657214751,
        "Top": -165.60291516029193,
        "Width": 342.0,
        "Height": 206.57333333333332,
        "FontSize": 36.0,
        "InitialTop": -69.602915160291928,
        "InitialHeight": 206.68719697856181,
        "TextblockHeight": 86.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c747f6f687284de59046fb0778434aba",
        "Title": "iPRO: 부재단면속성\r\niN1: 시작점\r\niN2: 끝점",
        "Nodes": [],
        "Left": 1846.6052986410293,
        "Top": -684.31286016358831,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -690.80960148898293,
    "Y": 547.22930094897072,
    "Zoom": 0.35537956040445429
  }
}