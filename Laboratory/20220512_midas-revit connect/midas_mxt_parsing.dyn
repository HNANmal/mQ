{
  "Uuid": "8b47dd06-70cc-4840-8e1b-5059a86ef541",
  "IsCustomNode": false,
  "Description": "",
  "Name": "midas_mxt_parsing",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nimport re\r\nimport clr\r\n\r\npython_rootpath = os.getenv('LOCALAPPDATA')+'\\Programs\\Python'\r\npython_dir_list = os.listdir(python_rootpath)\r\n\r\np = re.compile('Python\\d{2,5}')\r\nversion_list = list(filter(lambda x: p.match(x), python_dir_list))\r\nversion_num = list(map(lambda x: int(x[7:]), version_list))\r\nlatest_idx= version_num.index(max(version_num))\r\n\r\npython_version = version_list[latest_idx]\r\n\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + f'\\Programs\\Python\\{python_version}\\Lib\\site-packages')\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom collections import Iterable\r\nimport datetime\r\nimport openpyxl\r\n\r\nfrom itertools import chain\r\nfrom functools import reduce\r\n\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\ngo = lambda *args: reduce(lambda a,f: f(a), args)\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputFilePath = IN[0]\r\ninputSheetName = IN[1]\r\n\r\n# Place your code below this line\r\n\r\ndef importExcel(path, SheetNameIn):\r\n    wb_obj = openpyxl.load_workbook(str(path), data_only=True)\r\n    sheet_obj = wb_obj.get_sheet_by_name(str(SheetNameIn))\r\n\r\n    m_row = sheet_obj.max_row\r\n    m_col = sheet_obj.max_column\r\n\r\n    listOut = []\r\n\r\n    for i in range(1, m_row +1):\r\n        listTemp = []\r\n        for j in range(1, m_col + 1):\r\n            cell_obj = sheet_obj.cell(row=i, column=j)\r\n            listTemp.append(cell_obj.value)\r\n            if len(listTemp) == m_col:\r\n                listOut.append(listTemp)\r\n    return listOut\r\n\r\ndef checkAllElement(list, target):\r\n    tmp=[]\r\n    for i in list:\r\n        if i == target:\r\n            tmp.append(True)\r\n        else:\r\n            tmp.append(False)\r\n    return all(tmp)\r\n\r\nrm_Null = lambda list: go(list,\r\n    filter(lambda a: not checkAllElement(a, None)),\r\n    )\r\n\r\ns1 = importExcel(inputFilePath, inputSheetName)\r\n\r\ns2 = rm_Null(s1)  ## null만 있는 Excel Row 제거\r\n\r\nresult_tr = list(zip(*s2))\r\n\r\ns3 = rm_Null(result_tr) ## null만 있는 Excel Column 제거\r\n\r\nresult = list(zip(*s3))\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3a0fc8c0d0b642f6b5c8d53a5b77a40a",
      "Inputs": [
        {
          "Id": "d9fa5821c74f4b7abb5096cea63a8b11",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "751b1cd4e40d4878bd7f821ee7a8a99b",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0caae7c6bf3e45d283b3822b037f167a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\mk\\mQ\\Laboratory\\20220512_midas-revit connect\\Ulsan_CEB & Admin. Building_New2(Size)_BOQ.xlsx",
      "InputValue": ".\\Ulsan_CEB & Admin. Building_New2(Size)_BOQ.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "fdc75dc9a22547b69806180caf0bc719",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4c957954c4e848739e42f908beb30548",
          "Name": "",
          "Description": "File Path",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its file path."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Ulsan_CEB & Admin. Building_New",
      "Id": "7b81963427cc4168b875633114370661",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eaa6642726b74009a083002f8834f8b4",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ninput = IN[0]\r\n\r\n# Place your code below this line\r\n\r\ndef find_tgrow_idx(tglst, idf):\r\n\r\n    def chck_identifier(tglst, idf):\r\n        eres = list(map(lambda x: str(x).find(idf), tglst)) \r\n        res = reduce(lambda a,b: a*b, eres)\r\n        if res == 0:\r\n            return True\r\n    \r\n    bln_res = list(map(lambda x: chck_identifier(x,idf), tglst))\r\n    result = [i for i, x in enumerate(bln_res) if x == True]\r\n    return result\r\n\r\n\r\nresult = find_tgrow_idx(input,'*')\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "9d60e90d202a4d7da8cd89b91f64ebad",
      "Inputs": [
        {
          "Id": "1dda2372bfa44269a5d19fbda32f7255",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3cd6f38e77a84231a6793f61c7101f81",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\ncurry = lambda f: lambda a,*args: f(a, *args) if (len(args)) else lambda *args: f(a, *args)\r\n\r\nadd = curry(lambda a,b: a + b)\r\n\r\nfilter = curry(filter)\r\nmap = curry(map)\r\n\r\ndef _take(length, iter):\r\n    res = []\r\n    for a in iter:\r\n        res.append(a)\r\n        if len(res) == length:\r\n            return res\r\ntake = curry(_take)\r\nreduce = curry(reduce)\r\ngo = lambda *args: reduce(lambda a,f: f(a), args)\r\n\r\ndef checkAllElement(list, target):\r\n    tmp=[]\r\n    for i in list:\r\n        if i == target:\r\n            tmp.append(True)\r\n        else:\r\n            tmp.append(False)\r\n    return all(tmp)\r\n\r\nrm_Null = lambda list: go(list,\r\n    filter(lambda a: not checkAllElement(a, None)),\r\n    )\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\ndata = IN[0]\r\nsplit_idx = IN[1]\r\n\r\n# Place your code below this line\r\n\r\ndef calc_range(split_idx):\r\n    res = []\r\n    for i,x in enumerate(split_idx):\r\n        if i < len(split_idx)-1:\r\n            res.append((x, split_idx[i+1]))\r\n        else:\r\n            pass\r\n    return res\r\n\r\nrange = calc_range(split_idx)\r\n\r\nresult = []\r\ndic = {}\r\nfor x in range:\r\n    key = data[x[0]][0].split('    ;')[0]\r\n    val1 = data[x[0]+1:x[1]]\r\n    val_tr = list(zip(*val1))\r\n    val = list(zip(*rm_Null(val_tr)))\r\n    dic[str(key)] = val\r\n    \r\n\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = dic",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "adef3d65e1c04441a11d9a19fc7aaf32",
      "Inputs": [
        {
          "Id": "4742f1e5705843e6bb3bd13bbfbb680a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9404e2fea90d4735bd9abda2efb8648c",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "abf5e0f038c04bb4a265f5141d9a6428",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[j];",
      "Id": "fa2cfe22d01e48c39cc48259140e5943",
      "Inputs": [
        {
          "Id": "02cb91804b78447d8da16ea7e16511be",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e7fc66c8a284d6aa41301f8c6292411",
          "Name": "j",
          "Description": "j",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28e934a3c0e4429daeb8cb7780b17b44",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DesignScript.Builtin.Dictionary.Keys",
      "Id": "d5576058ed604c238257ec1dae443b03",
      "Inputs": [
        {
          "Id": "b05ee99cbc9e42308215b33a3c961f68",
          "Name": "dictionary",
          "Description": "DesignScript.Builtin.Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "051f7e3737d34b12940b3247264a6190",
          "Name": "keys",
          "Description": "Keys of the Dictionary",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces the keys in a Dictionary.\n\nDictionary.Keys: string[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[5];",
      "Id": "44bf01c4fa46427080409796453d969a",
      "Inputs": [
        {
          "Id": "f1cf6964c57649379157ea913bc23620",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ecc3360d47dd424887e8bed28290040a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "0caae7c6bf3e45d283b3822b037f167a",
      "End": "1dda2372bfa44269a5d19fbda32f7255",
      "Id": "6124a865e8ff4f4c84b5f406507e7a8c"
    },
    {
      "Start": "0caae7c6bf3e45d283b3822b037f167a",
      "End": "4742f1e5705843e6bb3bd13bbfbb680a",
      "Id": "c1329ad7126c4232be9f10de966d2d5c"
    },
    {
      "Start": "4c957954c4e848739e42f908beb30548",
      "End": "d9fa5821c74f4b7abb5096cea63a8b11",
      "Id": "5ab349831bc14567b47f7f04fe2f8e4f"
    },
    {
      "Start": "eaa6642726b74009a083002f8834f8b4",
      "End": "751b1cd4e40d4878bd7f821ee7a8a99b",
      "Id": "eccc516142914e0eb803f4b635fc1aa5"
    },
    {
      "Start": "3cd6f38e77a84231a6793f61c7101f81",
      "End": "9404e2fea90d4735bd9abda2efb8648c",
      "Id": "5a0e3c9c06b2464fb709c6dc02b366a0"
    },
    {
      "Start": "abf5e0f038c04bb4a265f5141d9a6428",
      "End": "b05ee99cbc9e42308215b33a3c961f68",
      "Id": "c88652f2f51b4e04b4f20d83b5164e3e"
    },
    {
      "Start": "abf5e0f038c04bb4a265f5141d9a6428",
      "End": "02cb91804b78447d8da16ea7e16511be",
      "Id": "1f605f5af3414934909a7f8572220e98"
    },
    {
      "Start": "051f7e3737d34b12940b3247264a6190",
      "End": "f1cf6964c57649379157ea913bc23620",
      "Id": "ec683e6feb51465a9f617492dc0f57a9"
    },
    {
      "Start": "ecc3360d47dd424887e8bed28290040a",
      "End": "3e7fc66c8a284d6aa41301f8c6292411",
      "Id": "81455a7afc9e49a1ae0f4d2fee621cb0"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.0.5650",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "initial data import",
        "Id": "3a0fc8c0d0b642f6b5c8d53a5b77a40a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 339.34231352278169,
        "Y": -61.311603231444508
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "fdc75dc9a22547b69806180caf0bc719",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -76.6576864772183,
        "Y": -103.31160323144451
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "7b81963427cc4168b875633114370661",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -76.6576864772183,
        "Y": 6.6883967685554921
      },
      {
        "ShowGeometry": true,
        "Name": "find identifier row idx",
        "Id": "9d60e90d202a4d7da8cd89b91f64ebad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 637.50932666375081,
        "Y": -8.9912724124019974
      },
      {
        "ShowGeometry": true,
        "Name": "구간 별 Dict 형성(불필요Null 제거)",
        "Id": "adef3d65e1c04441a11d9a19fc7aaf32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 930.50932666375081,
        "Y": -74.311603231444508
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fa2cfe22d01e48c39cc48259140e5943",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1798.6297343071221,
        "Y": -120.14107211869793
      },
      {
        "ShowGeometry": true,
        "Name": "Dictionary.Keys",
        "Id": "d5576058ed604c238257ec1dae443b03",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1345.843352945689,
        "Y": 18.307576839269473
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "44bf01c4fa46427080409796453d969a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1602.5811067460004,
        "Y": -39.402517698889767
      }
    ],
    "Annotations": [],
    "X": 266.20689164215753,
    "Y": 459.11014892393626,
    "Zoom": 0.77596016132001722
  }
}