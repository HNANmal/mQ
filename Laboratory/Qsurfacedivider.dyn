{
  "Uuid": "a79fa74f-e34d-4d89-a973-37aaa8faa714",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Qsurfacedivider",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Rectangle.ByWidthLength@double,double",
      "Id": "36a0118f1ae04f6abef20cd456102308",
      "Inputs": [
        {
          "Id": "230468dd6ef7461a9368e207ed74f630",
          "Name": "width",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "083c0b9fd2d64d048eeb867b65916431",
          "Name": "length",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "50ab653b2b56426abc795f3e984370f8",
          "Name": "Rectangle",
          "Description": "Rectangle",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Rectangle centered at the WCS origin in the WCS XY Plane, with specified width (X Axis length), and length (Y Axis length).\n\nRectangle.ByWidthLength (width: double = 1, length: double = 1): Rectangle"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1000;\n2000;",
      "Id": "f2959672adad42afb04b63891f94e268",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "442a0224c24445aa8d4370c47aeabd66",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "483a54118dc041839f464690ee936c94",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.ByPatch@Autodesk.DesignScript.Geometry.Curve",
      "Id": "de04a5bc06df42e9932e62a4cc16937b",
      "Inputs": [
        {
          "Id": "bf8542400b864b1b9c0cfbb33b902729",
          "Name": "closedCurve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fa2bf851bef5433593003b855d4121fc",
          "Name": "Surface",
          "Description": "Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Surface by filling in the interior of a closed boundary defined by input Curves.\n\nSurface.ByPatch (closedCurve: Curve): Surface"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PointAtParameter@double,double",
      "Id": "5be5106b222d4b41a6047feb73775730",
      "Inputs": [
        {
          "Id": "0666be0a7c9441b8a8cf4ac8637f019a",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "47500593a4194fcbb525f88086a8c055",
          "Name": "u",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a08950657554f869c204f97766ea18d",
          "Name": "v",
          "Description": "double\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac3eb6ec50934506b080827aef75355d",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Return the Point at specified U and V parameters.\n\nSurface.PointAtParameter (u: double = 0, v: double = 0): Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0..1..#100;",
      "Id": "679196c0c7ea41e9b6267b68d348edf1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "492b7a755c93468085165bc1ba7b0513",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nclass ConvexHull_Maker:\r\n    def __init__(self, points):\r\n        def convex_hull_graham(points):\r\n            def ToVals(pt):\r\n\t            return [pt.X,pt.Y,pt.Z]\r\n            def ToPts(ptVals):\r\n\t            return Point.ByCoordinates(ptVals[0],ptVals[1],ptVals[2])\r\n\t           \r\n            def CreateOutline(pts):\r\n                crvs = []\r\n                i = 0\r\n                while i < len(pts):\r\n                    if i == len(pts)-1:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[0]))\r\n                    else:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[i+1]))\r\n                    i = i+1\r\n                return PolyCurve.ByJoinedCurves(crvs)\r\n\t\r\n            TURN_LEFT, TURN_RIGHT, TURN_NONE = (1, -1, 0)\r\n\r\n            def cmp(a, b):\r\n                return (a > b) - (a < b)\r\n\t\r\n            def turn(p, q, r):\r\n                return cmp((q[0] - p[0])*(r[1] - p[1]) - (r[0] - p[0])*(q[1] - p[1]), 0)\r\n\t\r\n            def _keep_left(hull, r):\r\n                while len(hull) > 1 and turn(hull[-2], hull[-1], r) != TURN_LEFT:\r\n                    hull.pop()\r\n                if not len(hull) or hull[-1] != r:\r\n                    hull.append(r)\r\n                return hull\r\n\r\n            points = [ToVals(p) for p in points]\t\r\n            points = sorted(points)\r\n            l = reduce(_keep_left, points, [])\r\n            u = reduce(_keep_left, reversed(points), [])\r\n            points = l.extend(u[i] for i in range(1, len(u) - 1)) or l\r\n            points = [ToPts(p) for p in points]\r\n            return CreateOutline(points)\r\n            \r\n        self.points = points\r\n        result = convex_hull_graham(points)\r\n        self.result = result\r\n# Assign your output to the OUT variable.\r\nOUT = ConvexHull_Maker",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "65b0d70ad7bc4f8cb042f31cd6770af8",
      "Inputs": [
        {
          "Id": "c9b330dfec444466919085e4c9deb6f1",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a534a2dfb8d742298894299a6eb1f314",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c323f40d17224c74a4229dff27002232",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\nConvexHull_Maker = IN[0]\r\ninputPts = IN[1]\r\n# Place your code below this line\r\n\r\ncvxCrv = ConvexHull_Maker(inputPts).result\r\ncvxSrf = Surface.ByPatch(cvxCrv)\r\ncvxSolid = cvxSrf.Thicken(100, False)\r\nresult = cvxSolid\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "f390f30959b5406dab3b6e4e2b997a17",
      "Inputs": [
        {
          "Id": "7736152b319a454c9e16131ec5643954",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "67a094c8394f46b8b95da6480c828cfc",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b54f76fcae0482e8399dcd969d0a860",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "20172bba6d2946d38cbee5be9349b9b0",
      "Inputs": [
        {
          "Id": "f1ab6ec4311949ae9da78a562bbcf68c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "88196be905d34b30b5be8e193a5eb777",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "761bc5921f1d47fbaf3aee35608ea9cf",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.TakeItems@var[]..[],int",
      "Id": "a454dc40cc804f07a17c4cd1961a9bc9",
      "Inputs": [
        {
          "Id": "1f813fcec01e4899b4169bcb4da8c35f",
          "Name": "list",
          "Description": "List to take from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "486ab3a6227040bb9f941b6231ddbd4b",
          "Name": "amount",
          "Description": "Amount of items to take. If negative, items are taken from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bc82c8aa133844c492e61d55a7678b42",
          "Name": "list",
          "Description": "List of extracted items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fetches an amount of items from the start of the list.\n\nList.TakeItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "5;",
      "Id": "900f122898394e9ca9f3e46b6102192a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1b11c1f716db4dde95af7d009b836544",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.TakeItems@var[]..[],int",
      "Id": "d656436c5fc24177bab4d6b760cfac51",
      "Inputs": [
        {
          "Id": "4050e23acb194a1c9b9a8577b6f36360",
          "Name": "list",
          "Description": "List to take from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ddc97166aa0749d1b8a276234873a485",
          "Name": "amount",
          "Description": "Amount of items to take. If negative, items are taken from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6d69fcee6fd4098848205c959fff098",
          "Name": "list",
          "Description": "List of extracted items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fetches an amount of items from the start of the list.\n\nList.TakeItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10;",
      "Id": "4450fe0f6b6541a781257762bdc0f17e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e73c1d4dde84e0ba09b3a55c0aee9e4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.RandomList@int,double,double,int",
      "Id": "a35a9b123b184b358d3f7eeac32736cb",
      "Inputs": [
        {
          "Id": "ffdfaa3fd16d48a4aae7df214ff1047d",
          "Name": "amount",
          "Description": "Amount of random numbers the result list will contain.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2aa7440998f84151aa3ad9777ee0ef58",
          "Name": "value1",
          "Description": "Lower end of the range for the random number.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4376a2c7499446988509ec7300ef770",
          "Name": "value2",
          "Description": "Higher end of the range for the random number.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc9086d87d974875949c24601dae3093",
          "Name": "seed",
          "Description": "Seed value for the random number generator.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8e1d00dee8d643e99deaf8a63c96180e",
          "Name": "number",
          "Description": "List of random numbers in the range [lower_number, higher_number).",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Produces a list containing the given amount of random doubles in the defined range of [lower_number, higher_number) based on an initial seed value.\n\nMath.RandomList (amount: int, value1: double, value2: double, seed: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\nList.Count(i);",
      "Id": "43d68c66af2c4bd288d5cd619356006b",
      "Inputs": [
        {
          "Id": "f2c7bfe05eac4a8c8489a35f80f08ca2",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3442346658e143e4a3690664a0da8422",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea85ecbc412d4fb68d238a7908b5be2e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 999.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "InputValue": 147.0,
      "Id": "b96141fb2668459c8d541267f04f503f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "52fa44e1d4944280bdc2a7bb598f6803",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "10;",
      "Id": "d3037cf836dc4adc8e55adbea5afb0ad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d705f7ae74624eb49f5eea21722e8fcb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Round@double",
      "Id": "40c7e08243b44731bf110aeb0011db2b",
      "Inputs": [
        {
          "Id": "9a1e9332f3b9448bbea683bf83e42477",
          "Name": "number",
          "Description": "Number to round.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bdfdf3e1326b4eba9f1479fcb9059e8f",
          "Name": "number",
          "Description": "Integral value closes to the number.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Rounds a number to the closest integral value. Note that this method returns a double-precision floating-point number instead of an integral type.\n\nMath.Round (number: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ee00faee415d49fc90ff7b9a6234f0e4",
      "Inputs": [
        {
          "Id": "9aecd3f5976f41c79a5a2e4f5440039f",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ea9ddb4ffed4de091674bf121dd0f22",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2acf85447452400cb4c371538cf3b612",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nclass ConvexHull_Maker:\r\n    def __init__(self, points):\r\n        def convex_hull_graham(points):\r\n            def ToVals(pt):\r\n\t            return [pt.X,pt.Y,pt.Z]\r\n            def ToPts(ptVals):\r\n\t            return Point.ByCoordinates(ptVals[0],ptVals[1],ptVals[2])\r\n\t           \r\n            def CreateOutline(pts):\r\n                crvs = []\r\n                i = 0\r\n                while i < len(pts):\r\n                    if i == len(pts)-1:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[0]))\r\n                    else:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[i+1]))\r\n                    i = i+1\r\n                return PolyCurve.ByJoinedCurves(crvs)\r\n\t\r\n            TURN_LEFT, TURN_RIGHT, TURN_NONE = (1, -1, 0)\r\n\r\n            def cmp(a, b):\r\n                return (a > b) - (a < b)\r\n\t\r\n            def turn(p, q, r):\r\n                return cmp((q[0] - p[0])*(r[1] - p[1]) - (r[0] - p[0])*(q[1] - p[1]), 0)\r\n\t\r\n            def _keep_left(hull, r):\r\n                while len(hull) > 1 and turn(hull[-2], hull[-1], r) != TURN_LEFT:\r\n                    hull.pop()\r\n                if not len(hull) or hull[-1] != r:\r\n                    hull.append(r)\r\n                return hull\r\n\r\n            points = [ToVals(p) for p in points]\t\r\n            points = sorted(points)\r\n            l = reduce(_keep_left, points, [])\r\n            u = reduce(_keep_left, reversed(points), [])\r\n            points = l.extend(u[i] for i in range(1, len(u) - 1)) or l\r\n            points = [ToPts(p) for p in points]\r\n            return CreateOutline(points)\r\n            \r\n        self.points = points\r\n        result = convex_hull_graham(points)\r\n        self.result = result\r\n\r\ndef repeatFuncApply(func, repeat, data_input):\r\n    result = []\r\n    input_forFunc = data_input\r\n    while repeat != 0:\r\n        result.append(func(input_forFunc))\r\n        input_forFunc = func(input_forFunc)\r\n        repeat = repeat - 1\r\n    return result\r\n\r\ndef create_horizonLine(endpt):\r\n    sttpt = Point.ByCoordinates(0,0,0)\r\n    line_prime = Line.ByStartPointEndPoint(sttpt, endpt)\r\n    return line_prime\r\n    \r\ndef create_verticalLine(endpt):\r\n    sttpt = Point.ByCoordinates(0,0,0)\r\n    line_prime = Line.ByStartPointEndPoint(sttpt, endpt)\r\n    return line_prime\r\n    \r\ndef curveOffset(elem, dist):\r\n    result = Curve.Offset(elem, dist)\r\n    return result\r\n    \r\ndef range_q(start, end, num):\r\n    result = [start]\r\n    between = num - 1\r\n    gap = end - start\r\n    step = gap / between\r\n    for i in range(num):\r\n        if i == 0:\r\n            pass\r\n        else:\r\n            target = start + step * i\r\n            result.append(target)\r\n    return result\r\n\r\n\r\n\r\n##########################################################\r\nresult = [\r\nConvexHull_Maker,\r\nrepeatFuncApply,\r\ncreate_horizonLine,\r\ncreate_verticalLine,\r\ncurveOffset,\r\nrange_q\r\n]\t\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "e70e673008604f609332470db2e29599",
      "Inputs": [
        {
          "Id": "2478519b6f1d48de9f39bc5d845bb8ee",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d4490127cd44ab683923c0c4a19fd51",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "100;",
      "Id": "ef0b8232eab4477ca27d10f2df2ead64",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a7ca4266186c4313a1e9e40bb6606b56",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1500;\n1500;",
      "Id": "f7dd4f0392e84546808a8625bf1c8e07",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a0a3e91287aa47d09cf576faa19001af",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a9294001af2a4c35b9a949888d843ead",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Rectangle.ByWidthLength@double,double",
      "Id": "e7188c7e06a5424f8205ed461261a0d3",
      "Inputs": [
        {
          "Id": "561d1ae04b6b43b3b009244cc07fddce",
          "Name": "width",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9ab2741597144c9289dcea93738c3160",
          "Name": "length",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a57888fe4ec046c19314b0ca71e60190",
          "Name": "Rectangle",
          "Description": "Rectangle",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Rectangle centered at the WCS origin in the WCS XY Plane, with specified width (X Axis length), and length (Y Axis length).\n\nRectangle.ByWidthLength (width: double = 1, length: double = 1): Rectangle"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 10000.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "InputValue": 4627.0,
      "Id": "eac0a2b1b0724064913c367d1ca73afd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7bb33121b96c45d58c2b28cf35b4f197",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "다각형생성범위_커브;\n랜덤_시드;\n샘플링_크기;",
      "Id": "ae7f587370954a16882adfdeac3658c7",
      "Inputs": [
        {
          "Id": "12751831e760426c8aba8189465c2c04",
          "Name": "다각형생성범위_커브",
          "Description": "다각형생성범위_커브",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c88543dcb3a49f8b61e7587e6be5960",
          "Name": "랜덤_시드",
          "Description": "랜덤_시드",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c12257042bd34236afefb679bd194dd1",
          "Name": "샘플링_크기",
          "Description": "샘플링_크기",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "94886eac4f954c28bac85b585a821b4b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa0e3c5987dc4d8881d25a9a7a91adb8",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3ed45b853a3470e848c6833e854fea1",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\n\r\n############################################################\r\n############### Function Import part - start ###############\r\nConvexHull_Maker = IN[0][0]\r\nrepeatFuncApply = IN[0][1]\r\ncreate_horizonLine = IN[0][2]\r\ncreate_verticalLine = IN[0][3]\r\ncurveOffset = IN[0][4]\r\nrange_q = IN[0][5]\r\n############### Function Import part - end #################\r\n############################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputCrv = IN[1]\r\nrandomSeed = IN[2]\r\nsampling = IN[3]\r\n\r\n# Place your code below this line\r\nSrfByInputCrv = Surface.ByPatch(inputCrv)\r\ngridParam = range_q(0,1,100)\r\n\r\ngridPts = list(\r\n            map(lambda x: \r\n                map(lambda y: SrfByInputCrv.PointAtParameter(x, y), gridParam), gridParam))\r\ngridPts_flatten = list(itertools.chain(*gridPts))\r\ngridPts_filtered = list(filter(lambda x: x.DoesIntersect(SrfByInputCrv), gridPts_flatten))\r\nrandom.seed(randomSeed)\r\ngridPts_Sampled = random.sample(gridPts_filtered, sampling)\r\ncvxCrv = ConvexHull_Maker(gridPts_Sampled).result\r\ncvxSrf = Surface.ByPatch(cvxCrv)\r\ncvxSolid = cvxSrf.Thicken(30, False)\r\n\r\nresult = cvxSolid\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c4d165bcf6cb4dcd84fa8cb1f1958814",
      "Inputs": [
        {
          "Id": "bc79869d9d454a718ece74df506732e6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f17c067b6784fc3b2409169ba9fb56e",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8fbcdc6cf6c04b6c9b97422d42f81ee7",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5da09f1b348644a0835a2761a88f640d",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "723fcd82e6e344a9b1310621a9b05d9d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nclass ConvexHull_Maker:\r\n    def __init__(self, points):\r\n        def convex_hull_graham(points):\r\n            def ToVals(pt):\r\n\t            return [pt.X,pt.Y,pt.Z]\r\n            def ToPts(ptVals):\r\n\t            return Point.ByCoordinates(ptVals[0],ptVals[1],ptVals[2])\r\n\t           \r\n            def CreateOutline(pts):\r\n                crvs = []\r\n                i = 0\r\n                while i < len(pts):\r\n                    if i == len(pts)-1:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[0]))\r\n                    else:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[i+1]))\r\n                    i = i+1\r\n                return PolyCurve.ByJoinedCurves(crvs)\r\n\t\r\n            TURN_LEFT, TURN_RIGHT, TURN_NONE = (1, -1, 0)\r\n\r\n            def cmp(a, b):\r\n                return (a > b) - (a < b)\r\n\t\r\n            def turn(p, q, r):\r\n                return cmp((q[0] - p[0])*(r[1] - p[1]) - (r[0] - p[0])*(q[1] - p[1]), 0)\r\n\t\r\n            def _keep_left(hull, r):\r\n                while len(hull) > 1 and turn(hull[-2], hull[-1], r) != TURN_LEFT:\r\n                    hull.pop()\r\n                if not len(hull) or hull[-1] != r:\r\n                    hull.append(r)\r\n                return hull\r\n\r\n            points = [ToVals(p) for p in points]\t\r\n            points = sorted(points)\r\n            l = reduce(_keep_left, points, [])\r\n            u = reduce(_keep_left, reversed(points), [])\r\n            points = l.extend(u[i] for i in range(1, len(u) - 1)) or l\r\n            points = [ToPts(p) for p in points]\r\n            return CreateOutline(points)\r\n            \r\n        self.points = points\r\n        result = convex_hull_graham(points)\r\n        self.result = result\r\n\r\ndef repeatFuncApply(func, repeat, data_input):\r\n    result = []\r\n    input_forFunc = data_input\r\n    while repeat != 0:\r\n        result.append(func(input_forFunc))\r\n        input_forFunc = func(input_forFunc)\r\n        repeat = repeat - 1\r\n    return result\r\n\r\ndef create_horizonLine(endpt):\r\n    sttpt = Point.ByCoordinates(0,0,0)\r\n    line_prime = Line.ByStartPointEndPoint(sttpt, endpt)\r\n    return line_prime\r\n    \r\ndef create_verticalLine(endpt):\r\n    sttpt = Point.ByCoordinates(0,0,0)\r\n    line_prime = Line.ByStartPointEndPoint(sttpt, endpt)\r\n    return line_prime\r\n    \r\ndef curveOffset(elem, dist):\r\n    result = Curve.Offset(elem, dist)\r\n    return result\r\n    \r\ndef range_q(start, end, num):\r\n    result = [start]\r\n    between = num - 1\r\n    gap = end - start\r\n    step = gap / between\r\n    for i in range(num):\r\n        if i == 0:\r\n            pass\r\n        else:\r\n            target = start + step * i\r\n            result.append(target)\r\n    return result\r\n\r\n\r\n\r\n##########################################################\r\nresult = [\r\nConvexHull_Maker,\r\nrepeatFuncApply,\r\ncreate_horizonLine,\r\ncreate_verticalLine,\r\ncurveOffset,\r\nrange_q\r\n]\t\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "552c88f8dd0040b59a4c0e2bc2583e10",
      "Inputs": [
        {
          "Id": "35879f208118494aaf5fab55bd9fc09f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9f14eaef9aa4db6804965d2b3593edd",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "30;",
      "Id": "29babae3d84b47bab1d97b218bcdcb1f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6a55b8e37c8746b49c871746e5c94c63",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 10000.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "InputValue": 3905.0,
      "Id": "2d9a2354fa01446992b4f037a06c3f5b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "de920da9adc841729fbb2703f0158072",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "다각형생성범위_커브;\n랜덤_시드;\n샘플링_크기;",
      "Id": "e493d5ed1a404cd2a8d080b457264c78",
      "Inputs": [
        {
          "Id": "63d65a460d0a4a8998a4e8686afe2633",
          "Name": "다각형생성범위_커브",
          "Description": "다각형생성범위_커브",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db4bc933c31544b4983f2d9795f8d2eb",
          "Name": "랜덤_시드",
          "Description": "랜덤_시드",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f8ccb7f2852f4cc9b78cd33b6b2ab098",
          "Name": "샘플링_크기",
          "Description": "샘플링_크기",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ceb0aaad99df49aaa7dbf5350b053eb5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7412494d16a4c32a29822110c679fb5",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac11fcb0ab8a484395e16f203c5ade12",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "e8f0fc2e6cbd4842acd01a84d0147cc6",
      "Inputs": [
        {
          "Id": "e3ce0973be28482ca412bbb16823d864",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95b66e5422ff40d7b945d8f3ef4786f7",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "404f13e0c84b405eb678930a1263ca06",
      "Inputs": [
        {
          "Id": "70e64012b38d48a6aac07ee03568e905",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1f9c81d6f96454e8000b3aebe6995c2",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "b9df159e35424dc082f5a60ba4fe96e7",
      "Inputs": [
        {
          "Id": "28267c1a8ed2456690e196dabd52728f",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ee3c42ded5745dfbfc581be49f5f2b3",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "9a4c6e819306400b8dbc30ce5664314c",
      "Inputs": [
        {
          "Id": "3476b9105b864039a8b59ec0ae09a78d",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0448dbed8b49489f9598826e611cb95d",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adce9e94fa5446c0bd1e789d90924f9b",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\n\r\n############################################################\r\n############### Function Import part - start ###############\r\nConvexHull_Maker = IN[0][0]\r\nrepeatFuncApply = IN[0][1]\r\ncreate_horizonLine = IN[0][2]\r\ncreate_verticalLine = IN[0][3]\r\ncurveOffset = IN[0][4]\r\nrange_q = IN[0][5]\r\n############### Function Import part - end #################\r\n############################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputCrv = IN[1]\r\nrandomSeed = IN[2]\r\nsampling = IN[3]\r\n\r\n# Place your code below this line\r\nSrfByInputCrv = Surface.ByPatch(inputCrv)\r\ngridParam = range_q(0,1,100)\r\n\r\ngridPts = list(\r\n            map(lambda x: \r\n                map(lambda y: SrfByInputCrv.PointAtParameter(x, y), gridParam), gridParam))\r\ngridPts_flatten = list(itertools.chain(*gridPts))\r\ngridPts_filtered = list(filter(lambda x: x.DoesIntersect(SrfByInputCrv), gridPts_flatten))\r\nrandom.seed(randomSeed)\r\ngridPts_Sampled = random.sample(gridPts_filtered, sampling)\r\ncvxCrv = ConvexHull_Maker(gridPts_Sampled).result\r\ncvxSrf = Surface.ByPatch(cvxCrv)\r\ncvxSolid = cvxSrf.Thicken(30, False)\r\n\r\nresult = cvxSolid\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "f5ccfc22a1bc4b8e9d284a0c9aee8a32",
      "Inputs": [
        {
          "Id": "71e80f2ded3b4702872f5a22d1550884",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07556a0537c141faaea376ff24688129",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "60684f71c1ed45b98ce5f87aa06b4953",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0005363eba4541e39530635bdacdd074",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82fc40d1ece341d5a49723d6549f6af6",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "25fa6fc7993145ccbe2bda3c0c3a4dbf",
      "Inputs": [
        {
          "Id": "e3f072959dec486789900b295ca97050",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "129f97ef7c1940009950385ce4127cc2",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "5d3b2d52416047d79f37b1ed132c823b",
      "Inputs": [
        {
          "Id": "e2d82bfcbf684af7bc5048ce21653de2",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c3077e099ba3439aaf61691853a43bb7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "5ebe46bb52f94996be2867badec94429",
      "Inputs": [
        {
          "Id": "57b769a8f0444932abfa1661eae753cc",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6f0a025c7f004ff185e63dda7d8f8f13",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "913a04b424c0442c899e2c7f7f88a478",
      "Inputs": [
        {
          "Id": "b4a5c9d0e9714ae1bd150fc1237d4e7c",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "adb4467859014bd98e365268085f92e9",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "555ebb69d7a147cc874f92ba4b750877",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "20;",
      "Id": "68e2283506974e3085b2c0dee256d3e4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4d5a539feccb4fdc988c961d0f502e82",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 10000.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "InputValue": 2562.0,
      "Id": "36b780763dd244ff9bb98c1e3c99398b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "88ca085fd43a41e5a81dd3ea61606b0d",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nclass ConvexHull_Maker:\r\n    def __init__(self, points):\r\n        def convex_hull_graham(points):\r\n            def ToVals(pt):\r\n\t            return [pt.X,pt.Y,pt.Z]\r\n            def ToPts(ptVals):\r\n\t            return Point.ByCoordinates(ptVals[0],ptVals[1],ptVals[2])\r\n\t           \r\n            def CreateOutline(pts):\r\n                crvs = []\r\n                i = 0\r\n                while i < len(pts):\r\n                    if i == len(pts)-1:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[0]))\r\n                    else:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[i+1]))\r\n                    i = i+1\r\n                return PolyCurve.ByJoinedCurves(crvs)\r\n\t\r\n            TURN_LEFT, TURN_RIGHT, TURN_NONE = (1, -1, 0)\r\n\r\n            def cmp(a, b):\r\n                return (a > b) - (a < b)\r\n\t\r\n            def turn(p, q, r):\r\n                return cmp((q[0] - p[0])*(r[1] - p[1]) - (r[0] - p[0])*(q[1] - p[1]), 0)\r\n\t\r\n            def _keep_left(hull, r):\r\n                while len(hull) > 1 and turn(hull[-2], hull[-1], r) != TURN_LEFT:\r\n                    hull.pop()\r\n                if not len(hull) or hull[-1] != r:\r\n                    hull.append(r)\r\n                return hull\r\n\r\n            points = [ToVals(p) for p in points]\t\r\n            points = sorted(points)\r\n            l = reduce(_keep_left, points, [])\r\n            u = reduce(_keep_left, reversed(points), [])\r\n            points = l.extend(u[i] for i in range(1, len(u) - 1)) or l\r\n            points = [ToPts(p) for p in points]\r\n            return CreateOutline(points)\r\n            \r\n        self.points = points\r\n        result = convex_hull_graham(points)\r\n        self.result = result\r\n\r\ndef repeatFuncApply(func, repeat, data_input):\r\n    result = []\r\n    input_forFunc = data_input\r\n    while repeat != 0:\r\n        result.append(func(input_forFunc))\r\n        input_forFunc = func(input_forFunc)\r\n        repeat = repeat - 1\r\n    return result\r\n\r\ndef create_horizonLine(endpt):\r\n    sttpt = Point.ByCoordinates(0,0,0)\r\n    line_prime = Line.ByStartPointEndPoint(sttpt, endpt)\r\n    return line_prime\r\n    \r\ndef create_verticalLine(endpt):\r\n    sttpt = Point.ByCoordinates(0,0,0)\r\n    line_prime = Line.ByStartPointEndPoint(sttpt, endpt)\r\n    return line_prime\r\n    \r\ndef curveOffset(elem, dist):\r\n    result = Curve.Offset(elem, dist)\r\n    return result\r\n    \r\ndef range_q(start, end, num):\r\n    result = [start]\r\n    between = num - 1\r\n    gap = end - start\r\n    step = gap / between\r\n    for i in range(num):\r\n        if i == 0:\r\n            pass\r\n        else:\r\n            target = start + step * i\r\n            result.append(target)\r\n    return result\r\n\r\n\r\n\r\n##########################################################\r\nresult = [\r\nConvexHull_Maker,\r\nrepeatFuncApply,\r\ncreate_horizonLine,\r\ncreate_verticalLine,\r\ncurveOffset,\r\nrange_q\r\n]\t\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "5a674487998b4fab9825b1a9f6ad2184",
      "Inputs": [
        {
          "Id": "da1a52c687824d45b104a0ac8b8cb95c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34d47ecfd0214eb0b0ae10209dec331d",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "다각형생성범위_커브;\n랜덤_시드;\n샘플링_크기;",
      "Id": "e565ffc86701482a84765ab46a4b2c9e",
      "Inputs": [
        {
          "Id": "50455d20c942422a8d5f033b67eb6cda",
          "Name": "다각형생성범위_커브",
          "Description": "다각형생성범위_커브",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4b2e1cb6c094a8b81b59fe64c42f7c8",
          "Name": "랜덤_시드",
          "Description": "랜덤_시드",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1009297e72d4086956af476222ce5ad",
          "Name": "샘플링_크기",
          "Description": "샘플링_크기",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4969eedbd17549329f05eda512ad7982",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c831a9a8fa74ef4ba667918a6b6f870",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "141e66e6fa0245e7b45db82bae43f9d4",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\n\r\n############################################################\r\n############### Function Import part - start ###############\r\nConvexHull_Maker = IN[0][0]\r\nrepeatFuncApply = IN[0][1]\r\ncreate_horizonLine = IN[0][2]\r\ncreate_verticalLine = IN[0][3]\r\ncurveOffset = IN[0][4]\r\nrange_q = IN[0][5]\r\n############### Function Import part - end #################\r\n############################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputCrv = IN[1]\r\nrandomSeed = IN[2]\r\nsampling = IN[3]\r\n\r\n# Place your code below this line\r\nSrfByInputCrv = Surface.ByPatch(inputCrv)\r\ngridParam = range_q(0,1,100)\r\n\r\ngridPts = list(\r\n            map(lambda x: \r\n                map(lambda y: SrfByInputCrv.PointAtParameter(x, y), gridParam), gridParam))\r\ngridPts_flatten = list(itertools.chain(*gridPts))\r\ngridPts_filtered = list(filter(lambda x: x.DoesIntersect(SrfByInputCrv), gridPts_flatten))\r\nrandom.seed(randomSeed)\r\ngridPts_Sampled = random.sample(gridPts_filtered, sampling)\r\ncvxCrv = ConvexHull_Maker(gridPts_Sampled).result\r\ncvxSrf = Surface.ByPatch(cvxCrv)\r\ncvxSolid = cvxSrf.Thicken(30, False)\r\n\r\nresult = cvxSolid\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "3e11bd46f6474ad8911eedada223d473",
      "Inputs": [
        {
          "Id": "693b337998da45bb99a4e72af7299808",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f75098086576448e8ed7c6844c46bfe6",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9380aae58a3b4f7e94d4b00a3a57107a",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcf483e9d64248fbaa9ca6cc554842e7",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e279b511257d4e03a28c2ad8a5193102",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "d61ad6f8164049c198b5fbf1b3e0cf10",
      "Inputs": [
        {
          "Id": "bc1cb5f95e214930b61ade49cddf373f",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b75408ea1fc400c8733b4647cc23875",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6653d8b6af964d6296464096d49a5d51",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e201728ebb244d50b04ef3237d88f9e7",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "cbe0e0f31fdf48b4894fa4522ce9c604",
      "Inputs": [
        {
          "Id": "51863ee14f6c4930a4fc62d09c522c08",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1768fbe8d7b4e39a22f75a946075e7c",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d831b09370fd4f3685d0e8b35743298f",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7823c966acdc48e38146654d726e6e0a",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99dd13e525f541ed93d75501d4ea74c3",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 266,
      "SelectedString": "OST_GenericModel",
      "NodeType": "ExtensionNode",
      "Id": "b89d2dd969634e07b60db77206a3d0dd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c6b946990abc4085ad0734cf17756103",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Test1\";",
      "Id": "2cc0cbfb4b234ff29a3ba667e4263268",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8a35e84d4cac454bb4b7aad53d3cb3fd",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "5a517ab06d424194b178a49c93bbbe9e",
      "Inputs": [
        {
          "Id": "675580947d694ebf9e19107740fdaebd",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b382e54b597a4963a57aaad4b32fd5b8",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "3a64dc5b59c749a8a3da7051e570427d",
      "Inputs": [
        {
          "Id": "bf8844dcaccf46338c40398d95011a4b",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d44b4360e274c8499ea8d98da90a4af",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Cuboid.ByLengths@double,double,double",
      "Id": "c1df4593d3d54a73922542df9f472de6",
      "Inputs": [
        {
          "Id": "3b2bcb384eeb43e7a6278d358e33a261",
          "Name": "width",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c74f2b74dc64f6eacc18355e47191d9",
          "Name": "length",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91fe1f44e0e349d59453550a06e788bd",
          "Name": "height",
          "Description": "double\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9048ff78f4f246368a53ecaae8edea7b",
          "Name": "Cuboid",
          "Description": "Cuboid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Cuboid centered at WCS origin, with width, length, and height.\n\nCuboid.ByLengths (width: double = 1, length: double = 1, height: double = 1): Cuboid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1500;",
      "Id": "e5c6b8d50bc34a77b60ffe2cb20b2347",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f83736bcb71840b49d5997ac2fc74a63",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "bb091a0690074c5aa2f304972569882e",
      "Inputs": [
        {
          "Id": "a9c57605d9ca45d5bc8e6ed6430eb23f",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "40ee6a795d1b48969dc6833a6d68e70e",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "a5f514f97ae9483aa467d5ed655183c5",
      "Inputs": [
        {
          "Id": "e5a402fb21b749319224869e7ff0991d",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf270c857ee24ace9ebb700fe271c5fe",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "e2e8976cbcba4930b0c442d4560f5843",
      "Inputs": [
        {
          "Id": "9ff3ba31960b45c1b7a08dfab2433644",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "232be816003c448990364a60a41f4c94",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "560c5c89d9224a2e90d9bd3a99a595e2",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];\ni[1];\ni[2];\ni[3];\ni[4];\ni[5];",
      "Id": "8173594617a74ee7928756a52035d1a0",
      "Inputs": [
        {
          "Id": "312a49171329449abc12f9b3d3aa469d",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b924a4933c2d4bc4b58cd7733b240611",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c533822435d4ada9a29f6a08339b56e",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ca549176ada4d07a1e170bd022a8aa2",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0ae711ccb1d4ced84b652af46166909",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5e74c08a598498e8d1e0e5e043c8499",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "719ff8516ccd42438872d57d285496c8",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nclass ConvexHull_Maker:\r\n    def __init__(self, points):\r\n        def convex_hull_graham(points):\r\n            def ToVals(pt):\r\n\t            return [pt.X,pt.Y,pt.Z]\r\n            def ToPts(ptVals):\r\n\t            return Point.ByCoordinates(ptVals[0],ptVals[1],ptVals[2])\r\n\t           \r\n            def CreateOutline(pts):\r\n                crvs = []\r\n                i = 0\r\n                while i < len(pts):\r\n                    if i == len(pts)-1:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[0]))\r\n                    else:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[i+1]))\r\n                    i = i+1\r\n                return PolyCurve.ByJoinedCurves(crvs)\r\n\t\r\n            TURN_LEFT, TURN_RIGHT, TURN_NONE = (1, -1, 0)\r\n\r\n            def cmp(a, b):\r\n                return (a > b) - (a < b)\r\n\t\r\n            def turn(p, q, r):\r\n                return cmp((q[0] - p[0])*(r[1] - p[1]) - (r[0] - p[0])*(q[1] - p[1]), 0)\r\n\t\r\n            def _keep_left(hull, r):\r\n                while len(hull) > 1 and turn(hull[-2], hull[-1], r) != TURN_LEFT:\r\n                    hull.pop()\r\n                if not len(hull) or hull[-1] != r:\r\n                    hull.append(r)\r\n                return hull\r\n\r\n            points = [ToVals(p) for p in points]\t\r\n            points = sorted(points)\r\n            l = reduce(_keep_left, points, [])\r\n            u = reduce(_keep_left, reversed(points), [])\r\n            points = l.extend(u[i] for i in range(1, len(u) - 1)) or l\r\n            points = [ToPts(p) for p in points]\r\n            return CreateOutline(points)\r\n            \r\n        self.points = points\r\n        result = convex_hull_graham(points)\r\n        self.result = result\r\n\r\ndef repeatFuncApply(func, repeat, data_input):\r\n    result = []\r\n    input_forFunc = data_input\r\n    while repeat != 0:\r\n        result.append(func(input_forFunc))\r\n        input_forFunc = func(input_forFunc)\r\n        repeat = repeat - 1\r\n    return result\r\n\r\ndef create_horizonLine(endpt):\r\n    sttpt = Point.ByCoordinates(0,0,0)\r\n    line_prime = Line.ByStartPointEndPoint(sttpt, endpt)\r\n    return line_prime\r\n    \r\ndef create_verticalLine(endpt):\r\n    sttpt = Point.ByCoordinates(0,0,0)\r\n    line_prime = Line.ByStartPointEndPoint(sttpt, endpt)\r\n    return line_prime\r\n    \r\ndef curveOffset(elem, dist):\r\n    result = Curve.Offset(elem, dist)\r\n    return result\r\n    \r\ndef range_q(start, end, num):\r\n    result = [start]\r\n    between = num - 1\r\n    gap = end - start\r\n    step = gap / between\r\n    for i in range(num):\r\n        if i == 0:\r\n            pass\r\n        else:\r\n            target = start + step * i\r\n            result.append(target)\r\n    return result\r\n\r\n\r\n\r\n##########################################################\r\nresult = [\r\nConvexHull_Maker,\r\nrepeatFuncApply,\r\ncreate_horizonLine,\r\ncreate_verticalLine,\r\ncurveOffset,\r\nrange_q\r\n]\t\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "1d88dc32fc544a37850174b8258417ed",
      "Inputs": [
        {
          "Id": "2f61b31d3b3b4f94b71472f57e0e722d",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86f8527379174c87bf0136b427fb4923",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 10000.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "InputValue": 4627.0,
      "Id": "d9ddc460cecf48d79731d5493c8c706c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "42b3a822e7904c6eaa388dce93974d63",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "100;",
      "Id": "7881327b95cf4f1186222d6c45c66c0b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dd192e20639a4bd8b79cddedf4754450",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "다각형생성범위_커브;\n랜덤_시드;\n샘플링_크기;",
      "Id": "d0e41e96edcc43cda63514b8a8a8cd43",
      "Inputs": [
        {
          "Id": "4ccf9b90a94a4939b47e56aa44462ce8",
          "Name": "다각형생성범위_커브",
          "Description": "다각형생성범위_커브",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "97d5579b321d47d58cf7ac42aeb95824",
          "Name": "랜덤_시드",
          "Description": "랜덤_시드",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5c8967b81a74b9290223789b926272b",
          "Name": "샘플링_크기",
          "Description": "샘플링_크기",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16e65f7a322a4cc2b7f35490276fd77c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "838a8d2ccc054d91abcaa2c649b471de",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "600db363de5648cea4e710f14cd1aa04",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\n\r\n############################################################\r\n############### Function Import part - start ###############\r\nConvexHull_Maker = IN[0][0]\r\nrepeatFuncApply = IN[0][1]\r\ncreate_horizonLine = IN[0][2]\r\ncreate_verticalLine = IN[0][3]\r\ncurveOffset = IN[0][4]\r\nrange_q = IN[0][5]\r\n############### Function Import part - end #################\r\n############################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputCrv = IN[1]\r\nrandomSeed = IN[2]\r\nsampling = IN[3]\r\n\r\n# Place your code below this line\r\nSrfByInputCrv = Surface.ByPatch(inputCrv)\r\ngridParam = range_q(0,1,100)\r\n\r\ngridPts = list(\r\n            map(lambda x: \r\n                map(lambda y: SrfByInputCrv.PointAtParameter(x, y), gridParam), gridParam))\r\ngridPts_flatten = list(itertools.chain(*gridPts))\r\ngridPts_filtered = list(filter(lambda x: x.DoesIntersect(SrfByInputCrv), gridPts_flatten))\r\nrandom.seed(randomSeed)\r\ngridPts_Sampled = random.sample(gridPts_filtered, sampling)\r\nplane_gridPtsSampled = Plane.ByBestFitThroughPoints(gridPts_Sampled)\r\nCS_gridPtsSampled = plane_gridPtsSampled.ToCoordinateSystem()\r\n#cvxCrv = ConvexHull_Maker(gridPts_Sampled).result\r\n#cvxSrf = Surface.ByPatch(cvxCrv)\r\n#cvxSolid = cvxSrf.Thicken(30, False)\r\n\r\nresult = CS_gridPtsSampled#gridPts_Sampled\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "b4bea63c66c84c1095719702710266de",
      "Inputs": [
        {
          "Id": "8651d459cf6246299d44ae86476e9f5f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64feb70ba30d4ee0aa6bed7b1f94d09d",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5b15d3d592fe44fcbe6a1d308d002e6b",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab49a525f1694c3a9c057774a5d74e74",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "179876abf83c48fb8e6361b7d4e35d32",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "8d9b56cc126a4b04a3148ed7662fafeb",
      "Inputs": [
        {
          "Id": "482991990a71467e868ef5d285073f4d",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6640415f36da41049879f7fc451cbbe7",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "2b7dd733382a4da6a750cab1584186c6",
      "Inputs": [
        {
          "Id": "8d18e2986fb247a4b7df8504612c9d7e",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a5ff39db82e4c8e9d4806bac1fd9811",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "47cb4d3e5022421589c09d1384b3dbd0",
      "Inputs": [
        {
          "Id": "74a94f39a84f497e95c1856fff3cc110",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ac2e534f5db4ab2a966e21d745fd673",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "30;",
      "Id": "82bc4fad9fd542c4ad642204d1acdae0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e9d295d6c76942f99d75ffaa8f94444c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "12e07ffaa59f4dfa838f4d15eb0ff526",
      "Inputs": [
        {
          "Id": "a62eba922c8241e2819b56ff6d246eb4",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f16290517f964369bc61c738b17c1128",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fb76225829245be842654287c70781b",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 10000.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "InputValue": 3905.0,
      "Id": "08f80c6dc14f442bb7b5fda858c4be27",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8a4c5b8a8b8d4c999ed9bf4656ff491e",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nclass ConvexHull_Maker:\r\n    def __init__(self, points):\r\n        def convex_hull_graham(points):\r\n            def ToVals(pt):\r\n\t            return [pt.X,pt.Y,pt.Z]\r\n            def ToPts(ptVals):\r\n\t            return Point.ByCoordinates(ptVals[0],ptVals[1],ptVals[2])\r\n\t           \r\n            def CreateOutline(pts):\r\n                crvs = []\r\n                i = 0\r\n                while i < len(pts):\r\n                    if i == len(pts)-1:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[0]))\r\n                    else:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[i+1]))\r\n                    i = i+1\r\n                return PolyCurve.ByJoinedCurves(crvs)\r\n\t\r\n            TURN_LEFT, TURN_RIGHT, TURN_NONE = (1, -1, 0)\r\n\r\n            def cmp(a, b):\r\n                return (a > b) - (a < b)\r\n\t\r\n            def turn(p, q, r):\r\n                return cmp((q[0] - p[0])*(r[1] - p[1]) - (r[0] - p[0])*(q[1] - p[1]), 0)\r\n\t\r\n            def _keep_left(hull, r):\r\n                while len(hull) > 1 and turn(hull[-2], hull[-1], r) != TURN_LEFT:\r\n                    hull.pop()\r\n                if not len(hull) or hull[-1] != r:\r\n                    hull.append(r)\r\n                return hull\r\n\r\n            points = [ToVals(p) for p in points]\t\r\n            points = sorted(points)\r\n            l = reduce(_keep_left, points, [])\r\n            u = reduce(_keep_left, reversed(points), [])\r\n            points = l.extend(u[i] for i in range(1, len(u) - 1)) or l\r\n            points = [ToPts(p) for p in points]\r\n            return CreateOutline(points)\r\n            \r\n        self.points = points\r\n        result = convex_hull_graham(points)\r\n        self.result = result\r\n\r\ndef repeatFuncApply(func, repeat, data_input):\r\n    result = []\r\n    input_forFunc = data_input\r\n    while repeat != 0:\r\n        result.append(func(input_forFunc))\r\n        input_forFunc = func(input_forFunc)\r\n        repeat = repeat - 1\r\n    return result\r\n\r\ndef create_horizonLine(endpt):\r\n    sttpt = Point.ByCoordinates(0,0,0)\r\n    line_prime = Line.ByStartPointEndPoint(sttpt, endpt)\r\n    return line_prime\r\n    \r\ndef create_verticalLine(endpt):\r\n    sttpt = Point.ByCoordinates(0,0,0)\r\n    line_prime = Line.ByStartPointEndPoint(sttpt, endpt)\r\n    return line_prime\r\n    \r\ndef curveOffset(elem, dist):\r\n    result = Curve.Offset(elem, dist)\r\n    return result\r\n    \r\ndef range_q(start, end, num):\r\n    result = [start]\r\n    between = num - 1\r\n    gap = end - start\r\n    step = gap / between\r\n    for i in range(num):\r\n        if i == 0:\r\n            pass\r\n        else:\r\n            target = start + step * i\r\n            result.append(target)\r\n    return result\r\n\r\n\r\n\r\n##########################################################\r\nresult = [\r\nConvexHull_Maker,\r\nrepeatFuncApply,\r\ncreate_horizonLine,\r\ncreate_verticalLine,\r\ncurveOffset,\r\nrange_q\r\n]\t\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "63fc9482021e428caab0f1b4202e1d23",
      "Inputs": [
        {
          "Id": "c9fab5ff462145d882b4a28906b5ac3a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f17870300824a63b3eac5fe27d8bb54",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "다각형생성범위_커브;\n랜덤_시드;\n샘플링_크기;",
      "Id": "c03c28dea35c4b369b973e4cf1b0c107",
      "Inputs": [
        {
          "Id": "1292e05639e74dd182d678924eebb21d",
          "Name": "다각형생성범위_커브",
          "Description": "다각형생성범위_커브",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "78c8dcef29bc4a9897c165c6b1b6a50b",
          "Name": "랜덤_시드",
          "Description": "랜덤_시드",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d38d386f96ea4d51a650be28c522fdea",
          "Name": "샘플링_크기",
          "Description": "샘플링_크기",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f384203cc024e6e92d1a4d17eac222f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e02f86b69344ec6ba8003cac8048b9b",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c64e03014b614cb38d678b4ae5c3cb82",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\n\r\n############################################################\r\n############### Function Import part - start ###############\r\nConvexHull_Maker = IN[0][0]\r\nrepeatFuncApply = IN[0][1]\r\ncreate_horizonLine = IN[0][2]\r\ncreate_verticalLine = IN[0][3]\r\ncurveOffset = IN[0][4]\r\nrange_q = IN[0][5]\r\n############### Function Import part - end #################\r\n############################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputCrv = IN[1]\r\nrandomSeed = IN[2]\r\nsampling = IN[3]\r\n\r\n# Place your code below this line\r\nSrfByInputCrv = Surface.ByPatch(inputCrv)\r\ngridParam = range_q(0,1,100)\r\n\r\ngridPts = list(\r\n            map(lambda x: \r\n                map(lambda y: SrfByInputCrv.PointAtParameter(x, y), gridParam), gridParam))\r\ngridPts_flatten = list(itertools.chain(*gridPts))\r\ngridPts_filtered = list(filter(lambda x: x.DoesIntersect(SrfByInputCrv), gridPts_flatten))\r\nrandom.seed(randomSeed)\r\ngridPts_Sampled = random.sample(gridPts_filtered, sampling)\r\ncvxCrv = ConvexHull_Maker(gridPts_Sampled).result\r\ncvxSrf = Surface.ByPatch(cvxCrv)\r\ncvxSolid = cvxSrf.Thicken(30, False)\r\n\r\nresult = cvxSolid\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "b7c3ef041c874db9b50a03a1a9191130",
      "Inputs": [
        {
          "Id": "d6b89d1f6b674930a6b3a59d38ba0420",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db121f25a37c48e495567d00143f68b7",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "895d3a0bf6c8430f98e6236404da7b8a",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c08e2c29fcb4067b3da64331bab32a0",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72164c309f1d4bfeae04b7bf916aa1b1",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "b70bb77aa9bd4a5ca3df1606d400f7b5",
      "Inputs": [
        {
          "Id": "9dffadf7558d452da63460e34750dd8d",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f62214f814454ce1981a4e0a7158f6ca",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[0];",
      "Id": "7206a090efe647669054a6185c10572a",
      "Inputs": [
        {
          "Id": "16244734078c4e0b9183a8eb91ce796d",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b1b61ce442b434996ad0a40ee9aea32",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "82c49dced74248209fb156188aae1d6b",
      "Inputs": [
        {
          "Id": "673d7258edaa49c08e8e99d191a23753",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a4d603a2d14b44d78f5017d91103ebee",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "4c2c0a88927f4ad38030f2cf4cbd82f6",
      "Inputs": [
        {
          "Id": "0ec00650ab5149a580bc71adaa24ec57",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9067a35796344b08adf38a95bef46519",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a513e83b998b4ad0a15b9d24bb683a90",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "20;",
      "Id": "cee407d05e634098866f0908b9c1bd08",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2e2689ce60764c49816cef44d844d352",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleSlider, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "MaximumValue": 10000.0,
      "MinimumValue": 0.0,
      "StepValue": 1.0,
      "InputValue": 2562.0,
      "Id": "5258e5f85a174616b8cf4050b4844a7e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "132940feb5c44e499d7c1469447a7157",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A slider that produces numeric values."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\n\r\n# Place your code below this line\r\nclass ConvexHull_Maker:\r\n    def __init__(self, points):\r\n        def convex_hull_graham(points):\r\n            def ToVals(pt):\r\n\t            return [pt.X,pt.Y,pt.Z]\r\n            def ToPts(ptVals):\r\n\t            return Point.ByCoordinates(ptVals[0],ptVals[1],ptVals[2])\r\n\t           \r\n            def CreateOutline(pts):\r\n                crvs = []\r\n                i = 0\r\n                while i < len(pts):\r\n                    if i == len(pts)-1:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[0]))\r\n                    else:\r\n                        crvs.append(Line.ByStartPointEndPoint(pts[i],pts[i+1]))\r\n                    i = i+1\r\n                return PolyCurve.ByJoinedCurves(crvs)\r\n\t\r\n            TURN_LEFT, TURN_RIGHT, TURN_NONE = (1, -1, 0)\r\n\r\n            def cmp(a, b):\r\n                return (a > b) - (a < b)\r\n\t\r\n            def turn(p, q, r):\r\n                return cmp((q[0] - p[0])*(r[1] - p[1]) - (r[0] - p[0])*(q[1] - p[1]), 0)\r\n\t\r\n            def _keep_left(hull, r):\r\n                while len(hull) > 1 and turn(hull[-2], hull[-1], r) != TURN_LEFT:\r\n                    hull.pop()\r\n                if not len(hull) or hull[-1] != r:\r\n                    hull.append(r)\r\n                return hull\r\n\r\n            points = [ToVals(p) for p in points]\t\r\n            points = sorted(points)\r\n            l = reduce(_keep_left, points, [])\r\n            u = reduce(_keep_left, reversed(points), [])\r\n            points = l.extend(u[i] for i in range(1, len(u) - 1)) or l\r\n            points = [ToPts(p) for p in points]\r\n            return CreateOutline(points)\r\n            \r\n        self.points = points\r\n        result = convex_hull_graham(points)\r\n        self.result = result\r\n\r\ndef repeatFuncApply(func, repeat, data_input):\r\n    result = []\r\n    input_forFunc = data_input\r\n    while repeat != 0:\r\n        result.append(func(input_forFunc))\r\n        input_forFunc = func(input_forFunc)\r\n        repeat = repeat - 1\r\n    return result\r\n\r\ndef create_horizonLine(endpt):\r\n    sttpt = Point.ByCoordinates(0,0,0)\r\n    line_prime = Line.ByStartPointEndPoint(sttpt, endpt)\r\n    return line_prime\r\n    \r\ndef create_verticalLine(endpt):\r\n    sttpt = Point.ByCoordinates(0,0,0)\r\n    line_prime = Line.ByStartPointEndPoint(sttpt, endpt)\r\n    return line_prime\r\n    \r\ndef curveOffset(elem, dist):\r\n    result = Curve.Offset(elem, dist)\r\n    return result\r\n    \r\ndef range_q(start, end, num):\r\n    result = [start]\r\n    between = num - 1\r\n    gap = end - start\r\n    step = gap / between\r\n    for i in range(num):\r\n        if i == 0:\r\n            pass\r\n        else:\r\n            target = start + step * i\r\n            result.append(target)\r\n    return result\r\n\r\n\r\n\r\n##########################################################\r\nresult = [\r\nConvexHull_Maker,\r\nrepeatFuncApply,\r\ncreate_horizonLine,\r\ncreate_verticalLine,\r\ncurveOffset,\r\nrange_q\r\n]\t\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "67291b11e9284986a8e64d33920e8bba",
      "Inputs": [
        {
          "Id": "e1da633c4396484d8f056afc26626e94",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb3e4a4b406a484db3354d604ef59bcb",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "다각형생성범위_커브;\n랜덤_시드;\n샘플링_크기;",
      "Id": "7b377741cbba40538cd2d0e5310d7382",
      "Inputs": [
        {
          "Id": "d837fc5d4ac241ccbb79ed6e676e094d",
          "Name": "다각형생성범위_커브",
          "Description": "다각형생성범위_커브",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2406b45da6ab469aac7a4fd953794a8d",
          "Name": "랜덤_시드",
          "Description": "랜덤_시드",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7392092108b458382c1f01976653bcd",
          "Name": "샘플링_크기",
          "Description": "샘플링_크기",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a7e374bb96b4522a5a740bcbaae08af",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "774f385c74e04ce2a66b2228de8abba9",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f3602dee6544e13a619e6573bfed996",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport os\r\nimport sys\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('RevitNodes')\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference('RevitServices')\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\n\r\nimport random\r\nimport itertools\r\nfrom functools import reduce\r\n\r\n############################################################\r\n############### Function Import part - start ###############\r\nConvexHull_Maker = IN[0][0]\r\nrepeatFuncApply = IN[0][1]\r\ncreate_horizonLine = IN[0][2]\r\ncreate_verticalLine = IN[0][3]\r\ncurveOffset = IN[0][4]\r\nrange_q = IN[0][5]\r\n############### Function Import part - end #################\r\n############################################################\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\ninputCrv = IN[1]\r\nrandomSeed = IN[2]\r\nsampling = IN[3]\r\n\r\n# Place your code below this line\r\nSrfByInputCrv = Surface.ByPatch(inputCrv)\r\ngridParam = range_q(0,1,100)\r\n\r\ngridPts = list(\r\n            map(lambda x: \r\n                map(lambda y: SrfByInputCrv.PointAtParameter(x, y), gridParam), gridParam))\r\ngridPts_flatten = list(itertools.chain(*gridPts))\r\ngridPts_filtered = list(filter(lambda x: x.DoesIntersect(SrfByInputCrv), gridPts_flatten))\r\nrandom.seed(randomSeed)\r\ngridPts_Sampled = random.sample(gridPts_filtered, sampling)\r\ncvxCrv = ConvexHull_Maker(gridPts_Sampled).result\r\ncvxSrf = Surface.ByPatch(cvxCrv)\r\ncvxSolid = cvxSrf.Thicken(30, False)\r\n\r\nresult = cvxSolid\r\n# Assign your output to the OUT variable.\r\nOUT = result",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "c766b2e883e9464da6df5d9523a753b3",
      "Inputs": [
        {
          "Id": "e0524e26b12f4869879a1575efb8d902",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f5ff71e6292477c8abb718622ae6453",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fcae74d73a14e56a5439f8830b89715",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff0e5289137d4b6d9775bbe0026ac7f9",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a198d97d00c34a9182198756327ef279",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "7d15759e1f91485687e53edda0a1c1fe",
      "Inputs": [
        {
          "Id": "129c47565ee34a829b720b56f386eca3",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d2e22374bed4279803822f5c78dc6f6",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0621af6e51814a0e8fe28a1ef61932d6",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f621b6dcbb2f4049ae744fc9b782903f",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 266,
      "SelectedString": "OST_GenericModel",
      "NodeType": "ExtensionNode",
      "Id": "cf857a2e11144b22b1815e1754609d19",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4465472eded24f0ea01b71bd80a297dd",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Test1\";",
      "Id": "03430adc52e64831abad2c320d2808a0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5e85215fe00d4fa6943eb12e6b68e8ac",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Explode",
      "Id": "5d5cf13eacf44c4bbaf0320240443d97",
      "Inputs": [
        {
          "Id": "452c810ad9b141ceb9fa484ae864fb97",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4abcb9a47e5640c280d048c5ce186920",
          "Name": "Geometry[]",
          "Description": "Geometry[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Separates compound or non-separated elements into their component parts.\n\nGeometry.Explode ( ): Geometry[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DirectShape.ByGeometry@Autodesk.DesignScript.Geometry.Geometry,Revit.Elements.Category,Revit.Elements.Material,string",
      "Id": "00f6de23517e465aabf887bcedba2e10",
      "Inputs": [
        {
          "Id": "e5849dea4ca7401285fb5d0a3632a55c",
          "Name": "geometry",
          "Description": "A Solid or Surface that will be tessellated and placed in the Revit model as a DirectShape\n\nGeometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "abad37701f6742e39d02bfa60023e520",
          "Name": "category",
          "Description": "Must be a top level Built-in Category\n\nCategory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a432e6a91154ce8951ed35acd7d12ad",
          "Name": "material",
          "Description": "A Material to apply to the faces of the DirectShape\n\nMaterial\nDefault value : Revit.Elements.DirectShape.DynamoPreviewMaterial",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c94a68a755e4c0d97ed79ad29073255",
          "Name": "name",
          "Description": "A string name for the DirectShape\n\nstring\nDefault value : \"DirectShape\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8eaee6a44eb4de29dab6dc2a88e6e9b",
          "Name": "DirectShape",
          "Description": "A DirectShape Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit DirectShape given some geometry, a name for the shape, a Category, and Material. The geometry will be tessellated before being placed in the Revit model The category of a DirectShape cannot be changed after creation, so a new DirectShape will be generated if the category input is changed.\n\nDirectShape.ByGeometry (geometry: Geometry, category: Category, material: Material = Revit.Elements.DirectShape.DynamoPreviewMaterial, name: string = \"DirectShape\"): DirectShape"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.PerimeterCurves",
      "Id": "da7730b58d73489b9269b804cff94d87",
      "Inputs": [
        {
          "Id": "bcdbd6ce636d421ebbaf52b4a8fde33d",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45deb27811b744b58fe2b42fffafaed5",
          "Name": "Curve[]",
          "Description": "Curve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Return all the boundary Curves of the Surface.\n\nSurface.PerimeterCurves ( ): Curve[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.ByThreePoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "85c7f77cc9404349bc6e743c31efa9bf",
      "Inputs": [
        {
          "Id": "8c7b3344f4504673bb4a9f63dd101c12",
          "Name": "origin",
          "Description": "The plane origin\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c03fad6930384731b2d8c961c7732127",
          "Name": "planePoint",
          "Description": "Any point lying on the plane\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d7e2c18cd0241fcb070082cdcbbdd7f",
          "Name": "xAxisPoint",
          "Description": "The point lying on the X-axis of the plane wrt to the plane origin\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5a2b93f944549eca3a2de3f8f3b25d9",
          "Name": "Plane",
          "Description": "Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a the Plane containing the three input Points.\n\nPlane.ByThreePoints (origin: Point, planePoint: Point, xAxisPoint: Point): Plane"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Plane.ByBestFitThroughPoints@Autodesk.DesignScript.Geometry.Point[]",
      "Id": "f881ef6c3e3242f7bd3096811c45ded1",
      "Inputs": [
        {
          "Id": "9a2bdb031f6b47b896fa581180c563ff",
          "Name": "points",
          "Description": "Point[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "818a02c261d3435ebb344423eb188095",
          "Name": "Plane",
          "Description": "Plane",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fits a Plane to the input Points; basically a 3D scatterplot fit.\n\nPlane.ByBestFitThroughPoints (points: Point[]): Plane"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.CoordinateSystem.XAxis",
      "Id": "6b897a36348b484d975bee15f555c797",
      "Inputs": [
        {
          "Id": "5c9716c9f3094cdbaecf677302861f8a",
          "Name": "coordinateSystem",
          "Description": "Autodesk.DesignScript.Geometry.CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "542773ea11344c71a1dcdc2173ceb386",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns X Axis of CoordinateSystem.\n\nCoordinateSystem.XAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.CoordinateSystem.YAxis",
      "Id": "97686d7da96548e7954b2ccbc994ee9d",
      "Inputs": [
        {
          "Id": "4e189e7835b644d08f8f92c288d717b6",
          "Name": "coordinateSystem",
          "Description": "Autodesk.DesignScript.Geometry.CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9abf9d5ab0894ace8eb891d9628b6f90",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns Y Axis of CoordinateSystem.\n\nCoordinateSystem.YAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.CoordinateSystem.ZAxis",
      "Id": "8ec6d48fad5b4cc6a8127398db74318a",
      "Inputs": [
        {
          "Id": "bfe2ea6cc4944efc9565232a126753eb",
          "Name": "coordinateSystem",
          "Description": "Autodesk.DesignScript.Geometry.CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a07540eccc3434ab197df216e39f1a3",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns Z Axis of CoordinateSystem.\n\nCoordinateSystem.ZAxis: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.CoordinateSystem.Origin",
      "Id": "219e55b2f9d24cf5a629ab6f43e50f32",
      "Inputs": [
        {
          "Id": "705aa9c3670c418fb9b06b85d9486f26",
          "Name": "coordinateSystem",
          "Description": "Autodesk.DesignScript.Geometry.CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8f0c02b8e33749558c39e79a1a3f24c6",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a Point representing the CoordinateSystem origin.\n\nCoordinateSystem.Origin: Point"
    }
  ],
  "Connectors": [
    {
      "Start": "50ab653b2b56426abc795f3e984370f8",
      "End": "bf8542400b864b1b9c0cfbb33b902729",
      "Id": "fc2469d01dca473185525a170e322e2f"
    },
    {
      "Start": "442a0224c24445aa8d4370c47aeabd66",
      "End": "083c0b9fd2d64d048eeb867b65916431",
      "Id": "21a326771b284d408e5328bf5f2bf016"
    },
    {
      "Start": "483a54118dc041839f464690ee936c94",
      "End": "230468dd6ef7461a9368e207ed74f630",
      "Id": "12b07adb09fe48d8b08ee593e0b7658a"
    },
    {
      "Start": "fa2bf851bef5433593003b855d4121fc",
      "End": "0666be0a7c9441b8a8cf4ac8637f019a",
      "Id": "206fa45a012c41239e4eab9ab2c1ea10"
    },
    {
      "Start": "ac3eb6ec50934506b080827aef75355d",
      "End": "f1ab6ec4311949ae9da78a562bbcf68c",
      "Id": "c92b118c735b4585aac02f9085181cdb"
    },
    {
      "Start": "ac3eb6ec50934506b080827aef75355d",
      "End": "1f813fcec01e4899b4169bcb4da8c35f",
      "Id": "a7a6245c4575485fbf0b04ed949a2d52"
    },
    {
      "Start": "492b7a755c93468085165bc1ba7b0513",
      "End": "47500593a4194fcbb525f88086a8c055",
      "Id": "a353134245c443c29e1d01e9f67e8b29"
    },
    {
      "Start": "492b7a755c93468085165bc1ba7b0513",
      "End": "0a08950657554f869c204f97766ea18d",
      "Id": "e7fdd532a68743dfbc2551d6de7c54ab"
    },
    {
      "Start": "c323f40d17224c74a4229dff27002232",
      "End": "7736152b319a454c9e16131ec5643954",
      "Id": "b4d9cb197a374e81a2de71beaa86390f"
    },
    {
      "Start": "761bc5921f1d47fbaf3aee35608ea9cf",
      "End": "f2c7bfe05eac4a8c8489a35f80f08ca2",
      "Id": "b5c90c698b974cc48acd8ec5b39b7a8e"
    },
    {
      "Start": "761bc5921f1d47fbaf3aee35608ea9cf",
      "End": "9aecd3f5976f41c79a5a2e4f5440039f",
      "Id": "f0bc3c965644458b8d57839a302d2621"
    },
    {
      "Start": "bc82c8aa133844c492e61d55a7678b42",
      "End": "4050e23acb194a1c9b9a8577b6f36360",
      "Id": "b0756964dad941f0bb32a6cec9fd91af"
    },
    {
      "Start": "1b11c1f716db4dde95af7d009b836544",
      "End": "486ab3a6227040bb9f941b6231ddbd4b",
      "Id": "fb7eb9c84507491fa1792607586fa495"
    },
    {
      "Start": "8e73c1d4dde84e0ba09b3a55c0aee9e4",
      "End": "ddc97166aa0749d1b8a276234873a485",
      "Id": "fd4fe715c9534facb5ea5e67fb9681b8"
    },
    {
      "Start": "8e1d00dee8d643e99deaf8a63c96180e",
      "End": "9a1e9332f3b9448bbea683bf83e42477",
      "Id": "82da19fe4d8c49acbc7bfcb51d712364"
    },
    {
      "Start": "3442346658e143e4a3690664a0da8422",
      "End": "2aa7440998f84151aa3ad9777ee0ef58",
      "Id": "249d8469951c423bb1f122bc8c868b82"
    },
    {
      "Start": "ea85ecbc412d4fb68d238a7908b5be2e",
      "End": "a4376a2c7499446988509ec7300ef770",
      "Id": "bfea27147d6147a5b6acc52c98483df2"
    },
    {
      "Start": "52fa44e1d4944280bdc2a7bb598f6803",
      "End": "dc9086d87d974875949c24601dae3093",
      "Id": "9092185825524f54b80e08099c483a4f"
    },
    {
      "Start": "d705f7ae74624eb49f5eea21722e8fcb",
      "End": "ffdfaa3fd16d48a4aae7df214ff1047d",
      "Id": "fd620b20092545e4b5b4f04c4316586b"
    },
    {
      "Start": "bdfdf3e1326b4eba9f1479fcb9059e8f",
      "End": "2ea9ddb4ffed4de091674bf121dd0f22",
      "Id": "6a2a267451a14b1fbcf891cf8626e1a5"
    },
    {
      "Start": "2acf85447452400cb4c371538cf3b612",
      "End": "67a094c8394f46b8b95da6480c828cfc",
      "Id": "dc4f9ead9dce410fb903fbca0661ba3e"
    },
    {
      "Start": "8d4490127cd44ab683923c0c4a19fd51",
      "End": "71e80f2ded3b4702872f5a22d1550884",
      "Id": "c1515a80f9b940df924afc91be892ba5"
    },
    {
      "Start": "a7ca4266186c4313a1e9e40bb6606b56",
      "End": "c12257042bd34236afefb679bd194dd1",
      "Id": "c5a9aaa43f094594938fe06ae5f08ccd"
    },
    {
      "Start": "a0a3e91287aa47d09cf576faa19001af",
      "End": "9ab2741597144c9289dcea93738c3160",
      "Id": "bb8bde42cac54f2eb6fed147c1cc1971"
    },
    {
      "Start": "a9294001af2a4c35b9a949888d843ead",
      "End": "561d1ae04b6b43b3b009244cc07fddce",
      "Id": "7de6824138af471bb1fc841f11892cd4"
    },
    {
      "Start": "7bb33121b96c45d58c2b28cf35b4f197",
      "End": "1c88543dcb3a49f8b61e7587e6be5960",
      "Id": "8f3f56655423406c85c265bfd84fa7db"
    },
    {
      "Start": "94886eac4f954c28bac85b585a821b4b",
      "End": "07556a0537c141faaea376ff24688129",
      "Id": "ee7664925d054b87a29413949ec0d325"
    },
    {
      "Start": "fa0e3c5987dc4d8881d25a9a7a91adb8",
      "End": "60684f71c1ed45b98ce5f87aa06b4953",
      "Id": "dec4eeec061142cdb9dbd926f6f2f7f3"
    },
    {
      "Start": "e3ed45b853a3470e848c6833e854fea1",
      "End": "0005363eba4541e39530635bdacdd074",
      "Id": "c2d081b316874c95b4fd230255040356"
    },
    {
      "Start": "723fcd82e6e344a9b1310621a9b05d9d",
      "End": "e3f072959dec486789900b295ca97050",
      "Id": "258759773edc42c58825f4caffcc5a00"
    },
    {
      "Start": "723fcd82e6e344a9b1310621a9b05d9d",
      "End": "2b75408ea1fc400c8733b4647cc23875",
      "Id": "c79d4d5aa9fc41609e2fd626a5d53fc3"
    },
    {
      "Start": "d9f14eaef9aa4db6804965d2b3593edd",
      "End": "bc79869d9d454a718ece74df506732e6",
      "Id": "29e523ccceb542d0ba47630145f1f2ab"
    },
    {
      "Start": "6a55b8e37c8746b49c871746e5c94c63",
      "End": "f8ccb7f2852f4cc9b78cd33b6b2ab098",
      "Id": "0da855d3580c46f3b354bd580ee9e8c1"
    },
    {
      "Start": "de920da9adc841729fbb2703f0158072",
      "End": "db4bc933c31544b4983f2d9795f8d2eb",
      "Id": "c6ebdb180e0c4416b5ca5b2341ee604f"
    },
    {
      "Start": "ceb0aaad99df49aaa7dbf5350b053eb5",
      "End": "5f17c067b6784fc3b2409169ba9fb56e",
      "Id": "a1fe69cae7fb4037a5b1e29f88c2d03f"
    },
    {
      "Start": "d7412494d16a4c32a29822110c679fb5",
      "End": "8fbcdc6cf6c04b6c9b97422d42f81ee7",
      "Id": "335a26e768454207a924f479b9fe31a7"
    },
    {
      "Start": "ac11fcb0ab8a484395e16f203c5ade12",
      "End": "5da09f1b348644a0835a2761a88f640d",
      "Id": "d9e6643b0f2f4f63a6c7e2493afd5a87"
    },
    {
      "Start": "95b66e5422ff40d7b945d8f3ef4786f7",
      "End": "70e64012b38d48a6aac07ee03568e905",
      "Id": "e62d95d5515844dcb657c928abd3efdd"
    },
    {
      "Start": "f1f9c81d6f96454e8000b3aebe6995c2",
      "End": "28267c1a8ed2456690e196dabd52728f",
      "Id": "dea0a8c798a04a88bf86c5737498140b"
    },
    {
      "Start": "7ee3c42ded5745dfbfc581be49f5f2b3",
      "End": "3476b9105b864039a8b59ec0ae09a78d",
      "Id": "7994fd5cf8d346f292877df87527dc12"
    },
    {
      "Start": "adce9e94fa5446c0bd1e789d90924f9b",
      "End": "63d65a460d0a4a8998a4e8686afe2633",
      "Id": "37ac698cdb224bf0a7ab7227a642bde8"
    },
    {
      "Start": "82fc40d1ece341d5a49723d6549f6af6",
      "End": "e3ce0973be28482ca412bbb16823d864",
      "Id": "c4de960818a04665845d8df7b50ff850"
    },
    {
      "Start": "82fc40d1ece341d5a49723d6549f6af6",
      "End": "bc1cb5f95e214930b61ade49cddf373f",
      "Id": "f6194d1235ab4432a7d6d02a6de30120"
    },
    {
      "Start": "129f97ef7c1940009950385ce4127cc2",
      "End": "e2d82bfcbf684af7bc5048ce21653de2",
      "Id": "83b7739ee06b459c8ca4b60710c97ca1"
    },
    {
      "Start": "c3077e099ba3439aaf61691853a43bb7",
      "End": "57b769a8f0444932abfa1661eae753cc",
      "Id": "020f55dad80c4fc4b9a4150c7833dcd5"
    },
    {
      "Start": "6f0a025c7f004ff185e63dda7d8f8f13",
      "End": "b4a5c9d0e9714ae1bd150fc1237d4e7c",
      "Id": "367e0edf44804638bfa666b58f3e868e"
    },
    {
      "Start": "555ebb69d7a147cc874f92ba4b750877",
      "End": "50455d20c942422a8d5f033b67eb6cda",
      "Id": "5d9c7973be4e4394aa2bcf489f8fbde2"
    },
    {
      "Start": "4d5a539feccb4fdc988c961d0f502e82",
      "End": "f1009297e72d4086956af476222ce5ad",
      "Id": "2815e3d9ef3848e7bf0e90a8c9f65b34"
    },
    {
      "Start": "88ca085fd43a41e5a81dd3ea61606b0d",
      "End": "d4b2e1cb6c094a8b81b59fe64c42f7c8",
      "Id": "b65a37a0d0b745419170a9db229c9332"
    },
    {
      "Start": "34d47ecfd0214eb0b0ae10209dec331d",
      "End": "693b337998da45bb99a4e72af7299808",
      "Id": "aa0fa244d5f34251b4a242580aa9a1d5"
    },
    {
      "Start": "4969eedbd17549329f05eda512ad7982",
      "End": "f75098086576448e8ed7c6844c46bfe6",
      "Id": "2236c38b9e86457499696774759a5b73"
    },
    {
      "Start": "3c831a9a8fa74ef4ba667918a6b6f870",
      "End": "9380aae58a3b4f7e94d4b00a3a57107a",
      "Id": "327d28c02b0a4740bf5b721f8c594d9e"
    },
    {
      "Start": "141e66e6fa0245e7b45db82bae43f9d4",
      "End": "bcf483e9d64248fbaa9ca6cc554842e7",
      "Id": "d779f5454b81497e870ed59262ace982"
    },
    {
      "Start": "e279b511257d4e03a28c2ad8a5193102",
      "End": "6653d8b6af964d6296464096d49a5d51",
      "Id": "cac864666b354d69a77175716bc07ed1"
    },
    {
      "Start": "e201728ebb244d50b04ef3237d88f9e7",
      "End": "51863ee14f6c4930a4fc62d09c522c08",
      "Id": "fe40d0f7718a493e9071cddaef090441"
    },
    {
      "Start": "e201728ebb244d50b04ef3237d88f9e7",
      "End": "675580947d694ebf9e19107740fdaebd",
      "Id": "3fb317bf5fb14fc3b299d77db5cad48a"
    },
    {
      "Start": "c6b946990abc4085ad0734cf17756103",
      "End": "b1768fbe8d7b4e39a22f75a946075e7c",
      "Id": "108a77408b6e4278bcbfb80562426dab"
    },
    {
      "Start": "8a35e84d4cac454bb4b7aad53d3cb3fd",
      "End": "7823c966acdc48e38146654d726e6e0a",
      "Id": "b7a9d32650da4575a40e88cd5ce7ead7"
    },
    {
      "Start": "b382e54b597a4963a57aaad4b32fd5b8",
      "End": "bf8844dcaccf46338c40398d95011a4b",
      "Id": "e6b67da37b464b4f84340ac3df6d6dec"
    },
    {
      "Start": "9048ff78f4f246368a53ecaae8edea7b",
      "End": "a9c57605d9ca45d5bc8e6ed6430eb23f",
      "Id": "ce906ed0b1174f7c91869dd5f625508b"
    },
    {
      "Start": "f83736bcb71840b49d5997ac2fc74a63",
      "End": "3b2bcb384eeb43e7a6278d358e33a261",
      "Id": "23cffb10c6c047218dd8bd5946d9d37e"
    },
    {
      "Start": "f83736bcb71840b49d5997ac2fc74a63",
      "End": "1c74f2b74dc64f6eacc18355e47191d9",
      "Id": "e5620b3460d24ddba928044da6fb35c2"
    },
    {
      "Start": "f83736bcb71840b49d5997ac2fc74a63",
      "End": "91fe1f44e0e349d59453550a06e788bd",
      "Id": "ffc4a8959dba4f85a0214476a81e7133"
    },
    {
      "Start": "40ee6a795d1b48969dc6833a6d68e70e",
      "End": "e5a402fb21b749319224869e7ff0991d",
      "Id": "df5ffc680db444179d3128e2458934fa"
    },
    {
      "Start": "cf270c857ee24ace9ebb700fe271c5fe",
      "End": "9ff3ba31960b45c1b7a08dfab2433644",
      "Id": "f2e5498a58ff42eea50bb9f1e8031e0c"
    },
    {
      "Start": "560c5c89d9224a2e90d9bd3a99a595e2",
      "End": "312a49171329449abc12f9b3d3aa469d",
      "Id": "d1390f6f7d39473b8b274e72f0ed05a2"
    },
    {
      "Start": "b924a4933c2d4bc4b58cd7733b240611",
      "End": "12751831e760426c8aba8189465c2c04",
      "Id": "3f1f4371e326424e8b7eb7f8dcce74e5"
    },
    {
      "Start": "6ca549176ada4d07a1e170bd022a8aa2",
      "End": "4ccf9b90a94a4939b47e56aa44462ce8",
      "Id": "78ab549ce819486d9b42e75a7d43993f"
    },
    {
      "Start": "86f8527379174c87bf0136b427fb4923",
      "End": "8651d459cf6246299d44ae86476e9f5f",
      "Id": "81baa1a163e34959a57b2147e08ddb09"
    },
    {
      "Start": "42b3a822e7904c6eaa388dce93974d63",
      "End": "97d5579b321d47d58cf7ac42aeb95824",
      "Id": "b739df46303049bd8ed9dd038e2dbb9f"
    },
    {
      "Start": "dd192e20639a4bd8b79cddedf4754450",
      "End": "e5c8967b81a74b9290223789b926272b",
      "Id": "32f7bffe3705426291c96f93d7af6a82"
    },
    {
      "Start": "16e65f7a322a4cc2b7f35490276fd77c",
      "End": "64feb70ba30d4ee0aa6bed7b1f94d09d",
      "Id": "3222faf20e064fe3ad6847ad2c19df8e"
    },
    {
      "Start": "838a8d2ccc054d91abcaa2c649b471de",
      "End": "5b15d3d592fe44fcbe6a1d308d002e6b",
      "Id": "66a29ca5fca541f99f55815ed4e72a10"
    },
    {
      "Start": "600db363de5648cea4e710f14cd1aa04",
      "End": "ab49a525f1694c3a9c057774a5d74e74",
      "Id": "8499fbfc329d4d80b8aedea77da5279d"
    },
    {
      "Start": "179876abf83c48fb8e6361b7d4e35d32",
      "End": "482991990a71467e868ef5d285073f4d",
      "Id": "8264ba6c30de419ebd08ee9a79937b6b"
    },
    {
      "Start": "179876abf83c48fb8e6361b7d4e35d32",
      "End": "129c47565ee34a829b720b56f386eca3",
      "Id": "0f4b0916c0a84b08ab60ab3b35df5688"
    },
    {
      "Start": "179876abf83c48fb8e6361b7d4e35d32",
      "End": "5c9716c9f3094cdbaecf677302861f8a",
      "Id": "7c1fd2b967164504abdd48b835430b86"
    },
    {
      "Start": "179876abf83c48fb8e6361b7d4e35d32",
      "End": "4e189e7835b644d08f8f92c288d717b6",
      "Id": "93f86fd0128f4cd7be3429b13232567f"
    },
    {
      "Start": "179876abf83c48fb8e6361b7d4e35d32",
      "End": "bfe2ea6cc4944efc9565232a126753eb",
      "Id": "28055dc25cb14fcb9a5dd94f7a477056"
    },
    {
      "Start": "179876abf83c48fb8e6361b7d4e35d32",
      "End": "705aa9c3670c418fb9b06b85d9486f26",
      "Id": "d833f989283b49699ca6f7b47d141a43"
    },
    {
      "Start": "6640415f36da41049879f7fc451cbbe7",
      "End": "8d18e2986fb247a4b7df8504612c9d7e",
      "Id": "5f50bca3fe7b45abbc02ab3cf77d4e72"
    },
    {
      "Start": "5a5ff39db82e4c8e9d4806bac1fd9811",
      "End": "74a94f39a84f497e95c1856fff3cc110",
      "Id": "2b7b96deee974c5d84d2cddc521c8c1e"
    },
    {
      "Start": "2ac2e534f5db4ab2a966e21d745fd673",
      "End": "a62eba922c8241e2819b56ff6d246eb4",
      "Id": "6cfc0ab4a9b94f93a893e10a823c263e"
    },
    {
      "Start": "e9d295d6c76942f99d75ffaa8f94444c",
      "End": "d38d386f96ea4d51a650be28c522fdea",
      "Id": "a92e92f6188c4a04a089732509b6f4a8"
    },
    {
      "Start": "9fb76225829245be842654287c70781b",
      "End": "1292e05639e74dd182d678924eebb21d",
      "Id": "ada2e2ee21244213a2d4469a313f1cf4"
    },
    {
      "Start": "8a4c5b8a8b8d4c999ed9bf4656ff491e",
      "End": "78c8dcef29bc4a9897c165c6b1b6a50b",
      "Id": "976e3dfb367a4b999df6496b51439b2a"
    },
    {
      "Start": "4f17870300824a63b3eac5fe27d8bb54",
      "End": "d6b89d1f6b674930a6b3a59d38ba0420",
      "Id": "cb35b3f2de214b69a1602b4d82bd7a34"
    },
    {
      "Start": "5f384203cc024e6e92d1a4d17eac222f",
      "End": "db121f25a37c48e495567d00143f68b7",
      "Id": "3a7bbac604e94998a880f5fc642656e5"
    },
    {
      "Start": "2e02f86b69344ec6ba8003cac8048b9b",
      "End": "895d3a0bf6c8430f98e6236404da7b8a",
      "Id": "66ba1740ff8c4cbf89b58dcd849af630"
    },
    {
      "Start": "c64e03014b614cb38d678b4ae5c3cb82",
      "End": "0c08e2c29fcb4067b3da64331bab32a0",
      "Id": "0b37d9a600504293a6cb3dafe000db9c"
    },
    {
      "Start": "72164c309f1d4bfeae04b7bf916aa1b1",
      "End": "9dffadf7558d452da63460e34750dd8d",
      "Id": "0c81ab402f1540e0a1c39a3abdf4e437"
    },
    {
      "Start": "72164c309f1d4bfeae04b7bf916aa1b1",
      "End": "2d2e22374bed4279803822f5c78dc6f6",
      "Id": "bcc087ad8c3f4fd8b7a2b30b7276689a"
    },
    {
      "Start": "f62214f814454ce1981a4e0a7158f6ca",
      "End": "16244734078c4e0b9183a8eb91ce796d",
      "Id": "8a9711fb1760480a8f2193a51a3cf11b"
    },
    {
      "Start": "1b1b61ce442b434996ad0a40ee9aea32",
      "End": "673d7258edaa49c08e8e99d191a23753",
      "Id": "4223cd61d51d43f58c627a3203e9a56b"
    },
    {
      "Start": "a4d603a2d14b44d78f5017d91103ebee",
      "End": "0ec00650ab5149a580bc71adaa24ec57",
      "Id": "46c9ee6202b94b4283787c92f59201a1"
    },
    {
      "Start": "a513e83b998b4ad0a15b9d24bb683a90",
      "End": "d837fc5d4ac241ccbb79ed6e676e094d",
      "Id": "7e444ad9ea5446d18777d9aac73878e0"
    },
    {
      "Start": "2e2689ce60764c49816cef44d844d352",
      "End": "b7392092108b458382c1f01976653bcd",
      "Id": "b5647e50ed324cdaaefac30a240f1713"
    },
    {
      "Start": "132940feb5c44e499d7c1469447a7157",
      "End": "2406b45da6ab469aac7a4fd953794a8d",
      "Id": "105864e699914488a34ec1a927f28c76"
    },
    {
      "Start": "bb3e4a4b406a484db3354d604ef59bcb",
      "End": "e0524e26b12f4869879a1575efb8d902",
      "Id": "fc9521af33364674853b186ca5f34de9"
    },
    {
      "Start": "7a7e374bb96b4522a5a740bcbaae08af",
      "End": "1f5ff71e6292477c8abb718622ae6453",
      "Id": "429f9092f36d4ed1a1f9b0072d09a2a6"
    },
    {
      "Start": "774f385c74e04ce2a66b2228de8abba9",
      "End": "5fcae74d73a14e56a5439f8830b89715",
      "Id": "ef327be0ce2c41859ed7e7ad0a924d7c"
    },
    {
      "Start": "9f3602dee6544e13a619e6573bfed996",
      "End": "ff0e5289137d4b6d9775bbe0026ac7f9",
      "Id": "4e39dd8418514dd48188ac74f13d4756"
    },
    {
      "Start": "a198d97d00c34a9182198756327ef279",
      "End": "0621af6e51814a0e8fe28a1ef61932d6",
      "Id": "3808cdcd38534292a7f9ed1d963bb24c"
    },
    {
      "Start": "f621b6dcbb2f4049ae744fc9b782903f",
      "End": "e5849dea4ca7401285fb5d0a3632a55c",
      "Id": "0f09300b980d48c49166fb6b2b1620f3"
    },
    {
      "Start": "f621b6dcbb2f4049ae744fc9b782903f",
      "End": "452c810ad9b141ceb9fa484ae864fb97",
      "Id": "a5dd01f1769544e3bb80807c9dd7f4ec"
    },
    {
      "Start": "4465472eded24f0ea01b71bd80a297dd",
      "End": "abad37701f6742e39d02bfa60023e520",
      "Id": "09b03674cd4741268ad94ffe9c9819d8"
    },
    {
      "Start": "5e85215fe00d4fa6943eb12e6b68e8ac",
      "End": "4c94a68a755e4c0d97ed79ad29073255",
      "Id": "deafe3d5bb644049be2f2390d6759bd7"
    },
    {
      "Start": "4abcb9a47e5640c280d048c5ce186920",
      "End": "bcdbd6ce636d421ebbaf52b4a8fde33d",
      "Id": "41ffcfa5e20543e79cb83fa3fa9cd1f0"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 10000.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.1.3976",
      "RunType": "Automatic",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 1810.2774658203125,
      "EyeY": 1504.18212890625,
      "EyeZ": 2012.9864501953125,
      "LookX": -2531.664306640625,
      "LookY": -1984.74853515625,
      "LookZ": -1256.152587890625,
      "UpX": -0.34569132328033447,
      "UpY": 0.92253857851028442,
      "UpZ": -0.17152291536331177
    },
    "NodeViews": [
      {
        "ShowGeometry": false,
        "Name": "Rectangle.ByWidthLength",
        "Id": "36a0118f1ae04f6abef20cd456102308",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 346.6864447764242,
        "Y": -483.21792402682934
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "f2959672adad42afb04b63891f94e268",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 154.6864447764242,
        "Y": -466.00459069349608
      },
      {
        "ShowGeometry": false,
        "Name": "Surface.ByPatch",
        "Id": "de04a5bc06df42e9932e62a4cc16937b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 659.6864447764242,
        "Y": -483.21792402682934
      },
      {
        "ShowGeometry": false,
        "Name": "Surface.PointAtParameter",
        "Id": "5be5106b222d4b41a6047feb73775730",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 998.6864447764242,
        "Y": -450.21792402682934
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "679196c0c7ea41e9b6267b68d348edf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 659.6864447764242,
        "Y": -374.00459069349608
      },
      {
        "ShowGeometry": false,
        "Name": "ConvexHull Class",
        "Id": "65b0d70ad7bc4f8cb042f31cd6770af8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2611.6864447764242,
        "Y": -677.02125736016274
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script",
        "Id": "f390f30959b5406dab3b6e4e2b997a17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2894.6762624762869,
        "Y": -555.03143966029893
      },
      {
        "ShowGeometry": false,
        "Name": "List.Flatten",
        "Id": "20172bba6d2946d38cbee5be9349b9b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1294.6864447764242,
        "Y": -503.41459069349605
      },
      {
        "ShowGeometry": false,
        "Name": "List.TakeItems",
        "Id": "a454dc40cc804f07a17c4cd1961a9bc9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2611.6864447764242,
        "Y": -397.02125736016274
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "900f122898394e9ca9f3e46b6102192a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2294.6864447764242,
        "Y": -366.80792402682937
      },
      {
        "ShowGeometry": false,
        "Name": "List.TakeItems",
        "Id": "d656436c5fc24177bab4d6b760cfac51",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2895.6864447764237,
        "Y": -408.02125736016274
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "4450fe0f6b6541a781257762bdc0f17e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2611.6864447764242,
        "Y": -261.80792402682937
      },
      {
        "ShowGeometry": false,
        "Name": "Math.RandomList",
        "Id": "a35a9b123b184b358d3f7eeac32736cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1978.6864447764242,
        "Y": -506.02125736016262
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "43d68c66af2c4bd288d5cd619356006b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1579.6864447764242,
        "Y": -470.594590693496
      },
      {
        "ShowGeometry": false,
        "Name": "Number Slider",
        "Id": "b96141fb2668459c8d541267f04f503f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1579.6864447764242,
        "Y": -352.02125736016274
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "d3037cf836dc4adc8e55adbea5afb0ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1579.6864447764242,
        "Y": -578.80792402682926
      },
      {
        "ShowGeometry": false,
        "Name": "Math.Round",
        "Id": "40c7e08243b44731bf110aeb0011db2b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2294.6864447764242,
        "Y": -506.02125736016262
      },
      {
        "ShowGeometry": false,
        "Name": "List.GetItemAtIndex",
        "Id": "ee00faee415d49fc90ff7b9a6234f0e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2611.6864447764242,
        "Y": -532.02125736016262
      },
      {
        "ShowGeometry": false,
        "Name": "함수 라이브러리 (함수 임포트 용)",
        "Id": "e70e673008604f609332470db2e29599",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1539.3862675619653,
        "Y": 1214.5995822545779
      },
      {
        "ShowGeometry": false,
        "Name": "샘플링 크기",
        "Id": "ef0b8232eab4477ca27d10f2df2ead64",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1140.1862675619652,
        "Y": 1401.3862489212447
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "f7dd4f0392e84546808a8625bf1c8e07",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 83.619625200276,
        "Y": 598.22147256899234
      },
      {
        "ShowGeometry": false,
        "Name": "Rectangle.ByWidthLength",
        "Id": "e7188c7e06a5424f8205ed461261a0d3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 276.41962520027607,
        "Y": 589.79480590232561
      },
      {
        "ShowGeometry": false,
        "Name": "Seed",
        "Id": "eac0a2b1b0724064913c367d1ca73afd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1140.1862675619652,
        "Y": 1317.5995822545779
      },
      {
        "ShowGeometry": false,
        "Name": "QgridPointsMaker & Random Polygon 생성기 Input",
        "Id": "ae7f587370954a16882adfdeac3658c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1539.3862675619653,
        "Y": 1335.2395822545782
      },
      {
        "ShowGeometry": false,
        "Name": "QgridPointsMaker & Random Polygon 생성기",
        "Id": "c4d165bcf6cb4dcd84fa8cb1f1958814",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4282.6650266281995,
        "Y": 1239.7803802991862
      },
      {
        "ShowGeometry": false,
        "Name": "함수 라이브러리 (함수 임포트 용)",
        "Id": "552c88f8dd0040b59a4c0e2bc2583e10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3809.0650266282,
        "Y": 1198.7803802991862
      },
      {
        "ShowGeometry": false,
        "Name": "샘플링 크기",
        "Id": "29babae3d84b47bab1d97b218bcdcb1f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3409.8650266281998,
        "Y": 1385.567046965856
      },
      {
        "ShowGeometry": false,
        "Name": "Seed",
        "Id": "2d9a2354fa01446992b4f037a06c3f5b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3409.8650266281998,
        "Y": 1301.7803802991862
      },
      {
        "ShowGeometry": false,
        "Name": "QgridPointsMaker & Random Polygon 생성기 Input",
        "Id": "e493d5ed1a404cd2a8d080b457264c78",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3809.0650266282,
        "Y": 1319.420380299186
      },
      {
        "ShowGeometry": false,
        "Name": "Geometry.Explode",
        "Id": "e8f0fc2e6cbd4842acd01a84d0147cc6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2463.9733402420356,
        "Y": 978.032896255962
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "404f13e0c84b405eb678930a1263ca06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2746.3891722414633,
        "Y": 980.98450371819672
      },
      {
        "ShowGeometry": false,
        "Name": "Surface.PerimeterCurves",
        "Id": "b9df159e35424dc082f5a60ba4fe96e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2893.2561798687461,
        "Y": 981.91564913879733
      },
      {
        "ShowGeometry": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "Id": "9a4c6e819306400b8dbc30ce5664314c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3207.6851072600361,
        "Y": 983.91202328096415
      },
      {
        "ShowGeometry": false,
        "Name": "QgridPointsMaker & Random Polygon 생성기",
        "Id": "f5ccfc22a1bc4b8e9d284a0c9aee8a32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2012.9862675619652,
        "Y": 1255.5995822545779
      },
      {
        "ShowGeometry": false,
        "Name": "Geometry.Explode",
        "Id": "25fa6fc7993145ccbe2bda3c0c3a4dbf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4807.5398270383712,
        "Y": 1032.7763926340756
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "5d3b2d52416047d79f37b1ed132c823b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5089.9556590377915,
        "Y": 1035.7280000963106
      },
      {
        "ShowGeometry": false,
        "Name": "Surface.PerimeterCurves",
        "Id": "5ebe46bb52f94996be2867badec94429",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5236.8226666650817,
        "Y": 1036.6591455169107
      },
      {
        "ShowGeometry": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "Id": "913a04b424c0442c899e2c7f7f88a478",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5551.2515940563708,
        "Y": 1038.6555196590778
      },
      {
        "ShowGeometry": false,
        "Name": "샘플링 크기",
        "Id": "68e2283506974e3085b2c0dee256d3e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5753.4315134245307,
        "Y": 1440.3105433439734
      },
      {
        "ShowGeometry": false,
        "Name": "Seed",
        "Id": "36b780763dd244ff9bb98c1e3c99398b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5753.4315134245307,
        "Y": 1356.5238766773036
      },
      {
        "ShowGeometry": false,
        "Name": "함수 라이브러리 (함수 임포트 용)",
        "Id": "5a674487998b4fab9825b1a9f6ad2184",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6152.6315134245315,
        "Y": 1253.5238766773036
      },
      {
        "ShowGeometry": false,
        "Name": "QgridPointsMaker & Random Polygon 생성기 Input",
        "Id": "e565ffc86701482a84765ab46a4b2c9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6152.6315134245315,
        "Y": 1374.1638766773035
      },
      {
        "ShowGeometry": false,
        "Name": "QgridPointsMaker & Random Polygon 생성기",
        "Id": "3e11bd46f6474ad8911eedada223d473",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6626.2315134245318,
        "Y": 1294.5238766773036
      },
      {
        "ShowGeometry": false,
        "Name": "List.Join",
        "Id": "d61ad6f8164049c198b5fbf1b3e0cf10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7613.2063719855068,
        "Y": 1783.5565199855619
      },
      {
        "ShowGeometry": true,
        "Name": "DirectShape.ByGeometry",
        "Id": "cbe0e0f31fdf48b4894fa4522ce9c604",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 7923.0990939323256,
        "Y": 1898.753349459527
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "b89d2dd969634e07b60db77206a3d0dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7536.6518768424594,
        "Y": 1964.4340877980853
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2cc0cbfb4b234ff29a3ba667e4263268",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7599.0,
        "Y": 2048.0
      },
      {
        "ShowGeometry": false,
        "Name": "Geometry.Explode",
        "Id": "5a517ab06d424194b178a49c93bbbe9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7728.7938894030567,
        "Y": 1620.6896352506742
      },
      {
        "ShowGeometry": true,
        "Name": "Surface.PerimeterCurves",
        "Id": "3a64dc5b59c749a8a3da7051e570427d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8024.2387392578157,
        "Y": 1639.2229298599293
      },
      {
        "ShowGeometry": false,
        "Name": "Cuboid.ByLengths",
        "Id": "c1df4593d3d54a73922542df9f472de6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -349.65253984248181,
        "Y": 1012.636793142012
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "e5c6b8d50bc34a77b60ffe2cb20b2347",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -567.36016626224341,
        "Y": 1024.5398192049531
      },
      {
        "ShowGeometry": false,
        "Name": "Geometry.Explode",
        "Id": "bb091a0690074c5aa2f304972569882e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -103.50786574153449,
        "Y": 1098.2063501357738
      },
      {
        "ShowGeometry": false,
        "Name": "Surface.PerimeterCurves",
        "Id": "a5f514f97ae9483aa467d5ed655183c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 184.20247790659107,
        "Y": 1130.277564919113
      },
      {
        "ShowGeometry": true,
        "Name": "PolyCurve.ByJoinedCurves",
        "Id": "e2e8976cbcba4930b0c442d4560f5843",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 480.38005561032332,
        "Y": 1200.6636762004748
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8173594617a74ee7928756a52035d1a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 795.69807665708072,
        "Y": 1211.5792081771235
      },
      {
        "ShowGeometry": false,
        "Name": "함수 라이브러리 (함수 임포트 용)",
        "Id": "1d88dc32fc544a37850174b8258417ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1670.151652611281,
        "Y": 2879.4807800523122
      },
      {
        "ShowGeometry": false,
        "Name": "Seed",
        "Id": "d9ddc460cecf48d79731d5493c8c706c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1270.9516526112807,
        "Y": 2982.4807800523122
      },
      {
        "ShowGeometry": false,
        "Name": "샘플링 크기",
        "Id": "7881327b95cf4f1186222d6c45c66c0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1270.9516526112807,
        "Y": 3066.2674467189718
      },
      {
        "ShowGeometry": false,
        "Name": "QgridPointsMaker & Random Polygon 생성기 Input",
        "Id": "d0e41e96edcc43cda63514b8a8a8cd43",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1670.151652611281,
        "Y": 3000.1207800523121
      },
      {
        "ShowGeometry": true,
        "Name": "QgridPointsMaker & Random Polygon 생성기",
        "Id": "b4bea63c66c84c1095719702710266de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2143.7516526112804,
        "Y": 2920.4807800523122
      },
      {
        "ShowGeometry": false,
        "Name": "Geometry.Explode",
        "Id": "8d9b56cc126a4b04a3148ed7662fafeb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2594.7387252913468,
        "Y": 2642.9140940536936
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "2b7dd733382a4da6a750cab1584186c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2877.1545572907662,
        "Y": 2645.8657015159288
      },
      {
        "ShowGeometry": false,
        "Name": "Surface.PerimeterCurves",
        "Id": "47cb4d3e5022421589c09d1384b3dbd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3024.0215649180564,
        "Y": 2646.7968469365287
      },
      {
        "ShowGeometry": false,
        "Name": "샘플링 크기",
        "Id": "82bc4fad9fd542c4ad642204d1acdae0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3540.6304116775063,
        "Y": 3050.4482447635919
      },
      {
        "ShowGeometry": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "Id": "12e07ffaa59f4dfa838f4d15eb0ff526",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3338.4504923093464,
        "Y": 2648.7932210786958
      },
      {
        "ShowGeometry": false,
        "Name": "Seed",
        "Id": "08f80c6dc14f442bb7b5fda858c4be27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3540.6304116775063,
        "Y": 2966.6615780969214
      },
      {
        "ShowGeometry": false,
        "Name": "함수 라이브러리 (함수 임포트 용)",
        "Id": "63fc9482021e428caab0f1b4202e1d23",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3939.8304116775062,
        "Y": 2863.6615780969214
      },
      {
        "ShowGeometry": false,
        "Name": "QgridPointsMaker & Random Polygon 생성기 Input",
        "Id": "c03c28dea35c4b369b973e4cf1b0c107",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3939.8304116775062,
        "Y": 2984.3015780969217
      },
      {
        "ShowGeometry": false,
        "Name": "QgridPointsMaker & Random Polygon 생성기",
        "Id": "b7c3ef041c874db9b50a03a1a9191130",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4413.4304116775065,
        "Y": 2904.6615780969214
      },
      {
        "ShowGeometry": false,
        "Name": "Geometry.Explode",
        "Id": "b70bb77aa9bd4a5ca3df1606d400f7b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4938.3052120876764,
        "Y": 2697.6575904318115
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "7206a090efe647669054a6185c10572a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5220.7210440870958,
        "Y": 2700.6091978940417
      },
      {
        "ShowGeometry": false,
        "Name": "Surface.PerimeterCurves",
        "Id": "82c49dced74248209fb156188aae1d6b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5367.588051714386,
        "Y": 2701.5403433146416
      },
      {
        "ShowGeometry": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "Id": "4c2c0a88927f4ad38030f2cf4cbd82f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5682.016979105676,
        "Y": 2703.5367174568119
      },
      {
        "ShowGeometry": false,
        "Name": "샘플링 크기",
        "Id": "cee407d05e634098866f0908b9c1bd08",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5884.196898473836,
        "Y": 3105.1917411417016
      },
      {
        "ShowGeometry": false,
        "Name": "Seed",
        "Id": "5258e5f85a174616b8cf4050b4844a7e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5884.196898473836,
        "Y": 3021.4050744750316
      },
      {
        "ShowGeometry": false,
        "Name": "함수 라이브러리 (함수 임포트 용)",
        "Id": "67291b11e9284986a8e64d33920e8bba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6283.3968984738367,
        "Y": 2918.4050744750316
      },
      {
        "ShowGeometry": false,
        "Name": "QgridPointsMaker & Random Polygon 생성기 Input",
        "Id": "7b377741cbba40538cd2d0e5310d7382",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6283.3968984738367,
        "Y": 3039.0450744750315
      },
      {
        "ShowGeometry": false,
        "Name": "QgridPointsMaker & Random Polygon 생성기",
        "Id": "c766b2e883e9464da6df5d9523a753b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6756.9968984738352,
        "Y": 2959.4050744750316
      },
      {
        "ShowGeometry": true,
        "Name": "List.Join",
        "Id": "7d15759e1f91485687e53edda0a1c1fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7743.9717570348166,
        "Y": 3448.4377177832916
      },
      {
        "ShowGeometry": true,
        "Name": "Categories",
        "Id": "cf857a2e11144b22b1815e1754609d19",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7667.4172618917673,
        "Y": 3629.3152855958215
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "03430adc52e64831abad2c320d2808a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7729.7653850493061,
        "Y": 3712.8811977977316
      },
      {
        "ShowGeometry": false,
        "Name": "Geometry.Explode",
        "Id": "5d5cf13eacf44c4bbaf0320240443d97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7859.5592744523656,
        "Y": 3285.5708330484017
      },
      {
        "ShowGeometry": true,
        "Name": "DirectShape.ByGeometry",
        "Id": "00f6de23517e465aabf887bcedba2e10",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 8053.8644789816371,
        "Y": 3563.6345472572616
      },
      {
        "ShowGeometry": true,
        "Name": "Surface.PerimeterCurves",
        "Id": "da7730b58d73489b9269b804cff94d87",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8155.0041243071264,
        "Y": 3304.1041276576616
      },
      {
        "ShowGeometry": true,
        "Name": "Plane.ByThreePoints",
        "Id": "85c7f77cc9404349bc6e743c31efa9bf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1331.1125284120567,
        "Y": 3457.279274497208
      },
      {
        "ShowGeometry": true,
        "Name": "Plane.ByBestFitThroughPoints",
        "Id": "f881ef6c3e3242f7bd3096811c45ded1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1345.7150239913365,
        "Y": 3244.4945121513092
      },
      {
        "ShowGeometry": true,
        "Name": "CoordinateSystem.XAxis",
        "Id": "6b897a36348b484d975bee15f555c797",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2564.4638807358615,
        "Y": 3100.8193577459
      },
      {
        "ShowGeometry": true,
        "Name": "CoordinateSystem.YAxis",
        "Id": "97686d7da96548e7954b2ccbc994ee9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2561.3092559403935,
        "Y": 3234.3651407540387
      },
      {
        "ShowGeometry": true,
        "Name": "CoordinateSystem.ZAxis",
        "Id": "8ec6d48fad5b4cc6a8127398db74318a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2580.2370047132013,
        "Y": 3373.1686317546237
      },
      {
        "ShowGeometry": true,
        "Name": "CoordinateSystem.Origin",
        "Id": "219e55b2f9d24cf5a629ab6f43e50f32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2176.4450308933169,
        "Y": 3255.3959727238248
      }
    ],
    "Annotations": [
      {
        "Id": "5fbb5f2bb86945dab61451455f345302",
        "Title": "<Click here to edit the group title>",
        "Nodes": [
          "36a0118f1ae04f6abef20cd456102308",
          "f2959672adad42afb04b63891f94e268",
          "de04a5bc06df42e9932e62a4cc16937b",
          "5be5106b222d4b41a6047feb73775730",
          "679196c0c7ea41e9b6267b68d348edf1",
          "65b0d70ad7bc4f8cb042f31cd6770af8",
          "f390f30959b5406dab3b6e4e2b997a17",
          "20172bba6d2946d38cbee5be9349b9b0",
          "a454dc40cc804f07a17c4cd1961a9bc9",
          "900f122898394e9ca9f3e46b6102192a",
          "d656436c5fc24177bab4d6b760cfac51",
          "4450fe0f6b6541a781257762bdc0f17e",
          "a35a9b123b184b358d3f7eeac32736cb",
          "43d68c66af2c4bd288d5cd619356006b",
          "b96141fb2668459c8d541267f04f503f",
          "d3037cf836dc4adc8e55adbea5afb0ad",
          "40c7e08243b44731bf110aeb0011db2b",
          "ee00faee415d49fc90ff7b9a6234f0e4"
        ],
        "Left": 144.6864447764242,
        "Top": -730.02125736016274,
        "Width": 2944.9999999999995,
        "Height": 561.21333333333337,
        "FontSize": 36.0,
        "InitialTop": -677.02125736016274,
        "InitialHeight": 560.21333333333337,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5ee9c6211ddf46e1b65b8b2044193a49",
        "Title": "QgridPointsMaker & Random Polygon 생성기",
        "Nodes": [
          "e70e673008604f609332470db2e29599",
          "ef0b8232eab4477ca27d10f2df2ead64",
          "eac0a2b1b0724064913c367d1ca73afd",
          "ae7f587370954a16882adfdeac3658c7",
          "f5ccfc22a1bc4b8e9d284a0c9aee8a32"
        ],
        "Left": 1130.1862675619652,
        "Top": 1161.5995822545779,
        "Width": 1228.8,
        "Height": 332.78666666666686,
        "FontSize": 36.0,
        "InitialTop": 1214.5995822545779,
        "InitialHeight": 331.78666666666686,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "e8ebf92801034ebb9ec16d26b057e1c4",
        "Title": "QgridPointsMaker & Random Polygon 생성기",
        "Nodes": [
          "c4d165bcf6cb4dcd84fa8cb1f1958814",
          "552c88f8dd0040b59a4c0e2bc2583e10",
          "29babae3d84b47bab1d97b218bcdcb1f",
          "2d9a2354fa01446992b4f037a06c3f5b",
          "e493d5ed1a404cd2a8d080b457264c78"
        ],
        "Left": 3399.8650266281998,
        "Top": 1145.7803802991862,
        "Width": 1228.7999999999997,
        "Height": 332.78666666666982,
        "FontSize": 36.0,
        "InitialTop": 1198.7803802991862,
        "InitialHeight": 331.78666666666982,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "719978f46fde4db5b27d476dc4d4982e",
        "Title": "QgridPointsMaker & Random Polygon 생성기",
        "Nodes": [
          "3e11bd46f6474ad8911eedada223d473",
          "5a674487998b4fab9825b1a9f6ad2184",
          "68e2283506974e3085b2c0dee256d3e4",
          "36b780763dd244ff9bb98c1e3c99398b",
          "e565ffc86701482a84765ab46a4b2c9e"
        ],
        "Left": 5743.4315134245307,
        "Top": 1200.5238766773036,
        "Width": 1228.8000000000011,
        "Height": 332.78666666666982,
        "FontSize": 36.0,
        "InitialTop": 1253.5238766773036,
        "InitialHeight": 331.78666666666982,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "ffb5507392b949449d3e2df70eba7473",
        "Title": "QgridPointsMaker & Random Polygon 생성기",
        "Nodes": [
          "1d88dc32fc544a37850174b8258417ed",
          "7881327b95cf4f1186222d6c45c66c0b",
          "d9ddc460cecf48d79731d5493c8c706c",
          "d0e41e96edcc43cda63514b8a8a8cd43",
          "b4bea63c66c84c1095719702710266de"
        ],
        "Left": 1260.9516526112807,
        "Top": 2826.4807800523122,
        "Width": 1228.7999999999997,
        "Height": 332.78666666665958,
        "FontSize": 36.0,
        "InitialTop": 2879.4807800523122,
        "InitialHeight": 309.78666666666,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "acaf4da20c6c4be6be39831f8f1cd2cd",
        "Title": "QgridPointsMaker & Random Polygon 생성기",
        "Nodes": [
          "b7c3ef041c874db9b50a03a1a9191130",
          "63fc9482021e428caab0f1b4202e1d23",
          "82bc4fad9fd542c4ad642204d1acdae0",
          "08f80c6dc14f442bb7b5fda858c4be27",
          "c03c28dea35c4b369b973e4cf1b0c107"
        ],
        "Left": 3530.6304116775063,
        "Top": 2810.6615780969214,
        "Width": 1228.8000000000002,
        "Height": 332.7866666666705,
        "FontSize": 36.0,
        "InitialTop": 2863.6615780969214,
        "InitialHeight": 309.7866666666705,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "3396712314d54c5aa43b7e2e5340a845",
        "Title": "QgridPointsMaker & Random Polygon 생성기",
        "Nodes": [
          "c766b2e883e9464da6df5d9523a753b3",
          "67291b11e9284986a8e64d33920e8bba",
          "cee407d05e634098866f0908b9c1bd08",
          "5258e5f85a174616b8cf4050b4844a7e",
          "7b377741cbba40538cd2d0e5310d7382"
        ],
        "Left": 5874.196898473836,
        "Top": 2865.4050744750316,
        "Width": 1228.7999999999993,
        "Height": 332.78666666667004,
        "FontSize": 36.0,
        "InitialTop": 2918.4050744750316,
        "InitialHeight": 309.78666666667004,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      }
    ],
    "X": -1558.3152199513402,
    "Y": -2661.3810868467672,
    "Zoom": 0.9509847270299816
  }
}