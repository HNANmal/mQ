H_FamilyList_FP
│
├── main.py
│
├── src/
│   ├── controllers/
│   │   ├── clipboard_management.py
│   │   │   ├── copy_to_clipboard(items)
│   │   │   ├── paste_from_clipboard()
│   │   │   ├── paste_copied_items(destination, clipboard_items)
│   │   ├── event_dispatcher.py
│   │   │   ├── dispatch_event(event_type, state, data=None)
│   │   ├── logic.py
│   │   │   ├── initialize_app()
│   │   │   ├── apply_wm_group_filter(state, filter_criteria)
│   │   │   ├── lock_toggle_logic(state, wm_group_manager, item_name)
│   │   │   ├── copy_selected_items(selected_items)
│   │   │   ├── paste_items(destination)
│   │   ├── tree_controller.py
│   │   │   ├── on_item_select(event, state, logging_text_widget)
│   │   │   ├── add_item(tree)
│   │   │   ├── remove_item(tree)
│   │   │   ├── undo_operation(tree)
│   │   │   ├── insert_item_with_indentation(tree, parent, item_data, index)
│   │   │   ├── extract_treeview_data(tree, item_id=None)
│   ├── core/
│   │   ├── event_handling.py
│   │   │   ├── handle_tab_switch(state, new_tab_name)
│   │   │   ├── handle_lock_toggle(state, item_name)
│   │   ├── state_management.py
│   │   │   ├── AppState class
│   │   │   │   ├── set_current_tab(tab_name)
│   │   │   │   ├── load_config(config_data)
│   │   │   │   ├── update_wm_group_data(data)
│   │   │   │   ├── set_lock_status(item_name, status)
│   │   │   │   ├── get_lock_status(item_name)
│   ├── models/
│   │   ├── configuration.py
│   │   │   ├── load_config(tree, file_path)
│   │   │   ├── save_config(config_data, file_path)
│   │   │   ├── ConfigurationManager class
│   │   ├── tree_model.py
│   │   │   ├── load_json_data(file_path)
│   │   │   ├── save_json_data(file_path, data)
│   │   │   ├── save_treeview(tree)
│   │   │   ├── load_treeview(tree)
│   ├── utils/
│   │   ├── tree_utils.py
│   │   │   ├── determine_tag_by_level(level)
│   │   │   ├── renumber_treeview_items(tree, parent="")
│   │   │   ├── calculate_level(tree, item)
│   │   │   ├── confirm_level_change()
│   │   │   ├── move_item(tree, item, new_parent, sibling)
│   │   │   ├── swap_items(tree, item1, item2)
│   │   │   ├── enable_tree_item_editing(tree, item)
│   ├── views/
│   │   ├── logging_utils.py
│   │   │   ├── RedirectText class
│   │   │   ├── setup_logging_frame(root)
│   │   │   ├── log_event(tree, item, logging_widget)
│   │   ├── styles.py
│   │   │   ├── configure_styles(tree)
│   │   ├── treeview_utils.py
│   │   │   ├── get_clicked_column(tree, event)  (new)
│   │   │   ├── search_treeview(tree, search_text)
│   │   │   ├── populate_treeview(tree, data, parent="", level=0)
│   │   │   ├── expand_or_collapse_tree(tree, level)
│   ├── ui.py
│   │   │   ├── create_treeview(parent, state, logging_text_widget)
│   │   │   ├── create_other_tab(notebook, name)
│   │   │   ├── create_family_standard_tab(notebook, state, logging_text_widget)
