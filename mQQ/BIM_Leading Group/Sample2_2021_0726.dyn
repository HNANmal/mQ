{
  "Uuid": "0b82d602-1845-4e03-bf68-299dc6b1263a",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Sample2_2021_0726",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [],
  "Outputs": [
    {
      "Id": "acad330641734adaa011576f864d8f00",
      "Name": "List.Chop",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "ed4ed2fb-6c22-402d-8352-29b80ffdc543-00263414"
      ],
      "Id": "f96ee8cf039949dc8e04f9f837e76908",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "035703db49684ea1ac08b6adda2fedf0",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Faces",
      "Id": "1233a2619faf4663b4f9a99b36a0e101",
      "Inputs": [
        {
          "Id": "9faa26d370d94b4ba51c21941860edff",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a568a3cd3734c4bbe95ceb534d03bfc",
          "Name": "Surface[]",
          "Description": "Surface[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The Faces in this Element\n\nElement.Faces: Surface[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i[3];",
      "Id": "a253f67492d3471ea8e55ba7e494d8ae",
      "Inputs": [
        {
          "Id": "f37a9279bba946f999253a1f9d2cbd90",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ec125007cfc4a3c97ea90ed3ab2d811",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Surface.Area",
      "Id": "b2857783790445caab17ceca92dec5ae",
      "Inputs": [
        {
          "Id": "c83fc8dfdbfa4073b48db0f5dc1c0a5f",
          "Name": "surface",
          "Description": "Autodesk.DesignScript.Geometry.Surface",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9fd6649a524f44e294e9104295d3b4c4",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the total surface area.\n\nSurface.Area: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "i/1000000;",
      "Id": "66f66ad2ed7f40a1a77a8497d3690a61",
      "Inputs": [
        {
          "Id": "eae8ff404a4a4ae0b62ed2b7af7d5cf5",
          "Name": "i",
          "Description": "i",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9e5c1dda2fb434eb58c1d093cc8ef33",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Load the Python Standard and DesignScript Libraries\r\nimport sys\r\nimport os\r\n#sys.path.append(r'C:\\Users\\HEC\\AppData\\Local\\Programs\\Python\\Python39\\Lib\\site-packages')\r\n#sys.path.append(r'C:\\Users\\pjmk0\\AppData\\Local\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nsys.path.append(os.getenv('LOCALAPPDATA').replace('\\\\','\\\\\\\\') + r'\\Programs\\Python\\Python39\\Lib\\site-packages')\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\nfrom collections import Iterable\r\n\r\ndef iterable(obj):\r\n    return isinstance(obj, Iterable)\r\n\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN\r\nListIn = IN[0]\r\n\r\n# Place your code below this line\r\nimport datetime\r\nfrom datetime import date, timedelta\r\nToday = date.today()\r\nimport openpyxl\r\nfrom openpyxl.styles import Border, Side, PatternFill, Font, GradientFill, Alignment, Color, numbers\r\n\r\nsample_items = ListIn\r\n\r\n\r\ndef write_to_file(filepath):\r\n    wb = openpyxl.Workbook()\r\n    for sheet in wb.sheetnames:\r\n        wb.remove(wb[sheet])\r\n\r\n    thin = Side(border_style=\"thin\", color=\"000000\")\r\n    double = Side(border_style=\"double\", color=\"000000\")\r\n\r\n    ws = wb.create_sheet(title='Wall_Calc_instance', index=0)\r\n\r\n    ws.merge_cells('A1:L1')\r\n    ws['A1'] = 'HEC Wall Category Calculation Sheet'\r\n    cell = ws['A1']\r\n    cell.font = openpyxl.styles.Font(color='000000', size=20)\r\n    cell.fill = openpyxl.styles.fills.PatternFill(patternType='solid',\r\n                                                  fgColor=openpyxl.styles.colors.Color(rgb='fff3b0'))\r\n\r\n    ws['A2'] = 'Item Number'\r\n    ws['A2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    #ws['B2'] = 'Member Name'\r\n    #ws['B2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    #ws['C2'] = 'Category'\r\n    #ws['C2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['B2'] = 'Family Type'\r\n    ws['B2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['C2'] = 'WorkMaster Code'\r\n    ws['C2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    #ws['F2'] = 'WorkMaster Description'\r\n    #ws['F2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    #ws['G2'] = 'Unit'\r\n    #ws['G2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    #ws['H2'] = '계수'\r\n    #ws['H2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    #ws['I2'] = '계산 참조값'\r\n    #ws['I2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['D2'] = 'Quantities'\r\n    ws['D2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['E2'] = 'Unit'\r\n    ws['E2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['F2'] = 'Unit Price'\r\n    ws['F2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n    ws['G2'] = 'Total Price'\r\n    ws['G2'].font = openpyxl.styles.Font(b=True, color='000000', size=12)\r\n\r\n\r\n## 칼럼별 너비 조정 구간\r\n#    for col in range(ws.max_column):\r\n#        ws.column_dimensions[chr(ord('A') + col)].width = 15\r\n    ws.column_dimensions['A'].width = 15\r\n    ws.column_dimensions['B'].width = 45\r\n    ws.column_dimensions['C'].width = 60\r\n    ws.column_dimensions['D'].width = 20\r\n    ws.column_dimensions['E'].width = 20\r\n    ws.column_dimensions['F'].width = 20\r\n    ws.column_dimensions['G'].width = 20\r\n    #ws.column_dimensions['G'].width = 9\r\n    #ws.column_dimensions['H'].width = 9\r\n    #ws.column_dimensions['H'].hidden = True\r\n    #ws.column_dimensions['I'].width = 12\r\n    #ws.column_dimensions['I'].hidden = True\r\n    #ws.column_dimensions['J'].width = 12\r\n    #ws.column_dimensions['K'].width = 12\r\n    #ws.column_dimensions['L'].width = 12\r\n\r\n###\r\n    start_row = 3\r\n    for (row, item) in enumerate(sample_items, start_row):\r\n        cell = ws.cell(row=row, column=1, value=row - 2)\r\n        cell.alignment = openpyxl.styles.Alignment(horizontal='center', vertical='center')\r\n\r\n#        cell = ws.cell(row=row, column=2, value=item[0])\r\n#        cell.number_format = openpyxl.styles.numbers.FORMAT_DATE_YYYYMMDD2  # 'yyyy-mm-dd'\r\n        ws.cell(row=row, column=2, value=item[0]) ## Family Type 칼럼\r\n\r\n        ws.cell(row=row, column=3, value=item[1]) ## WorkMaster Code 칼럼\r\n        \r\n        ws.cell(row=row, column=4, value=item[2]) ## Quantities 칼럼\r\n        \r\n        ws.cell(row=row, column=5, value=item[3]) ## Unit 칼럼\r\n        \r\n        #cell = ws.cell(row=row, column=8, value=item[6]) ## 계수 칼럼\r\n        #cell.number_format = openpyxl.styles.numbers.builtin_format_code(3)  # '#,##0'\r\n        \r\n        #cell = ws.cell(row=row, column=9, value=item[7]) ## 계산 참조값 칼럼\r\n        #cell.number_format = openpyxl.styles.numbers.builtin_format_code(3)  # '#,##0'\r\n        \r\n        #cell = ws.cell(row=row, column=10, value=item[8]) ## Quantities 칼럼\r\n        #cell.number_format = openpyxl.styles.numbers.builtin_format_code(3)  # '#,##0'\r\n        #cell.font = openpyxl.styles.Font(b=True, color='000000', size=11)\r\n\r\n        cell = ws.cell(row=row, column=7, value='= D{current_row}*F{current_row}'.format(current_row=cell.row))\r\n        cell.number_format = '#,##0'\r\n\r\n#        cell = ws.cell(row=row, column=6, value='= D{current_row} * E{current_row}'.format(current_row=cell.row))\r\n#        cell.number_format = openpyxl.styles.numbers.builtin_format_code(3)\r\n\r\n    total_row = ws.max_row + 1\r\n    if total_row > start_row:\r\n        cell1 = ws.cell(row=total_row, column=6, value='Total')\r\n        cell1.font = openpyxl.styles.Font(b=True, color='000000', size=15)\r\n        \r\n        cell2 = ws.cell(row=total_row, column=7, value='= SUM(G{}:G{})'.format(start_row, total_row - 1))\r\n        cell2.number_format = openpyxl.styles.numbers.builtin_format_code(3)\r\n        cell2.border = Border(top=double, left=double, right=double, bottom=double)\r\n        cell2.font = openpyxl.styles.Font(b=True, color='ff03ce', size=15)\r\n    \r\n\r\n    wb.save(filepath)\r\n    wb.close()\r\n\r\n\r\n##if __name__ == '__main__':\r\n#write_to_file('C:\\\\Users\\\\pjmk0\\\\AppData\\\\Roaming\\\\test.xlsx')\r\n\r\nsave_name = \"HecSampleSheet_\" + Today.strftime(\"%Y-%m-%d\")+\".xlsx\"\r\npath = os.getenv('APPDATA').replace('\\\\','\\\\\\\\')\r\nfilePath = path + '\\\\' + save_name\r\n\r\nwrite_to_file(filePath)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = os.getenv('APPDATA')",
      "Engine": "CPython3",
      "VariableInputPorts": true,
      "Id": "eb0948764c0e440795539bec83f81d9e",
      "Inputs": [
        {
          "Id": "f272fb6a1ef84774aa1eff5b81a33933",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "faa638ebacb24d9baae6099ee13cfc5f",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetMaterials@bool",
      "Id": "790fff29793b4a36a66ab0b693f0f10e",
      "Inputs": [
        {
          "Id": "b811d217f48e4195b2a8ef002c853f1c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3be84bb243c74869accb5d2c6fddf069",
          "Name": "paintMaterials",
          "Description": "Paint Materials\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e2f8dd8ae1314660980ff55014527dbc",
          "Name": "Material[]",
          "Description": "List of Names",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Material Names from a Revit Element\n\nElement.GetMaterials (paintMaterials: bool = false): Material[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "5c49691b7dae472ab1f4c77415ea1908",
      "Inputs": [
        {
          "Id": "df69fb8bd5ab4e87ba70b87e2fabd085",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f010b6fb4d9d4b86b5f3f484c86ed62a",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "0949299f6e7442bfa45c97f3862206dd",
      "Inputs": [
        {
          "Id": "315f4e1f845e4904a82955c60c8b1b52",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "126f67b5f5e34e31980c618410d347a6",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28da7213f87d4139acd5af7eee9626a8",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Comments\";",
      "Id": "729086f3b1e44ac69e3298a3df67a320",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "baf4809f5ea84c33ba5103293d0ffa13",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "bfeb1c2d80024713b1db7a6f60f7011f",
      "Inputs": [
        {
          "Id": "6b85d693af8c4f2fac5c0c39d9578d0e",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59a5f63294294abdb10b7380ce0d913c",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f04cdcdecb214a7991130e6f8646e103",
          "Name": "list2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98a0e5a674e94d5f855686398445abba",
          "Name": "list3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08336e789c3c40bdb6bb3bc33e8f4a02",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"M2\";",
      "Id": "2d9c21f3f87f4b7db1ba920ebe287a58",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0ec85ed1b9af410e8e9027711d11b367",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "acad330641734adaa011576f864d8f00",
      "Inputs": [
        {
          "Id": "b25f70c221aa4d10a42baa41ed69b704",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2d656d713505487d9cb6cae9ba52791f",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df4d30c0cb9b49ebb7a70efb481a713c",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "4;",
      "Id": "aaf05cf4f5d44c1387d67db9089f8e3b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e91a6c00ab5b46ac9b85019d7b1ffa9a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "035703db49684ea1ac08b6adda2fedf0",
      "End": "9faa26d370d94b4ba51c21941860edff",
      "Id": "8b9df8c467474e55946c0cc0b112c05d"
    },
    {
      "Start": "035703db49684ea1ac08b6adda2fedf0",
      "End": "b811d217f48e4195b2a8ef002c853f1c",
      "Id": "d556914e90e34cc2b036fd5f851dc233"
    },
    {
      "Start": "035703db49684ea1ac08b6adda2fedf0",
      "End": "315f4e1f845e4904a82955c60c8b1b52",
      "Id": "b7f2d5db6cf7497194392dbf62840c88"
    },
    {
      "Start": "9a568a3cd3734c4bbe95ceb534d03bfc",
      "End": "f37a9279bba946f999253a1f9d2cbd90",
      "Id": "3a423e87e2834da7b31315e1dda92660"
    },
    {
      "Start": "2ec125007cfc4a3c97ea90ed3ab2d811",
      "End": "c83fc8dfdbfa4073b48db0f5dc1c0a5f",
      "Id": "bb35b0f7c3984b8695f8d4ef846244bd"
    },
    {
      "Start": "9fd6649a524f44e294e9104295d3b4c4",
      "End": "eae8ff404a4a4ae0b62ed2b7af7d5cf5",
      "Id": "f5ec1b276b93446b9213cff938389f94"
    },
    {
      "Start": "f9e5c1dda2fb434eb58c1d093cc8ef33",
      "End": "f04cdcdecb214a7991130e6f8646e103",
      "Id": "b909ea27e2a1453fba28cd60ca17438a"
    },
    {
      "Start": "e2f8dd8ae1314660980ff55014527dbc",
      "End": "df69fb8bd5ab4e87ba70b87e2fabd085",
      "Id": "646d03ef8d8344f589237ed281e25900"
    },
    {
      "Start": "f010b6fb4d9d4b86b5f3f484c86ed62a",
      "End": "59a5f63294294abdb10b7380ce0d913c",
      "Id": "af471f72f8b845aab9ea1a100fc90c69"
    },
    {
      "Start": "28da7213f87d4139acd5af7eee9626a8",
      "End": "6b85d693af8c4f2fac5c0c39d9578d0e",
      "Id": "98eba87368f644b0a1530059081fa016"
    },
    {
      "Start": "baf4809f5ea84c33ba5103293d0ffa13",
      "End": "126f67b5f5e34e31980c618410d347a6",
      "Id": "2e16525a8b574b33bd43dbabfee34be3"
    },
    {
      "Start": "08336e789c3c40bdb6bb3bc33e8f4a02",
      "End": "b25f70c221aa4d10a42baa41ed69b704",
      "Id": "2de4cb68aa7943579aa4a8981bd7cf9f"
    },
    {
      "Start": "0ec85ed1b9af410e8e9027711d11b367",
      "End": "98a0e5a674e94d5f855686398445abba",
      "Id": "34cb9f0df64b4132a4700095e2360208"
    },
    {
      "Start": "df4d30c0cb9b49ebb7a70efb481a713c",
      "End": "f272fb6a1ef84774aa1eff5b81a33933",
      "Id": "897c19a331bd45ddb06f5d7aca350c3d"
    },
    {
      "Start": "e91a6c00ab5b46ac9b85019d7b1ffa9a",
      "End": "2d656d713505487d9cb6cae9ba52791f",
      "Id": "6f38a1f25f654514a642348622eaf3cd"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.10.1.3976",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 7511.83203125,
      "EyeY": 1301.5126953125,
      "EyeZ": 8691.55126953125,
      "LookX": 2783.3359375,
      "LookY": -2629.2294921875,
      "LookZ": -1468.1494140625,
      "UpX": 0.40841448307037354,
      "UpY": 0.88701069355010986,
      "UpZ": -0.21542933583259583
    },
    "NodeViews": [
      {
        "ShowGeometry": false,
        "Name": "Select Model Elements",
        "Id": "f96ee8cf039949dc8e04f9f837e76908",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 130.73594405059589,
        "Y": 306.94973773716856
      },
      {
        "ShowGeometry": false,
        "Name": "Element.Faces",
        "Id": "1233a2619faf4663b4f9a99b36a0e101",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 539.0596231434854,
        "Y": 606.11244426104872
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a253f67492d3471ea8e55ba7e494d8ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 795.35401575370361,
        "Y": 596.44734170555012
      },
      {
        "ShowGeometry": false,
        "Name": "Surface.Area",
        "Id": "b2857783790445caab17ceca92dec5ae",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 939.33459738261809,
        "Y": 595.20785964056313
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "66f66ad2ed7f40a1a77a8497d3690a61",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1205.402557489517,
        "Y": 590.275819747462
      },
      {
        "ShowGeometry": false,
        "Name": "Python Script@Export Excel(By OpenpyXl)",
        "Id": "eb0948764c0e440795539bec83f81d9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 2147.7745652098156,
        "Y": 137.0195774747292
      },
      {
        "ShowGeometry": false,
        "Name": "Element.GetMaterials",
        "Id": "790fff29793b4a36a66ab0b693f0f10e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 638.40243416838121,
        "Y": 317.03766203106028
      },
      {
        "ShowGeometry": false,
        "Name": "Element.Name",
        "Id": "5c49691b7dae472ab1f4c77415ea1908",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 974.70984070027691,
        "Y": 325.77054508627191
      },
      {
        "ShowGeometry": false,
        "Name": "Element.GetParameterValueByName",
        "Id": "0949299f6e7442bfa45c97f3862206dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 830.32276565857535,
        "Y": 38.820854849061504
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "729086f3b1e44ac69e3298a3df67a320",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 633.96953398478581,
        "Y": 103.7664804025971
      },
      {
        "ShowGeometry": false,
        "Name": "List.Join",
        "Id": "bfeb1c2d80024713b1db7a6f60f7011f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1595.2364524467043,
        "Y": 153.0973000500652
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "2d9c21f3f87f4b7db1ba920ebe287a58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1472.0798334248943,
        "Y": 597.00865908385106
      },
      {
        "ShowGeometry": false,
        "Name": "List.Chop",
        "Id": "acad330641734adaa011576f864d8f00",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 1874.6624412239241,
        "Y": 181.62920320283428
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "aaf05cf4f5d44c1387d67db9089f8e3b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1730.7791098669973,
        "Y": 259.45321164226141
      }
    ],
    "Annotations": [],
    "X": -64.8575460066852,
    "Y": 170.61395610283628,
    "Zoom": 0.49984852639990113
  }
}